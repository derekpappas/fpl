csl_unit a {
  csl_port in_a(input);
  csl_port out_a(output);
  csl_port clk(input);
  a () {
    clk.set_attr(clock);
  }
};

csl_unit b {
  csl_port in_b1(input);
  csl_port in_b2(input);
  csl_port out_b1(output);
  csl_port out_b2(output);
  csl_port clk(input);
  csl_signal s1,s2,s3;
  a a0(.in_a(in_b1),.out_a(out_b1),.clk(clk));
  b () {
    clk.set_attr(clock);
    s1 = in_b2 & s3;
    out_b1 = s1;
    out_b2 = s2 ^ s3;
  }
};

csl_vector stim {
  stim () {
    set_unit_name(b);
    set_direction(input);
    set_vc_capture_edge_type(rise);
  }
};

csl_vector exp {
  exp () {
    set_unit_name(b);
    set_direction(output);
    set_vc_capture_edge_type(rise);
  }
};

csl_testbench tb {
  b b0(.clk(clk));
  csl_signal clk(reg);
  tb () {
    clk.set_attr(clock);
    add_logic(clock,clk,20,ns);
  }
};
