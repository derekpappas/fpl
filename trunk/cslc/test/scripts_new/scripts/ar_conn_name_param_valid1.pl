#!/usr/bin/perl

#oanab
#connect_by_name() with param

use strict;

print "Generated tests path : test/csl_test_gen/ar_conn_name_param_valid1/\n";

if(! defined $ENV{WORK}){
    die "[ERROR] The environment variable WORK is not set. Set it to point to TOT/se";
}

my $totDir     = $ENV{WORK};
&testDirExists($totDir);

sub testDirExists {
    my($execName) = @_;
    unless(-e "$execName") { die "[ERROR] The directory $execName does not exist!\n"; }
    
}

sub mkDir {
    my($dirName) = @_;
    unless(-e "$dirName")  { `mkdir $dirName`; }
}

foreach(my $i = 1; $i <= 300; $i++) {
    &main($i);
}

sub main {
    my $i = $_[0];
    my $j = $_[1];
    my $m = $_[2];
    my $n = $_[3];
    $j = int(rand(20))+1; 
    $m = int(rand(20))+2; 
    $n = int(rand(20))+3; 
    my %dir = (1,"input",
	       2,"output",
	       3,"inout");
    my $dir = $_[4];
    my $test_name = "ar_conn_name_param".$i."_legal.csl";
    if($j != $m) {
	&createCslFile($test_name, $i, $j, $m, $n, %dir);
    }
    else {
	&createCslFile($test_name, $i, $j+1, $m+2, $n+3, %dir);
    }
}
sub createCslFile {
    my($test_name, $i, $j, $m, $n, %dir) = @_;
    my $path = "$ENV{WORK}/test/csl_test_gen/";
    my $k = int(rand(20)) + int(rand(20));
    my $zero = 0;
    my $one = 1;
    my $two = 2;
    my $tre = 3;
    my $val1 = int(rand(100))+2;
    my $val2 = int(rand(100))+1;
    my $val3 = int(rand(100))+8;
    my $l = int(rand(3))+1;
    if($test_name=~/(_legal)/){
        &mkDir("$path/ar_conn_name_param_valid1");
        open(FH,">$path/ar_conn_name_param_valid1/$test_name");
    }
    elsif($test_name=~/(_illegal)/) {
        &mkDir("$path/ar_conn_name_param_invalid1"); 
        open(FH,">$path/ar_conn_name_param_invalid1/$test_name");
    }
    print FH "//Generated by oanab\n\n";

#bitranges
    print FH "csl_bitrange br1($val1);\n\n";

    print FH "csl_bitrange br2($val2);\n\n";
    
    print FH "csl_bitrange br3($val3);\n\n";

#ifcj
    if($i > 50 && $i <= 150 || $i > 250 && $i <= 300) {
	print FH "csl_interface ifc$j {\n";
	print FH "  csl_parameter par_m$i($val1);\n";
	print FH "  csl_port p_m$i($dir{$l},par_m$i);\n";
	print FH "  csl_parameter par_n$i($val3);\n";
	print FH "  csl_port p_n$i(input,par_n$i);\n";
	print FH "  ifc$j () {\n";
	print FH "  }\n";
	print FH "};\n\n";
    }

#ifcm
    if($i > 50 && $i <= 100 || $i > 250 && $i <= 300) {
	print FH "csl_interface ifc$m {\n";
	print FH "  csl_port p_m$i($dir{$l},br1);\n";
	print FH "  csl_port p_n$i(input,$val3);\n";
	print FH "  ifc$m () {\n";
	print FH "  }\n";
	print FH "};\n\n";
    }

#sgj
    if($i > 50 && $i <= 150 || $i > 250 && $i <= 300) {
	print FH "csl_signal_group sg$j {\n";
	print FH "  csl_parameter par_m$i($val1);\n";
	print FH "  csl_signal p_m$i(par_m$i);\n";
	print FH "  csl_parameter par_n$i($val3);\n";
	print FH "  csl_signal p_n$i(par_n$i);\n";
	print FH "  sg$j () {\n";
	print FH "  }\n";
	print FH "};\n\n";
    }

#sgm
    if($i > 100 && $i <= 150 || $i > 250 && $i <= 300) {
	print FH "csl_signal_group sg$m {\n";
	print FH "  csl_signal p_m$i($val1);\n";
	print FH "  csl_signal p_n$i(br3);\n";
	print FH "  sg$m () {\n";
	print FH "  }\n";
	print FH "};\n\n";
    }


#unit a
    print FH "csl_unit a$k {\n";
    if($i <= 50) {
	print FH "  csl_parameter par$i($val2);\n";
	print FH "  csl_port p_x$i(input,par$i);\n";
    }
    elsif($i > 50 && $i <= 150) {
	print FH "  ifc$j ifc$j\_$zero;\n";
    }
    elsif($i > 150 && $i <= 200) {
	print FH "  csl_parameter par$i($val3);\n";
	print FH "  csl_signal s_x$i(par$i);\n";
    }
    elsif($i > 200 && $i <= 250) {
	print FH "  csl_signal s_a$i(br2);\n";
	print FH "  csl_parameter par$i($val1);\n";
	print FH "  csl_signal s_x$i(par$i);\n";
    }
    elsif($i > 250 && $i <= 300) {
	print FH "  sg$m sg$m\_$zero;\n";
	print FH "  ifc$j ifc$j\_$one;\n";
    }
    print FH "  a$k () {\n";
    print FH "  }\n";
    print FH "};\n\n";

#unit b
    print FH "csl_unit b$k {\n";
    if($i <= 50) {
	print FH "  a$k a$k\_$zero;\n";
	print FH "  csl_port p_y$i(output,br2);\n";
	print FH "  csl_parameter par_s$i($val3);\n";
	print FH "  csl_signal s_m$i(par_s$i);\n";
    }
    elsif($i > 50 && $i <= 100) {
	print FH "  a$k a$k\_$zero;\n";
	print FH "  sg$j sg$j\_$zero;\n";
    }
    elsif($i > 100 && $i <= 150) {
	print FH "  a$k a$k\_$zero;\n";
	print FH "  sg$j sg$j\_$one;\n";
    }
    elsif($i > 150 && $i <= 200) {
	print FH "  a$k a$k\_$zero;\n";
	print FH "  csl_parameter par_s$i($val3);\n";
	print FH "  csl_signal s_m$i(par_s$i);\n";
    }
    elsif($i > 200 && $i <= 250) {
	print FH "  a$k a$k\_$zero;\n";
	print FH "  csl_parameter par$i($val2);\n";
	print FH "  csl_port p_x$i(input,par$i);\n";
    }
    elsif($i > 250 && $i <= 300) {
	print FH "  a$k a$k\_$zero;\n";
	print FH "  sg$j sg$j\_$one;\n";
    }
    print FH "  b$k () {\n";
#connect_by_name : sig---ppar (CP)
    if($i > 200 && $i <= 250) {
	print FH "    a$k\_$zero.s_a$i.connect_by_name(p_x$i); // sig---ppar (CP)\n";
    }
    print FH "  }\n";
    print FH "};\n\n";

#unit c
    print FH "csl_unit c$k {\n";
    if($i <= 50) {
	print FH "  b$k b$k\_$zero;\n";
	print FH "  a$k a$k\_$one;\n";
    }
    elsif($i > 50 && $i <= 100) {
	print FH "  b$k b$k\_$zero;\n";
	print FH "  ifc$m ifc$m\_$zero;\n";
	print FH "  ifc$j ifc$j\_$one;\n";
    }
    elsif($i > 100 && $i <= 150) {
	print FH "  b$k b$k\_$zero;\n";
	print FH "  sg$m sg$m\_$zero;\n";
	print FH "  ifc$j ifc$j\_$one;\n";
	print FH "  sg$j sg$j\_$one;\n";
    }
    elsif($i > 150 && $i <= 200) {
	print FH "  b$k b$k\_$zero;\n";
	print FH "  csl_parameter par_x$i($val3);\n";
	print FH "  csl_port p_x$i(input,par_x$i);\n";
    }
    elsif($i > 200 && $i <= 250) {
	print FH "  csl_signal s_a$i(".($val1+$val2).");\n";
	print FH "  b$k b$k\_$zero(.p_x$i(s_a$i\[".($val1+$val2-1)."\:".($val1)."\]));\n";
	print FH "  csl_port p_a$i(input,br1);\n";
    }
    elsif($i > 250 && $i <= 300) {
	print FH "  b$k b$k\_$zero;\n";
	print FH "  ifc$m ifc$m\_$zero;\n";
    }
    print FH "  c$k () {\n";
#connect_by_name : ppar---port (SS)
    if($i <= 50) {
	print FH "    a$k\_$one.p_x$i.connect_by_name(b$k\_$zero.p_y$i);  // ppar---port (SS)\n";
    }
#connect_by_name : ifcpar---ifcpar (CP)
    elsif($i > 50 && $i <= 100) {
	print FH "    b$k\_$zero.a$k\_$zero.ifc$j\_$zero.connect_by_name(ifc$j\_$one);  // ifcpar---ifcpar (CP)\n";
#connect_by_name : sgpar---ifc (CP)
	print FH "    b$k\_$zero.sg$j\_$zero.connect_by_name(ifc$m\_$zero);  // sgpar---ifc (CP)\n";
    }
#connect_by_name : ifcpar---sg (CP)
    elsif($i > 100 && $i <= 150) {
	print FH "    b$k\_$zero.a$k\_$zero.ifc$j\_$zero.connect_by_name(sg$m\_$zero);  // ifcpar---sg (CP)\n";
	print FH "    b$k\_$zero.sg$j\_$one.connect_by_name(ifc$j\_$one);  // sg---ifcpar (CP)\n";
	print FH "    ifc$j\_$one = sg$j\_$one;\n";
    }
#connect_by_name : ppar---sigpar (PC)
    elsif($i > 150 && $i <= 200) {
	print FH "    p_x$i.connect_by_name(b$k\_$zero.a$k\_$zero.s_x$i);  // ppar---sigpar (PC)\n";
    }
#connect_by_name : port---sigpar (PC)
    elsif($i > 200 && $i <= 250) {
	print FH "    p_a$i.connect_by_name(b$k\_$zero.a$k\_$zero.s_x$i);  // port---sigpar (PC)\n";
	print FH "    p_a$i = s_a$i\[".($val1+$val2-1)."-\:".($val1)."\];\n";
    }
#connect_by_name : ifc---ifcpar (PC)
    elsif($i > 250 && $i <= 300) {
	print FH "    ifc$m\_$zero.connect_by_name(b$k\_$zero.a$k\_$zero.ifc$j\_$one);  // ifc---ifcpar (PC)\n";
    }
    print FH "  }\n";
    print FH "};\n\n";

#unit d
    print FH "csl_unit d$k {\n";
    if($i <= 50) {
	print FH "  c$k c$k\_$zero;\n";
	print FH "  csl_signal s_a$i(br2);\n";
	print FH "  csl_port p_n$i(input,br3);\n";
    }
    elsif($i > 50 && $i <= 100) {
	print FH "  c$k c$k\_$zero;\n";
	print FH "  ifc$j ifc$j\_$zero;\n";
        print FH "  ifc$j ifc$j\_$one;\n";     
    }
    elsif($i > 100 && $i <= 150) {
	print FH "  c$k c$k\_$zero;\n";
	print FH "  sg$j sg$j\_$one;\n";
	print FH "  ifc$j ifc$j\_$two;\n";
    }
    elsif($i > 150 && $i <= 200) {
	print FH "  c$k c$k\_$zero;\n";
	print FH "  csl_parameter par_y$i($val3);\n";
	print FH "  csl_port p_y$i(input,par_y$i);\n";
    }
    elsif($i > 200 && $i <= 250) {
	print FH "  c$k c$k\_$zero;\n";
	print FH "  csl_parameter par_s$i($val1);\n";
	print FH "  csl_signal s_b$i(par_s$i);\n";
    }
    elsif($i > 250 && $i <= 300) {
	print FH "  sg$m sg$m\_$zero;\n";
	print FH "  c$k c$k\_$zero(.ifc$m\_$zero(sg$m\_$zero));\n";
	print FH "  ifc$j ifc$j\_$zero;\n";
    }
    print FH "  d$k () {\n";
#connect_by_name : ppar---sig (CP) and sigpar---port (CP)
    if($i <= 50) {
	print FH "    c$k\_$zero.b$k\_$zero.a$k\_$zero.p_x$i.connect_by_name(s_a$i);  // ppar---sig (CP)\n";
	print FH "    c$k\_$zero.b$k\_$zero.s_m$i.connect_by_name(p_n$i);  // sigpar---port (CP)\n";
    }
#connect_by_name : ifcpar---ifc (CP)
    elsif($i > 50 && $i <= 100) {
	print FH "    ifc$j\_$zero.connect_by_name(c$k\_$zero.ifc$m\_$zero);  // ifcpar---ifc (PC)\n";
        print FH "    ifc$j\_$one.connect_by_name(c$k\_$zero.ifc$j\_$one);  // ifcpar---ifcpar (PC)\n";
    }
#connect_by_name : ifcpar---sgpar (SS) and sgpar---ifcpar (CP)
    elsif($i > 100 && $i <= 150) {
	print FH "    c$k\_$zero.ifc$j\_$one.connect_by_name(sg$j\_$one);  // ifcpar---sgpar (CP)\n";
	print FH "    c$k\_$zero.sg$j\_$one.connect_by_name(ifc$j\_$two);  // sgpar---ifcpar (CP)\n";
    }
#connect_by_name : sigpar---ppar (CP) and ppar---ppar (PC)
    elsif($i > 150 && $i <= 200) {
	print FH "    c$k\_$zero.b$k\_$zero.s_m$i.connect_by_name(c$k\_$zero.p_x$i);  // sigpar---ppar (CP)\n";
	print FH "    p_y$i.connect_by_name(c$k\_$zero.p_x$i);  // ppar---ppar (PC)\n";
    }
#connect_by_name : port---sigpar (CP)
    elsif($i > 200 && $i <= 250) {
	print FH "    c$k\_$zero.p_a$i.connect_by_name(s_b$i);  // port---sigpar (CP)\n";
    }
#connect_by_name : sg---ifcpar (CP) and ifc---sgpar (PC)
    elsif($i > 250 && $i <= 300) {
	print FH "    c$k\_$zero.b$k\_$zero.a$k\_$zero.sg$m\_$zero.connect_by_name(ifc$j\_$zero);  // sg---ifcpar (CP)\n";
	print FH "    c$k\_$zero.ifc$m\_$zero.connect_by_name(c$k\_$zero.b$k\_$zero.sg$j\_$one);  // ifc---sgpar (PC)\n";
    }
    print FH "  }\n";
    print FH "};\n\n";











}
