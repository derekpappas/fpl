#!/usr/bin/perl

#oanab
#connecting ifc.p,ifc.p.ps,ifc.ifc.p,ifc.ifc.p,ifc.ifc.p.ps with ifc and ifc.ifc


use strict;

if(! defined $ENV{WORK}){
    die "[ERROR] The environment variable WORK is not set. Set it to point to TOT/se";
}

my $totDir     = $ENV{WORK};
&testDirExists($totDir);

sub testDirExists {
    my($execName) = @_;
    unless(-e "$execName") { die "[ERROR] The directory $execName does not exist!\n"; }
    
}

sub mkDir {
    my($dirName) = @_;
    unless(-e "$dirName")  { `mkdir $dirName`; }
}

foreach(my $i = 1; $i <= 400; $i++) {
    &main($i);
}

sub main {
    my $i = $_[0];
    my $j = $_[1];
    my $m = $_[2];
    my $n = $_[3];
    $j = int(rand(20))+1; # for ifc1
    $m = int(rand(20))+2; # for ifc2
    $n = int(rand(20))+3; # for ifc3
    my %dir = (1,"input",
	       2,"output",
	       3,"inout");
    my $dir = $_[4];
    my $test_name = "ar_ifc".$i."_illegal.csl";
    if($j != $m && $j != $n && $m != $n) {
	&createCslFile($test_name, $i, $j, $m, $n, %dir);
    }
    else {
	&createCslFile($test_name, $i, $j+1, $m+2, $n+3, %dir);
    }
    
}
sub createCslFile {
    my ($test_name, $i, $j, $m, $n, %dir) = @_;
    my $path = "$ENV{WORK}/test/csl_ar_gen/";
    my $k = int(rand(20)) + int(rand(20));
    my $zero = 0;
    my $one = 1;
    my $two = 2;
    my $tre = 3;
    my $val1 = int(rand(100))+1;
    my $val2 = int(rand(100))+1;
    my $val3 = int(rand(100))+7;
    my $l = int(rand(3))+1;
    if($test_name=~/(_legal)/){
        &mkDir("$path/ar_ifc_valid");
        open(FH,">$path/ar_ifc_valid/$test_name");
    }
    elsif($test_name=~/(_illegal)/) {
        &mkDir("$path/ar_ifc_invalid3"); 
        open(FH,">$path/ar_ifc_invalid3/$test_name");
    }
    print FH "//Generated by oanab\n\n";
    
#declaring bitrange br1    
    if($val1 >= 7) {
	print FH "csl_bitrange br1($val1);\n\n";
    }
    else {
	$val1 = $val1 + 7;
	print FH "csl_bitrange br1($val1);\n\n";
    }
    
#declaring bitrange br2
    if($val2 >= 7) {
	print FH "csl_bitrange br2($val2);\n\n";
    }
    else {
	$val2 = $val2 + 7;
	print FH "csl_bitrange br2($val2);\n\n";
    }
    
#interface ifcj
    print FH "csl_interface ifc$j {\n";
#100 tests with 2 ports
    print FH "  csl_port p_a$i($dir{$l},$val3);\n"; 
    if($l < 3) {
	print FH "  csl_port p_b$i($dir{$l+1},br2);\n";
    }
    else {
	print FH "  csl_port p_b$i($dir{$l-1},br2);\n";
    }
    if($l == 1) {
	print FH "  csl_port p_c$i($dir{$l+2},br1);\n";
    }
    else {
	print FH "  csl_port p_c$i($dir{$l-1},br1);\n";
    }
#tests over 100 have another port in ifcj
	if($i > 100) {
	    print FH "  csl_port p_d$i($dir{$l},$val3);\n";
	}
	print FH "  ifc$j () {}\n";
	print FH "};\n\n";
	
	
#interface ifcm
	if($i > 50 && $i <= 100 || $i > 150 && $i <= 175 || $i > 250 && $i <= 400) {
	    print FH "csl_interface ifc$m {\n";
	    print FH "  ifc$j ifc$j\_$zero;\n";
	    print FH "  csl_port p_x($dir{$l},$val3);\n";
#25 tests have another ifcj instance in ifcm
	    if($i > 75 && $i <= 100 || $i > 250 && $i <= 275) {
		print FH "  ifc$j ifc$j\_$one;\n";
	    }
	    print FH "  ifc$m () {}\n";
	    print FH "};\n\n";
	}

#tests from 50 to 125 have an ifcn interface
	if($i > 200 && $i <= 250 || $i > 275 && $i <= 300) {
	    print FH "csl_interface ifc$n {\n";
	    print FH "  csl_port p_m$i($dir{$l},br1);\n";
	    if($l < 3) {
		print FH "  csl_port p_n$i($dir{$l+1},$val3);\n";
	    }
	    else {
		print FH "  csl_port p_n$i($dir{$l-1},$val3);\n";
	    }
	    if($i > 200 && $i <= 225) {
		print FH "  ifc$j ifc$j\_$one;\n";
	    }
	    elsif($i > 225 && $i <= 250) {
		print FH "  ifc$j ifc$j\_$two;\n";
	    }
	    elsif($i > 275 && $i <= 300) {
		print FH "  ifc$m ifc$m\_$tre;\n";
	    }
	    print FH "  ifc$n () {}\n";
	    print FH "};\n\n";
	}
	
#25 tests have a sgj signal group
	if($i > 100 && $i <= 200 || $i > 300 && $i <= 325 || $i > 350 && $i <= 400) {
	    print FH "csl_signal_group sg$j {\n";
	    print FH "  csl_signal s_a$i(br2);\n";
	    print FH "  csl_signal s_b$i($val3);\n";
	    print FH "  csl_signal s_c$i(br1);\n";
#25 tests have another signal in sgj
	    if($i > 125) {
		print FH "  csl_signal s_d$i($val3);\n";
	    }
	    print FH "  sg$j () {}\n";
	    print FH "};\n\n";
	}
	
#50 tests have sgm
	if($i > 150 && $i <= 200 || $i > 325 && $i <= 400) {
	    print FH "csl_signal_group sg$m {\n";
	    print FH " csl_signal s_x$i($val1);\n";
	    print FH " csl_signal s_y$i($val3);\n";
#25 tests have sgj instantiated in sgm
	    if($i > 150 && $i <= 200 || $i > 350 && $i <= 375) {
		print FH "  sg$j sg$j\_$zero;\n";
	    }
#25 tests have another sgj instance in sgm
	    elsif($i > 375 && $i <= 400) {
		print FH "  sg$j sg$j\_$one;\n";
	    }
	    print FH "  sg$m () {}\n";
	    print FH "};\n\n";
	}
	
#unit a
	print FH "csl_unit a$k {\n";
	print FH "  ifc$j ifc$j\_$one;\n";
#25 tests have sgj instantiated in unit a
	if($i > 100 && $i <= 125) {
	    print FH "  sg$j sg$j\_$one;\n";
	}
#25 tests have sgm instantiated in unit a
	elsif($i > 150 && $i <= 175 || $i > 300 && $i <= 350) {
	    print FH "  ifc$m ifc$m\_$one;\n";
	}
#25 tests have ifcn instantiated in unit a
    elsif($i > 200 && $i <= 225) {
	print FH "  ifc$n ifc$n\_$zero;\n";
    }
#25 tests have ifcm instantiated in unit a
    elsif($i > 250 && $i <= 275 || $i > 350 && $i <= 375) {
	print FH "  ifc$m ifc$m\_$two;\n";
    }
#25 tests have sgm instantiated in unit a
	if($i > 375 && $i <= 400) {
	    print FH "  sg$m sg$m\_$two;\n";
	}
	print FH "  a$k () {}\n";
	print FH "};\n";


#unit b
	print FH "csl_unit b$k {\n";
	print FH "  a$k a$k\_$zero;\n";
#25 tests have ifcj instantiated in unit b
	if($i > 25 && $i <= 50) {
	    print FH "  ifc$j ifc$j\_$tre;\n";
	}
#25 tests have ifcj instantiated in unit b
	elsif($i > 75 && $i <= 100 || $i > 375 && $i <= 400) {
	    print FH "  ifc$m ifc$m\_$tre;\n";
	}
#25 tests have sgm instantiated in unit b
	elsif($i > 175 && $i <= 200 || $i > 325 && $i <= 350) {
	    print FH "  sg$m sg$m\_$one;\n";
	}
#25 tests have another unit a instantiated in unit b
	elsif($i > 300 && $i <= 325) {
	    print FH "  a$k a$k\_$one;\n";
	}
	print FH "  b$k () {}\n";
	print FH "};\n";

#unit c
	print FH "csl_unit c$k {\n";
	print FH "  b$k b$k\_$zero;\n";
#  tests have ifcj instantiated in unit c
	if($i <= 50 || $i > 200 && $i <= 225) {
	    print FH "  ifc$j ifc$j\_$two;\n";
	}
#25 tests have ifcm instantiated in unit c
	elsif($i > 50 && $i <= 75 || $i > 250 && $i <= 275) {
	    print FH "  ifc$m ifc$m\_$one;\n";
	}
#25 tests have another unit b instance in unit c
	elsif($i > 100 && $i <= 125) {
	    print FH "  b$k b$k\_$one;\n";
	}
#25 tests have sgm instantiated in unit c
	elsif($i > 150 && $i <= 175 || $i > 350 && $i <= 375) {
	    print FH "  sg$m sg$m\_$zero;\n";
	}
#25 tests have sgj instantiated in unit c
	elsif($i > 300 && $i <= 325) {
	    print FH "  b$k b$k\_$one;\n";
	    print FH "  sg$j sg$j\_$one;\n";
	}
	print FH "  c$k () {\n";
#25 tests connect a port from an interface with an interface
	if($i <= 25) {
	    print FH "//connect a port from an interface with an interface\n";
	    print FH "    b$k\_$zero.a$k\_$zero.ifc$j\_$one.p_b$i.connect(ifc$j\_$two);\n";
	}
#25 tests connect a port from an interface with an interface (ifc.ifc)
	elsif($i > 50 && $i <= 75) {
	    print FH "//connect a port from an interface with an interface (ifc.ifc)\n";
	    print FH "    ifc$m\_$one.ifc$j\_$zero.p_c$i.connect(b$k\_$zero.a$k\_$zero.ifc$j\_$one);\n";
	}
#25 tests connect a signal from a signal group with an interface
	elsif($i > 100 && $i <= 125) {
	    print FH "//connect a signal from a signal group with an interface\n";
	    print FH "    b$k\_$zero.a$k\_$zero.sg$j\_$one.s_a$i.connect(b$k\_$one.a$k\_$zero.ifc$j\_$one);\n";
	}
#25 tests connect a signal from a signal group with an interface (sg.sg)
	elsif($i > 150 && $i <= 175) {
	    print FH "//connect a signal from a signal group with an interface (sg.sg)\n";
	    print FH "    sg$m\_$zero.sg$j\_$zero.s_b$i.connect(b$k\_$zero.a$k\_$zero.ifc$m\_$one);\n";
	}
#25 tests connect a port from an interface with an interface (ifc.ifc)
    elsif($i > 200 && $i <= 225) {
	print FH "//connect a port from an interface with an interface (ifc.ifc)\n";
	print FH "    ifc$j\_$two.p_c$i.connect(b$k\_$zero.a$k\_$zero.ifc$n\_$zero.ifc$j\_$one);\n";
    }
#25 tests connect a port from an interface with an interface (ifc.ifc, ifc.ifc)
    elsif($i > 250 && $i <= 275) {
	print FH "//connect a port from an interface with an interface (ifc.ifc, ifc.ifc)\n";
	print FH "    b$k\_$zero.a$k\_$zero.ifc$m\_$two.ifc$j\_$zero.p_c$i.connect(ifc$m\_$one.ifc$j\_$one);\n";
    }
#25 tests connect a signal from a signal group with an interface (ifc.ifc)
	elsif($i > 300 && $i <= 325) {
	    print FH "//connect a signal from a signal group with an interface (ifc.ifc)\n";
	    print FH "    sg$j\_$one.s_b$i.connect(b$k\_$one.a$k\_$one.ifc$m\_$one.ifc$j\_$zero);\n";
	}
    print FH "  }\n";
    print FH "};\n";


#unit d
	if($i > 25 && $i <= 50 || $i > 125 && $i <= 250 || $i > 325 && $i <= 400) {
	    print FH "csl_unit d$k {\n";
	    print FH "  c$k c$k\_$zero;\n";
#25 tests have unit a instantiated in unit d
	    if($i > 25 && $i <= 50 || $i > 325 && $i <= 350) {
		print FH "  a$k a$k\_$one;\n";
	    }
#25 tests have sgj instantiated in unit d
	    elsif($i > 125 && $i <= 150) {
		print FH "  sg$j sg$j\_$two;\n";
	    }
#25 tests have ifcj instantiated in unit d
	    elsif($i > 175 && $i <= 200) {
		print FH "  ifc$j ifc$j\_$tre;\n";
	    }
#25 tests have ifcn instantiated in unit d
	    elsif($i > 225 && $i <= 250) {
		print FH "  ifc$n ifc$n\_$one;\n";
	    }
#25 tests have another unit c instance in unit d
	    elsif($i > 350 && $i <= 375) {
		print FH "  c$k c$k\_$one;\n";
	    }
#25 tests have b instanciated in unit d
	    elsif($i > 375 && $i <= 400) {
		print FH "  b$k b$k\_$one;\n";
	    }
	    print FH "  d$k () {\n";
#25 tests connect a port part from an interface with an interface
	    if($i > 25 && $i <= 50) {
		print FH "//connect a port part from an interface with an interface\n";
		print FH "    a$k\_$one.ifc$j\_$one.p_a$i\[".($val3)."\:".($val3-3)."\].connect(c$k\_$zero.b$k\_$zero.ifc$j\_$tre);\n";
	    }
#25 tests connect a signal part from a signal group with an interface
	    elsif($i > 125 && $i <= 150) {
		print FH "//connect a signal part from a signal group with an interface\n";
		print FH "    sg$j\_$two.s_d$i\[".($val3)."\:".($val3-4)."\].connect(c$k\_$zero.b$k\_$zero.a$k\_$zero.ifc$j\_$one);\n";
	    }
#25 tests connect a signal part from a signal group with an interface (sg.sg)
	    elsif($i > 175 && $i <= 200) {
		print FH "//connect a signal part from a signal group with an interface (sg.sg)\n";
		print FH "    c$k\_$zero.b$k\_$zero.sg$m\_$one.sg$j\_$zero.s_d$i\[".($val3)."\:".($val3-4)."\].connect(ifc$j\_$tre);\n";
	    }
#25 tests connect a port part from an interface with an interface
	    if($i > 225 && $i <= 250) {
		print FH "//connect a port part from an interface with an interface\n";
		print FH "    c$k\_$zero.b$k\_$zero.a$k\_$zero.ifc$j\_$one.p_c$i\[".($val1)."\:".($val1-4)."\].connect(ifc$n\_$one.ifc$j\_$two);\n";
	    }
#25 tests connect a signal part from a signal group with an interface (ifc.ifc)
	    elsif($i > 325 && $i <= 350) {
		print FH "//connect a signal part from a signal group with an interface (ifc.ifc)\n";
		print FH "    c$k\_$zero.b$k\_$zero.sg$m\_$one.s_y$i\[".($val3)."\:".($val3-4)."\].connect(a$k\_$one.ifc$m\_$one.ifc$j\_$zero);\n";
	    }
#25 tests connect a signal from a signal group with an interface (sg.sg, ifc.ifc)
	    elsif($i > 350 && $i <= 375) {
		print FH "//connect a signal from a signal group with an interface (sg.sg, ifc.ifc)\n";
		print FH "    c$k\_$one.sg$m\_$zero.sg$j\_$zero.s_c$i.connect(c$k\_$zero.b$k\_$zero.a$k\_$zero.ifc$m\_$two.ifc$j\_$zero);\n";
	    }
#25 tests connect a signal part from a signal group with an interface (sg.sg, ifc.ifc)
	    elsif($i > 375 && $i <= 400) {
		print FH "//connect a signal part from a signal group with an interface (sg.sg, ifc.ifc)\n";
		print FH "    c$k\_$zero.b$k\_$zero.a$k\_$zero.sg$m\_$two.sg$j\_$one.s_a$i\[".($val2)."\:".($val2-4)."\].connect(b$k\_$one.ifc$m\_$tre.ifc$j\_$zero);\n";
	    }
	    print FH "  }\n";
	    print FH "};\n";
	}

#unit e
	if($i > 75 && $i <= 100 || $i > 275 && $i <= 300) {
	    print FH "csl_unit e$k {\n";
#25 tests have unit c instantiated in unit e
	    if($i > 75 && $i <= 100 || $i > 275 && $i <= 300) {
		print FH "  c$k c$k\_$one;\n";
	    }
	    print FH "  ifc$m ifc$m\_$two;\n";
	    if($i > 275 && $i <= 300) {
		print FH "  ifc$n ifc$n\_$two;\n";
	    }
	    print FH "  e$k () {\n";
#25 tests connect a port part from an interface with an interface (ifc.ifc)
	    if($i > 75 && $i <= 100) {
		print FH "//connect a port part from an interface with an interface (ifc.ifc)\n";
		print FH "    ifc$m\_$two.ifc$j\_$one.p_a$i\[".($val3)."\:".($val3-7)."\].connect(c$k\_$one.b$k\_$zero.ifc$m\_$tre);\n";
	    }
#25 tests connect a port part from an interface with an interface (ifc.ifc, ifc.ifc)
	    if($i > 275 && $i <= 300) {
		print FH "//connect a port part from an interface with an interface (ifc.ifc, ifc.ifc)\n";
		print FH "    c$k\_$one.b$k\_$zero.a$k\_$zero.ifc$j\_$one.p_a$i\[".($val3)."\:".($val3-5)."\].connect(ifc$n\_$two.ifc$m\_$tre);\n";
	    }
	    print FH "  }\n";
	    print FH "};\n";
	}

















	close(FH);
	
    }
