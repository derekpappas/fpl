#!/usr/bin/perl

#Author Monica
use strict;

if(! defined $ENV{WORK}){
    die "[ERROR] The environment variable WORK is not set. Set it to point to TOT/se";
}

my $totDir     = $ENV{WORK};
&testDirExists($totDir);

 
sub testDirExists {
    my($execName) = @_;
    unless(-e "$execName") { die "[ERROR] The directory $execName does not exist!\n"; }
    
}

sub mkDir {
    my($dirName) = @_;
    unless(-e "$dirName")  { `mkdir $dirName`; }
}

foreach(my $i = 1; $i <=60; $i++) {
    &main($i);
 
}

sub main {
    my $i = $_[0];
    my $test_name = "connect_sg_sig_replic_test".$i."_legal.csl";
    &createCslFile($test_name, $i);
}
sub createCslFile {
    my($test_name, $i) = @_;
    my $path = "$ENV{WORK}/test/csl_ar_gen";
   if($i==1){
        print (" Generated path: $path/ar_connect_sg_sig_replic_valid/\n");}
    my $val = int(rand(500));
    if($val == 0) { $val = 1; }
    my $val1= int(rand(200));
    if($val1== 0) { $val1= 1; }
    my $val2 = int(rand(100));
    if($val2==0) {$val2=1;}
    if($test_name=~/(_legal)/){
        &mkDir("$path/ar_connect_sg_sig_replic_valid");
        open(FH,">$path/ar_connect_sg_sig_replic_valid/$test_name");
    }
  
    print FH "//Generated by Monica\n";
    print FH "//Connect SG.signal/SG.sg.sig--replicate_expr\n\n";
    print FH "// VALID TEST $i;\n";

#sg.sig.connect({n {x1,x2,x3,...}});    
    if($i>0 && $i<=10){
        my $v1=$val + $val;
        print FH "csl_signal_group sg1{\n";
        print FH "  csl_signal s11($val);\n";
        print FH "  csl_signal s12(4);\n";
        print FH "  csl_signal s13($val1);\n";
        print FH "  csl_signal s14($val2);\n";
        print FH "  csl_signal s15($v1);\n";
      foreach (my $j=1; $j<=$i; $j++){
          print FH "  csl_signal s1_$j($j);\n";
      }
        print FH "    sg1(){\n";
        print FH "   }\n";
        print FH " };\n";

        print FH " csl_unit u1{\n";
        print FH "    csl_port p11(input,$val2);\n";
        print FH "    csl_port p12(input);\n";
        print FH "    csl_port p13(input,$val);\n";
        print FH "    csl_port p14(output);\n";
        
        foreach (my $j=1; $j<=$i; $j++){
        print FH "    csl_port p1_$j(input,$j);\n";
        }
        print FH " u1(){}\n";
        print FH "};\n";
      
        print FH " csl_unit u2{\n";
        print FH "    csl_port p21(input,$val);\n";
        print FH "    csl_port p22(input,$val1);\n";
        print FH "    csl_port p23(input);\n";
   
        print FH " sg1 sg1_i;\n";
        print FH " u1 u1_i;\n";

        print FH " u2(){\n";
        print FH " sg1_i.s12.connect({4 {p12});\n";
        print FH " sg1_i.s14.connect({$val2 {p14}});\n";
        print FH " sg1_i.s15.connect({2 {p13});\n";
       foreach (my $j=1; $j<=$i; $j++){
       print FH  " sg1_i.s1_$j.connect({$j {p14}});\n";
      } 
        print FH "  }\n";
        print FH "};\n";
    }
 
    if ($i>10 &&  $i<=20){
    my $v1=$val + $val;
    my $v2=$val1 + $val1;
    my $v3=$val2 + $val2 + $val2;
        print FH "csl_signal_group sg1{\n";
        print FH "  csl_signal s11($val);\n";
        print FH "  csl_signal s12(4);\n";
        print FH "  csl_signal s13($v1);\n";
        print FH "  csl_signal s14($v2);\n";
        print FH "  csl_signal s15($v3);\n";
      foreach (my $j=10; $j<=$i; $j++){
          print FH "  csl_signal s1_$j($j);\n";
      }
        print FH "    sg1(){\n";
        print FH "   }\n";
        print FH " };\n";

        print FH " csl_unit u1{\n";
        print FH "    csl_port p11(input,$val2);\n";
        print FH "    csl_port p12(input);\n";
        print FH "    csl_port p13(input,$val);\n";
        print FH "    csl_port p14(output);\n";
        print FH "    csl_port p15(output,$val1);\n";
        
        foreach (my $j=10; $j<=$i; $j++){
        print FH "    csl_port p1_$j(input,$j);\n";
        }
        print FH " u1(){}\n";
        print FH "};\n";
      
        print FH " csl_unit u2{\n";
        print FH "    csl_port p21(input,$val);\n";
        print FH "    csl_port p22(input,$val1);\n";
        print FH "    csl_port p23(input);\n";
   
        print FH " sg1 sg1_i1;\n";
        print FH " u1 u1_i;\n";

        print FH " u2(){\n";
        print FH " sg1_i1.s13.connect({2 {p13});\n";
        print FH " sg1_i1.s14.connect({2 {p15}});\n";
        print FH " sg1_i1.s15.connect({3 {p11});\n";
       foreach (my $j=10; $j<=$i; $j++){
       print FH  " sg1_i1.s1_$j.connect({$j {p14}});\n";
      } 
        print FH "  }\n";
        print FH "};\n";
       
    print FH " csl_unit u3{\n";
    print FH "    csl_port p31(input,$val);\n";
    print FH "    csl_port p32(input,$val1);\n";
    print FH "    csl_port p33(input);\n";
    print FH " u2 u2_i;\n";
    print FH " sg1 sg1_i2;\n";

    print FH " u3(){\n";
    print FH " sg1_i2.s13.connect({2 {p21}});\n";
    print FH " sg1_i2.s13.connect({2 {p13});\n";
    print FH " sg1_i2.s13.connect({2 {p31}});\n";
    print FH " sg1_i2.s12.connect({4 {p33}});\n";
    print FH " sg1_i2.s15.connect({3 {p11}});\n";
    print FH " u2_i.sg1_i1.s13.connect({2 {p21}});\n";
    print FH " u2_i.sg1_i1.s13.connect({2 {p13});\n";
    print FH " u2_i.sg1_i1.s12.connect({4 {p33}});\n";
    print FH "  }\n";
    print FH " };\n";
    
    }
 
   if ($i>20 &&  $i<=30){

    my $v1=3* ($val + $val1);
    my $v2=2* ($val1 + $val2);
    my $v3=2* ($val + $val1 + $val2);
        print FH "csl_signal_group sg1{\n";
        print FH "  csl_signal s11($val);\n";
        print FH "  csl_signal s12(4);\n";
        print FH "  csl_signal s13($v1);\n";
        print FH "  csl_signal s14($v2);\n";
        print FH "  csl_signal s15($v3);\n";
     
        print FH "    sg1(){\n";
        print FH "   }\n";
        print FH " };\n";

        print FH " csl_unit u1{\n";
        print FH "    csl_port p11(input,$val2);\n";
        print FH "    csl_port p12(input);\n";
        print FH "    csl_port p13(input,$val);\n";
        print FH "    csl_port p14(output);\n";
        print FH "    csl_port p15(output,$val1);\n";
        
        print FH " u1(){}\n";
        print FH "};\n";
      
        print FH " csl_unit u2{\n";
        print FH "    csl_port p21(input,$val);\n";
        print FH "    csl_port p22(input,$val1);\n";
        print FH "    csl_port p23(input);\n";
        print FH "    csl_port p24(input,$val2);\n";
   
        print FH " sg1 sg1_i1;\n";
        print FH " u1 u1_i;\n";

        print FH " u2(){\n";
        print FH " sg1_i1.s13.connect({2 {p13});\n";
        print FH " sg1_i1.s14.connect({2 {p15}});\n";
        print FH " sg1_i1.s15.connect({3 {p11});\n";
     
        print FH "  }\n";
        print FH "};\n";
       
    print FH " csl_unit u3{\n";
    print FH "    csl_port p31(input,$val);\n";
    print FH "    csl_port p32(input,$val1);\n";
    print FH "    csl_port p33(input);\n";
    print FH "    csl_port p34(output,$val2);\n";
    print FH " u2 u2_i;\n";
    print FH " sg1 sg1_i2;\n";

    print FH " u3(){\n";
    print FH " sg1_i2.s13.connect({3 {p31,p32}});\n";
    print FH " sg1_i2.s13.connect({3 {p13,p15});\n";
    print FH " sg1_i2.s13.connect({3 {p21,p22}});\n";

    print FH " sg1_i2.s12.connect({4 {p33}});\n";
    print FH " sg1_i2.s15.connect({2 {p31,p32,p34}});\n";
    print FH " sg1_i2.s15.connect({2 {p21,p22,p24}});\n";
    print FH " sg1_i2.s15.connect({2 {p13,p15,p11}});\n";

    print FH " u2_i.sg1_i1.s13.connect({2 {p21,p22,p24}});\n";
    print FH " u2_i.sg1_i1.s13.connect({2 {p13,p15,p11});\n";
    print FH " u2_i.sg1_i1.s12.connect({4 {p33}});\n";
    print FH " u2_i.sg1_i1.s14.connect({2 {p22,p24}});\n";
    print FH " u2_i.sg1_i1.s14.connect({2 {p32,p34}});\n";
    print FH " u2_i.sg1_i1.s14.connect({2 {p15,p11}});\n";
    print FH "  }\n";
    print FH " };\n";
    
    }

# sg.sg.sig.connect({n{x1,x2,....}});
    if($i>30 && $i<=40){
 my $v1= 4* ($val + $val1);
 my $v2= 2* ($val1 + $val2);
 my $v3= 3* ($val + 1 + $val1);
        print FH "csl_signal_group sg1{\n";
        print FH "  csl_signal s11($val);\n";
        print FH "  csl_signal s12(4);\n";
        print FH "  csl_signal s13($val1);\n";
        print FH "  csl_signal s14($val2);\n";
        print FH "  csl_signal s15($v1);\n";
     foreach (my $j=30; $j<=$i; $j++){
         print FH "  csl_signal s1_$j($j);\n";
     }
        print FH "    sg1(){\n";
        print FH "   }\n";
        print FH " };\n";

        print FH " csl_signal_group sg2{\n";
        print FH "   csl_signal s21($v1);\n";
        print FH "   csl_signal s22($v2);\n";
        print FH "   csl_signal s23($v3);\n";
      foreach (my $j=30; $j<=$i; $j++){
          print FH "   sg1 sg1i_$j;\n";
       } 
        print FH "    sg2(){\n";
        print FH "   }\n";
        print FH " };\n";  

        print FH " csl_unit u1{\n";
        print FH "    csl_port p11(input,$val2);\n";
        print FH "    csl_port p12(input);\n";
        print FH "    csl_port p13(input,$val);\n";
        print FH "    csl_port p14(output);\n";
        
        foreach (my $j=30; $j<=$i; $j++){
        print FH "    csl_port p1_$j(input,$j);\n";
        }
        print FH " u1(){}\n";
        print FH "};\n";
      
        print FH " csl_unit u2{\n";
        print FH "    csl_port p21(input,$val);\n";
        print FH "    csl_port p22(input,$val1);\n";
        print FH "    csl_port p23(input);\n";
        print FH "    csl_port p24(output,$val2);\n";
   
        print FH " sg2 sg2_i;\n";
        print FH " u1 u1_i;\n";

        print FH " u2(){\n";
    foreach (my $j=30; $j<=$i; $j++){
        print FH " sg2_i.sg1i_$j.s12.connect({4 {p12});\n";
        print FH " sg2_i.sg1i_$j.s14.connect({$val2 {p14}});\n";
        print FH " sg2_i.sg1i_$j.s15.connect({2 {p13});\n";
    }
       foreach (my $j=30; $j<=$i; $j++){
       print FH  " sg2_i.sg1i_$j.s1_$j.connect({$j {p14}});\n";
            }
       print FH  " sg2_i.s21.connect({4 {p21,p22}});\n";
       print FH  " sg2_i.s22.connect({2 {p22,p24}});\n";
       print FH  " sg2_i.s23.connect({3 {p21,p23,p22}});\n";
     
        print FH "  }\n";
        print FH "};\n";
    }
 
#******************************************
#sg.sig[part_select].connect(replicate_expr);

    if($i >40 && $i<=50){
    my $v1=3* ($val + $val1);
    my $v2=2* ($val1 + $val2);
    my $v3=2* ($val + $val1 + $val2);
        print FH "csl_signal_group sg1{\n";
        print FH "  csl_signal s11($val);\n";
        print FH "  csl_signal s12(4);\n";
        print FH "  csl_signal s13($v1);\n";
        print FH "  csl_signal s14($v2);\n";
        print FH "  csl_signal s15($v3);\n";
     
        print FH "    sg1(){\n";
        print FH "   }\n";
        print FH " };\n";

        print FH " csl_unit u1{\n";
        print FH "    csl_port p11(input,$val2);\n";
        print FH "    csl_port p12(input);\n";
        print FH "    csl_port p13(input,$val);\n";
        print FH "    csl_port p14(output);\n";
        print FH "    csl_port p15(output,$val1);\n";
        print FH " sg1 sg1_i1;\n";
        
        print FH " u1(){}\n";
        print FH "};\n";
      
        print FH " csl_unit u2{\n";
        print FH "    csl_port p21(input,$val);\n";
        print FH "    csl_port p22(input,$val1);\n";
        print FH "    csl_port p23(input);\n";
        print FH "    csl_port p24(input,$val2);\n";
   
        print FH " sg1 sg1_i2;\n";
        print FH " u1 u1_i;\n";

        print FH " u2(){\n";
        print FH " sg1_i2.s13.connect({2 {p13});\n";
        print FH " sg1_i2.s14.connect({2 {p15}});\n";
        print FH " sg1_i2.s15.connect({3 {p11});\n";
     
        print FH "  }\n";
        print FH "};\n";
       
    print FH " csl_unit u3{\n";
    print FH "    csl_port p31(input,$val);\n";
    print FH "    csl_port p32(input,$val1);\n";
    print FH "    csl_port p33(input);\n";
    print FH "    csl_port p34(output,$val2);\n";
    print FH " u2 u2_i;\n";
    print FH " sg1 sg1_i3;\n";

    my $o=0;
    my $ui1=$val-1;
    my $ui2=3;
    my $ui3=$v1-1;
    my $ui4=$v2-1;
    my $ui5=$v3-1;
    print FH " u3(){\n";
    print FH " sg1_i3.s13[$o:$ui3].connect({3 {p31,p32}});\n";
    print FH " sg1_i3.s13[$o:$ui3].connect({3 {p13,p15});\n";
    print FH " sg1_i3.s13[$o:$ui3].connect({3 {p21,p22}});\n";

    print FH " sg1_i3.s12[$o:$ui2].connect({4 {p33}});\n";
    print FH " sg1_i3.s15[$o:$ui5].connect({2 {p31,p32,p34}});\n";
    print FH " sg1_i3.s15[$o:$ui5].connect({2 {p21,p22,p24}});\n";
    print FH " sg1_i3.s15[$o:$ui5].connect({2 {p13,p15,p11}});\n";

    print FH " u2_i.sg1_i2.s13[$o:$ui3].connect({2 {p21,p22,p24}});\n";
    print FH " u2_i.sg1_i2.s13[$o:$ui3].connect({2 {p13,p15,p11});\n";
    print FH " u2_i.sg1_i2.s12[$o:$ui2].connect({4 {p33}});\n";
    print FH " u2_i.sg1_i2.s14[$o:$ui4].connect({2 {p22,p24}});\n";
    print FH " u2_i.sg1_i2.s14[$o:$ui4].connect({2 {p32,p34}});\n";
    print FH " u2_i.sg1_i2.s14[$o:$ui4].connect({2 {p15,p11}});\n";

    print FH " u2_i.u1_i.sg1_i1.s13[$o:$ui3].connect({2 {p21,p22,p24}});\n";
    print FH " u2_i.u1_i.sg1_i1.s13[$o:$ui3].connect({2 {p13,p15,p11});\n";
    print FH " u2_i.u1_i.sg1_i1.s12[$o:$ui2].connect({4 {p33}});\n";
    print FH " u2_i.u1_i.sg1_i1.s14[$o:$ui4].connect({2 {p22,p24}});\n";
    print FH " u2_i.u1_i.sg1_i1.s14[$o:$ui4].connect({2 {p32,p34}});\n";
    print FH " u2_i.u1_i.sg1_i1.s14[$o:$ui4].connect({2 {p15,p11}});\n";
    print FH "  }\n";
    print FH " };\n";
    
    }

#******************************************
#sg.sg1.sig[part_select].connect(replicate_expr);

    if($i >50 && $i<=60){
    my $v1=3* ($val + $val1);
    my $v2=2* ($val1 + $val2);
    my $v3=2* ($val + $val1 + $val2);
        print FH "csl_signal_group sg1{\n";
        print FH "  csl_signal s11($val);\n";
        print FH "  csl_signal s12(4);\n";
        print FH "  csl_signal s13($v1);\n";
        print FH "  csl_signal s14($v2);\n";
        print FH "  csl_signal s15($v3);\n";
     
        print FH "    sg1(){\n";
        print FH "   }\n";
        print FH " };\n";

       print FH " csl_signal_group sg2{\n";
        print FH "   csl_signal s21($v1);\n";
        print FH "   csl_signal s22($v2);\n";
        print FH "   csl_signal s23($v3);\n";
      foreach (my $j=51; $j<=$i; $j++){
          print FH "   sg1 sg1i_$j;\n";
       } 
        print FH "    sg2(){\n";
        print FH "   }\n";
        print FH " };\n"; 
 
        print FH " csl_unit u1{\n";
        print FH "    csl_port p11(input,$val2);\n";
        print FH "    csl_port p12(input);\n";
        print FH "    csl_port p13(input,$val);\n";
        print FH "    csl_port p14(output);\n";
        print FH "    csl_port p15(output,$val1);\n";
        print FH " sg2 sg2_i1;\n";
        
        print FH " u1(){}\n";
        print FH "};\n";
      
        print FH " csl_unit u2{\n";
        print FH "    csl_port p21(input,$val);\n";
        print FH "    csl_port p22(input,$val1);\n";
        print FH "    csl_port p23(input);\n";
        print FH "    csl_port p24(input,$val2);\n";
   
        print FH " sg2 sg2_i2;\n";
        print FH " u1 u1_i;\n";

        print FH " u2(){\n";
 foreach (my $j=51; $j<=$i; $j++){
        print FH " sg2_i2.sg1i_$j.s13.connect({2 {p13});\n";
        print FH " sg2_i2.sg1i_$j.s14.connect({2 {p15}});\n";
        print FH " sg2_i2.sg1i_$j.s15.connect({3 {p11});\n";
    }
        print FH "  }\n";
        print FH "};\n";
       
    print FH " csl_unit u3{\n";
    print FH "    csl_port p31(input,$val);\n";
    print FH "    csl_port p32(input,$val1);\n";
    print FH "    csl_port p33(input);\n";
    print FH "    csl_port p34(output,$val2);\n";
    print FH " u2 u2_i;\n";
    print FH " sg2 sg2_i3;\n";

    my $o=0;
    my $ui1=$val-1;
    my $ui2=3;
    my $ui3=$v1-1;
    my $ui4=$v2-1;
    my $ui5=$v3-1;
    print FH " u3(){\n";
 foreach (my $j=51; $j<=$i; $j++){
    print FH " sg2_i3.sg1_i$j.s13[$o:$ui3].connect({3 {p31,p32}});\n";
    print FH " sg2_i3.sg1_i$j.s13[$o:$ui3].connect({3 {p13,p15});\n";
    print FH " sg2_i3.sg1_i$j.s13[$o:$ui3].connect({3 {p21,p22}});\n";

    print FH " sg2_i3.sg1_i$j.s12[$o:$ui2].connect({4 {p33}});\n";
    print FH " sg2_i3.sg1_i$j.s15[$o:$ui5].connect({2 {p31,p32,p34}});\n";
    print FH " sg2_i3.sg1_i$j.s15[$o:$ui5].connect({2 {p21,p22,p24}});\n";
    print FH " sg2_i3.sg1_i$j.s15[$o:$ui5].connect({2 {p13,p15,p11}});\n";

    print FH " u2_i.sg2_i2.sg1_i$j.s13[$o:$ui3].connect({2 {p21,p22,p24}});\n";
    print FH " u2_i.sg2_i2.sg1_i$j.s13[$o:$ui3].connect({2 {p13,p15,p11});\n";
    print FH " u2_i.sg2_i2.sg1_i$j.s12[$o:$ui2].connect({4 {p33}});\n";
    print FH " u2_i.sg2_i2.sg1_i$j.s14[$o:$ui4].connect({2 {p22,p24}});\n";
    print FH " u2_i.sg2_i2.sg1_i$j.s14[$o:$ui4].connect({2 {p32,p34}});\n";
    print FH " u2_i.sg2_i2.sg1_i$j.s14[$o:$ui4].connect({2 {p15,p11}});\n";

    print FH " u2_i.u1_i.sg2_i1.sg1_i$j.s13[$o:$ui3].connect({2 {p21,p22,p24}});\n";
    print FH " u2_i.u1_i.sg2_i1.sg1_i$j.s13[$o:$ui3].connect({2 {p13,p15,p11});\n";
    print FH " u2_i.u1_i.sg2_i1.sg1_i$j.s12[$o:$ui2].connect({4 {p33}});\n";
    print FH " u2_i.u1_i.sg2_i1.sg1_i$j.s14[$o:$ui4].connect({2 {p22,p24}});\n";
    print FH " u2_i.u1_i.sg2_i1.sg1_i$j.s14[$o:$ui4].connect({2 {p32,p34}});\n";
    print FH " u2_i.u1_i.sg2_i1.sg1_i$j.s14[$o:$ui4].connect({2 {p15,p11}});\n";
}
    print FH "  }\n";
    print FH " };\n";
    
    }




    close (FH);
}
