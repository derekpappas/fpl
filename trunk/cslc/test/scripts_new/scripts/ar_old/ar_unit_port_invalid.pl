#!/usr/bin/perl

#Author Monica
use strict;

if(! defined $ENV{WORK}){
    die "[ERROR] The environment variable WORK is not set. Set it to point to TOT/se";
}

my $totDir     = $ENV{WORK};
&testDirExists($totDir);

sub testDirExists {
    my($execName) = @_;
    unless(-e "$execName") { die "[ERROR] The directory $execName does not exist!\n"; }
    
}

sub mkDir {
    my($dirName) = @_;
    unless(-e "$dirName")  { `mkdir $dirName`; }
}

foreach(my $i = 1; $i <= 150; $i++) {
    &main($i);
}

sub main {
    my $i = $_[0];
    my $test_name = "connect_unit_port_test".$i."_illegal.csl";
    &createCslFile($test_name, $i);
}
sub createCslFile {
    my($test_name, $i) = @_;
    my $path = "$ENV{WORK}/test/csl_ar_gen";
   if($i==1){
        print (" Generated path: $path/ar_connect_unit_port_invalid/\n");}
    my $val = int(rand(500));
    if($val == 0) { $val = 1; }
    my $val1 =int(rand(25))+1;

    if($test_name=~/(_illegal)/){
        &mkDir("$path/ar_connect_unit_port_invalid");
        open(FH,">$path/ar_connect_unit_port_invalid/$test_name");
    }
    if($i>0 && $i<=150){
if($i>0 &&  $i<=100){     
    print FH "//Generated by Monica\n";
    print FH "//Connect unit--port\n\n";
    print FH "// INVALID TEST $i;\n";
    print FH "csl_bitrange br($val);\n\n";
  
  if($i<=20){
   print FH " csl_unit u1_$i {\n";
   print FH "    csl_port p1_$i(input,br);\n";
   print FH "    csl_port p2_$i(input,br);\n";
   print FH "    csl_port p3_$i(input);\n";  
   print FH " u1_$i() {\n";
   print FH "  }\n";
   print FH "};\n";
    
   print FH " csl_unit u2_$i {\n";
   print FH "    csl_port p1_$i(output,br);\n";
   print FH "    csl_port p2_$i(output,br);\n";
   print FH "    csl_port p3_$i(output);\n";  
   print FH " u2_$i() {\n";
   print FH "  }\n";
   print FH "};\n";
    
   print FH " csl_unit u_top1_$i {\n";
   print FH "    csl_port p1_$i(output,br);\n";
   print FH "    csl_port p2_$i(input,br);\n";
   print FH "    csl_port p3_$i(input);\n";
   print FH "    csl_port p4_$i(output);\n";
   foreach (my $j=1; $j<=4; $j++){
       print FH "    u1_$i u1_$i$j;\n";
   }
   foreach (my $j=1; $j<=3; $j++){
       print FH "    u2_$i u2_$i$j;\n";
   }
   
   print FH " u_top1_$i() {\n";
   print FH "  }\n";
   print FH "};\n";
    
   print FH " csl_unit top_$i {\n";
   print FH " u_top1_$i  top1_i$i;\n";

   print FH " top_$i() {\n";

   foreach (my $j=1; $j<=3; $j++){
  
           print FH "top1_i$i.u1_$i$j.connect(top1_i$i.u2_$i$j.p1_$i);    //illegal connection: unit--port \n";
}

   print FH "  }\n";
   print FH "};\n";
   print FH "\n";
}

 elsif($i>20 && $i <=40){
   print FH "csl_bitrange br1($val1);\n\n";
   print FH " csl_unit u1_$i {\n";
   print FH "    csl_port p1_$i(input,br1);\n";
   print FH "    csl_port p2_$i(input,br);\n";
   print FH "    csl_port p3_$i(output);\n";  
   print FH " u1_$i() {\n";
   print FH "  }\n";
   print FH "};\n";
   print FH "\n";
 
   print FH " csl_unit u2_$i {\n";
   print FH "    csl_port p1_$i(output,br1);\n";
   print FH "    csl_port p2_$i(output,br);\n";
   print FH "    csl_port p3_$i(input);\n";  
   print FH " u2_$i() {\n";
   print FH "  }\n";
   print FH "};\n";
   print FH "\n";
    
   print FH " csl_unit u_top1_$i {\n";
   print FH "    csl_port p1_$i(output,br1);\n";
   print FH "    csl_port p2_$i(input,br);\n";
   print FH "    csl_port p3_$i(input);\n";
   print FH "    csl_port p4_$i(output);\n";
   foreach (my $j=1; $j<=4; $j++){
       print FH "    u1_$i u1_$i$j;\n";
   }
   foreach (my $j=1; $j<=3; $j++){
       print FH "    u2_$i u2_$i$j;\n";
   }
   
   print FH " u_top1_$i() {\n";
   print FH "  }\n";
   print FH "};\n";
   print FH "\n";
    
   print FH " csl_unit top_$i {\n";
   print FH " u_top1_$i  top1_i$i;\n";

   print FH " top_$i() {\n";
   foreach (my $j=1; $j<=3; $j++){
   
           print FH "top1_i$i.u2_$i$j.connect(top1_i$i.u1_$i$j.p1_$i);    //illegal connection: unit--port \n";
           print FH "top1_i$i.u1_$i$j.connect(top1_i$i.u2_$i$j.p1_$i);    //illegal connection: unit--port \n";

}
   print FH "  }\n";
   print FH "};\n";
   print FH "\n";
}
elsif($i>40 && $i <=60){
    my $br_=$val + $val1 +1;
   print FH "csl_bitrange br1($val1);\n\n";
   print FH " csl_unit u1_$i {\n";
   print FH "    csl_port p1_$i(input,br1);\n";
   print FH "    csl_port p2_$i(input,br);\n";
   print FH "    csl_port p3_$i(input);\n";  
   print FH " u1_$i() {\n";
   print FH "  }\n";
   print FH "};\n";
   print FH "\n";
    
   print FH " csl_unit u2_$i {\n";
   print FH "    csl_port p1_$i(output,br1);\n";
   print FH "    csl_port p2_$i(output,br);\n";
   print FH "    csl_port p3_$i(output);\n";  
   print FH " u2_$i() {\n";
   print FH "  }\n";
   print FH "};\n";
    print FH "\n";

   print FH " csl_unit u3_$i {\n";
   print FH "    csl_port p1_$i(output,$br_);\n";
   print FH "    u2_$i u2i_$i;\n";
   print FH " u3_$i() {\n";
   print FH "  }\n";
   print FH "};\n";
    print FH "\n";
    
   print FH " csl_unit u_top1_$i {\n";
   print FH "    csl_port p1_$i(output,br1);\n";
   print FH "    csl_port p2_$i(input,br);\n";
   print FH "    csl_port p3_$i(input);\n";
   print FH "    csl_port p4_$i(output);\n";
   foreach (my $j=1; $j<=2; $j++){
       print FH "    u1_$i u1_$i$j;\n";
   }
   foreach (my $j=1; $j<=5; $j++){
       print FH "    u3_$i u3_$i$j;\n";
   }
   
   print FH " u_top1_$i() {\n";
   print FH "  }\n";
   print FH "};\n";
    print FH "\n";
    
   print FH " csl_unit top_$i {\n";
   print FH " u_top1_$i  top1_i$i;\n";

   print FH " top_$i() {\n";
   foreach (my $j=1; $j<=2; $j++){
    
           print FH "top1_i$i.u1_$i$j.connect(top1_i$i.u3_$i$j.p1_$i);          //illegal connection: unit--port \n";
           print FH "top1_i$i.connect(top1_i$i.u3_$i$j.u2i_$i.p3_$i);            //illegal connection: unit--port \n";
}
   print FH "  }\n";
   print FH "};\n";
    print FH "\n";
}
 elsif ($i>60 && $i <=80){
   print FH "csl_bitrange br1($val1);\n\n";
   print FH " csl_unit u1_$i {\n";
   print FH "    csl_port p1_$i(input,br1);\n";
   print FH "    csl_port p2_$i(input,br);\n";
   print FH "    csl_port p3_$i(output);\n";  
   print FH " u1_$i() {\n";
   print FH "  }\n";
   print FH "};\n";
    print FH "\n";
    
   print FH " csl_unit u2_$i {\n";
   print FH "    csl_port p1_$i(output,br1);\n";
   print FH "    csl_port p2_$i(output,br);\n";
   print FH "    csl_port p3_$i(input);\n";  
   print FH " u2_$i() {\n";
   print FH "  }\n";
   print FH "};\n";
   print FH "\n";
    
   print FH " csl_unit u_top1_$i {\n";
   print FH "    csl_port p1_$i(output,br1);\n";
   print FH "    csl_port p2_$i(input,br);\n";
   print FH "    csl_port p3_$i(input);\n";
   print FH "    csl_port p4_$i(output);\n";
   foreach (my $j=1; $j<=4; $j++){
       print FH "    u1_$i u1_$i$j;\n";
   }
   foreach (my $j=1; $j<=3; $j++){
       print FH "    u2_$i u2_$i$j;\n";
   }
   
   print FH " u_top1_$i() {\n";
   print FH "  }\n";
   print FH "};\n";
    print FH "\n";
    
   print FH " csl_unit top_$i {\n";
   print FH " u_top1_$i  top1_i$i;\n";

   print FH " top_$i() {\n";
   foreach (my $j=1; $j<=3; $j++){
    
           print FH "top1_i$i.u2_$i.connect(top1_i$i.p3_$i);      //illegal connection: unit--port \n";
           print FH "top1_i$i.connect(top1_i$i.u2_$i$j.p1_$i);    //illegal connection: unit--port \n";
}
   print FH "  }\n";
   print FH "};\n";
   print FH "\n";
}
 elsif($i>80 && $i <=100){
   
   print FH " csl_unit u1_$i {\n";
   print FH "    csl_port p1_$i(input,br);\n";
   print FH "    csl_port p2_$i(input,br);\n";
   print FH "    csl_port p3_$i(output);\n";  
   print FH " u1_$i() {\n";
   print FH "  }\n";
   print FH "};\n";
   print FH "\n";
    
   print FH " csl_unit u2_$i {\n";
   print FH "    csl_port p1_$i(output,br);\n";
   print FH "    csl_port p2_$i(output,br);\n";
   print FH "    csl_port p3_$i(input);\n";  
   print FH " u2_$i() {\n";
   print FH "  }\n";
   print FH "};\n";
   print FH "\n";
    
   print FH " csl_unit u_top1_$i {\n";
   print FH "    csl_port p1_$i(output,br);\n";
   print FH "    csl_port p2_$i(input,br);\n";
   print FH "    csl_port p3_$i(input);\n";
   print FH "    csl_port p4_$i(output);\n";
   foreach (my $j=1; $j<=4; $j++){
       print FH "    u1_$i u1_$i$j;\n";
   }
   foreach (my $k=1; $k<=4; $k++){
       print FH "    u2_$i u2_$i$k;\n";
   }
   
   print FH " u_top1_$i() {\n";
   print FH "  }\n";
   print FH "};\n";
   print FH "\n";
    
   print FH " csl_unit top_$i {\n";
   print FH " u_top1_$i  top1_i$i;\n";

   print FH " top_$i() {\n";
   foreach (my $j=1; $j<=4; $j++){
  
           print FH "top1_i$i.u2_$i$j.connect(top1_i$i.u1_$i$j.p2_$i);    //illegal connection: unit--port \n";
           print FH "top1_i$i.u1_$i$j.connect(top1_i$i.p4_$i);            //illegal connection: unit--port \n";
}

   print FH "  }\n";
   print FH "};\n";
   print FH "\n";
}
}

# rf.connect(port);

if ($i>100 &&  $i<=150){     

    print FH "//Generated by Monica\n";
    print FH "//Connect RF--port\n\n";
    print FH "// INVALID TEST $i;\n\n";

    print FH "csl_bitrange br($val);\n";
    print FH "csl_bitrange br1($val1);\n\n";
    my $val_data = int(rand(64))+1;
    my $val_addr = int(rand(30))+1;
    print FH "csl_enum e_rf {\n";
    print FH "    data_w = $val_data,\n";
    print FH "    addr_w = $val_addr \n";
    print FH " };\n";
    print FH " \n";

    print FH " csl_register_file rf_$i {\n";
    print FH "     rf_$i() {\n";
    print FH "     set_width(data_w);\n";
    print FH "     set_depth(1<<addr_w);\n";
    print FH "   }\n";
    print FH " };\n";
    print FH "\n";

  
    print FH " csl_unit u1_$i {\n";
   print FH "    csl_port p1_$i(input,br1);\n";
   print FH "    csl_port p2_$i(input,br);\n";
   print FH "    csl_port p3_$i(output);\n";  
   print FH " u1_$i() {\n";
   print FH "  }\n";
   print FH "};\n";
   print FH "\n";
 
   print FH " csl_unit u2_$i {\n";
   print FH "    csl_port p1_$i(output,br1);\n";
   print FH "    csl_port p2_$i(output,br);\n";
   print FH "    csl_port p3_$i(input);\n";  
   print FH "    rf_$i rf_i$i;\n";
   print FH " u2_$i() {\n";
   print FH "  }\n";
   print FH "};\n";
   print FH "\n";
    
   print FH " csl_unit u_top1_$i {\n";
   print FH "    csl_port p1_$i(output,br1);\n";
   print FH "    csl_port p2_$i(input,br);\n";
   print FH "    csl_port p3_$i(input);\n";
   print FH "    csl_port p4_$i(output);\n\n"; 
   print FH "// Unit instance \n";
  foreach (my $j=1; $j<=4; $j++){
       print FH "    u1_$i u1_$i$j;\n";
   }
   foreach (my $k=1; $k<=4; $k++){
       print FH "    u2_$i u2_$i$k;\n";
   }
  print FH "// Register File instance \n";
   foreach (my $m=1; $m<=2; $m++){
       print FH "    rf_$i rf_$i$m;\n";
   }
   print FH " u_top1_$i() {\n";
    foreach(my $j=1; $j<=4; $j++){
        foreach(my $m=1; $m<=2;$m++){
        print FH " rf_$i$m.connect(u1_$i$j.p1_$i); //illegal connection: rf--port \n";
      } 
    }
   foreach (my $k=1; $k<=4; $k++){
      print FH " u2_$i$k.rf_i$i.connect(p4_$i);   //illegal connection: rf--port\n";
  }
   print FH "  }\n";
   print FH "};\n";
   print FH "\n";

   print FH " csl_unit top_$i {\n";
   print FH " u_top1_$i  top1_i$i;\n";

   print FH " top_$i() {\n";
 
if($i>100 && $i<=115){
 foreach ( my $j=1; $j<=2;$j++){
  print FH "  top1_i$i.rf_$i$j.connect(top1_i$i.u1_$i.p2_$i);   //illegal connection: rf--port \n";
  print FH "  top1_i$i.rf_$i$j.connect(top1_i$i.u2_$i.p1_$i);   //illegal connection: rf--port \n";  
  print FH "  top1_i$i.rf_$i$j.connect(top1_i$i.u1_$i.p3_$i);   //illegal connection: rf--port\n";
}
}
 elsif($i>115 && $i<=130){
 foreach ( my $j=1; $j<=2;$j++){
  print FH "  top1_i$i.u2_$i$j.rf_i$i.connect(top1_i$i.u1_$i.p1_$i);  //illegal connection: rf--port\n";
  print FH "  top1_i$i.u2_$i$j.rf_i$i.connect(top1_i$i.p3_$i);        //illegal connection: rf--port \n";  
  print FH "  top1_i$i.rf_$i$j.connect(top1_i$i.u2_$i.rf_i$i.data_in); //illegal connection: rf--port\n";
}
}
 elsif($i>130 && $i<=150){
 foreach ( my $j=1; $j<=2;$j++){
  print FH "  top1_i$i.u2_$i$j.rf_i$i.connect(top1_i$i.p2_$i);        //illegal connection: rf--port\n";
  print FH "  top1_i$i.u2_$i$j.rf_i$i.connect(top1_i$i.u1_$i.p3_$i);  //illegal connection: rf--port\n";  
  print FH "  top1_i$i.rf_$i$j.connect(top1_i$i.u2_$i.p1_$i;);        //illegal connection: rf--port\n";
}
}
   print FH "  }\n";
   print FH "};\n";
   print FH "\n";
 }
}

    close(FH);
}


