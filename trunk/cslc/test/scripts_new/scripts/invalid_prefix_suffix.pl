#!/usr/bin/perl

#Author Petronela
use strict;

my $path = "$ENV{WORK}/test/csl_test_gen";
print "the path for generated tests is: $path/invalid_prefix_suffix\n";

if(! defined $ENV{WORK}){
    die "[ERROR] The environment variable WORK is not set. Set it to point to TOT/se";
}

my $totDir     = $ENV{WORK};
&testDirExists($totDir);

sub testDirExists {
    my($execName) = @_;
    unless(-e "$execName") { die "[ERROR] The directory $execName does not exist!\n"; }
    
}

sub mkDir {
    my($dirName) = @_;
    unless(-e "$dirName")  { `mkdir $dirName`; }
}

my @units = ("unit","fifo","register","register_file","memory","testbench");
for(my $i=1;$i<4;++$i){
    foreach my $unit(@units){
        &main($unit,$i);
    }
}

sub main {
    my ($unit,$i) = @_;
    my $test_name = "invalid_prefix_suffix_".$unit.$i."_illegal.csl";
    &createCslFile($test_name, $unit,$i);
}


sub word {
    my $val = $_[0];
    my @alpha = ('a'..'z','A'..'Z','_');
    my @alphanumeric = ('a'..'z','A'..'Z','0'..'9','$','_');
    my $ret = $alpha[rand @alpha];
    for(my $i=1;$i < $val; ++$i){
        $ret = $ret.$alphanumeric[rand @alphanumeric];
    }
    return $ret;
}

sub createCslFile {
    my($test_name, $unit,$i) = @_;
    my $val1 = int(rand(20)) + 1;
    my $val2 = $val1 + int(rand(20)) + 1;
    my $val3 = int(rand(30)) + 1;
    my $val4 = int(rand(50)) + 1;
    my $val5 = int(rand(80)) + 1;
    my $val6 = int(rand(100)) + 1;
    my $val7 = int(rand(10)) + 1;
    my $val8 = int(rand(10)) + 2;
    my $val9 = int(rand(10)) + 2;
    my $word = &word($val5);
    my $word1 = &word($val8);
    my $word2 = &word($val7);
    my $word3 = &word($val6);
    my $word4 = &word($val9);
    my $word5 = &word($val2);
    my $word6 = &word($val1);
    my $word7 = &word($val3);
    &mkDir("$path/prefix_suffix_invalid/");
    open(FH,">$path/prefix_suffix_invalid/$test_name");
    print FH "//Generated by Petronela\n";  
    print FH "//testing cmd. set_prefix, no_prefix and set_suffix in unit, fifo, register, register_file, memory, testbench \n\n";
    if($unit ne "testbench"){
        print FH "csl_$unit a {\n";
        print FH "  a(){\n";
        if($unit ne "unit"){
            print FH "  set_width($val4);\n";
            if($unit ne "register"){
                print FH "  set_depth($val1);\n";
            }
            else{
                print FH "  set_type(register);\n";
            }
        }
        if($i == 1){
            print FH "    set_prefix(\"$word2\");\n";
            print FH "    set_suffix(\"$word4\");\n";
        }
        if($i == 2){
            print FH "    no_prefix();\n";
        }
        if($i == 3){
            print FH "    no_prefix();\n";
            print FH "    set_suffix(\"$word2\);\n";
        }
        print FH "  }\n";
        print FH "};\n\n";
        
    }
    
    
    print FH "csl_unit top {\n";
    if($unit ne "testbench"){
        print FH "  a a0;\n";
        if($i == 2 || $i == 3){
            print FH "  a a1;\n";
        }
        if($i == 3){
            print FH "  a a2;\n";
            print FH "  a a3;\n";
        }
    }
    else {
        print FH "  csl_port in_v(input,1),in_d(input,8);\n";
        print FH "  csl_port out_v(output,1),out_d(output,8);\n";
        print FH "  csl_port clk(input);\n";
    }
    print FH "  top(){\n";
    if($unit ne "testbench"){
        if($i == 1){
            print FH "    a0.no_prefix();\n";
        }
        if($i == 2 || $i == 3){
            print FH "    a0.set_suffix(\"$word5\");\n";
            print FH "    a0.set_prefix(\"$word6\");\n";
            print FH "    a1.set_prefix(\"$word7\");\n";
            print FH "    a1.set_suffix(\"$word3\");\n";
        }
        if($i == 3){
            print FH "    a2.set_suffix(\"$word\");\n";
            print FH "    a3.set_suffix(\"$word7\");\n";
        }
    }
    else {
        print FH "    clk.set_attr(clock);\n";
    }
    print FH "  }\n";
    print FH "};\n\n";
    if($unit eq "testbench"){
        print FH "csl_vector stim{\n";
        print FH "  stim(){\n";
        print FH "    set_unit_name (top);\n";
        print FH "    set_direction (input);\n";
        print FH "  }\n";
        print FH "};\n\n";
        print FH "csl_vector exp{\n";
        print FH "  exp(){\n";
        print FH "    set_unit_name (top);\n";
        print FH "    set_direction (output);\n";
        print FH "  }\n";
        print FH "};\n\n";
        print FH "csl_testbench tb{\n";
        print FH "  csl_signal clk;\n";
        print FH "  top top1;\n";
        print FH "  tb(){\n";
        print FH "    clk.set_attr(clock);\n";
        print FH "    add_logic(clock,clk,10,ps);\n";
        if($i ==1){
            print FH "    set_suffix(\"$word6\");\n";
            print FH "    set_prefix(\"$word4\");\n";
        }
        elsif($i ==2){
            print FH "    no_prefix();\n";
            print FH "    top1.set_prefix(\"$word2\");\n";
        }
        else{
            print FH "    no_prefix();\n";
            print FH "    top1.set_suffix(\"$word5\");\n";  
        }
        print FH "    top1.no_prefix();\n";
        print FH "  }\n";
        print FH "};\n\n";
    }
    close(FH);
}
