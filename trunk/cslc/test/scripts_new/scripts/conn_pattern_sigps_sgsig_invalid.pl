#!/usr/bin/perl

#Author Petronela
use strict;
use Switch;

my $path = "$ENV{WORK}/test/csl_test_gen/";
print "the path for generated tests is : $path"."conn_pattern_sigps_sgsig_invalid/ \n";

if(! defined $ENV{WORK}){
    die "[ERROR] The environment variable WORK is not set. Set it to point to TOT/se";
}

my $totDir     = $ENV{WORK};
&testDirExists($totDir);

sub testDirExists {
    my($execName) = @_;
    unless(-e "$execName") { die "[ERROR] The directory $execName does not exist!\n"; }
    
}

sub mkDir {
    my($dirName) = @_;
    unless(-e "$dirName")  { `mkdir $dirName`; }
}


sub word {
    my $val = $_[0];
    my @alpha = ('a'..'z','A'..'Z');
    my @alphanumeric = ('a'..'z','A'..'Z','0'..'9');
    my $ret = $alpha[rand @alpha]."zz";
    for(my $i=1;$i < $val; ++$i){
        $ret = $ret.$alphanumeric[rand @alphanumeric];
    }
    return $ret;
}

my @lower = (0,3,23);
my @upper = (32,51,64);

for (my $i = 1; $i <= 15; ++$i ) {
    foreach my $l(@lower) {
        foreach my $u(@upper) { 
            &main($i,$l,$u);
        }
    }
}

sub main {
    my ($i,$l, $u) = @_;
    my $test_name = "connect_pattern_sigps_sgsig$i"."_".$l."_".$u."_illegal.csl";
    &createCslFile($test_name,$i, $l, $u);
}

sub createCslFile {
    my($test_name, $i,$l, $u) = @_;
    
    my $w = $u - $l + 1;
    my $val1 = $u + int(rand(100)) + 1;
    my $val2 = $val1 + int(rand(100)) + 1;
    my $val3 = $u + int(rand(60)) +1;
    my $val4 = int(rand(30)) + 1;
    my $val5 = int(rand(30)) + 1;
    my $word = &word($val4);
    my $word1 = &word($val5);
    my $word2 = &word($val4);
    my $word3 = &word($val5);
    my $word4 = &word($val4);
    my $word5 = &word($val4);
    my $word6 = &word($val5);
    my $word7 = &word($val3);
    my $word8 = &word($val5);
    my $word9 = &word($val3);
    my $word10 = &word($val4);
    my $word11 = &word($val5);
    my $word12 = &word($val3);
    my $word13 = &word($val5);
    &mkDir("$path/conn_pattern_sigps_sgsig_invalid");
    open(FH,">$path/conn_pattern_sigps_sgsig_invalid/$test_name");

    print FH "//Generated by Petronela\n";
    print FH "//testing the method connect_by_pattern for connections  signal[part select] to sg.sig, signal to  sg.sig,sg.sig to signal[part select] and sg.sig to signal[part select], sg.sig to sg.sig\n\n";
    
    print FH "csl_bitrange br($val1);\n";
    print FH "csl_bitrange brt($val2);\n";
    print FH "csl_signal_group sga {\n";
    print FH "  csl_signal s_sga($w);\n";
    print FH "  csl_signal s_sa($w);\n";
    print FH "  csl_signal s_sgga(br[$u:$l]);\n";
    print FH "  csl_signal s_siga($w);\n";
    print FH "  csl_signal s_sigga($w);\n";
    print FH "  sga() {\n";
    print FH "  }\n";
    print FH "};\n\n";
    print FH "csl_signal_group sgb {\n";
    print FH "  sga sga0;\n";
    print FH "  csl_signal s_sgb($w);\n";
    print FH "  csl_signal s_sb($w);\n";
    print FH "  csl_signal s_sggb($w);\n";
    print FH "  csl_signal s_sigb($w);\n";
    print FH "  csl_signal s_siggb(brt[$u:$l]);\n";
    print FH "  sgb() {\n";
    print FH "  }\n";
    print FH "};\n\n";
    
    print FH "csl_unit a {\n";
    print FH "  sga sga1;\n";
    print FH "  sgb sgb0;\n";
    if($i <= 5 ) {
        print FH "  csl_signal s_a$i($val1);\n";
        print FH "  csl_signal sa($val1);\n";
    }
    elsif($i > 5 && $i <= 10) {
        print FH "  csl_signal s($val1);\n";
        print FH "  csl_signal s_a$i($val1);\n";
        print FH "  csl_signal sa($val1);\n";
    }
    elsif($i > 10 && $i <= 15) {
        print FH "  csl_signal s_a_br$i(br);\n";
        print FH "  csl_signal sa($val1);\n";
        print FH "  csl_signal s_a$i($val1);\n";
    }
    print FH "  a() {\n";    
    print FH "  }\n";        
    print FH "};\n";        
    print FH "\n";
    print FH "csl_unit b {\n";  
    print FH "  a a0;\n";
    print FH "  a a1;\n";
    print FH "  sga sga1;\n";
    print FH "  sgb sgb0;\n";
    if($i <= 5) {
        print FH "  csl_signal s_b$i($val1);\n";
        print FH "  csl_signal sb($val1);\n";
    }
    elsif($i > 5 && $i <= 10 ) {      
        print FH "  csl_signal s($val1);\n";
        print FH "  csl_signal s_b_br$i(br);\n";
        print FH "  csl_signal s_b$i($val1);\n";
    }
    elsif($i > 10) {      
        print FH "  csl_signal s($val1);\n";
        print FH "  csl_signal sb($val1);\n";
        print FH "  csl_signal s_b_br$i(br);\n";
    }
    print FH "  b() {\n";
    if($i <= 5){
        print FH "    s_b$i.connect_by_pattern(a1.sga1.s_sga);\n";
        print FH "    sgb0.s_sb.connect_by_pattern(a1.s[$u:$l],$word1);\n";
    }
    elsif($i > 5 && $i <= 7) {
        print FH "    s_b_br$i"."[$u:$l].connect_by_pattern(a1.sgb0.s_sggb);\n";
        print FH "    a0.sgb0.s_sigb.connect_by_pattern(s_b$i,$word);\n";
    }
    elsif($i > 7 && $i <=10) {
        print FH "    sgb0.s_sgb$i.connect_by_pattern(a1.sga1.s_sgga$i,$word);\n";
        print FH "    a0.sga1.s_sigga.connect_by_pattern(s_b_br$i);\n";
    }
    elsif($i > 10 && $i <= 15) {
        print FH "    a0.sga1.s_siga.connect_by_pattern(s_b$i,$word);\n";
        print FH "    a1.sga1.s_sigga.connect_by_pattern(s_b$i,$word1);\n";
    }
    print FH "  }\n";        
    print FH "};\n";        
    print FH "\n";
    
    print FH "csl_unit c {\n";  
    print FH "  b b0;\n";
    print FH "  b b1;\n";
    print FH "  a a0;\n";
    print FH "  sga sga1;\n";
    print FH "  sgb sgb0;\n";
    if($i <= 5  ) {
        print FH "  csl_signal s_c$i($val1);\n";
        print FH "  csl_signal s($val1);\n";
        print FH "  csl_signal sc($val1);\n";
    }
    elsif($i > 5 && $i <= 10) {     
        print FH "  csl_signal sc($val1);\n";
        print FH "  csl_signal s_c$i($val1);\n";
        print FH "  csl_signal s_c_br$i(br);\n";
    }
    elsif($i > 10 && $i <= 15) {      
        print FH "  csl_signal s_c$i($val1);\n";
        print FH "  csl_signal s($val1);\n";
        print FH "  csl_signal sc($val1);\n";
    }
    print FH "  c() {\n";
    if($i <= 5){
        print FH "    b0.sga1.s_sa$i.connect_by_pattern(sc,$word2);\n";
        print FH "    sc.connect_by_pattern(b1.sgb0.s_sggb$i,$word3);\n";
    }
    elsif($i > 5 && $i <= 10) {
        print FH "    s_c_br$i.connect_by_pattern(b0.sga1.s_sa,$word2);\n";
        print FH "    a0.sgb0.s_sggb.connect_by_pattern(s_c$i,$word3);\n";
    }
    elsif($i > 10 && $i <= 12) {
        print FH "    sc.connect_by_pattern(a1.sga1.s_sga,$word3);\n";
        print FH "    s_c$i.connect_by_pattern(a0.sgb0.s_sb,$word2);\n";
    }
    elsif($i > 12 && $i <= 15) {
        print FH "    a0.sga1.s_sga.connect_by_pattern(sc,$word2);\n";
    }
    print FH "  }\n";        
    print FH "};\n";        
    print FH "\n";
    
    print FH "csl_unit d {\n";  
    print FH "  a a0;\n";
    print FH "  b b0;\n";
    print FH "  b b1;\n";
    print FH "  c c1;\n";
    print FH "  c c0;\n";; 
    print FH "  sga sga2;\n";
    print FH "  sgb sgb1;\n";
    if($i <= 5 ) {
        print FH "  csl_signal s($val1);\n";
        print FH "  csl_signal s_d$i($val1);\n";
        print FH "  csl_signal sd($val1);\n";
    }
    elsif($i > 5 && $i <= 10  ) {      
        print FH "  csl_signal s_d$i($val1);\n";
        print FH "  csl_signal s_d_br$i($val1);\n";
    }
    elsif($i > 10 && $i <= 15) {      
       print FH "  csl_signal sd($val1);\n";
       print FH "  csl_signal s_d$i($val1);\n";
       print FH "  csl_signal s_d_br$i($val1);\n";
    }
    print FH "  d() {\n";
    if($i <= 2) {
        print FH "    b0.sb[$u:$l].connect_by_pattern(a1.sga1.s_sgga);\n";
        print FH "    sd.connect_by_pattern(a0.sgb0.s_siggb,$word5);\n";
    }
    elsif($i >2 && $i <= 5) {
        print FH "    s_d$i.connect_by_pattern(b0.sga1.s_sgga,$word5);\n";
        print FH "    a0.sga1.s_sga.connect_by_pattern(sd[$u:$l],$word11);\n";
    }
    elsif($i > 5 && $i <= 7) {
        print FH "    s_d$i.connect_by_pattern(c0.sga1.s_sigga,$word4);\n";
        print FH "    c0.sgb0.s_sb.connect_by_pattern(s_d_br$i,$word5);\n";
    }
    elsif($i > 7 && $i <= 10) {
        print FH "    s_d_br$i.connect_by_pattern(a0.sga1.s_sa,$word4);\n";
    }
    elsif($i > 10 && $i <= 15) {
        print FH "    a0.sga1.s_sa.connect_by_pattern(b0.sgb0.s_sgb,$word4);\n";
        print FH "    s_d$i"."[$u-:$l].connect_by_pattern(b0.sgb0.s_sb,$word5);\n";
        print FH "    s_d$i.connect_by_pattern(a0.sga1.s_siga);\n";
    }
    
    print FH "  }\n";        
    print FH "};\n";        
    print FH "\n";
    

    print FH "csl_unit e {\n";  
    print FH "  b b0;\n";
    print FH "  c c0;\n";
    print FH "  c c1;\n";
    print FH "  d d0;\n";
    print FH "  d d1;\n";
    print FH "  sga sga3;\n";
    print FH "  sgb sgb2;\n";
    if($i <= 5) {
        print FH "  csl_signal s($val1);\n";
        print FH "  csl_signal s_e$i($val1);\n";
        print FH "  csl_signal s_e_br(br);\n";
    }
    elsif($i > 5 && $i <= 10) {      
        print FH "  csl_signal s($val1);\n";
        print FH "  csl_signal s_e_br$i(br);\n";
        print FH "  csl_signal se($val1);\n";
    }
    elsif($i > 10 && $i <= 15) {      
        print FH "  csl_signal s_e_br$i(br);\n";
        print FH "  csl_signal se($val1);\n";
    }
    print FH "  e() {\n";
    if($i <= 5) {
        print FH "    s_e_br[$u-:$l].connect_by_pattern(b0.sga1.s_siga,$word6);\n";
        print FH "    b0.a0.sa.connect_by_pattern(sga3.s_sigga,$word10);\n";
    }
    elsif($i > 5 && $i <= 10) {
        print FH "    se[$u:$l].connect_by_pattern(c0.sgb0.s_sgb,$word9);\n";
        print FH "    b0.s_b_br$i.connect_by_pattern(sgb2.s_sigb,$word6);\n";
    }
    elsif($i > 10 && $i <= 15) {
        print FH "    s_e_br$i.connect_by_pattern(b0.sga1.s_sa,$word10);\n";
        print FH "    sga3.s_sga.connect_by_pattern(a0.s_a_br$i,$word9);\n";
    }
    print FH "  }\n";        
    print FH "};\n";        
    print FH "\n";
    
    print FH "csl_unit top {\n";
    print FH "  d d0;\n";
    print FH "  d d1;\n";
    print FH "  e e0;\n";
    print FH "  e e1;\n";
    print FH "  e e2;\n";
    print FH "  sga sga4;\n";
    print FH "  sgb sgb3;\n";
    if($i <= 5) {
        print FH "  csl_signal s_top$i($val1);\n";
        print FH "  csl_signal stop($val1);\n";
    }
    elsif($i > 5 && $i <= 10) {
        print FH "  csl_signal stop($val1);\n";        
        print FH "  csl_signal st($val1);\n";
        print FH "  csl_signal s_top_br$i(br);\n";
    }
    elsif($i > 10 && $i <= 15) {
        print FH "  csl_signal s_top$i($val1);\n";
        print FH "  csl_signal stop($val1);\n";
    }
    print FH "  top(){\n";
    if($i <= 5) {
        print FH "    d0.b0.sigb0.s_sb.connect_by_pattern(sga4.s_sigga,$word8);\n";
        print FH "    s_top$i.connect_by_pattern(d0.sga2.s_sga,$word12);\n";
    }
elsif($i > 5 && $i <= 10) {
        print FH "    e1.sgb2.s_sigb.connect_by_pattern(st,$word7);\n";
        print FH "    s_top_br$i"."[$u-:$l].connect_by_pattern(d1.b0.sgb0.s_siggb,$word12);\n";
    }
    elsif($i > 10 && $i <= 15) {
        print FH "    e1.sgb2.s_sb.connect_by_pattern(s_top$i,$word7);\n";
        print FH "    e0.sgb2.s_siggb.connect_by_pattern(stop[$u:$l],$word12);\n";
    }
    print FH "  }\n";        
    print FH "};\n";        
    print FH "\n";
   
    close(FH);
}
