#!/usr/bin/perl

#Author Petronela
use strict;

my $path = "$ENV{WORK}/test/csl_test_gen/";
print "the path for generated tests is : $path"."conn_pattern_replication_concat_invalid/ \n";

if(! defined $ENV{WORK}){
    die "[ERROR] The environment variable WORK is not set. Set it to point to TOT/se";
}

my $totDir     = $ENV{WORK};
&testDirExists($totDir);

sub testDirExists {
    my($execName) = @_;
    unless(-e "$execName") { die "[ERROR] The directory $execName does not exist!\n"; }
    
}

sub mkDir {
    my($dirName) = @_;
    unless(-e "$dirName")  { `mkdir $dirName`; }
}


sub word {
    my $val = $_[0];
    my @alpha = ('a'..'z','A'..'Z');
    my @alphanumeric = ('a'..'z','A'..'Z','0'..'9');
    my $ret = $alpha[rand @alpha]."zz";
    for(my $i=1;$i < $val; ++$i){
        $ret = $ret.$alphanumeric[rand @alphanumeric];
    }
    return $ret;
}

for (my $i = 1; $i <= 45; ++$i ) {
    &main($i);   
}


sub main {
    my ($i) = $_[0];
    my $test_name = "conn_pattern_replication_concat_$i"."_illegal.csl";
    &createCslFile($test_name,$i);
}

sub createCslFile {
    my($test_name,$i) = @_;
    my $val = 60;
    my $val1 = int(rand($val)) + 1;
    my $val2 = int(rand($val)) + 1;
    my $val3 = $val - $val1;
    my $val4 = $val - $val2;
    my $val5 = int(rand($val/3)) + 1;
    my $val6 = int(rand($val/3)) + 1;
    my $val7 = $val - $val5 - $val6;
    my $val8 = int(rand(50)) + 1;
    my $val9 = int(rand(50)) + 1;
    my $word = &word($val1);
    my $word1 = &word($val2);
    my $word2 = &word($val1);
    my $word3 = &word($val2);
    my $word4 = &word($val3);
    my $word5 = &word($val4);
    my $word6 = &word($val5);
    my $word7 = &word($val3);
    my $word8 = &word($val5);
    my $word9 = &word($val3);
    my $word10 = &word($val4);
    my $word11 = &word($val5);
    my $word12 = &word($val3);
    my $word13 = &word($val5);
    &mkDir("$path/conn_pattern_replication_concat_invalid");
    open(FH,">$path/conn_pattern_replication_concat_invalid/$test_name");
    print FH "//Generated by Petronela\n";
    print FH "//testing the cmd connect_by_pattern for invalid connections concat exp.,replication exp. to replication exp. \n\n";
    print FH "csl_bitrange br($val);\n";
    print FH "csl_bitrange brt($val2);\n";
    
    print FH "csl_unit a {\n";
    if($i <= 15) {
        print FH "  csl_port p_a$i(input,$val1);\n"; 
        print FH "  csl_port pa(input,$val3);\n";
        print FH "  csl_port p_a_br$i(input,brt);\n";
        print FH "  csl_port p(input,$val4);\n";
        print FH "  csl_signal sa($val2);\n";
        print FH "  csl_signal s_a$i($val4);\n";
    }
    elsif($i > 15 && $i <= 30) {
        print FH "  csl_port p_a$i(output,$val6);\n"; 
        print FH "  csl_port pa(input,$val5);\n";
        print FH "  csl_port p(output,$val7);\n";
        print FH "  csl_signal s_a$i($val4);\n";
        print FH "  csl_signal s_a_br$i(brt);\n";
        print FH "  csl_signal sa($val2);\n";
    }
    elsif($i > 30) {
        print FH "  csl_port p_a$i(input,$val1);\n"; 
        print FH "  csl_port p_a_br$i(input,brt);\n";
        print FH "  csl_port pa(input,$val2);\n";
        print FH "  csl_port p(input,$val1);\n";
        print FH "  csl_signal s_a$i($val3);\n";
        print FH "  csl_signal sa($val2);\n";
    }
    print FH "  a() {\n";                
    print FH "  }\n";        
    print FH "};\n";        
    print FH "\n";
    print FH "csl_unit b {\n";  
    print FH "  a a0;\n";
    print FH "  a a1;\n";
    if($i <= 15) {
        print FH "  csl_port p_b$i(input,$val1);\n";
        print FH "  csl_port p(input,$val3);\n";
        print FH "  csl_port pb(input,$val8);\n";
        print FH "  csl_signal s_b_br$i($val5);\n";
        print FH "  csl_signal s_b$i($val7);\n";
        print FH "  csl_signal sb($val6);\n";
    }
    elsif($i > 15 && $i <= 30) {      
        print FH "  csl_port p_b$i(output,$val8);\n";
        print FH "  csl_port pb(output,$val4);\n";
        print FH "  csl_port p_b_br$i(output,brt);\n";
        print FH "  csl_port p(output,$val2);\n";
        print FH "  csl_signal s_b$i($val1);\n";
        
    }
    elsif($i > 30) {      
        print FH "  csl_port p_b$i(output,$val8);\n";
        print FH "  csl_port p_b_br$i(input,brt);\n";
        print FH "  csl_port p(input,$val4);\n";
        print FH "  csl_signal s_b$i($val2);\n";
        print FH "  csl_signal s_b_br$i(br);\n";
        print FH "  csl_signal sb($val3);\n";
    }
    print FH "  b() {\n";
    print FH "  }\n";        
    print FH "};\n";        
    print FH "\n";
    
    print FH "csl_unit c {\n";  
    print FH "  a a0;\n";
    print FH "  b b0;\n";
    print FH "  b b1;\n";
    if($i <= 15) {
        print FH "  csl_port p_c$i(input,$val5);\n";
        print FH "  csl_port pc(input,$val6);\n";
        print FH "  csl_port p_c_br$i(output,brt);\n";
        print FH "  csl_port p(input,$val7);\n";
        print FH "  csl_signal s_c$i($val2);\n";
        print FH "  csl_signal sc($val4);\n";
    }
    elsif($i > 15 && $i <= 30 ) {      
        print FH "  csl_port p_c$i(output,$val2);\n";
        print FH "  csl_port p(output,$val3);\n";
        print FH "  csl_port pc(input,$val1);\n";
        print FH "  csl_signal sc($val3);\n";
        print FH "  csl_signal s_c_br$i(brt);\n";
        print FH "  csl_signal s_c$i($val2);\n";
    }
    elsif($i > 30) {      
        print FH "  csl_port pc(input,$val8);\n";
        print FH "  csl_port p(input,$val4);\n";
        print FH "  csl_port p_c_br$i(input,brt);\n";
        print FH "  csl_signal s_c$i($val1);\n";
        print FH "  csl_signal sc($val3);\n";
    }
    print FH "  c() {\n";
    print FH "  }\n";        
    print FH "};\n";        
    print FH "\n";
    
    print FH "csl_unit d {\n";  
    print FH "  a a0;\n";
    print FH "  c c1;\n";
    print FH "  c c0;\n"; 
    if($i <= 15) {
        print FH "  csl_port p_d$i(input,$val3);\n"; 
        print FH "  csl_port p_d_br$i(input,br);\n";
        print FH "  csl_port p(input,$val8);\n";
        print FH "  csl_signal s_d_br$i($val);\n";
        print FH "  csl_signal s_d$i($val);\n";
    }
    elsif($i > 15 && $i <= 30) {      
        print FH "  csl_port p_d$i(output,$val1);\n";
        print FH "  csl_port p(output,$val3);\n";
        print FH "  csl_port pd(output,$val);\n";
        print FH "  csl_signal s_d$i($val9);\n";
        print FH "  csl_signal s_d_br$i($val6);\n";
        print FH "  csl_signal sd($val5);\n";
    }
    elsif($i > 30) {      
       print FH "  csl_port p_d$i(input,$val1);\n";
       print FH "  csl_port p(input,$val3);\n";
       print FH "  csl_signal s($val2);\n";
       print FH "  csl_signal s_d$i($val7);\n";
       print FH "  csl_signal s_d_br$i($val6);\n";
       print FH "  csl_signal sd($val5);\n";
    }
    print FH "  d() {\n";
    if($i <= 15) {
        print FH "    {5{c0.b1.a0.p_a$i}}.connect_by_pattern({5{b0.a0.p_a$i}},$word);\n";
        print FH "    {p,p_d$i}.connect_by_pattern({3{c0.c0.a1.p,c0.b0.a0.p_a_br$i}},$word1);\n";
        print FH "    {3{c1.b1.a1.p,c1.b1.a1.p_a_br$i}}.connect_by_pattern({4{b0.a0.p_a$i}},$word2);\n";
    }
    elsif($i > 15 && $i <= 30) {
        print FH "    {c1.p_c$i,c1.pc,c1.p}.connect_by_pattern({6{p_d$i}},$word);\n";
        print FH "    {3{c0.b1.a1.pa}}.connect_by_pattern({5{d.p}},$word1);\n";
        print FH "    {s_d_br$i,s_d$i,sd}.connect_by_pattern({2{c1.b1.a0.s_a$i,c1.b1.a0.s_a_br$i}},$word2);\n";
    }
    elsif($i > 30) {
        print FH "    {2{s_d_br$i}}.connect_by_pattern(3{c0.pc},$word);\n";
        print FH "    {c1.cp_c_br$i,c1.p}.connect_by_pattern({2{s_d_br$i}},$word);\n";
    }
    
    print FH "  }\n";        
    print FH "};\n";        
    print FH "\n";
    

    print FH "csl_unit e {\n";  
    print FH "  b b0;\n";
    print FH "  d d0;\n";
    print FH "  d d1;\n";
    if($i <= 15 ) {
        print FH "  csl_port p_e$i(input,$val9);\n"; 
        print FH "  csl_port p_e_br$i(input,brt);\n";   
        print FH "  csl_port p(input,$val4);\n";
        print FH "  csl_signal s_e$i($val6);\n";
        print FH "  csl_signal se($val7);\n";
        print FH "  csl_signal s_e_br$i(br);\n";
        print FH "  csl_signal s($val5);\n";
    }
    elsif($i > 15 && $i <= 30) {      
        print FH "  csl_port p_e$i(output,$val9);\n";    
        print FH "  csl_port p(output,$val4);\n";
        print FH "  csl_port p_e_br$i(output,brt);\n";
        print FH "  csl_signal s_e$i($val8);\n";
        print FH "  csl_signal s_e_br$i($val1);\n";
    }
    elsif($i > 30) {      
        print FH "  csl_port p_e$i(input,$val1);\n";
        print FH "  csl_port p(input,$val8);\n";
        print FH "  csl_port pe(input,$val3);\n";
        print FH "  csl_signal se($val3);\n";
    }
    print FH "  e() {\n";
    if($i <= 15) {
        print FH "    {2{d1.c0.b1.sb}}.connect_by_pattern({2{c0.b0.p_b$i,c0.b0.p}},$word2);\n";
        print FH "    {2{p_b$i,p}}.connect_by_pattern({3{c0.b1.sb}},$word3);\n";
        print FH "    {d1.c1.b1.a1.s_a$i,d1.c1.b1.a1.sa}.connect_by_pattern({2{c0.b0.p_b$i,c0.b0.p}},$word4);\n";
    }
    elsif($i > 15 && $i <= 30) {
        print FH "    {e.b0.p_b_br$i,e.b0.p}.connect_by_pattern({5{c0.b0.a1.s_a$i}},$word2);\n";
        print FH "    {4{d0.c1.b0.a1.s_a$i}}.connect_by_pattern({2{c0.b1.p_b$i}},$word3);\n";
    }
    elsif($i > 30) {
        print FH "    {5{d1.c0.b0.p_b$i}}.connect_by_pattern({6{c0.b0.pb}},$word2);\n";
        print FH "    {d1.c0.b0.p,d1.c0.b0.p_b_br$i}.connect_by_pattern(5{d0.c1.b1.p_b$i}}(,$word3);\n";
    }
    print FH "  }\n";        
    print FH "};\n";        
    print FH "\n";
    
    print FH "csl_unit top {\n";
    print FH "  d d0;\n";
    print FH "  e e0;\n"; 
    print FH "  d d1;\n";
    print FH "  e e1;\n";
    if($i <= 15) {
        print FH "  csl_port ptop(input,$val1);\n";
        print FH "  csl_port p(input,$val2);\n";
        print FH "  csl_signal s_top$i($val1);\n";
        print FH "  csl_signal stop($val2);\n";
    }
    elsif($i > 15 && $i <= 30) {
        print FH "  csl_port p_top$i(output,$val3);\n";      
        print FH "  csl_port p(output,$val9);\n";
        print FH "  csl_port ptop(output,$val1);\n"; 
        print FH "  csl_signal stop($val);\n";
        print FH "  csl_signal s_top$i($val);\n";
    }
    elsif($i > 30) {
        print FH "  csl_port p_top$i(input,$val5);\n";      
        print FH "  csl_port p(input,$val7);\n";
        print FH "  csl_port ptop(input,$val6);\n";
        print FH "  csl_signal s_top$i($val);\n";
        print FH "  csl_signal s_top_br$i(br);\n";
        print FH "  csl_signal stop($val);\n";
    }
    
    print FH "  top(){\n";
    if($i <= 15) {
        print FH "    {e0.b0.s_b$i,e0.b0.sb,e0.b0.s_b_br$i}.connect_by_pattern({2{c0.b0.p_b$i,c0.b0.p}},$word5);\n";
        print FH "    {2{d0.c0.p_c$i,d0.c0.pc,d0.c0.p}}.connect_by_pattern({3{c0.b1.sb}},$word6);\n";
        print FH "    {2{d0.c0.a0.sa}}.connect_by_pattern({5{c0.b1.sb}},$word7);\n";
    }
    elsif($i > 15 && $i <= 30) {
        print FH "    {d0.c0.b0.p_b$i,d0.c0.b0.p_b_br$i}.connect_by_pattern({5{c0.b0.a1.s_a$i}},$word5);\n";
        print FH "    {e0.b0.p_b_br$i,e.b0.p}.connect_by_pattern({2{c0.b1.p_b$i}},$word6);\n";
        print FH "    {4{d1.c0.a0.p_a$i}}.connect_by_pattern({4{c0.b1.p_b$i}},$word7);\n";
    }
    elsif($i > 30) {
        print FH "    {2{e0.p_e$i,pe}}.connect_by_pattern({6{c0.b0.pb},$word5);\n";
        print FH "    {d1.c1.cp_c_br$i,d1.c1.p}.connect_by_pattern({4{d0.c1.b1.p_b$i}},$word6);\n";
        print FH "    {d0.s_d_br$i,d0.s_d$i,sd}.connect_by_pattern({5{d0.c1.b1.p_b$i}},$word7);\n";
    }
    print FH "  }\n";        
    print FH "};\n";        
    print FH "\n";
   
    close(FH);

}
