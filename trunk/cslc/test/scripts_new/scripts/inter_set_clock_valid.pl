#!/usr/bin/perl

#oanab
#method called for a port,signal,ifc,sg, unit

use strict;

if(! defined $ENV{WORK}){
    die "[ERROR] The environment variable WORK is not set. Set it to point to TOT/se";
}

print "Generated tests path : test/csl_test_gen/inter_set_clock_valid/\n";

my $totDir     = $ENV{WORK};
&testDirExists($totDir);

sub testDirExists {
    my($execName) = @_;
    unless(-e "$execName") { die "[ERROR] The directory $execName does not exist!\n"; }
    
}

sub mkDir {
    my($dirName) = @_;
    unless(-e "$dirName")  { `mkdir $dirName`; }
}

foreach(my $i = 1; $i <= 400; $i++) {
    &main($i);
}

sub main {
    my $i = $_[0];
    #my @dir = ("input","output","inout");
    #my $l = int(rand($#dir+1));
    my @sp = ("  csl_port clk(input);","  csl_signal clk(reg);");
    my $test_name = "inter_set_clock".$i."_legal.csl";
   	&createCslFile($test_name, $i, @sp);
}

sub createCslFile {
    my ($test_name, $i, @sp) = @_;
    my $path = "$ENV{WORK}/test/csl_test_gen/";
    my $k = int(rand(20)) + int(rand(20));
    my $zero = 0;
    my $one = 1;
    my $two = 2;
    my $tre = 3;
    my $val1 = int(rand(100))+1;
    my $val2 = int(rand(100))+2;
    my $val3 = int(rand(100))+3;
    if($test_name=~/(_legal)/){
        &mkDir("$path/inter_set_clock_valid");
        open(FH,">$path/inter_set_clock_valid/$test_name");
    }
    elsif($test_name=~/(_illegal)/) {
        &mkDir("$path/inter_set_clock_invalid1"); 
        open(FH,">$path/inter_set_clock_invalid1/$test_name");
    }
    print FH "//Generated by oanab\n\n";

    
#interface ifck
    
    if($i > 75 && $i <= 150 || $i > 175 && $i <= 200 || $i > 225 && $i <= 250) {
	print FH "csl_interface ifc$k {\n";
	print FH "  csl_port p_x$i(input,$val2);\n";
	print FH "  csl_port p_y$i(output,$val1);\n";
	print FH "  csl_port p_z$i(input,$val3);\n";
	if($i > 100 && $i <= 125) {
	    print FH "  csl_port p_w$i(inout,$val2);\n";
	}
	print FH "  ifc$k () {}\n";
	print FH "};\n\n";
    }

#interface ifcm
    if($i > 300 && $i <= 400) {
	print FH "csl_interface ifc".($k+12)." {\n";
	print FH "  csl_port p_a$i(input,".($val2+3).");\n";
	print FH "  csl_port p_b$i(output,$val1);\n";
	print FH "  csl_port p_c$i(input,".($val3+7).");\n";
	print FH "  ifc".($k+12)." () {}\n";
	print FH "};\n\n";
    }

#interface ifcn
    if($i > 350 && $i <= 400) {
	print FH "csl_interface ifc".($k+16)." {\n";
	print FH "  csl_port p_$i(inout,".($val1+1).");\n";
	print FH "  ifc".($k+12)." ifc".($k+12)."\_$zero;\n";
	print FH "  ifc".($k+16)." () {}\n";
	print FH "};\n\n";
    }

#signal group sgk
    if($i > 150 && $i <= 200 || $i > 250 && $i <= 350) {
	print FH "csl_signal_group sg$k {\n";
	print FH "  csl_signal s_x$i($val2);\n";
	print FH "  csl_signal s_y$i(".($val1+3).");\n";
	if($i > 175) {
	    print FH "  csl_signal s_z$i($val3);\n";
	    print FH "  csl_signal s_w$i(".($val2+7).");\n";
	}
	print FH "  sg$k () {}\n";
	print FH "};\n\n";
    }

#signal group sgm
    if($i > 350 && $i <= 400) {
	print FH "csl_signal_group sg".($k+4)." {\n";
	print FH "  csl_signal s_a$i($val2);\n";
	print FH "  csl_signal s_b$i($val1);\n";
	print FH "  csl_signal s_c$i($val3);\n";
	print FH "  csl_signal s_d$i(".($val2+1).");\n";
	print FH "  sg".($k+4)." () {}\n";
	print FH "};\n\n";
    }

#unit a

    print FH "csl_unit a$k {\n";
    print FH $sp[int rand($#sp+1)];
    print FH "\n";
    if($i <= 25) {
	print FH "  csl_port p_a$i(input,$val2);\n";
	print FH "  csl_port p_b$i(input,$val1);\n";
	print FH "  csl_signal s($val1);\n";
    }
    elsif($i > 25 && $i <= 50) {
	print FH "  csl_port p_$i(input,$val2);\n";
	print FH "  csl_signal s_$i($val3);\n";
	print FH "  csl_port p_clk(input);\n";
    }
    elsif($i > 50 && $i <= 75) {
	print FH "  csl_signal s_a$i($val1);\n";
	print FH "  csl_signal s_b$i($val2);\n";
    }
    elsif($i > 75 && $i <= 100) {
	print FH "  csl_port p_$i(input,$val2);\n";
	print FH "  ifc$k ifc$k\_$zero;\n";
	print FH "  csl_signal s;\n";
    }
    elsif($i > 100 && $i <= 125) {
	print FH "  csl_port p_$i(input,$val2);\n";
	print FH "  csl_signal s_$i($val3);\n";
	print FH "  ifc$k ifc$k\_$one;\n";
	print FH "  csl_port p_clk(input);\n";
    } 
    elsif($i > 125 && $i <= 150) {
	print FH "  ifc$k ifc$k\_$two;\n";
	print FH "  ifc$k ifc$k\_$tre;\n";
	print FH "  csl_signal s;\n";
    }
    elsif($i > 150 && $i <= 175) {
	print FH "  csl_signal s_a$i($val1);\n";
    }
    elsif($i > 175 && $i <= 200) {
	print FH "  sg$k sg$k\_$one;\n";
	print FH "  ifc$k ifc$k\_$one;\n";
    }
    elsif($i > 200 && $i <= 225) {
	print FH "  csl_signal s_$i($val3);\n";
    }
    elsif($i > 225 && $i <= 250) {
	print FH "  ifc$k ifc$k\_$zero;\n";
	print FH "  csl_signal s;\n";
    }
    elsif($i > 250 && $i <= 300) {
	print FH "  sg$k sg$k\_$two;\n";
    }
    elsif($i > 300 && $i <= 350) {
	print FH "  ifc".($k+12)." ifc".($k+12)."\_$zero;\n";
	print FH "  csl_signal s;\n";
    }
    elsif($i > 350 && $i <= 400) {
	print FH "  sg".($k+4)." sg".($k+4)."\_$zero;\n";
	print FH "  ifc".($k+16)." ifc".($k+16)."\_$one;\n";
    }
    print FH "  a$k () {\n";
    print FH "    clk.set_attr(clock);\n";
    if($i <= 25) {
	print FH "    p_a$i.set_clock(clk);\n";
	print FH "    p_b$i.set_clock(clk);\n";
	print FH "    s\[".($val1-1)."\] = clk;\n";
    }
    elsif($i > 25 && $i <= 50) {
	print FH "    p_clk.set_attr(clock);\n";
	print FH "    p_$i.set_clock(clk);\n";
	print FH "    s_$i.set_clock(p_clk);\n";
	print FH "    s_$i\[".($val3-1)."\] = clk;\n"
    }
    elsif($i > 50 && $i <= 75) {
	print FH "    s_a$i.set_clock(clk);\n";
	print FH "    s_b$i.set_clock(clk);\n";
	print FH "    s_b$i\[".($val2-1)."\-\:".(2)."\] = {s_a$i\[".($val1-1)."\],clk};\n";

    }
    elsif($i > 75 && $i <= 100) {
	print FH "    p_$i.set_clock(clk);\n";
	print FH "    ifc$k\_$zero.set_clock(clk);\n";
	print FH "    s = clk;\n";
    }
    elsif($i > 100 && $i <= 125) {
	print FH "    p_clk.set_attr(clock);\n";
	print FH "    s_$i.set_clock(clk);\n";
	print FH "    ifc$k\_$one.set_clock(clk);\n";
	print FH "    s_$i\[".($val3-1)."\] = clk;\n"
    }
    elsif($i > 125 && $i <= 150) {
	print FH "    ifc$k\_$two.set_clock(clk);\n";
	print FH "    ifc$k\_$tre.set_clock(clk);\n";
	print FH "    s = clk;\n";
    }
    elsif($i > 150 && $i <= 175) {
	print FH "    s_a$i.set_clock(clk);\n";
	print FH "    s_a$i\[".($val1-1)."\] = clk;\n"
    }
    elsif($i > 175 && $i <= 200) {
	print FH "    sg$k\_$one.set_clock(clk);\n";
	print FH "    {sg$k\_$one.s_x$i,sg$k\_$one.s_y$i\[".($val1+1)."\]} = {sg$k\_$one.s_z$i\[".($val3-1)."\],sg$k\_$one.s_w$i\[".($val2+4)."\-\:".($val2)."\]};\n";
	print FH "    sg$k\_$one.s_x$i\[".($val2-1)."\-\:".(1)."\] = clk;\n";
    }
    elsif($i > 200 && $i <= 225) {
	print FH "    s_$i.set_clock(clk);\n";
	print FH "    s_$i\[".($val3-1)."\] = clk;\n"
    }
    elsif($i > 225 && $i <= 250) {
	print FH "    ifc$k\_$zero.set_clock(clk);\n";
	print FH "    s = clk;\n";
    }
    elsif($i > 250 && $i <= 300) {
	print FH "    sg$k\_$two.set_clock(clk);\n";
	print FH "    {sg$k\_$two.s_x$i,sg$k\_$two.s_y$i\[".($val1+1)."\]} = {sg$k\_$two.s_z$i\[".($val3-1)."\],sg$k\_$two.s_w$i\[".($val2+4)."\-\:".($val2)."\]};\n";
	print FH "    sg$k\_$two.s_x$i\[".($val2-1)."\:".($val2-1)."\] = clk;\n";
    }
    elsif($i > 300 && $i <= 350) {
	print FH "    ifc".($k+12)."\_$zero.p_b$i.set_clock(clk);\n";
	print FH "    s = clk;\n";
    }
    elsif($i > 350 && $i <= 400) {
	print FH "    sg".($k+4)."\_$zero.s_c$i.set_clock(clk);\n";
	print FH "    {sg".($k+4)."\_$zero.s_a$i,sg".($k+4)."\_$zero.s_b$i\[".($val1-1)."\]} = {sg".($k+4)."\_$zero.s_c$i\[".($val3-1)."\-\:".(1)."\],sg".($k+4)."\_$zero.s_d$i\[".($val2)."\-\:".($val2)."\]};\n";
	print FH "    sg".($k+4)."\_$zero.s_b$i\[".($val1-1)."\-\:".(1)."\] = clk;\n";
    }
    print FH "  }\n";
    print FH "};\n\n";


# unit b
    print FH "csl_unit b$k {\n";
    print FH $sp[int rand($#sp+1)];
    print FH "\n";
    if($i <= 25) {
	print FH "  csl_port p_x$i(input,$val2);\n";
	print FH "  csl_signal s($val1);\n";
	print FH "  a$k a$k\_$zero(.p_a$i(p_x$i),.p_b$i(s));\n";
    }
    if($i > 25 && $i <= 50) {
	print FH "  a$k a$k\_$zero(.p_$i(s_$i),.p_clk(p_$i\[".($val1-1)."\]));\n";
	print FH "  csl_port p_$i(input,$val1);\n";
	print FH "  csl_signal s_$i($val2);\n";
    }
    elsif($i > 50 && $i <= 75) {
	print FH "  a$k a$k\_$zero;\n";
	print FH "  csl_signal s;\n";
    }
    elsif($i > 75 && $i <= 100) {
	print FH "  a$k a$k\_$zero(.ifc$k\_$zero(ifc$k\_$one),.p_$i(ifc$k\_$one.p_x$i));\n";
	print FH "  ifc$k ifc$k\_$one;\n";
	print FH "  csl_signal s;\n";
    }
    elsif($i > 100 && $i <= 125) {
	print FH "  a$k a$k\_$zero(.p_$i(s_$i),.p_clk(p_$i\[".($val1-1)."\]),.ifc$k\_$one(ifc$k\_$two));\n";
	print FH "  ifc$k ifc$k\_$two;\n";
	print FH "  csl_port p_$i(input,$val1);\n";
	print FH "  csl_signal s_$i($val2);\n";
    }
    elsif($i > 125 && $i <= 150) {
	print FH "  a$k a$k\_$zero(.ifc$k\_$two(ifc$k\_$one),.ifc$k\_$tre(ifc$k\_$one));\n";
	print FH "  ifc$k ifc$k\_$one;\n";
	print FH "  csl_signal s;\n";
    }
    elsif($i > 150 && $i <= 175) {
	print FH "  a$k a$k\_$zero;\n";
	print FH "  csl_port p_b$i(input,$val1);\n";
	print FH "  sg$k sg$k\_$zero;\n";
    }
    elsif($i > 175 && $i <= 200) {
	print FH "  a$k a$k\_$zero(.ifc$k\_$one(ifc$k\_$one));\n";
	print FH "  csl_signal s;\n";
	print FH "  ifc$k ifc$k\_$one;\n";
    }
    elsif($i > 200 && $i <= 225) {
	print FH "  a$k a$k\_$zero;\n";
	print FH "  csl_signal s;\n";
    }
    elsif($i > 225 && $i <= 250) {
	print FH "  a$k a$k\_$zero(.ifc$k\_$zero(ifc$k\_$one));\n";
	print FH "  a$k a$k\_$one(.ifc$k\_$zero(ifc$k\_$one));\n";
	print FH "  ifc$k ifc$k\_$one;\n";
	print FH "  csl_signal s;\n";
    }
    elsif($i > 250 && $i <= 300) {
	print FH "  a$k a$k\_$zero;\n";
	print FH "  sg$k sg$k\_$tre;\n";
    }
    elsif($i > 300 && $i <= 350) {
	print FH "  a$k a$k\_$zero(.ifc".($k+12)."\_$zero(ifc".($k+12)."\_$one));\n";
	print FH "  ifc".($k+12)." ifc".($k+12)."\_$one;\n";
	print FH "  sg$k sg$k\_$zero;\n";
    }
    elsif($i > 350 && $i <= 400) {
	print FH "  a$k a$k\_$zero(.ifc".($k+16)."\_$one(ifc".($k+16)."\_$zero));\n";
	print FH "  ifc".($k+16)." ifc".($k+16)."\_$zero;\n";
	print FH "  csl_signal s;\n";
    }
    print FH "  b$k () {\n";
    print FH "    clk.set_attr(clock);\n";
    if($i <= 25) {
	print FH "    s\[".($val1-1)."\] = clk;\n";
    }
    if($i > 25 && $i <= 50 || $i > 100 && $i <= 125) {
	print FH "    p_$i.set_clock(clk);\n";
	print FH "    s_$i\[".($val2-1)."\:".($val2-1)."\] = clk;\n";
    }
    elsif($i > 50 && $i <= 100) {
	print FH "    s = clk;\n";
    }
    elsif($i > 125 && $i <= 150) {
	print FH "    s = clk;\n";
    }
    elsif($i > 150 && $i <= 175) {
	print FH "    p_b$i.set_clock(clk);\n";
	print FH "    sg$k\_$zero.set_clock(clk);\n";
	print FH "    {sg$k\_$zero.s_x$i\[".($val2-1)."\],sg$k\_$zero.s_y$i\[".($val1+2)."\-\:".($val1-1)."\]} = p_b$i;\n";
	print FH "    sg$k\_$zero.s_x$i\[".($val2-1)."\:".($val2-1)."\] = clk;\n";
    }
    elsif($i > 175 && $i <= 200) {
	print FH "    ifc$k\_$one.set_clock(clk);\n";
	print FH "    s = clk;\n";
    }
    elsif($i > 200 && $i <= 250) {
	print FH "    set_clock(clk);\n";
	print FH "    s = clk;\n";
    }
    elsif($i > 250 && $i <= 300) {
	print FH "    set_clock(clk);\n";
	print FH "    {sg$k\_$tre.s_x$i,sg$k\_$tre.s_y$i\[".($val1)."\]} = {sg$k\_$tre.s_z$i\[".($val3-1)."\:".($val3-1)."\],sg$k\_$tre.s_w$i\[".($val2+4)."\-\:".($val2)."\]};\n";
	print FH "    sg$k\_$tre.s_y$i\[".($val1-1)."\] = clk;\n";
    }
    elsif($i > 300 && $i <= 350) {
	print FH "    sg$k\_$zero.set_clock(clk);\n";
	print FH "    {sg$k\_$zero.s_x$i,sg$k\_$zero.s_y$i\[".($val1)."\]} = {sg$k\_$zero.s_z$i\[".($val3-1)."\:".($val3-1)."\],sg$k\_$zero.s_w$i\[".($val2+4)."\-\:".($val2)."\]};\n";
	print FH "    sg$k\_$zero.s_x$i\[".($val2-1)."\] = clk;\n";
    }
    elsif($i > 350 && $i <= 400) {
	print FH "    ifc".($k+16)."\_$zero.ifc".($k+12)."\_$zero.p_b$i.set_clock(clk);\n"; 
   	print FH "    s = clk;\n";
    }
    print FH "  }\n";
    print FH "};\n";





}
