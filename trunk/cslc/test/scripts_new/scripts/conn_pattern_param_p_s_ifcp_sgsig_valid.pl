#!/usr/bin/perl

#Author Petronela
use strict;
use Switch;

my $path = "$ENV{WORK}/test/csl_test_gen/";
print "the path for the generated tests is : $path"."conn_pattern_param_p_s_ifcp_sgsig_valid/ \n";

if(! defined $ENV{WORK}){
    die "[ERROR] The environment variable WORK is not set. Set it to point to TOT/se";
}

my $totDir     = $ENV{WORK};
&testDirExists($totDir);

sub testDirExists {
    my($execName) = @_;
    unless(-e "$execName") { die "[ERROR] The directory $execName does not exist!\n"; }
    
}

sub mkDir {
    my($dirName) = @_;
    unless(-e "$dirName")  { `mkdir $dirName`; }
}


sub word {
    my $val = $_[0];
    my @alpha = ('a'..'z','A'..'Z');
    my @alphanumeric = ('a'..'z','A'..'Z','0'..'9');
    my $ret = $alpha[rand @alpha]."zz";
    for(my $i=1;$i < $val; ++$i){
        $ret = $ret.$alphanumeric[rand @alphanumeric];
    }
    return $ret;
}

my @lower = (3,9,23);
my @upper = (32,51,64);

foreach(my $i = 1; $i <= 15; $i++) {
    my @map1  = ("p_a$i","pa");
    my @map11 = ("p_ifca$i","p_ifa");
    my @map12 = ("p_ifcb$i","p_if");
    my @map2  = ("p","p_b$i");
    my @map21 = ("p_ifca$i","p_ifa");
    my @map22 = ("p_ifcb$i","p_ifb");
    my @map3  = ("pc","p_c_br$i");
    my @map31 = ("p_if","p_ifta$i");
    my @map32 = ("p_ifcb$i","p_ifb");
    my @map4  = ("p_d$i","p"); 
    my @map5  = ("p_e$i","pe");
    my @map6  = ("p_top$i","p_top_br$i");
    foreach my $l(@lower) {
        foreach my $u(@upper) { 
            if($i <= 5 ) {  
                foreach my $it1 (@map1) {
                    if($i <= 2 ) {
                        foreach my $it2 (@map11) {
                            &main($i,$l,$u,$it1,$it2);
                        }
                    }   
                    else {
                        foreach my $it3(@map12) { 
                            &main($i,$l,$u,$it1,$it3);
                        }
                    }
                }
            }
            elsif($i > 5 && $i <= 10) {
                foreach my $it1 (@map2) {
                    if($i > 5 && $i <= 7) {
                        foreach my $it2(@map21) {
                            &main($i,$l,$u,$it1,$it2);
                        }
                    }
                    else {
                        foreach my $it3(@map22) {
                            &main($i,$l,$u,$it1,$it3);
                        }
                    }
                }       
            }
            elsif($i > 10 && $i <= 15) {
                foreach my $it1 (@map3) {
                    if($i > 10 && $i <= 12) {
                        foreach my $it2(@map31) {
                            &main($i,$l,$u,$it1,$it2);
                        }
                    }
                    else {
                        foreach my $it3(@map32) {
                            &main($i,$l,$u,$it1,$it3);
                        }
                    }
                }       
            }
        }
    }
}

sub main {
    my ($i,$l,$u,$it1,$it2) = @_;
    my $test_name = "connect_pattern_param_p_s_ifcp_sgsig".$i."_".$l."_".$u."_".$it1."_".$it2."_legal.csl";
    &createCslFile($test_name, $i,$l,$u,$it1,$it2);
}
sub createCslFile {
    my($test_name, $i,$l,$u,$it1,$it2) = @_;
    my $w = $u - $l + 1;
    my $val1 = $u + int(rand(50)) + 1;
    my $val2 = $val1 + int(rand(50)) + 1;
    my $val3 = $u + int(rand(60)) +1;
    my $val4 = int(rand(30)) + 1;
    my $val5 = int(rand(30)) + 1;
    my $word = &word($val3);
    my $word1 = &word($val3);
    my $word2 = &word($val3);
    my $word3 = &word($val3);
    my $word4 = &word($val3);
    my $word5 = &word($val4);
    my $word6 = &word($val5);
    my $word7 = &word($val3);
    my $word8 = &word($val5);
    my $word9 = &word($val3);
    my $word10 = &word($val4);
    my $word11 = &word($val5);
    my $word12 = &word($val3);
    my $word13 = &word($val5);
    &mkDir("$path/conn_pattern_param_p_s_ifcp_sgsig_valid");
    open(FH,">$path/conn_pattern_param_p_s_ifcp_sgsig_valid/$test_name");
    
    print FH "//Generated by Petronela\n";
    print FH "//testing the method connect_by_pattern with parametru for conections port to ifc.p[ps], signal to ifc.p[ps], ifc.p[ps] to port ,ifc.p[ps] to signal, port to signal_group.sig[ps], sg.sig[ps] to port\n\n";
    print FH "csl_bitrange br($val1);\n";
    print FH "csl_bitrange brt($val2);\n";
    print FH "csl_interface ifca {\n";
    if($i <= 5 ) {
        print FH "  csl_parameter ifca_x($val1);\n";
        print FH "  csl_parameter ifca_y($val1);\n";
        print FH "  csl_parameter ifca_u($u);\n";
        print FH "  csl_parameter ifca_l($l);\n";
        print FH "  csl_port p_ifca$i(input,ifca_x);\n";
        print FH "  csl_port p_ifa(input,ifca_y);\n";
    }
    elsif($i > 5 && $i <= 10) {
        print FH "  csl_parameter ifca_x($val1);\n";
        print FH "  csl_parameter ifca_y($val1);\n";
        print FH "  csl_parameter ifca_z($val1);\n";
        print FH "  csl_parameter ifca_u($u);\n";
        print FH "  csl_parameter ifca_l($l);\n";
        print FH "  csl_port p_ifca$i(output,$val1);\n";
        print FH "  csl_port p_ifa(output,ifca_y);\n";
        print FH "  csl_port p_if(output,ifca_z);\n";
    }
    elsif($i > 10 ) { 
        print FH "  csl_parameter ifca_x($val1);\n";
        print FH "  csl_parameter ifca_y($val1);\n";
        print FH "  csl_parameter ifca_z($val1);\n";
        print FH "  csl_parameter ifca_u($u);\n";
        print FH "  csl_parameter ifca_l($l);\n";
        print FH "  csl_port p_ifca$i(input,ifca_x);\n";
        print FH "  csl_port p_ifa(input,$val1);\n";
        print FH "  csl_port p_if(input,$val1);\n";
        print FH "  csl_port p_ifta$i(input,ifca_x);\n";
    }
    print FH "  ifca() {\n";
    print FH "  }\n";        
    print FH "};\n";        
    print FH "\n";

    print FH "csl_interface ifcb {\n";
    print FH "  ifca ifca0;\n";
    if($i <= 5) {
        print FH "  csl_parameter ifcb_x($val1);\n";
        print FH "  csl_parameter ifcb_y($val1);\n";
        print FH "  csl_parameter ifcb_z($val1);\n";
        print FH "  csl_parameter ifcb_u($u);\n";
        print FH "  csl_parameter ifcb_l($l);\n";
        print FH "  csl_port p_ifcb$i(input,$val1);\n";
        print FH "  csl_port p_ifb(input,$val1);\n";
        print FH "  csl_port p_if(input,ifcb_z);\n";
    }
    elsif($i > 5 && $i <= 10) {
        print FH "  csl_parameter ifcb_x($val1);\n";
        print FH "  csl_parameter ifcb_y($val1);\n";
        print FH "  csl_parameter ifcb_u($u);\n";
        print FH "  csl_parameter ifcb_l($l);\n";
        print FH "  csl_port p_ifcb$i(output,ifcb_x);\n";
        print FH "  csl_port p_ifb(output,$val1);\n";
        
    }
    elsif($i > 10) {  
        print FH "  csl_parameter ifcb_x($val1);\n";
        print FH "  csl_parameter ifcb_y($val1);\n";
        print FH "  csl_parameter ifcb_z($val1);\n";
        print FH "  csl_parameter ifcb_u($u);\n";
        print FH "  csl_parameter ifcb_l($l);\n";
        print FH "  csl_port p_ifcb$i(input,ifcb_x);\n";
        print FH "  csl_port p_ifb(input,ifcb_y);\n";
        print FH "  csl_port p_if(input,ifcb_z);\n";
        print FH "  csl_port p_iftb$i(input,ifcb_y);\n";
        print FH "  csl_port p_b(input,ifcb_x);\n";
    }
    print FH "  ifcb() {\n";
    print FH "  }\n";        
    print FH "};\n";        
    print FH "\n";
   
    print FH "csl_signal_group sga {\n";
    print FH "  csl_parameter sga_x($val1);\n";
    print FH "  csl_parameter sga_y($val1);\n";
    print FH "  csl_parameter sga_z($val1);\n";
    print FH "  csl_parameter sga_t($val1);\n";
    print FH "  csl_parameter sga_u($u);\n";
    print FH "  csl_parameter sga_l($l);\n";
    print FH "  csl_signal s_sga(sga_x);\n";
    print FH "  csl_signal s_sa($val1);\n";
    print FH "  csl_signal s_sgga(sga_z);\n";
    print FH "  csl_signal s_siga($val1);\n";
    print FH "  csl_signal s_sigga(sga_y);\n";
    print FH "  sga() {\n";
    print FH "  }\n";
    print FH "};\n\n";
    print FH "csl_signal_group sgb {\n";
    print FH "  sga sga0;\n";
    print FH "  csl_parameter sgb_x($val1);\n";
    print FH "  csl_parameter sgb_y($val1);\n";
    print FH "  csl_parameter sgb_z($val1);\n";
    print FH "  csl_parameter sgb_t($val1);\n";
    print FH "  csl_parameter sgb_u($u);\n";
    print FH "  csl_parameter sgb_l($l);\n";
    print FH "  csl_signal s_sgb($val1);\n";
    print FH "  csl_signal s_sb($val1);\n";
    print FH "  csl_signal s_sggb(sgb_z);\n";
    print FH "  csl_signal s_sigb($val1);\n";
    print FH "  csl_signal s_siggb(sgb_z);\n";
    print FH "  sgb() {\n";
    print FH "  }\n";
    print FH "};\n\n";

    
    print FH "csl_unit a {\n";
    print FH "  ifca ifca1;\n";
    print FH "  ifcb ifcb0;\n";
    print FH "  sga sga1;\n";
    print FH "  sgb sgb0;\n";
    if($i <= 5  || ($i > 25 && $i <= 30)) {
        print FH "  csl_parameter a_x($w);\n";
        print FH "  csl_parameter a_y($w);\n";
        print FH "  csl_parameter a_z($w);\n";
        print FH "  csl_parameter a_t($w);\n";
        print FH "  csl_port p_a$i(input,a_x);\n"; 
        print FH "  csl_port pa(input,a_y);\n";
        print FH "  csl_port p(input,$w);\n";
        print FH "  csl_signal s_a$i(a_t);\n";
        print FH "  csl_signal sa(a_x);\n";
    }
    elsif($i > 5 && $i <= 10) {
        print FH "  csl_parameter a_x($w);\n";
        print FH "  csl_parameter a_y($w);\n";
        print FH "  csl_parameter a_z($w);\n";
        print FH "  csl_parameter a_t($w);\n";
        print FH "  csl_port p_a$i(output,a_x);\n"; 
        print FH "  csl_port pa(output,a_y);\n";
        print FH "  csl_port p(output,a_z);\n";
        print FH "  csl_signal s_a$i(a_t);\n";
        print FH "  csl_signal sa(a_y);\n";
    }
    elsif($i > 10 && $i <= 15) {
        print FH "  csl_parameter a_x($w);\n";
        print FH "  csl_parameter a_y($w);\n";
        print FH "  csl_parameter a_z($w);\n";
        print FH "  csl_parameter a_t($w);\n";
        print FH "  csl_port p_a$i(input,a_t);\n"; 
        print FH "  csl_port p_a_br$i(input,br);\n";
        print FH "  csl_port pa(input,a_z);\n";
        print FH "  csl_port p(input,a_y);\n";
        print FH "  csl_signal s_a$i(a_x);\n";
    }
    print FH "  a() {\n";    
    print FH "  }\n";        
    print FH "};\n";        
    print FH "\n";
    print FH "csl_unit b {\n";  
    print FH "  a a0;\n";
    print FH "  a a1;\n";
    print FH "  ifca ifca1;\n";
    print FH "  ifcb ifcb0;\n";
    print FH "  sga sga1;\n";
    print FH "  sgb sgb0;\n";
    if($i <= 5) {
        print FH "  csl_parameter b_x($w);\n";
        print FH "  csl_parameter b_y($w);\n";
        print FH "  csl_parameter b_z($w);\n";
        print FH "  csl_parameter b_t($w);\n";
        print FH "  csl_port p_b$i(input,b_y);\n";
        print FH "  csl_port p(input,b_x);\n";
        print FH "  csl_signal s_b$i(b_t);\n";
        print FH "  csl_signal sb(x_x);\n";
    }
    elsif($i > 5 && $i <= 10 ) {     
        print FH "  csl_parameter b_x($w);\n";
        print FH "  csl_parameter b_y($w);\n";
        print FH "  csl_parameter b_z($w);\n";
        print FH "  csl_parameter b_t($w);\n";
        print FH "  csl_port p_b$i(output,b_x);\n";
        print FH "  csl_port pb(output,b_z);\n";
        print FH "  csl_port p_b_br$i(output,br);\n";
        print FH "  csl_port p(output,b_t);\n";
        print FH "  csl_signal s_b_br$i(br);\n";
        print FH "  csl_signal s_b$i(b_y);\n";
    }
    elsif($i > 10) {      
        print FH "  csl_parameter b_x($w);\n";
        print FH "  csl_parameter b_y($w);\n";
        print FH "  csl_parameter b_z($w);\n";
        print FH "  csl_parameter b_t($w);\n";
        print FH "  csl_port p_b$i(input,$w);\n";
        print FH "  csl_port p_b_br$i(input,br);\n";
        print FH "  csl_port p(input,b_x);\n";
        print FH "  csl_signal sb($val1);\n";
        print FH "  csl_signal s_b_br$i(b_t);\n";
    }
    print FH "  b() {\n";
    if($i <= 5){
        print FH "    ifcb0.p_ifb[$u:$l].connect_by_pattern(a0.p,$word);\n";
        print FH "    s_b$i"."[$u:$l].connect_by_pattern(a1.ifca1.p_ifa[$u:$l]);\n";
        print FH "    sgb0.s_sb[sgb_u:sgb_l].connect_by_pattern(a1.p,$word1);\n";
    }
    elsif($i > 5 && $i <= 7) {
        print FH "    $it1.connect_by_pattern(a0.ifca1.p_ifa[$u:$l],$word1);\n";
        print FH "    s_b_br$i.connect_by_pattern(a1.ifcb0.p_ifcb$i"."[$u:$l]);\n";
        print FH "    a0.ifcb0.p_ifb[ifcb_u:ifcb_l].connect_by_pattern(s_b$i,$word);\n";
    }
    elsif($i > 7 && $i <=10) {
        print FH "    $it1.connect_by_pattern(a1.ifcb0.p_ifb[$u:$l],$word1);\n";
        print FH "    s_b$i.connect_by_pattern(a1.ifca1.p_ifca$i"."[$u:$l],$word);\n";
        print FH "    a0.ifca1.p_ifa[ifca_u:ifca_l].connect_by_pattern(s_b_br$i);\n";
    }
    elsif($i > 10 && $i <= 15) {
        print FH "    a0.ifca1.p_ifta$i"."[$u:$l].connect_by_pattern(p_b$i,$word);\n";
        print FH "    a1.sga1.s_sigga[sga_u:sga_l].connect_by_pattern(p_b$i,$word1);\n";
    }
    print FH "  }\n";        
    print FH "};\n";        
    print FH "\n";
    
    print FH "csl_unit c {\n";  
    print FH "  b b0;\n";
    print FH "  b b1;\n";
    print FH "  a a0;\n";
    print FH "  ifca ifca1;\n";
    print FH "  ifcb ifcb0;\n";
    print FH "  sga sga1;\n";
    print FH "  sgb sgb0;\n";
    if($i <= 5 ) {
        print FH "  csl_parameter c_x($w);\n";
        print FH "  csl_parameter c_y($w);\n";
        print FH "  csl_parameter c_z($w);\n";
        print FH "  csl_parameter c_t($w);\n";
        print FH "  csl_port p_c$i(input,c_t);\n";
        print FH "  csl_port pc(input,c_y);\n";
        print FH "  csl_port p_c_br$i(input,br);\n";
        print FH "  csl_port p(input,c_y);\n";
        print FH "  csl_signal sc(c_x);\n";
    }
    elsif($i > 5 && $i <= 10) {      
        print FH "  csl_parameter c_x($w);\n";
        print FH "  csl_parameter c_y($w);\n";
        print FH "  csl_parameter c_z($w);\n";
        print FH "  csl_parameter c_t($w);\n";
        print FH "  csl_port p_c$i(output,c_x);\n";
        print FH "  csl_port p(output,c_t);\n";
        print FH "  csl_signal sc(c_y);\n";
        print FH "  csl_signal s_c$i(c_z);\n";
        print FH "  csl_signal s_c_br$i(br);\n";
    }
    elsif($i > 10 && $i <= 15) {      
        print FH "  csl_parameter c_x($w);\n";
        print FH "  csl_parameter c_y($w);\n";
        print FH "  csl_parameter c_z($w);\n";
        print FH "  csl_parameter c_t($w);\n";
        print FH "  csl_port pc(input,c_z);\n";
        print FH "  csl_port p(input,c_t);\n";
        print FH "  csl_port p_c_br$i(input,br);\n";
        print FH "  csl_signal s_c$i(c_x);\n";
        print FH "  csl_signal s(c_y);\n";
        print FH "  csl_signal sc($w);\n";
    }
    print FH "  c() {\n";
    if($i <= 5){
        print FH "    b0.ifca1.p_ifca$i"."[$u:$l].connect_by_pattern(pc,$word2);\n";
        print FH "    sc.connect_by_pattern(b1.ifcb0.p_ifcb$i"."[ifcb_u:ifcb_l],$word3);\n";
    }
    elsif($i > 5 && $i <= 10) {
        print FH "    s_c_br$i.connect_by_pattern(b0.ifca1.p_ifa[$u:$l],$word2);\n";
        print FH "    a0.sgb0.s_sggb[sgb_u:sgb_l].connect_by_pattern(p_c$i,$word3);\n";
    }
    elsif($i > 10 && $i <= 12) {
        print FH "    b0.a1.ifca1.set_prefix(\"$word7\");\n";
        print FH "    $it1.connect_by_pattern(a1.ifca1.p_ifca$i"."[$u:$l],$word3);\n";
        print FH "    s_c$i.connect_by_pattern(a0.ifcb0.p_b[$u:$l],$word2);\n";
    }
    elsif($i > 12 && $i <= 15) {
        print FH "    $it1.connect_by_pattern(a1.ifcb0.p_ifcb$i"."[$u:$l],$word3);\n";
        print FH "    a0.ifca1.p_if[ifca_u:ifca_l].connect_by_pattern(sc,$word2);\n";
    }
    print FH "  }\n";        
    print FH "};\n";        
    print FH "\n";
    
    print FH "csl_unit d {\n";  
    print FH "  a a0;\n";
    print FH "  b b0;\n";
    print FH "  b b1;\n";
    print FH "  c c1;\n";
    print FH "  c c0;\n";; 
    print FH "  ifca ifca2;\n";
    print FH "  ifcb ifcb1;\n";
    print FH "  sga sga2;\n";
    print FH "  sgb sgb1;\n";
    if($i <= 5) {
        print FH "  csl_parameter d_x($val1);\n";
        print FH "  csl_parameter d_y($val1);\n";
        print FH "  csl_parameter d_z($val1);\n";
        print FH "  csl_parameter d_t($val1);\n";
        print FH "  csl_port p_d$i(input,d_x);\n"; 
        print FH "  csl_port p_d_br$i(input,br);\n";
        print FH "  csl_port p(input,d_t);\n";
        print FH "  csl_signal s_d$i(d_z);\n";
        print FH "  csl_signal sd(d_y);\n";
    }
    elsif($i > 5 && $i <= 10  ) {     
        print FH "  csl_parameter d_x($val1);\n";
        print FH "  csl_parameter d_y($val1);\n";
        print FH "  csl_parameter d_z($val1);\n";
        print FH "  csl_parameter d_t($val1);\n";
        print FH "  csl_port p_d$i(output,d_y);\n";
        print FH "  csl_port p(output,d_x);\n";
        print FH "  csl_port pd(output,d_z);\n";
        print FH "  csl_signal s_d$i(d_x);\n";
        print FH "  csl_signal s_d_br$i(d_t);\n";
    }
    elsif($i > 10 && $i <= 15) {      
        print FH "  csl_parameter d_x($val1);\n";
        print FH "  csl_parameter d_y($val1);\n";
        print FH "  csl_parameter d_z($val1);\n";
        print FH "  csl_parameter d_t($val1);\n";
        print FH "  csl_port p_d$i(input,d_z);\n";
        print FH "  csl_port p(input,d_x);\n";
        print FH "  csl_signal sd(d_y);\n";
        print FH "  csl_signal s_d$i(d_t);\n";
        print FH "  csl_signal s_d_br$i(d_t);\n";
    }
    print FH "  d() {\n";
    if($i <= 2) {
        print FH "    b0.a1.ifca1.set_prefix(\"$word\");\n";
        print FH "    c0.b0.p_b$i.connect_by_pattern(c0.ifca1.p_ifca$i"."[$u:$l],$word4);\n";
        print FH "    b0.sb.connect_by_pattern(b0.a0.ifca1.p_ifa[ifca_u:ifca_l],$word11);\n";
        print FH "    sd.connect_by_pattern(c1.ifcb0.p_if[$u:$l],$word5);\n";
    }
    elsif($i >2 && $i <= 5) {
        print FH "    p_d$i.connect_by_pattern(a0.ifcb0.p_ifb[$u:$l],$word4);\n";
        print FH "    s_d$i.connect_by_pattern(b0.ifca1.p_ifa[ifca_u:ifca_l],$word5);\n";
        print FH "    a0.ifca1.p_ifca$i"."[$u:$l].connect_by_pattern(sd,$word11);\n";
    }
    elsif($i > 5 && $i <= 7) {
        print FH "    s_d$i.connect_by_pattern(c0.ifca1.p_if[$u:$l],$word4);\n";
        print FH "    c0.ifcb0.p_ifb[$u:$l].connect_by_pattern(s_d_br$i,$word5);\n";
    }
    elsif($i > 7 && $i <= 10) {
        print FH "    a0.ifca1.p_ifca$i"."[$u:$l].connect_by_pattern(p_d$i,$word5);\n";
        print FH "    s_d_br$i.connect_by_pattern(a0.ifca1.p_ifa[ifca_u:ifca_l],$word4);\n";
    }
    elsif($i > 10 && $i <= 15) {
        print FH "    sd.connect_by_pattern(b0.ifcb0.p_ifcb$i"."[$u:$l],$word4);\n";
        print FH "    p_d$i.connect_by_pattern(b0.sgb0.s_sb[sgb_u:sgb_l],$word5);\n";
    }
    
    print FH "  }\n";        
    print FH "};\n";        
    print FH "\n";
    

    print FH "csl_unit e {\n";  
    print FH "  b b0;\n";
    print FH "  c c0;\n";
    print FH "  c c1;\n";
    print FH "  d d0;\n";
    print FH "  d d1;\n";
    print FH "  ifca ifca3;\n";
    print FH "  ifcb ifcb2;\n";
    print FH "  sga sga3;\n";
    print FH "  sgb sgb2;\n";
    if($i <= 5) {
        print FH "  csl_parameter e_x($w);\n";
        print FH "  csl_parameter e_y($w);\n";
        print FH "  csl_parameter e_z($w);\n";
        print FH "  csl_parameter e_t($w);\n";
        print FH "  csl_port p_e$i(input,e_x);\n"; 
        print FH "  csl_port p_e_br$i(input,br);\n";   
        print FH "  csl_port p(input,e_y);\n";
        print FH "  csl_signal s_e$i(e_z);\n";
        print FH "  csl_signal s_e_br(e_t);\n";
    }
    elsif($i > 5 && $i <= 10) {      
        print FH "  csl_parameter e_x($w);\n";
        print FH "  csl_parameter e_y($w);\n";
        print FH "  csl_parameter e_z($w);\n";
        print FH "  csl_parameter e_t($w);\n";
        print FH "  csl_port p_e$i(output,e_y);\n";    
        print FH "  csl_port p(output,e_x);\n";
        print FH "  csl_port p_e_br$i(output,br);\n";
        print FH "  csl_signal se(e_z);\n";
    }
    elsif($i > 10 && $i <= 15) {     
        print FH "  csl_parameter e_x($w);\n";
        print FH "  csl_parameter e_y($w);\n";
        print FH "  csl_parameter e_z($w);\n";
        print FH "  csl_parameter e_t($w);\n";
        print FH "  csl_port p_e$i(input,e_z);\n";
        print FH "  csl_port p(input,e_x);\n";
        print FH "  csl_port pe(input,e_t);\n";
        print FH "  csl_signal s_e_br$i(br);\n";
        print FH "  csl_signal se(e_y);\n";
    }
    print FH "  e() {\n";
    if($i <= 5) {
        print FH "    p_e_br$i.connect_by_pattern(c1.b0.ifca1.p_ifa[$u:$l],$word6);\n";
        print FH "    b0.a0.sa.connect_by_pattern(ifca3.p_ifca$i"."[ifca_u:ifca_l],$word10);\n";
    }
    elsif($i > 5 && $i <= 10) {
        print FH "    se.connect_by_pattern(c0.ifcb0.p_ifb[$u:$l],$word9);\n";
        print FH "    b0.s_b_br$i.connect_by_pattern(ifcb2.p_ifcb$i"."[$u:$l],$word6);\n";
    }
    elsif($i > 10 && $i <= 15) {
        print FH "    ifca3.p_if[$u:$l].connect_by_pattern(c0.b1.a0.p_a_br$i,$word6);\n";
        print FH "    s_e_br$i.connect_by_pattern(c1.b0.ifca1.p_ifta$i"."[$u:$l],$word10);\n";
        print FH "    sga3.s_sga[$u:$l].connect_by_pattern(c1.b1.a0.p_a_br$i,$word9);\n";
    }
   
    print FH "  }\n";        
    print FH "};\n";        
    print FH "\n";
    
    print FH "csl_unit top {\n";
    print FH "  d d0;\n";
    print FH "  d d1;\n";
    print FH "  e e0;\n";
    print FH "  e e1;\n";
    print FH "  e e2;\n";
    print FH "  ifca ifca4;\n";
    print FH "  ifcb ifcb3;\n";
    print FH "  sga sga4;\n";
    print FH "  sgb sgb3;\n";
    if($i <= 5) {
        print FH "  csl_parameter top_x($w);\n";
        print FH "  csl_parameter top_y($w);\n";
        print FH "  csl_parameter top_z($w);\n";
        print FH "  csl_parameter top_t($w);\n";
        print FH "  csl_port ptop(input,top_x);\n";
        print FH "  csl_port p(input,top_y);\n";
        print FH "  csl_signal s_top$i(top_z);\n";
        print FH "  csl_signal stop(top_t);\n";
    }
    elsif($i > 5 && $i <= 10) {
        print FH "  csl_parameter top_x($w);\n";
        print FH "  csl_parameter top_y($w);\n";
        print FH "  csl_parameter top_z($w);\n";
        print FH "  csl_parameter top_t($w);\n";
        print FH "  csl_port p_top$i(output,top_t);\n";      
        print FH "  csl_port p(output,top_x);\n";
        print FH "  csl_port ptop(output,top_z);\n";        
        print FH "  csl_signal st(top_y);\n";
        print FH "  csl_signal s_top_br$i(br);\n";
    }
    elsif($i > 10 && $i <= 15) {
        print FH "  csl_parameter top_x($w);\n";
        print FH "  csl_parameter top_y($w);\n";
        print FH "  csl_parameter top_z($w);\n";
        print FH "  csl_parameter top_t($w);\n";
        print FH "  csl_port p_top$i(input,top_x);\n";      
        print FH "  csl_port p(input,top_y);\n";
        print FH "  csl_port p_top_br$i(input,br);\n";
        print FH "  csl_signal s_top$i(top_z);\n";
        print FH "  csl_signal stop(top_t);\n";
    }
    print FH "  top(){\n";
    if($i <= 5) {
        print FH "    ifca4.p_ifa[$u:$l].connect_by_pattern(d0.a0.p_a$i,$word7);\n";
        print FH "    d0.b0.p.connect_by_pattern(ifca4.p_ifa[$u:$l],$word8);\n";
        print FH "    s_top$i.connect_by_pattern(d0.ifca2.p_ifca$i"."[$u:$l],$word12);\n";
    }
    elsif($i > 5 && $i <= 10) {
        print FH "    ifcb3.p_ifb[$u:$l].connect_by_pattern(e2.b0.p_b$i,$word8);\n";
        print FH "    e1.ifcb2.p_ifcb$i"."[ifcb_u:ifcb_l].connect_by_pattern(st,$word7);\n";
        print FH "    s_top_br$i.connect_by_pattern(d1.b0.ifcb0.p_ifb[$u:$l],$word12);\n";
    }
    elsif($i > 10 && $i <= 15) {
        print FH "    e1.ifcb2.p_ifcb$i"."[$u:$l].connect_by_pattern(p,$word7);\n";
        print FH "    e0.sgb2.s_siggb[sgb_u:sgb_l].connect_by_pattern(p,$word12);\n";
    }
    
    print FH "  }\n";        
    print FH "};\n";        
    print FH "\n";
   
    close(FH);
}
