csl_enum op_code{
   ADD,
   MOV,
   SUB
};

csl_enum eALU{
   ALU0,
   ALU1,
   ALU2
};
csl_enum eBranch{
   BR0,
   BR1
}; 
 csl_isa_field op{
   op(){
     set_type(opcode);
     set_width(2); 
     set_enum(op_code); 
   }
};
csl_isa_field alu{
   alu(){
     set_type(selector);
     set_width(2); 
     set_enum(eALU); 
   }
};
csl_isa_field branch1{
   branch1(){
     set_type(selector);
     set_width(2); 
     set_enum(eBranch); 
   }
};
csl_isa_element isa_root {

   isa_root() {
      set_type(root_format);
      set_width(32);
    }
};

csl_isa_element isa:isa_root {
  op op;
   isa() {
      set_type(instr_format);
      set_position(op, 30);
      op.set_offset(2);
    }
};

csl_isa_element f1: isa {
   alu alu;
   f1() {
     set_type(instr_format);
     set_position(alu, 16);
     alu.set_offset(op.get_offset());
   }
};  
csl_isa_element f2: isa{
   branch1 branch1;
   f2() {
     set_type(instr_format);
     set_position(branch1, 16);
     branch1.set_offset(op.get_offset());
   }
};

csl_unit top {
};
