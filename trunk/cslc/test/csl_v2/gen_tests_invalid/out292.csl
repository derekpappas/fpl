csl_enum oy {
	xg,
	pv,
	el,
	fw,
	vh,
	pd,
	ml
};
csl_enum nq {
	gf,
	mp,
	jb,
	xp,
	cl,
	fa,
	rv
};
csl_enum br {
	cq,
	nh,
	ev,
	gb,
	fv,
	gt
};
csl_isa_instruction_format go{
    go( ){
     set_width( 5);
     generate_decoder( mf);
  }
}
;
csl_isa_instruction bc : go{
    bc( ){
    set_asm_mnemonic( );
  }
}
;
csl_isa xe{
    xe( ){
     set_decoder_name( "vf");
     set_decoder_out_name_prefix( "ih");
     set_decoder_out_name_suffix( "up");
     generate_decoder( lskj);
     print( isa.txt);
  }
}
;
csl_fifo ja{
   ja( ){
     add_logic( priority_bypass);
     add_logic( parallel_output, all);
     add_logic( rd_words, 0);
     add_logic( stall_wr_side);
  }
}
;
csl_memory_map_page cm{
    cm( ){
  }
}
;
csl_memory_map_page ig{
    ig( ){
     set_address_increment( 4);
     get_address_increment( );
     get_next_address( );
     set_access_rights( access_read, access_read_write);
     add_reserved_address_range( 2, 5);
     add( cm);
     get_lower_bound( );
     set_data_word_width( 9);
     get_data_word_wodth( );
     set_aligment( 9);
     get_aligment( );
     get_endianess( );
     set_symbol_max_lenght( );
     get_symbol_lenght( );
  }
}
;
csl_memory_map_page pm{
    pm( ){
     add_address_range( 2, 1);
     set_address_increment( 6);
     get_address_increment( );
     set_next_address( 3);
     set_access_rights( none, access_read);
     add( cm);
     get_lower_bound( );
     get_data_word_wodth( );
     get_aligment( );
     set_endianess( little_endian);
     get_endianess( );
  }
}
;
csl_memory_map vj{
  ig wp;
  ig db;
  ig kk;
  pm jn;
    vj( ){
     auto_gen_memory_map( );
cmig.set_access_rights_enum( cmpm); 
     set_data_word_width( 5);
     get_data_word_width( );
     set_prefix( vc);
  }
}
;
csl_register ga{
    ga( ){
     set_width( 3);
     constant( 6);
     add_logic( neg_output);
     set_start_value( 7);
     add_logic( cnt_dir_signal);
     add_logic( inc_signal);
  }
}
;
csl_register up{
    up( ){
     set_width( 3);
     add_logic( read_valid);
     add_logic( bypass);
  }
}
;
