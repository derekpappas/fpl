csl_enum xb {
	id = 27
};
csl_enum nj {
	ui = 50,
	qw = 47,
	io = 67,
	ra = 46,
	pj = 84,
	wd = 3,
	ah = 11,
	fa = 58,
	qy = 55
};
csl_enum by {
	vb,
	cp,
	qc,
	qb,
	fg,
	nb
};
csl_isa_instruction_format sq{
    sq( ){
     generate_decoder( yfplwl);
  }
}
;
csl_isa_instruction ua : sq{
    ua( ){
    set_asm_mnemonic( );
  }
}
;
csl_isa_instruction tt : sq{
    tt( ){
    set_asm_mnemonic( cj);
  }
}
;
csl_isa by{
    by( ){
     set_decoder_name( "ou");
     set_decoder_out_name_prefix( "gu");
     set_decoder_out_name_suffix( "nl");
     generate_decoder( pl);
     print( isa.txt);
  }
}
;
csl_fifo kx{
   kx( ){
     add_logic( sync_fifo);
  }
}
;
csl_memory_map_page nc{
    nc( ){
     get_address_increment( );
     set_next_address( 6);
     get_next_address( );
     set_access_rights( access_read_write, access_read);
     add_reserved_address_range( 9, 3);
     add( kx, "lr");
     get_lower_bound( );
     get_upper_bound( );
     get_data_word_wodth( );
     get_aligment( );
     set_endianess( little_endianlittle_endian);
     set_symbol_max_lenght( );
     get_symbol_lenght( );
  }
}
;
csl_memory_map_page aw{
    aw( ){
     add_address_range( 9, 7);
     get_address_increment( );
     set_next_address( 7);
     get_next_address( );
     set_access_rights( none, access_read);
     get_lower_bound( );
     set_aligment( 7);
     set_endianess( big_endianbig_endian);
     get_endianess( );
     set_symbol_max_lenght( );
  }
}
;
csl_memory_map_page ah{
  nc vy;
  aw yn;
  nc mb;
  nc tn;
    ah( ){
     add_address_range( 2, 9);
     set_address_increment( 6);
     get_address_increment( );
     set_next_address( 0);
     get_next_address( );
     set_data_word_width( 2);
     set_symbol_max_lenght( );
  }
}
;
csl_memory_map uo{
  nc jy;
  aw sa;
  nc lo;
  aw xc;
  nc wm;
  ah jd;
    uo( ){
     auto_gen_memory_map( );
     set_top_unit( pl);
     set_type( hierach);
     set_prefix( qh);
     get_prefix( );
     set_suffix( iw);
  }
}
;
csl_register mk{
    mk( ){
     add_logic( neg_output);
     add_logic( serial_output);
     add_logic( wr_en);
     init_value( 4);
     set_count_amount( 9);
     add_logic( dec_signal);
  }
}
;
csl_register jf{
    jf( ){
     set_width( 0);
     get_width( );
     set_depth( 3);
     add_logic( read_valid);
     create_rtl_module( );
     set_const_value( 3);
     add_logic( bypass);
  }
}
;
