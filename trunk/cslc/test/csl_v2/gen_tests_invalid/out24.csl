csl_enum yo {
	ae = 33,
	fl = 83,
	dk = 89,
	vn = 52,
	my = 28,
	fd = 84,
	md = 2,
	dk = 51,
	yv = 40,
	bq = 62,
	rw = 96,
	qv = 79
};
csl_enum fo {
	ea,
	od,
	op,
	ht,
	dm,
	gy,
	av,
	ai,
	bm,
	ne,
	wm,
	cy,
	dt
};
csl_enum xt {
	pf = 16,
	it = 6,
	fa = 45
};
csl_isa_instruction_format mq{
    mq( ){
  }
}
;
csl_isa_instruction ue : mq{
    ue( ){
    set_asm_mnemonic( xo);
  }
}
;
csl_isa rf{
    rf( ){
     set_decoder_name( "tg");
     generate_decoder( hshcbqug);
     print( isa.txt);
  }
}
;
csl_fifo er{
   er( ){
     set_dimension( 4, 2);
     add_logic( sl);
     add_logic( rd_words, 0);
     add_logic( string_through, 2);
  }
}
;
csl_memory_map_page id{
    id( ){
     add_address_range( 9, 5);
     get_lower_bound( );
     get_upper_bound( );
     set_endianess( little_endian);
     get_endianess( );
     get_symbol_lenght( );
  }
}
;
csl_memory_map_page yt{
    yt( ){
     add_reserved_address_range( 2, 0);
  }
}
;
csl_memory_map_page gq{
  id bu;
  yt fy;
    gq( ){
     add_address_range( 7, 2);
     get_lower_bound( );
     set_data_word_width( 1);
     set_aligment( 6);
     get_symbol_lenght( );
  }
}
;
csl_memory_map ty{
  yt kt;
  id pw;
  yt br;
  id vi;
    ty( ){
     auto_gen_memory_map( );
     set_type( flat);
     set_data_word_width( 0);
     get_data_word_width( );
  }
}
;
csl_register ef{
    ef( ){
     index_data_pair( ty);
     set_atribute( read_write);
     add_logic( neg_output);
     add_logic( serial_input);
     add_logic( serial_output);
     reset_value( 6);
     clear_value( 4);
     add_logic( gray_output);
     set_end_value( 9);
     set_start_value( 7);
     add_logic( cnt_dir_signal);
     add_logic( inc_signal);
  }
}
;
csl_register ae{
    ae( ){
     create_rtl_module( );
  }
}
;
