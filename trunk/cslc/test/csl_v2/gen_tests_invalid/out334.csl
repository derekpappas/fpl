csl_enum au {
	dw,
	dd,
	ck,
	kn,
	jd,
	km
};
csl_enum qn {
	ki,
	xs,
	ec,
	we,
	vn
};
csl_enum eu {
	go = 72,
	wh = 89,
	ja = 14,
	em = 24,
	di = 33,
	yp = 52,
	vi = 88,
	vi = 45,
	vo = 77
};
csl_isa_instruction_format ys{
    ys( ){
     set_width( 6);
     generate_decoder( venvhx);
  }
}
;
csl_isa_instruction pn : ys{
    pn( ){
    set_asm_mnemonic( );
  }
}
;
csl_isa pw{
  pn co;
  pn oo;
  pn wj;
  pn rr;
  pn wh;
  pn jw;
  pn ys;
  pn cw;
  pn ly;
  pn vg;
  pn se;
  pn kv;
  pn jv;
  pn qn;
    pw( ){
     set_decoder_name( "ik");
     set_decoder_out_name_prefix( "fk");
     set_decoder_out_name_suffix( "cy");
     print( isa.txt);
  }
}
;
csl_fifo dp{
   dp( ){
     add_logic( parallel_input, all);
     add_logic( string_through, 2);
  }
}
;
csl_memory_map_page uv{
    uv( ){
     add_address_range( 2, 6);
     add_reserved_address_range( 3, 2);
     get_lower_bound( );
     get_upper_bound( );
     get_data_word_wodth( );
     set_aligment( 4);
     get_aligment( );
     set_symbol_max_lenght( );
  }
}
;
csl_memory_map_page kv{
    kv( ){
     add_address_range( 4, 2);
     set_access_rights( access_write, access_read);
     add_reserved_address_range( 2, 8);
     set_data_word_width( 0);
     get_aligment( );
  }
}
;
csl_memory_map_page fp{
    fp( ){
     add_address_range( 9, 8);
     get_address_increment( );
     set_next_address( 6);
     get_next_address( );
     add_reserved_address_range( 2, 4);
     add( uv);
     get_lower_bound( );
     get_upper_bound( );
     set_data_word_width( 6);
     set_aligment( 4);
     set_symbol_max_lenght( );
  }
}
;
csl_memory_map gn{
    gn( ){
     set_top_unit( hx);
     set_type( hierach);
     set_prefix( xi);
  }
}
;
csl_register ik{
    ik( ){
     index_data_pair( gn);
     add_logic( inc_signal);
  }
}
;
csl_register ja{
    ja( ){
     set_width( 9);
     get_width( );
     set_depth( 1);
     get_depth( );
     create_rtl_module( );
     set_const_value( 0);
     add_logic( bypass);
  }
}
;
