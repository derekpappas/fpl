csl_enum fn {
	mp,
	in,
	gi,
	fv,
	fv,
	mn,
	tf,
	ff,
	ct,
	wc,
	hw,
	vt,
	ev,
	gc,
	cn,
	po,
	gx
};
csl_enum em {
	gl = 53,
	ln = 70,
	ix = 36,
	bc = 18,
	di = 66,
	ih = 28,
	dh = 39,
	km = 64,
	fg = 60,
	il = 34,
	cp = 97,
	ne = 99
};
csl_isa_instruction_format ma{
    ma( ){
     set_width( 4);
     generate_decoder( urra);
  }
}
;
csl_isa ov{
    ov( ){
     set_decoder_name( "dg");
     set_decoder_out_name_prefix( "ng");
     set_decoder_out_name_suffix( "df");
     print( isa.txt);
  }
}
;
csl_fifo wg{
   wg( ){
     add_logic( width_extend, 4);
     add_logic( lh);
     add_logic( parallel_output, all);
     add_logic( string_through, 4);
  }
}
;
csl_memory_map_page nd{
    nd( ){
     get_address_increment( );
     get_upper_bound( );
  }
}
;
csl_memory_map_page eo{
    eo( ){
     add_address_range( 4, 6);
     get_address_increment( );
     get_next_address( );
     set_access_rights( none, access_read);
     add( wg, "rn");
     get_lower_bound( );
     get_upper_bound( );
     set_data_word_width( 9);
     get_aligment( );
     get_endianess( );
     set_symbol_max_lenght( );
     get_symbol_lenght( );
  }
}
;
csl_memory_map_page pp{
  nd dr;
  nd yk;
  eo og;
    pp( ){
     get_address_increment( );
     set_next_address( 5);
     get_endianess( );
  }
}
;
csl_memory_map od{
    od( ){
     auto_gen_memory_map( );
     set_top_unit( qcurra);
eo.add_to_memory_map( 4); 
     set_type( hierach);
eo.set_access_rights_enum( ndeo); 
     set_data_word_width( 2);
     get_data_word_width( );
     set_prefix( pl);
     get_prefix( );
     set_suffix( mj);
  }
}
;
csl_register wy{
    wy( ){
     set_range( {[1:0], [3:3], [8:1], [5:8]});
     set_width( 5);
     index_data_pair( od, 2);
     get_atributes( );
     add_logic( neg_output);
     add_logic( gray_output);
  }
}
;
csl_register rf{
    rf( ){
     set_depth( 3);
     get_depth( );
     add_logic( read_valid);
     create_rtl_module( );
     set_const_value( 8);
     add_logic( bypass);
  }
}
;
