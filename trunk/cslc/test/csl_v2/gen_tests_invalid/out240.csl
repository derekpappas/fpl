csl_enum ny {
	mi = 13,
	ld = 72,
	ti = 65,
	my = 58,
	fl = 34,
	ka = 77,
	fw = 97,
	hy = 15,
	oq = 35,
	fe = 13,
	ou = 46,
	wp = 13,
	iu = 94,
	ub = 13
};
csl_enum ci {
	cq = 85,
	qo = 80,
	vm = 11,
	yi = 41,
	ne = 81,
	tx = 35,
	eb = 7,
	uo = 23,
	cm = 79,
	fh = 52,
	qt = 66,
	fq = 82
};
csl_enum lp {
	ng,
	rp,
	ot,
	gi,
	kc,
	uj,
	kj,
	qg,
	hu,
	jf,
	jl,
	ro,
	vi,
	kb
};
csl_isa_instruction_format ib{
    ib( ){
     set_width( 6);
     generate_decoder( nlpu);
  }
}
;
csl_isa_instruction jw : ib{
    jw( ){
    set_asm_mnemonic( );
  }
}
;
csl_isa ej{
  jw he;
  jw xn;
  jw sh;
  jw ff;
  jw ko;
  jw dn;
    ej( ){
     set_decoder_name( "cx");
     set_decoder_out_name_prefix( "gg");
     generate_decoder( htxapu);
  }
}
;
csl_fifo jl{
   jl( ){
     set_dimension( 5, 5);
     add_logic( async_fifo);
     add_logic( depth_extend, 2);
     add_logic( parallel_input, all);
     add_logic( stall);
     add_logic( wr_release);
     add_logic( wr_credit);
  }
}
;
csl_memory_map_page wf{
    wf( ){
     get_address_increment( );
     set_next_address( 8);
     set_access_rights( access_read_write, none);
     add_reserved_address_range( 1, 3);
     set_data_word_width( 3);
     get_data_word_wodth( );
     get_aligment( );
     set_endianess( big_endian);
  }
}
;
csl_memory_map_page em{
    em( ){
     add_address_range( 4, 4);
     set_address_increment( 7);
     set_next_address( 4);
     get_next_address( );
     set_access_rights( access_read, none);
     get_lower_bound( );
     get_upper_bound( );
     get_data_word_wodth( );
     get_aligment( );
     set_endianess( little_endian);
     get_symbol_lenght( );
  }
}
;
csl_memory_map ru{
  wf ar;
  wf td;
  em qd;
    ru( ){
     set_top_unit( xa);
wf.add_to_memory_map( 0,none); 
     set_type( page);
wf.set_access_rights_enum( wfem); 
     set_prefix( go);
     get_prefix( );
  }
}
;
csl_register in{
    in( ){
     init_value( 3);
     set_value( 0);
     reset_value( 5);
     add_logic( gray_output);
     set_start_value( 8);
     add_logic( cnt_dir_signal);
     add_logic( inc_signal);
  }
}
;
csl_register bh{
    bh( ){
     set_width( 0);
     get_width( );
     set_depth( 0);
     create_rtl_module( );
     set_const_value( 2);
  }
}
;
