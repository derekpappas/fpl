csl_enum uf {
	wn = 51,
	ij = 1,
	vw = 77,
	at = 10
};
csl_enum yu {
	nh,
	kw
};
csl_enum aa {
	ns = 4,
	lg = 90,
	ce = 69,
	ac = 97,
	na = 74,
	wh = 47,
	gr = 79,
	mf = 76,
	hw = 32,
	od = 80
};
csl_isa_instruction_format nb{
    nb( ){
     set_width( 8);
     generate_decoder( tarr);
  }
}
;
csl_isa_instruction tx : nb{
    tx( ){
    set_asm_mnemonic( gr);
  }
}
;
csl_isa_instruction ji : nb{
    ji( ){
    set_asm_mnemonic( csl_list "re", "lc", "ys", "ep", "df", "du", "mp", "ec");
  }
}
;
csl_isa_instruction qy : nb{
    qy( ){
    set_asm_mnemonic( csl_list "fv", "cm", "nh", "tq", "cj", "ij");
  }
}
;
csl_isa_instruction vx : nb{
    vx( ){
    set_asm_mnemonic( );
  }
}
;
csl_isa ac{
    ac( ){
     set_decoder_name( "yk");
     set_decoder_out_name_prefix( "nj");
     set_decoder_out_name_suffix( "qm");
     generate_decoder( ta);
     print( isa.txt);
  }
}
;
csl_fifo ky{
   ky( ){
     add_logic( priority_bypass);
     add_logic( depth_extend, 0);
     add_logic( parallel_input, all);
     add_logic( wr_credit);
  }
}
;
csl_memory_map_page ne{
    ne( ){
     get_address_increment( );
     get_lower_bound( );
     get_upper_bound( );
     set_endianess( big_endian);
  }
}
;
csl_memory_map_page wh{
    wh( ){
     add_reserved_address_range( 5, 4);
     get_data_word_wodth( );
  }
}
;
csl_memory_map_page es{
    es( ){
     add_address_range( 6, 3);
     set_address_increment( 7);
     set_access_rights( none, access_read_write);
     add( ky, "ip", );
     get_upper_bound( );
     get_data_word_wodth( );
     get_aligment( );
     get_endianess( );
     set_symbol_max_lenght( );
  }
}
;
csl_memory_map nq{
    nq( ){
     set_type( flat);
     set_data_word_width( 7);
     get_data_word_width( );
  }
}
;
csl_register nr{
    nr( ){
     set_range( {[0:5], [3:5], [7:1]});
     set_type( INT);
     set_width( 6);
     set_atribute( read);
     constant( 6);
     add_logic( serial_input);
     add_logic( serial_output);
     add_logic( wr_en);
     add_logic( gray_output);
     set_count_amount( 3);
     set_count_direction( 2);
     get_cnt_dir_signal( );
  }
}
;
csl_register lp{
    lp( ){
     set_width( 7);
  }
}
;
