csl_enum ny {
	tk,
	yc,
	sv,
	og,
	br,
	ur,
	cw,
	pn,
	ug,
	gy,
	pd,
	jp,
	vm
};
csl_enum en {
	pt = 70,
	oj = 41,
	ho = 95,
	oa = 59,
	kd = 9,
	in = 87,
	vd = 22,
	fa = 26,
	dw = 22,
	px = 42,
	fv = 71
};
csl_enum yu {
	bi = 15,
	la = 48,
	xr = 70,
	nn = 72,
	mf = 73
};
csl_isa_instruction_format op{
    op( ){
     set_width( 6);
     generate_decoder( almc);
  }
}
;
csl_isa uu{
    uu( ){
     set_decoder_name( "jb");
     set_decoder_out_name_prefix( "hs");
  }
}
;
csl_fifo mm{
   mm( ){
     add_logic( string_through, 1);
  }
}
;
csl_memory_map_page tj{
    tj( ){
     set_address_increment( 2);
     set_next_address( 5);
     add_reserved_address_range( 9, 6);
     get_upper_bound( );
     set_aligment( 4);
     get_symbol_lenght( );
  }
}
;
csl_memory_map_page dj{
  tj yo;
    dj( ){
     set_address_increment( 9);
     set_next_address( 8);
     set_access_rights( none, access_write);
     add_reserved_address_range( 5, 8);
     get_lower_bound( );
     set_aligment( 5);
     set_endianess( little_endianlittle_endian);
     get_endianess( );
     set_symbol_max_lenght( );
  }
}
;
csl_memory_map_page ek{
  tj gh;
  dj ra;
  tj ov;
  dj cf;
    ek( ){
     set_access_rights( access_read, access_read);
     get_lower_bound( );
     get_upper_bound( );
     set_aligment( 0);
     set_endianess( big_endianbig_endian);
     set_symbol_max_lenght( );
     get_symbol_lenght( );
  }
}
;
csl_memory_map eq{
    eq( ){
     set_top_unit( alhg);
.add_to_memory_map( 3); 
     set_data_word_width( 9);
  }
}
;
csl_register qt{
    qt( ){
     set_width( 1);
     add_logic( rd_en);
     init_value( 6);
     set_lock_enable_bit( 0);
     set_count_direction( 3);
     set_start_value( 0);
     add_logic( inc_signal);
  }
}
;
csl_register hx{
    hx( ){
  }
}
;
