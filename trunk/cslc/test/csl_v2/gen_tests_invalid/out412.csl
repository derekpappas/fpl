csl_enum an {
	to,
	vx,
	jx,
	wl,
	yo,
	cv,
	pt,
	nq
};
csl_enum ui {
	ew = 26,
	cf = 43,
	gc = 66,
	ri = 23,
	bi = 78,
	ne = 96,
	vh = 86,
	ut = 40,
	ig = 40,
	sh = 64,
	rt = 85,
	vv = 38,
	ro = 10
};
csl_enum rh {
	fm,
	qj,
	ls,
	rs,
	wj,
	db,
	ts,
	fr
};
csl_isa_instruction_format ve{
    ve( ){
     set_width( 8);
     generate_decoder( phkc);
  }
}
;
csl_isa fa{
    fa( ){
     set_decoder_name( "ch");
     set_decoder_out_name_prefix( "rf");
     set_decoder_out_name_suffix( "nf");
     generate_decoder( erphkc);
     print( isa.txt);
  }
}
;
csl_fifo wv{
   wv( ){
     add_logic( depth_extend, 8);
     add_logic( wr_words, 8);
  }
}
;
csl_memory_map_page wq{
    wq( ){
     set_address_increment( 2);
     get_address_increment( );
     set_access_rights( access_read_write, access_read);
     add_reserved_address_range( 5, 5);
     get_upper_bound( );
     get_data_word_wodth( );
     set_aligment( 5);
     set_symbol_max_lenght( );
  }
}
;
csl_memory_map_page bj{
  wq uh;
  wq bb;
    bj( ){
     get_address_increment( );
     set_next_address( 1);
     set_access_rights( access_read_write, none);
     add( wq);
     get_lower_bound( );
     get_upper_bound( );
     set_data_word_width( 3);
     get_data_word_wodth( );
     set_endianess( big_endian);
     get_endianess( );
     get_symbol_lenght( );
  }
}
;
csl_memory_map_page ny{
    ny( ){
     add_address_range( 8, 6);
     set_next_address( 9);
     get_lower_bound( );
     set_data_word_width( 6);
     set_endianess( little_endian);
     get_symbol_lenght( );
  }
}
;
csl_memory_map ij{
  wq oa;
  bj dm;
  ny km;
  bj st;
  ny xp;
  wq si;
  ny ah;
    ij( ){
     auto_gen_memory_map( );
     set_type( page);
bj.set_access_rights_enum( bj); 
     set_prefix( le);
     get_prefix( );
     set_suffix( yq);
  }
}
;
csl_register dj{
    dj( ){
     set_width( 1);
     add_logic( serial_output);
     clear_value( 1);
     set_lock_enable_bit( 2);
  }
}
;
csl_register qv{
    qv( ){
     set_const_value( 0);
     add_logic( bypass);
  }
}
;
