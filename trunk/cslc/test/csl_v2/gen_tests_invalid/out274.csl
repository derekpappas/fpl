csl_enum dq {
	nm,
	ue
};
csl_enum ym {
	uh = 30,
	pr = 55,
	xl = 73,
	vl = 39,
	dn = 35,
	ck = 89,
	gb = 9,
	qh = 54,
	px = 30,
	ig = 95,
	sp = 75,
	nv = 47,
	ib = 69
};
csl_isa_instruction_format xm{
    xm( ){
     set_width( 6);
     generate_decoder( mu);
  }
}
;
csl_isa aw{
    aw( ){
     set_decoder_out_name_prefix( "ax");
     print( isa.txt);
  }
}
;
csl_fifo po{
   po( ){
     add_logic( string_through, 5);
     add_logic( stall);
  }
}
;
csl_memory_map_page pa{
    pa( ){
     add_address_range( 3, 8);
     get_address_increment( );
     get_next_address( );
     add( po, "lg", 0);
     get_upper_bound( );
     get_data_word_wodth( );
     set_symbol_max_lenght( );
  }
}
;
csl_memory_map_page pf{
    pf( ){
     set_address_increment( 9);
     set_next_address( 6);
     get_next_address( );
     set_access_rights( none, none);
     get_lower_bound( );
     set_aligment( 1);
     get_endianess( );
     set_symbol_max_lenght( );
  }
}
;
csl_memory_map_page yn{
    yn( ){
     add_address_range( 2, 6);
     get_next_address( );
     add_reserved_address_range( 5, 8);
     get_upper_bound( );
     get_aligment( );
  }
}
;
csl_memory_map qb{
    qb( ){
     set_top_unit( vi);
     set_type( page);
     set_prefix( bk);
  }
}
;
csl_register ke{
    ke( ){
     index_data_pair( qb);
     set_atribute( read_write);
     add_logic( serial_input);
     set_value( 2);
     clear_value( 5);
  }
}
;
csl_register pc{
    pc( ){
     set_width( 2);
     set_depth( 4);
     get_depth( );
     add_logic( read_valid);
     create_rtl_module( );
     set_const_value( 1);
     add_logic( bypass);
  }
}
;
