csl_enum vp {
	rr = 6,
	iw = 37,
	uj = 40,
	th = 20,
	kj = 27,
	un = 54,
	ca = 69,
	no = 65,
	ei = 62,
	gl = 38,
	um = 63,
	by = 51,
	jv = 39,
	lq = 45,
	yh = 57,
	iq = 94,
	br = 37
};
csl_enum qx {
	bk,
	fn,
	wd,
	cb,
	fr,
	pj
};
csl_enum cy {
	wx,
	lx,
	wu,
	wk,
	lx,
	ut,
	ov,
	nf,
	wo,
	se,
	dp
};
csl_isa_instruction_format vp{
    vp( ){
     set_width( 8);
  }
}
;
csl_isa av{
    av( ){
     set_decoder_name( "ir");
     set_decoder_out_name_prefix( "os");
     set_decoder_out_name_suffix( "dl");
     generate_decoder( mhdwsj);
     print( isa.txt);
  }
}
;
csl_fifo ug{
   ug( ){
     add_logic( stall_wr_side);
  }
}
;
csl_memory_map_page vk{
    vk( ){
     get_address_increment( );
     set_next_address( 9);
     get_next_address( );
     set_access_rights( none, access_write);
     add( ug, "dr");
     get_lower_bound( );
     set_data_word_width( 9);
     set_aligment( 7);
     get_aligment( );
     set_endianess( big_endian);
  }
}
;
csl_memory_map_page eu{
    eu( ){
     get_address_increment( );
     set_next_address( 9);
     add_reserved_address_range( 9, 5);
     set_data_word_width( 7);
     get_aligment( );
     set_symbol_max_lenght( );
  }
}
;
csl_memory_map_page vi{
  vk lq;
    vi( ){
     set_address_increment( 6);
     set_next_address( 0);
  }
}
;
csl_memory_map fn{
  eu uv;
  vk on;
  eu ro;
  vk if;
    fn( ){
     set_top_unit( mh);
  }
}
;
csl_register pu{
    pu( ){
     add_logic( gray_output);
     set_count_direction( 5);
  }
}
;
csl_register ld{
    ld( ){
     set_width( 5);
     set_depth( 2);
     get_depth( );
  }
}
;
