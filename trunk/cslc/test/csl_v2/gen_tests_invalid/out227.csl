csl_enum ks {
	qd = 73
};
csl_enum tf {
	mg,
	ka,
	da,
	en,
	ry,
	gd,
	hp
};
csl_enum nn {
	gm = 83,
	pc = 43,
	mu = 74,
	im = 86,
	au = 32
};
csl_isa_instruction_format uu{
    uu( ){
     generate_decoder( wdiv);
  }
}
;
csl_isa ec{
    ec( ){
     set_decoder_name( "yh");
     set_decoder_out_name_prefix( "cy");
     set_decoder_out_name_suffix( "aw");
     generate_decoder( wdgekp);
     print( isa.txt);
  }
}
;
csl_fifo qt{
   qt( ){
     add_logic( parallel_input, all);
     add_logic( string_through, 1);
     add_logic( stall);
     add_logic( output_wr_addr);
     add_logic( wr_credit);
  }
}
;
csl_memory_map_page tw{
    tw( ){
     get_next_address( );
     add( qt, "oh");
     get_upper_bound( );
     get_aligment( );
     get_symbol_lenght( );
  }
}
;
csl_memory_map_page ow{
    ow( ){
     add_address_range( 8, 7);
     get_address_increment( );
     set_next_address( 2);
     get_next_address( );
     add_reserved_address_range( 2, 2);
     add( qt, "lx");
     get_lower_bound( );
     get_upper_bound( );
     set_data_word_width( 9);
     set_aligment( 3);
     get_aligment( );
     set_endianess( little_endianbig_endian);
     set_symbol_max_lenght( );
  }
}
;
csl_memory_map_page ni{
  tw ad;
  ow ab;
  tw ij;
  ow fb;
  tw my;
    ni( ){
     set_address_increment( 9);
     get_address_increment( );
     get_next_address( );
     add_reserved_address_range( 7, 6);
     get_lower_bound( );
     get_upper_bound( );
     get_aligment( );
     get_endianess( );
     set_symbol_max_lenght( );
     get_symbol_lenght( );
  }
}
;
csl_memory_map kb{
    kb( ){
     set_type( hierach);
twow.set_access_rights_enum( owni); 
     set_data_word_width( 3);
     get_data_word_width( );
     set_prefix( ko);
     get_prefix( );
     set_suffix( rm);
  }
}
;
csl_register ed{
    ed( ){
     add_logic( neg_output);
     add_logic( cnt_dir_signal);
  }
}
;
csl_register hk{
    hk( ){
     set_width( 3);
     set_depth( 8);
     get_depth( );
     add_logic( bypass);
  }
}
;
