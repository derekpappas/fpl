csl_enum mw {
	qe = 28,
	lo = 3,
	fs = 65,
	yh = 68,
	tf = 8,
	jk = 79,
	sl = 61,
	pj = 93,
	mb = 90,
	oj = 23,
	ww = 37,
	cm = 70
};
csl_enum nf {
	nw,
	tc,
	um,
	gi,
	bn,
	dc
};
csl_enum uw {
	hf = 68,
	jc = 27,
	sy = 89,
	mf = 50,
	cd = 92,
	qb = 74,
	as = 25,
	oq = 98,
	be = 63
};
csl_isa_instruction_format ar{
    ar( ){
     set_width( 7);
     generate_decoder( enlkbs);
  }
}
;
csl_isa_instruction ap : ar{
    ap( ){
    set_asm_mnemonic( oh);
  }
}
;
csl_isa_instruction jr : ar{
    jr( ){
    set_asm_mnemonic( csl_list "ao", "wy", "gq", "pv", "pt", "dp");
  }
}
;
csl_isa tf{
    tf( ){
     set_decoder_name( "hl");
     set_decoder_out_name_prefix( "sr");
     set_decoder_out_name_suffix( "aq");
     generate_decoder( engqlkbs);
     print( isa.txt);
  }
}
;
csl_fifo td{
   td( ){
     add_logic( wr_words, 1);
  }
}
;
csl_memory_map_page ff{
    ff( ){
     add_address_range( 8, 5);
     set_address_increment( 5);
     get_address_increment( );
     set_access_rights( none, access_read);
     add_reserved_address_range( 4, 2);
     get_lower_bound( );
     get_upper_bound( );
     set_data_word_width( 5);
     set_aligment( 5);
     get_endianess( );
  }
}
;
csl_memory_map_page rv{
  ff wl;
  ff wd;
    rv( ){
     set_address_increment( 0);
     get_address_increment( );
     set_next_address( 2);
     get_next_address( );
     set_access_rights( none, access_read_write);
     add( td, "ew", 5);
     set_data_word_width( 2);
     set_symbol_max_lenght( );
  }
}
;
csl_memory_map_page tb{
  ff sd;
  rv kt;
  ff rn;
  rv cb;
    tb( ){
     add_address_range( 9, 2);
     get_address_increment( );
     set_next_address( 5);
     set_access_rights( access_write, access_write);
     add_reserved_address_range( 4, 9);
     get_aligment( );
  }
}
;
csl_memory_map vn{
  ff xe;
  rv iy;
  tb wb;
  ff sq;
  ff ms;
  tb mh;
    vn( ){
     auto_gen_memory_map( );
     set_type( hierach);
rv.set_access_rights_enum( fftb); 
  }
}
;
csl_register vf{
    vf( ){
     set_range( [0:1]);
     set_type( DFF);
     set_width( 7);
     set_address( vn, 6);
     constant( 1);
     add_logic( neg_output);
     add_logic( serial_input);
     add_logic( serial_output);
     add_logic( rd_en);
     init_value( 1);
     set_value( 6);
     set_count_direction( 1);
     stop_at_end_value( );
     get_cnt_dir_signal( );
     add_logic( inc_signal);
  }
}
;
csl_register at{
    at( ){
     set_width( 8);
     get_width( );
     set_depth( 0);
     get_depth( );
     create_rtl_module( );
     set_const_value( 4);
     add_logic( bypass);
  }
}
;
