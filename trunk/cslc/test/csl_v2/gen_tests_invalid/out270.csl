csl_enum xb {
	vd = 7,
	mv = 9,
	as = 67,
	cj = 32,
	ri = 98,
	cl = 88,
	ux = 69,
	vs = 99,
	te = 91,
	rh = 96,
	qx = 10,
	kr = 57,
	ky = 62,
	mg = 14,
	gm = 92
};
csl_enum jf {
	pv = 61,
	bp = 71,
	qf = 14,
	bi = 7,
	nd = 59,
	wk = 47,
	ds = 64,
	ew = 80,
	av = 92,
	hs = 32,
	tr = 57,
	kg = 7
};
csl_enum qy {
	oy,
	lx,
	ed,
	vi,
	tp,
	nu,
	ac,
	bw,
	mg,
	sq,
	gs,
	on
};
csl_isa_instruction_format ka{
    ka( ){
     set_width( 3);
  }
}
;
csl_isa ry{
    ry( ){
     set_decoder_name( "uw");
     set_decoder_out_name_prefix( "lm");
     set_decoder_out_name_suffix( "xf");
     print( isa.txt);
  }
}
;
csl_fifo am{
   am( ){
  }
}
;
csl_memory_map_page jc{
    jc( ){
     add_address_range( 7, 9);
     get_address_increment( );
     get_next_address( );
     set_access_rights( access_read, access_write);
     get_lower_bound( );
     get_data_word_wodth( );
     set_aligment( 1);
     set_endianess( big_endian);
     get_endianess( );
     get_symbol_lenght( );
  }
}
;
csl_memory_map_page jr{
  jc do;
  jc la;
    jr( ){
     set_next_address( 7);
     set_endianess( big_endian);
  }
}
;
csl_memory_map_page ch{
  jr et;
  jr tu;
    ch( ){
     set_aligment( 3);
     get_endianess( );
  }
}
;
csl_memory_map hs{
  jr ys;
  ch tr;
  jc bw;
  jr af;
  ch us;
    hs( ){
     set_top_unit( ttfg);
     set_type( flat);
jcch.set_access_rights_enum( jr); 
  }
}
;
csl_register cg{
    cg( ){
     add_logic( serial_input);
     init_value( 4);
     clear_value( 3);
     set_lock_enable_bit( 7);
     add_logic( gray_output);
     set_end_value( 6);
     stop_at_end_value( );
  }
}
;
csl_register bf{
    bf( ){
     set_width( 1);
     get_width( );
     set_depth( 2);
     set_const_value( 3);
     add_logic( bypass);
  }
}
;
