csl_enum fq {
	lt = 75,
	ke = 46
};
csl_enum hf {
	te,
	sv,
	ea,
	go,
	av,
	wj,
	ia,
	yi,
	id,
	yx,
	pr,
	pu,
	kb,
	qv,
	hb,
	dd,
	fv,
	yj
};
csl_enum yf {
	by,
	ca,
	kk,
	bj
};
csl_isa_instruction_format gq{
    gq( ){
     set_width( 7);
     generate_decoder( vnbmdk);
  }
}
;
csl_isa_instruction wl : gq{
    wl( ){
    set_asm_mnemonic( );
  }
}
;
csl_isa_instruction nt : gq{
    nt( ){
    set_asm_mnemonic( );
  }
}
;
csl_isa_instruction yp : gq{
    yp( ){
    set_asm_mnemonic( csl_list "kf", "sg", "vo");
  }
}
;
csl_isa_instruction ew : gq{
    ew( ){
    set_asm_mnemonic( csl_list "hg", "mp", "im");
  }
}
;
csl_isa_instruction of : gq{
    of( ){
    set_asm_mnemonic( csl_list "uu", "se");
  }
}
;
csl_isa_instruction cj : gq{
    cj( ){
    set_asm_mnemonic( au);
  }
}
;
csl_isa_instruction pp : gq{
    pp( ){
    set_asm_mnemonic( );
  }
}
;
csl_isa_instruction sy : gq{
    sy( ){
    set_asm_mnemonic( vf);
  }
}
;
csl_isa qs{
    qs( ){
     set_decoder_name( "lo");
     set_decoder_out_name_prefix( "hw");
     set_decoder_out_name_suffix( "sr");
     generate_decoder( ludk);
     print( isa.txt);
  }
}
;
csl_fifo vg{
   vg( ){
     add_logic( credit);
  }
}
;
csl_memory_map_page do{
    do( ){
     add_address_range( 6, 1);
     get_lower_bound( );
     get_data_word_wodth( );
     set_aligment( 6);
     get_aligment( );
     set_endianess( little_endian);
     get_symbol_lenght( );
  }
}
;
csl_memory_map_page cw{
    cw( ){
     add_reserved_address_range( 3, 9);
     get_lower_bound( );
     get_upper_bound( );
     get_aligment( );
     set_symbol_max_lenght( );
  }
}
;
csl_memory_map_page dp{
    dp( ){
     set_next_address( 1);
     set_access_rights( access_read, access_read);
     add( vg, "tr", 8);
     get_upper_bound( );
     get_data_word_wodth( );
     set_aligment( 9);
     get_aligment( );
  }
}
;
csl_memory_map xf{
  cw xk;
  do kr;
  do wn;
  cw ti;
  dp lt;
    xf( ){
     set_type( flat);
     set_prefix( ur);
     get_prefix( );
     set_suffix( py);
  }
}
;
csl_register gl{
    gl( ){
     set_width( 1);
     get_atributes( );
     add_logic( rd_en);
     reset_value( 6);
     clear_value( 7);
     set_lock_enable_bit( 1);
     set_count_amount( 1);
     stop_at_end_value( );
  }
}
;
csl_register du{
    du( ){
     set_width( 3);
     get_width( );
     set_depth( 2);
     create_rtl_module( );
     set_const_value( 6);
  }
}
;
