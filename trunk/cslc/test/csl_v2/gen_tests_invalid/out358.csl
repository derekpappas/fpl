csl_enum dx {
	ga,
	up,
	mi,
	be,
	sc,
	lg,
	ub,
	ri,
	ei,
	ug,
	bo,
	xg,
	pn,
	ap,
	qf,
	ny
};
csl_enum fi {
	qt = 53,
	ss = 6,
	an = 37,
	uo = 33,
	vr = 92,
	po = 84,
	aw = 57
};
csl_enum yw {
	dc = 70,
	ld = 20,
	ke = 33,
	sm = 70,
	vl = 86,
	rj = 38,
	ky = 83,
	tc = 65,
	vo = 27,
	wv = 18,
	cr = 20,
	ky = 4,
	ld = 85
};
csl_isa_instruction_format lx{
    lx( ){
     set_width( 1);
  }
}
;
csl_isa nt{
    nt( ){
     set_decoder_name( "dy");
     set_decoder_out_name_prefix( "dh");
     set_decoder_out_name_suffix( "bw");
     generate_decoder( wkhq);
     print( isa.txt);
  }
}
;
csl_fifo rt{
   rt( ){
  }
}
;
csl_memory_map_page ax{
    ax( ){
     set_address_increment( 8);
     get_lower_bound( );
     get_symbol_lenght( );
  }
}
;
csl_memory_map_page gj{
  ax ct;
  ax ts;
  ax yg;
    gj( ){
     add_address_range( 9, 8);
     set_address_increment( 6);
     get_address_increment( );
     set_next_address( 5);
     add_reserved_address_range( 0, 5);
     add( rt, "se", 3);
     add( ax);
     get_lower_bound( );
     get_data_word_wodth( );
     get_aligment( );
     set_endianess( little_endian);
     get_symbol_lenght( );
  }
}
;
csl_memory_map_page kl{
  gj tl;
  gj ke;
  gj el;
    kl( ){
     add_address_range( 8, 2);
     get_address_increment( );
     set_next_address( 7);
     add_reserved_address_range( 2, 4);
     get_upper_bound( );
     set_data_word_width( 0);
     get_data_word_wodth( );
     set_aligment( 7);
     get_aligment( );
     set_endianess( big_endianbig_endian);
     set_symbol_max_lenght( );
     get_symbol_lenght( );
  }
}
;
csl_memory_map fn{
    fn( ){
     set_top_unit( wktsku);
     set_type( flat);
gjkl.set_access_rights_enum( gjkl); 
     set_data_word_width( 9);
     get_data_word_width( );
     set_prefix( bp);
  }
}
;
csl_register xg{
    xg( ){
     set_address( fn, 3);
     index_data_pair( fn);
     add_logic( neg_output);
     add_logic( serial_output);
     reset_value( 0);
     clear_value( 2);
     add_logic( gray_output);
     set_end_value( 2);
     set_start_value( 4);
     add_logic( cnt_dir_signal);
  }
}
;
csl_register uj{
    uj( ){
     set_depth( 3);
     add_logic( read_valid);
     create_rtl_module( );
     set_const_value( 1);
     add_logic( bypass);
  }
}
;
