csl_enum wa {
	ni = 32,
	sx = 50,
	yv = 89,
	de = 8,
	sk = 56,
	xw = 1,
	vi = 84,
	xv = 75,
	yh = 96,
	rb = 0,
	dk = 97,
	gd = 23
};
csl_enum lc {
	em = 52,
	fb = 31,
	mu = 94,
	mh = 73,
	sl = 85,
	dx = 32,
	rx = 80,
	iq = 24,
	ug = 2
};
csl_enum ys {
	ca = 73,
	ct = 73,
	bh = 35,
	gj = 13,
	lr = 4,
	mr = 0,
	et = 87
};
csl_isa_instruction_format mo{
    mo( ){
     set_width( 4);
     generate_decoder( vkxc);
  }
}
;
csl_isa fi{
    fi( ){
     set_decoder_name( "pc");
     set_decoder_out_name_prefix( "hr");
     set_decoder_out_name_suffix( "th");
     generate_decoder( wcsp);
     print( isa.txt);
  }
}
;
csl_fifo qy{
   qy( ){
     set_dimension( 8, 1);
     add_logic( programable_depth, 2);
  }
}
;
csl_memory_map_page ua{
    ua( ){
     add_address_range( 8, 1);
     get_address_increment( );
     set_next_address( 7);
     get_next_address( );
     set_access_rights( none, none);
     get_lower_bound( );
     set_data_word_width( 7);
     get_data_word_wodth( );
     set_aligment( 6);
     get_aligment( );
     set_endianess( little_endian);
     get_symbol_lenght( );
  }
}
;
csl_memory_map_page vt{
    vt( ){
     set_address_increment( 0);
     get_address_increment( );
     set_next_address( 7);
     set_access_rights( access_read_write, access_write);
     add_reserved_address_range( 7, 0);
     add( qy, "kq", 4);
     get_upper_bound( );
     set_aligment( 4);
     get_aligment( );
     set_endianess( big_endianlittle_endian);
     set_symbol_max_lenght( );
     get_symbol_lenght( );
  }
}
;
csl_memory_map_page xv{
    xv( ){
     add_address_range( 8, 0);
     set_address_increment( 6);
     get_address_increment( );
     get_next_address( );
     add( qy, "bs");
     get_lower_bound( );
     get_upper_bound( );
     get_data_word_wodth( );
     set_aligment( 0);
     set_endianess( little_endianlittle_endian);
     get_endianess( );
     set_symbol_max_lenght( );
  }
}
;
csl_memory_map cv{
  vt dv;
  xv ce;
  ua gq;
  ua cx;
  xv kn;
    cv( ){
     auto_gen_memory_map( );
     set_top_unit( spxc);
     set_type( hierach);
     set_data_word_width( 1);
     get_data_word_width( );
     set_prefix( yh);
  }
}
;
csl_register tp{
    tp( ){
     constant( 0);
     add_logic( dec_signal);
  }
}
;
csl_register pw{
    pw( ){
     set_width( 7);
     set_depth( 6);
     get_depth( );
     add_logic( read_valid);
     create_rtl_module( );
     set_const_value( 0);
  }
}
;
