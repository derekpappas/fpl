csl_enum rq {
	cw,
	ly,
	lk,
	uy,
	fk,
	dm,
	ff,
	kh,
	av,
	ka,
	tk,
	gg
};
csl_enum oh {
	qo = 90,
	pl = 47,
	fr = 44,
	ir = 37,
	tv = 55,
	eo = 20
};
csl_enum wj {
	ya,
	wg,
	hj,
	oi,
	hy,
	kc,
	jr,
	ia,
	yc,
	pp
};
csl_isa_instruction_format wb{
    wb( ){
  }
}
;
csl_isa_instruction ql : wb{
    ql( ){
    set_asm_mnemonic( eq);
  }
}
;
csl_isa gd{
  ql il;
  ql md;
  ql by;
  ql ou;
  ql ww;
  ql jm;
  ql ek;
  ql en;
  ql nb;
  ql ok;
  ql ps;
  ql tg;
  ql ob;
    gd( ){
     set_decoder_name( "no");
     set_decoder_out_name_prefix( "pa");
     set_decoder_out_name_suffix( "pp");
     generate_decoder( quxl);
     print( isa.txt);
  }
}
;
csl_fifo aw{
   aw( ){
  }
}
;
csl_memory_map_page mp{
    mp( ){
     add_address_range( 8, 5);
     get_address_increment( );
     set_next_address( 1);
     get_next_address( );
     get_lower_bound( );
     get_upper_bound( );
     get_data_word_wodth( );
     set_aligment( 7);
     get_aligment( );
     get_endianess( );
     set_symbol_max_lenght( );
     get_symbol_lenght( );
  }
}
;
csl_memory_map_page rw{
    rw( ){
     add_address_range( 2, 9);
     set_address_increment( 6);
     get_address_increment( );
     set_next_address( 9);
     get_next_address( );
     add_reserved_address_range( 7, 2);
     get_upper_bound( );
     set_data_word_width( 4);
     set_aligment( 3);
     get_aligment( );
     set_symbol_max_lenght( );
  }
}
;
csl_memory_map_page yn{
    yn( ){
     set_address_increment( 1);
     get_address_increment( );
     set_next_address( 5);
     get_next_address( );
     set_access_rights( access_write, access_read_write);
     add( mprw);
     get_lower_bound( );
     set_data_word_width( 1);
     get_data_word_wodth( );
     set_aligment( 0);
     set_endianess( little_endianlittle_endian);
     set_symbol_max_lenght( );
     get_symbol_lenght( );
  }
}
;
csl_memory_map tb{
    tb( ){
     auto_gen_memory_map( );
.add_to_memory_map( access_read_write); 
     set_data_word_width( 4);
  }
}
;
csl_register ol{
    ol( ){
     set_type( LFSR);
     set_width( 1);
     constant( 0);
     add_logic( neg_output);
     add_logic( rd_en);
     clear_value( 1);
     set_count_direction( 6);
     get_cnt_dir_signal( );
  }
}
;
csl_register rc{
    rc( ){
     set_depth( 1);
     get_depth( );
     add_logic( read_valid);
     set_const_value( 3);
  }
}
;
