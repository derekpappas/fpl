csl_enum gk {
	fc,
	fj,
	rg,
	xh,
	bk
};
csl_enum ba {
	in,
	gd,
	af,
	ti,
	rn,
	go,
	rm,
	qf,
	bw,
	sg
};
csl_enum cx {
	sv,
	gs,
	di,
	de,
	kn,
	sq,
	tu,
	vn,
	dn
};
csl_isa_instruction_format in{
    in( ){
     set_width( 0);
     generate_decoder( qetf);
  }
}
;
csl_isa rs{
    rs( ){
     set_decoder_name( "tm");
     set_decoder_out_name_prefix( "wu");
     set_decoder_out_name_suffix( "af");
     generate_decoder( tfmo);
     print( isa.txt);
  }
}
;
csl_fifo qp{
   qp( ){
     add_logic( stall_wr_side);
  }
}
;
csl_memory_map_page mi{
    mi( ){
     set_address_increment( 6);
     get_address_increment( );
     set_next_address( 8);
     get_next_address( );
     set_access_rights( none, none);
     add_reserved_address_range( 1, 3);
     get_lower_bound( );
     get_upper_bound( );
     set_data_word_width( 6);
     set_aligment( 4);
     get_aligment( );
     get_endianess( );
     set_symbol_max_lenght( );
  }
}
;
csl_memory_map_page jh{
    jh( ){
     set_next_address( 2);
     add_reserved_address_range( 5, 3);
     get_lower_bound( );
     get_upper_bound( );
     set_data_word_width( 5);
     get_data_word_wodth( );
     set_endianess( little_endianbig_endian);
     get_endianess( );
     set_symbol_max_lenght( );
     get_symbol_lenght( );
  }
}
;
csl_memory_map_page pl{
    pl( ){
     set_address_increment( 3);
     get_address_increment( );
     set_next_address( 1);
     set_access_rights( access_write, access_read);
     add( qp, "jp");
     get_upper_bound( );
     set_aligment( 8);
     get_aligment( );
     set_endianess( big_endianlittle_endian);
     set_symbol_max_lenght( );
  }
}
;
csl_memory_map el{
  pl tu;
  mi fk;
  jh nw;
  pl fy;
    el( ){
     auto_gen_memory_map( );
     set_type( page);
     set_data_word_width( 8);
     get_data_word_width( );
     set_prefix( ol);
     get_prefix( );
     set_suffix( yk);
  }
}
;
csl_register jm{
    jm( ){
     set_width( 3);
     set_atribute( read);
     add_logic( neg_output);
     add_logic( rd_en);
     add_logic( wr_en);
     set_count_amount( 9);
     set_start_value( 7);
     add_logic( dec_signal);
  }
}
;
csl_register we{
    we( ){
     set_width( 3);
     get_width( );
     set_depth( 9);
     create_rtl_module( );
     set_const_value( 9);
     add_logic( bypass);
  }
}
;
