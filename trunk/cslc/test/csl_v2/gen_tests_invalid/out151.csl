csl_enum wk {
	oo = 13,
	lg = 61,
	sp = 82,
	ls = 43,
	cp = 60
};
csl_enum et {
	lu,
	cb,
	jw,
	ef,
	wj,
	wr,
	la
};
csl_enum tt {
	as = 76
};
csl_isa_instruction_format ts{
    ts( ){
     set_width( 0);
     generate_decoder( nignwlfh);
  }
}
;
csl_isa gl{
    gl( ){
     set_decoder_name( "wr");
     set_decoder_out_name_prefix( "hs");
     set_decoder_out_name_suffix( "ut");
     generate_decoder( wl);
     print( isa.txt);
  }
}
;
csl_fifo ym{
   ym( ){
     add_logic( depth_extend, 3);
     add_logic( wr_hold, 0);
     add_logic( wr_words, 2);
  }
}
;
csl_memory_map_page nm{
    nm( ){
     add_address_range( 8, 0);
     get_upper_bound( );
     set_data_word_width( 1);
     get_data_word_wodth( );
     set_endianess( little_endianbig_endian);
     get_endianess( );
     set_symbol_max_lenght( );
  }
}
;
csl_memory_map_page sp{
    sp( ){
     get_address_increment( );
     set_next_address( 6);
     get_upper_bound( );
     set_data_word_width( 9);
     get_data_word_wodth( );
     set_aligment( 0);
     get_aligment( );
     set_endianess( little_endianlittle_endian);
     set_symbol_max_lenght( );
     get_symbol_lenght( );
  }
}
;
csl_memory_map_page cn{
  nm ti;
  sp nq;
  nm sl;
    cn( ){
     add_address_range( 8, 7);
     set_address_increment( 7);
     get_address_increment( );
     set_next_address( 5);
     get_next_address( );
     get_lower_bound( );
     get_upper_bound( );
     set_data_word_width( 3);
     get_data_word_wodth( );
     set_aligment( 2);
     set_endianess( big_endian);
     get_symbol_lenght( );
  }
}
;
csl_memory_map kn{
    kn( ){
     auto_gen_memory_map( );
     set_prefix( jx);
     get_prefix( );
     set_suffix( fb);
  }
}
;
csl_register wt{
    wt( ){
     set_type( ATOM);
     add_logic( neg_output);
     init_value( 3);
     reset_value( 2);
     set_count_direction( 8);
     get_cnt_dir_signal( );
  }
}
;
csl_register ch{
    ch( ){
  }
}
;
