csl_enum tf {
	bh,
	sq,
	ns,
	pt,
	hl,
	rc,
	xm,
	vt,
	is,
	fd,
	tc,
	wc
};
csl_enum xa {
	de,
	dw,
	mg,
	gf,
	yt,
	ao,
	oi
};
csl_enum ag {
	ma,
	uk,
	vf,
	gb,
	ic,
	ff,
	ed
};
csl_isa_instruction_format eb{
    eb( ){
     set_width( 8);
     generate_decoder( tqqcwq);
  }
}
;
csl_isa as{
    as( ){
     set_decoder_name( "te");
     set_decoder_out_name_prefix( "xh");
     set_decoder_out_name_suffix( "iq");
     generate_decoder( tq);
     print( isa.txt);
  }
}
;
csl_fifo ij{
   ij( ){
     add_logic( rd_words, 9);
     add_logic( string_through, 1);
  }
}
;
csl_memory_map_page vu{
    vu( ){
     add_address_range( 9, 6);
     get_address_increment( );
     set_next_address( 5);
     get_next_address( );
     add_reserved_address_range( 2, 5);
     get_upper_bound( );
     set_data_word_width( 9);
     set_symbol_max_lenght( );
  }
}
;
csl_memory_map_page ih{
    ih( ){
     set_address_increment( 9);
     get_address_increment( );
     get_lower_bound( );
     get_aligment( );
     set_endianess( little_endianbig_endian);
     set_symbol_max_lenght( );
     get_symbol_lenght( );
  }
}
;
csl_memory_map_page sa{
  vu lg;
  vu yw;
  ih ct;
    sa( ){
     add_address_range( 6, 4);
     get_address_increment( );
     set_next_address( 2);
     get_next_address( );
     add_reserved_address_range( 2, 0);
     get_upper_bound( );
     set_symbol_max_lenght( );
  }
}
;
csl_memory_map cd{
  sa kc;
  vu ak;
  sa mr;
    cd( ){
     auto_gen_memory_map( );
     set_data_word_width( 6);
     set_suffix( gs);
     get_suffix( );
  }
}
;
csl_register cq{
    cq( ){
     set_range( {[4:6], [3:4], [2:5], [7:2], [7:0], [2:2]});
     set_type( SEMA);
     set_width( 8);
     add_logic( rd_en);
     init_value( 8);
     clear_value( 0);
     add_logic( gray_output);
     set_count_amount( 6);
     stop_at_end_value( );
     add_logic( dec_signal);
  }
}
;
csl_register rw{
    rw( ){
     set_width( 6);
     set_depth( 0);
     add_logic( read_valid);
     create_rtl_module( );
     set_const_value( 0);
  }
}
;
