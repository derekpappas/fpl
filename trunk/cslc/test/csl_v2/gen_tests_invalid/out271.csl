csl_enum xj {
	bj,
	ye,
	dw,
	hf,
	db,
	tv,
	wa,
	ja
};
csl_enum yj {
	xh,
	my,
	cg,
	ej,
	yr,
	ta,
	bw,
	lc,
	cr,
	cl,
	yf
};
csl_enum ou {
	el = 1,
	un = 35,
	ot = 55
};
csl_isa_instruction_format dx{
    dx( ){
     set_width( 7);
     generate_decoder( ykgn);
  }
}
;
csl_isa fc{
    fc( ){
     set_decoder_out_name_prefix( "uj");
     set_decoder_out_name_suffix( "ug");
     generate_decoder( yk);
     print( isa.txt);
  }
}
;
csl_memory_map_page nc{
    nc( ){
     add_address_range( 7, 8);
     set_address_increment( 6);
     add_reserved_address_range( 4, 7);
     set_data_word_width( 9);
     get_data_word_wodth( );
     get_aligment( );
     set_endianess( big_endianlittle_endian);
     set_symbol_max_lenght( );
     get_symbol_lenght( );
  }
}
;
csl_memory_map_page ni{
  nc sa;
    ni( ){
     get_address_increment( );
     set_access_rights( none, access_read);
     get_lower_bound( );
     set_aligment( 5);
     set_endianess( little_endianbig_endian);
     set_symbol_max_lenght( );
     get_symbol_lenght( );
  }
}
;
csl_memory_map_page cw{
    cw( ){
     set_address_increment( 7);
     get_address_increment( );
     get_next_address( );
     add_reserved_address_range( 4, 5);
     get_upper_bound( );
     set_data_word_width( 2);
     set_symbol_max_lenght( );
     get_symbol_lenght( );
  }
}
;
csl_memory_map bh{
    bh( ){
     set_top_unit( yqyk);
     set_type( page);
     set_data_word_width( 9);
     get_data_word_width( );
     set_suffix( cj);
  }
}
;
csl_register hn{
    hn( ){
     constant( 3);
     add_logic( serial_input);
     set_value( 9);
     set_count_amount( 6);
     set_end_value( 9);
  }
}
;
csl_register ql{
    ql( ){
     set_width( 8);
     set_depth( 7);
     set_const_value( 9);
     add_logic( bypass);
  }
}
;
