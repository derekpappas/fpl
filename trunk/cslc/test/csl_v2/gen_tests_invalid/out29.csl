csl_enum tl {
	wy,
	jv,
	ct,
	qp,
	fi,
	bt
};
csl_enum kf {
	jb = 60,
	ur = 23,
	wn = 59,
	ps = 25,
	pr = 80,
	pc = 56,
	qf = 99,
	gk = 21,
	qd = 30,
	lc = 48,
	ao = 4,
	xs = 21,
	ed = 26,
	eh = 93,
	aq = 22
};
csl_enum nj {
	tk = 55,
	dq = 9,
	as = 91,
	jp = 79,
	ny = 11,
	ue = 91,
	eb = 98,
	qw = 71,
	ed = 19,
	bg = 8,
	ra = 90,
	cx = 58,
	di = 34,
	gd = 59,
	yv = 73
};
csl_isa_instruction_format nw{
    nw( ){
     set_width( 5);
     generate_decoder( tq);
  }
}
;
csl_isa vq{
    vq( ){
     set_decoder_name( "kh");
     set_decoder_out_name_prefix( "cm");
     set_decoder_out_name_suffix( "lx");
     generate_decoder( ymvsnp);
     print( isa.txt);
  }
}
;
csl_fifo fu{
   fu( ){
     add_logic( pushback);
  }
}
;
csl_memory_map_page ac{
    ac( ){
     add_address_range( 9, 1);
     set_access_rights( access_write, access_read);
     add_reserved_address_range( 3, 8);
     set_endianess( little_endianbig_endian);
     get_endianess( );
     set_symbol_max_lenght( );
     get_symbol_lenght( );
  }
}
;
csl_memory_map_page ah{
    ah( ){
     add_address_range( 5, 2);
     set_address_increment( 0);
     get_address_increment( );
     set_next_address( 0);
     get_next_address( );
     set_access_rights( access_write, access_write);
     add_reserved_address_range( 2, 4);
     add( ac);
     get_lower_bound( );
     set_aligment( 2);
  }
}
;
csl_memory_map_page bh{
    bh( ){
     set_address_increment( 3);
     set_next_address( 3);
     set_access_rights( access_read_write, none);
     add( fu, "to");
     get_lower_bound( );
     set_data_word_width( 8);
     get_data_word_wodth( );
     set_endianess( big_endian);
  }
}
;
csl_memory_map et{
    et( ){
     auto_gen_memory_map( );
     set_top_unit( ym);
acahbh.set_access_rights_enum( acah); 
     set_data_word_width( 2);
     get_data_word_width( );
     set_suffix( xk);
  }
}
;
csl_register ex{
    ex( ){
     set_range( {[4:4], [0:8], [1:4], [6:0], [9:2], [5:2], [0:7]});
     set_type( CTL);
     set_address( et, 2);
     get_atributes( );
     add_logic( serial_input);
     add_logic( serial_output);
     add_logic( rd_en);
     init_value( 5);
     clear_value( 3);
     add_logic( gray_output);
     set_end_value( 2);
     add_logic( cnt_dir_signal);
     add_logic( inc_signal);
  }
}
;
csl_register un{
    un( ){
     set_depth( 1);
     get_depth( );
     add_logic( read_valid);
     create_rtl_module( );
  }
}
;
