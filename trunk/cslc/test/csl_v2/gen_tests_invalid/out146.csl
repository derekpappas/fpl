csl_enum bm {
	sl = 32,
	ai = 67,
	up = 21,
	ks = 94
};
csl_enum ct {
	ip,
	fb
};
csl_enum yy {
	ka = 24,
	ki = 20,
	jr = 84,
	wd = 69,
	va = 99,
	fu = 28
};
csl_isa_instruction_format xb{
    xb( ){
     set_width( 4);
     generate_decoder( xkal);
  }
}
;
csl_isa_instruction hd : xb{
    hd( ){
    set_asm_mnemonic( wt);
  }
}
;
csl_isa_instruction ex : xb{
    ex( ){
    set_asm_mnemonic( jm);
  }
}
;
csl_isa rc{
  hd bc;
  ex mh;
  hd xt;
  ex lh;
  hd dd;
  ex fi;
  hd wm;
  ex ef;
  ex tm;
  hd nu;
  ex gq;
  ex xv;
  hd af;
  hd km;
  ex sn;
  hd av;
  ex mp;
  ex wf;
  ex ah;
  ex jn;
  hd aq;
    rc( ){
  }
}
;
csl_fifo cm{
   cm( ){
     add_logic( rd_words, 9);
     add_logic( flow);
  }
}
;
csl_memory_map_page pj{
    pj( ){
     add_address_range( 2, 1);
     set_address_increment( 9);
     set_access_rights( none, access_write);
     add_reserved_address_range( 9, 8);
     set_data_word_width( 8);
     set_aligment( 4);
     set_endianess( little_endianbig_endian);
     set_symbol_max_lenght( );
  }
}
;
csl_memory_map_page au{
  pj af;
    au( ){
     add_address_range( 0, 5);
     set_next_address( 3);
     set_access_rights( access_write, access_read_write);
     add( cm, "yu", 8);
     set_data_word_width( 9);
     set_aligment( 7);
     get_endianess( );
     set_symbol_max_lenght( );
     get_symbol_lenght( );
  }
}
;
csl_memory_map_page js{
    js( ){
     get_address_increment( );
     set_next_address( 6);
     add( pjau);
     get_upper_bound( );
     set_data_word_width( 9);
     get_data_word_wodth( );
     set_aligment( 1);
     get_aligment( );
     get_endianess( );
     get_symbol_lenght( );
  }
}
;
csl_memory_map ls{
    ls( ){
     set_type( flat);
     set_suffix( pp);
  }
}
;
csl_register uh{
    uh( ){
     set_range( {[7:9], [7:3], [2:4], [2:1]});
     set_atribute( read_write);
     add_logic( neg_output);
     add_logic( serial_output);
     add_logic( wr_en);
     set_value( 2);
     add_logic( gray_output);
     set_count_amount( 9);
     set_end_value( 2);
     set_start_value( 15);
     stop_at_end_value( );
  }
}
;
csl_register sp{
    sp( ){
     set_width( 3);
     set_depth( 0);
     get_depth( );
     add_logic( read_valid);
     set_const_value( 0);
  }
}
;
