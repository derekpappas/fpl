csl_enum hj {
	vs
};
csl_enum jh {
	hn = 32,
	cu = 83
};
csl_enum we {
	sp,
	tg,
	vg,
	qy,
	oo,
	mk,
	qs,
	bb,
	nd,
	gv
};
csl_isa_instruction_format ns{
    ns( ){
  }
}
;
csl_isa br{
    br( ){
     set_decoder_name( "rn");
     set_decoder_out_name_prefix( "uh");
     set_decoder_out_name_suffix( "xd");
     generate_decoder( rdtu);
     print( isa.txt);
  }
}
;
csl_fifo pg{
   pg( ){
     set_physical_implementation( FFA);
  }
}
;
csl_memory_map_page ig{
    ig( ){
     add_address_range( 9, 2);
     set_address_increment( 6);
     get_address_increment( );
     set_next_address( 4);
     get_next_address( );
     get_lower_bound( );
     get_upper_bound( );
     get_data_word_wodth( );
     get_aligment( );
     get_endianess( );
  }
}
;
csl_memory_map_page iu{
  ig od;
  ig ds;
    iu( ){
     get_next_address( );
     set_access_rights( access_read, access_write);
     add( pg, "im", 9);
     get_upper_bound( );
     set_data_word_width( 5);
     get_data_word_wodth( );
     set_endianess( big_endian);
     get_symbol_lenght( );
  }
}
;
csl_memory_map_page go{
    go( ){
     set_address_increment( 1);
     get_address_increment( );
     set_access_rights( access_read, none);
     add_reserved_address_range( 9, 8);
     get_lower_bound( );
     get_upper_bound( );
     set_data_word_width( 8);
     get_data_word_wodth( );
     set_aligment( 4);
     get_aligment( );
     set_endianess( big_endian);
     get_symbol_lenght( );
  }
}
;
csl_memory_map bn{
    bn( ){
     set_top_unit( berdtu);
     set_prefix( ci);
     get_prefix( );
  }
}
;
csl_register gn{
    gn( ){
     constant( 7);
     get_atributes( );
     add_logic( serial_output);
     set_end_value( 9);
     add_logic( cnt_dir_signal);
  }
}
;
csl_register nc{
    nc( ){
     set_width( 2);
     set_depth( 8);
     create_rtl_module( );
     set_const_value( 8);
  }
}
;
