csl_enum in {
	if = 64,
	cv = 52,
	gc = 62,
	bs = 49
};
csl_enum eu {
	aa = 30,
	yg = 85,
	gs = 14,
	fm = 16,
	cr = 97,
	vj = 16,
	fb = 56,
	ex = 22,
	bw = 29
};
csl_enum dl {
	kn = 21,
	qm = 6,
	jy = 89,
	rn = 1,
	sv = 21,
	iu = 76,
	yh = 34,
	dh = 19
};
csl_isa_instruction_format br{
    br( ){
     set_width( 5);
     generate_decoder( mq);
  }
}
;
csl_isa kt{
    kt( ){
     set_decoder_name( "ag");
     set_decoder_out_name_prefix( "cr");
     set_decoder_out_name_suffix( "im");
     generate_decoder( pymq);
  }
}
;
csl_fifo me{
   me( ){
     add_logic( wr_hold, 8);
     add_logic( wr_release);
     add_logic( wr_credit);
  }
}
;
csl_memory_map_page vq{
    vq( ){
     add_address_range( 2, 6);
     add_reserved_address_range( 8, 3);
     get_lower_bound( );
     get_upper_bound( );
     get_data_word_wodth( );
     get_aligment( );
     get_endianess( );
     get_symbol_lenght( );
  }
}
;
csl_memory_map_page pj{
  vq pk;
  vq ly;
  vq oe;
    pj( ){
     add_address_range( 5, 3);
     set_access_rights( access_read, none);
     set_data_word_width( 2);
     set_aligment( 2);
     get_symbol_lenght( );
  }
}
;
csl_memory_map_page cm{
    cm( ){
     set_address_increment( 2);
     set_next_address( 8);
     get_next_address( );
     set_access_rights( none, access_read_write);
     add_reserved_address_range( 1, 8);
     add( vqpj);
     get_lower_bound( );
     set_data_word_width( 6);
     set_aligment( 7);
     set_endianess( little_endian);
     get_symbol_lenght( );
  }
}
;
csl_memory_map tt{
    tt( ){
     auto_gen_memory_map( );
     set_top_unit( xmpyyg);
.add_to_memory_map( 9,access_write); 
     set_type( flat);
     set_prefix( md);
     get_prefix( );
     set_suffix( nu);
  }
}
;
csl_register xi{
    xi( ){
     set_range( {[9:6], [9:1], [7:6], [3:2], [5:3]});
     constant( 9);
     add_logic( serial_output);
  }
}
;
csl_register nl{
    nl( ){
     set_width( 0);
     get_width( );
     set_depth( 9);
     create_rtl_module( );
     add_logic( bypass);
  }
}
;
