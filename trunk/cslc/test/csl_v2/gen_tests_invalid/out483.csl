csl_enum bd {
	tc = 56,
	lw = 29,
	yy = 48,
	sv = 30,
	al = 53,
	is = 7,
	fd = 4,
	lh = 95
};
csl_enum lh {
	fg = 69,
	fo = 53,
	uj = 31,
	yl = 45,
	yc = 97,
	tc = 69,
	fn = 33,
	gt = 57,
	mg = 79,
	sh = 6
};
csl_enum es {
	sm = 97,
	la = 17,
	ry = 57,
	id = 60,
	ip = 47,
	ln = 92,
	eh = 1,
	af = 68,
	uy = 95
};
csl_isa_instruction_format pm{
    pm( ){
     set_width( 8);
     generate_decoder( ovpr);
  }
}
;
csl_isa_instruction au : pm{
    au( ){
    set_asm_mnemonic( csl_list "ef");
  }
}
;
csl_isa jl{
    jl( ){
     set_decoder_name( "bk");
     set_decoder_out_name_prefix( "hy");
     set_decoder_out_name_suffix( "lx");
     generate_decoder( ud);
     print( isa.txt);
  }
}
;
csl_fifo ar{
   ar( ){
     add_logic( wr_hold, 5);
     add_logic( pushback);
     add_logic( stall);
     add_logic( wr_release);
  }
}
;
csl_memory_map_page vp{
    vp( ){
     get_address_increment( );
     set_data_word_width( 9);
     set_symbol_max_lenght( );
  }
}
;
csl_memory_map_page fh{
  vp sp;
    fh( ){
     add_address_range( 2, 6);
     set_address_increment( 3);
     get_address_increment( );
     set_next_address( 0);
     get_next_address( );
     set_access_rights( access_read, access_read_write);
     add_reserved_address_range( 5, 0);
     set_aligment( 9);
     get_aligment( );
     set_endianess( big_endian);
     get_endianess( );
     get_symbol_lenght( );
  }
}
;
csl_memory_map_page qi{
    qi( ){
     add_address_range( 8, 9);
     set_address_increment( 4);
     get_address_increment( );
     set_access_rights( none, access_read);
     add_reserved_address_range( 1, 7);
     get_upper_bound( );
     get_aligment( );
     get_endianess( );
  }
}
;
csl_memory_map nb{
    nb( ){
     auto_gen_memory_map( );
     set_top_unit( ovprud);
     set_type( page);
vpfhqi.set_access_rights_enum( fhqi); 
     set_data_word_width( 4);
     set_suffix( jr);
  }
}
;
csl_register sx{
    sx( ){
     set_width( 5);
     set_atribute( shadow);
     add_logic( serial_input);
     add_logic( serial_output);
     add_logic( wr_en);
     set_value( 7);
     clear_value( 2);
     set_lock_enable_bit( 7);
     set_end_value( 3);
     add_logic( dec_signal);
  }
}
;
csl_register mb{
    mb( ){
     set_width( 1);
     get_width( );
     add_logic( read_valid);
     set_const_value( 4);
     add_logic( bypass);
  }
}
;
