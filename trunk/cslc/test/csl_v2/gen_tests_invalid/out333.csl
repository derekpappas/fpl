csl_enum na {
	ne = 59,
	vr = 68
};
csl_enum ue {
	qu = 88,
	ta = 16,
	qa = 88,
	xg = 48,
	nv = 28,
	ue = 1,
	hs = 21,
	tk = 92,
	vt = 41
};
csl_enum bn {
	hg = 95,
	dw = 63,
	gs = 74,
	bf = 29,
	lv = 29,
	jc = 84,
	tf = 87,
	ek = 90
};
csl_isa_instruction_format rn{
    rn( ){
     set_width( 1);
     generate_decoder( acnv);
  }
}
;
csl_isa_instruction yg : rn{
    yg( ){
    set_asm_mnemonic( csl_list "rt", "wy");
  }
}
;
csl_isa fj{
  yg rn;
  yg hy;
  yg wq;
  yg pf;
  yg tv;
  yg rk;
  yg as;
  yg ba;
  yg fa;
  yg eq;
    fj( ){
     set_decoder_name( "gt");
     set_decoder_out_name_prefix( "ig");
     set_decoder_out_name_suffix( "nm");
     print( isa.txt);
  }
}
;
csl_fifo wv{
   wv( ){
     add_logic( rd_words, 7);
     add_logic( wr_credit);
  }
}
;
csl_memory_map_page tp{
    tp( ){
     add_address_range( 8, 9);
     set_address_increment( 9);
     get_address_increment( );
     set_access_rights( access_read, access_read);
     add_reserved_address_range( 6, 4);
     get_upper_bound( );
  }
}
;
csl_memory_map_page hw{
  tp jp;
  tp iv;
    hw( ){
     set_address_increment( 7);
     set_next_address( 8);
     get_next_address( );
     set_access_rights( access_write, access_write);
     add_reserved_address_range( 9, 9);
     get_lower_bound( );
     get_upper_bound( );
     get_data_word_wodth( );
     set_aligment( 3);
     get_endianess( );
     get_symbol_lenght( );
  }
}
;
csl_memory_map_page dt{
    dt( ){
     get_address_increment( );
     get_next_address( );
     add( wv, "oh", 3);
     get_lower_bound( );
     get_endianess( );
     get_symbol_lenght( );
  }
}
;
csl_memory_map pf{
    pf( ){
  }
}
;
csl_register ae{
    ae( ){
     set_type( STATUS);
     set_value( 3);
     clear_value( 4);
  }
}
;
csl_register iy{
    iy( ){
     set_width( 1);
     get_width( );
     set_depth( 3);
     get_depth( );
     add_logic( read_valid);
     set_const_value( 8);
  }
}
;
