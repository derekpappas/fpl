csl_enum rc {
	ap,
	fg,
	wp,
	tq,
	is,
	kn,
	sw,
	cj
};
csl_enum tf {
	wt,
	bw,
	ab,
	xd,
	pv,
	eh,
	yg
};
csl_enum xg {
	ou,
	xj,
	nj,
	ex,
	ww,
	wb,
	it,
	gf,
	nh,
	en,
	ld,
	sb,
	ba
};
csl_isa_instruction_format st{
    st( ){
  }
}
;
csl_isa_instruction xo : st{
    xo( ){
    set_asm_mnemonic( );
  }
}
;
csl_isa_instruction om : st{
    om( ){
    set_asm_mnemonic( csl_list "gg", "vg");
  }
}
;
csl_isa ol{
  xo ah;
  xo yw;
  om wn;
  xo vk;
  om pp;
  xo iu;
  xo as;
  xo gv;
  om mp;
  om io;
  om rp;
  xo rx;
  xo iy;
  xo wo;
  om sd;
  om pc;
  xo ca;
  xo si;
  om kj;
  xo rr;
    ol( ){
     set_decoder_name( "yo");
     set_decoder_out_name_prefix( "rw");
     set_decoder_out_name_suffix( "kj");
     generate_decoder( kevale);
     print( isa.txt);
  }
}
;
csl_fifo sy{
   sy( ){
     add_logic( depth_extend, 0);
     add_logic( width_extend, 3);
     add_logic( stall_rd_side);
     add_logic( output_wr_addr);
  }
}
;
csl_memory_map_page ob{
    ob( ){
     get_address_increment( );
     get_next_address( );
     get_endianess( );
     set_symbol_max_lenght( );
  }
}
;
csl_memory_map_page jr{
    jr( ){
     set_address_increment( 5);
     get_address_increment( );
     get_next_address( );
     add( sy, "qc");
     get_lower_bound( );
     get_upper_bound( );
     set_aligment( 0);
     get_aligment( );
     set_endianess( big_endianlittle_endian);
     set_symbol_max_lenght( );
  }
}
;
csl_memory_map_page ny{
    ny( ){
     set_address_increment( 8);
     set_next_address( 9);
     get_next_address( );
     add_reserved_address_range( 5, 0);
     get_upper_bound( );
     set_data_word_width( 3);
     get_aligment( );
     set_endianess( little_endianbig_endian);
     set_symbol_max_lenght( );
  }
}
;
csl_memory_map ji{
    ji( ){
  }
}
;
csl_register jq{
    jq( ){
     set_type( SEMA);
     constant( 1);
     add_logic( wr_en);
     add_logic( inc_signal);
  }
}
;
csl_register yx{
    yx( ){
     set_width( 1);
     set_depth( 5);
     get_depth( );
     add_logic( read_valid);
     add_logic( bypass);
  }
}
;
