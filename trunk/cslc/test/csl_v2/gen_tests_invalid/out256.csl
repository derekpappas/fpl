csl_enum iu {
	hr = 47,
	er = 52,
	ag = 47,
	to = 42,
	ew = 76,
	pb = 65,
	of = 27,
	tb = 1,
	ji = 59
};
csl_enum tg {
	qn = 69,
	us = 17,
	fb = 94,
	gk = 72,
	fq = 83,
	ho = 98,
	jl = 69,
	gl = 46,
	tb = 44,
	by = 34,
	as = 15,
	cp = 1,
	av = 12,
	sk = 8,
	fm = 21,
	sx = 43
};
csl_enum cp {
	si = 82,
	qb = 2,
	ux = 90,
	sd = 90,
	nc = 60,
	qv = 44,
	nl = 41,
	yq = 17,
	ma = 49
};
csl_isa_instruction_format yd{
    yd( ){
     generate_decoder( ut);
  }
}
;
csl_isa wd{
    wd( ){
     set_decoder_name( "bo");
     set_decoder_out_name_prefix( "kl");
     set_decoder_out_name_suffix( "kn");
     generate_decoder( mbiput);
     print( isa.txt);
  }
}
;
csl_fifo nu{
   nu( ){
     set_dimension( 9, 8);
     add_logic( parallel_output, all);
     add_logic( stall_wr_side);
     add_logic( almost_empty, 3);
  }
}
;
csl_memory_map_page ku{
    ku( ){
     add_address_range( 4, 7);
     set_next_address( 4);
     get_next_address( );
     get_lower_bound( );
     get_upper_bound( );
     set_data_word_width( 9);
     set_symbol_max_lenght( );
     get_symbol_lenght( );
  }
}
;
csl_memory_map_page bs{
    bs( ){
     set_address_increment( 2);
     set_next_address( 8);
     get_next_address( );
     set_access_rights( access_read, access_write);
     add_reserved_address_range( 4, 0);
     get_lower_bound( );
     get_upper_bound( );
     get_symbol_lenght( );
  }
}
;
csl_memory_map_page xd{
    xd( ){
     add_address_range( 7, 9);
     add( bs);
     get_lower_bound( );
     set_data_word_width( 5);
     get_data_word_wodth( );
     set_aligment( 0);
     get_symbol_lenght( );
  }
}
;
csl_memory_map bj{
    bj( ){
     set_top_unit( mbkvip);
kubsxd.     set_type( flat);
kubsxd.set_access_rights_enum( ku); 
     set_prefix( fl);
     get_prefix( );
     set_suffix( yq);
  }
}
;
csl_register ia{
    ia( ){
     set_address( bj, );
     add_logic( serial_input);
     add_logic( rd_en);
  }
}
;
csl_register qv{
    qv( ){
     set_const_value( 4);
  }
}
;
