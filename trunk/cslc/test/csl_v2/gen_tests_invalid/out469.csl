csl_enum ey {
	os = 24,
	hc = 49,
	ru = 12,
	jn = 9,
	kb = 90,
	oj = 29
};
csl_enum gj {
	ws,
	wa,
	ky,
	up,
	fc,
	mi,
	vy,
	la,
	bc,
	ui,
	em,
	eq,
	cq,
	rt,
	aa,
	da
};
csl_enum va {
	ci,
	cy,
	ah,
	bm,
	sy
};
csl_isa_instruction_format ou{
    ou( ){
     generate_decoder( iruv);
  }
}
;
csl_isa_instruction qp : ou{
    qp( ){
    set_asm_mnemonic( );
  }
}
;
csl_isa_instruction ck : ou{
    ck( ){
    set_asm_mnemonic( gv);
  }
}
;
csl_isa_instruction fl : ou{
    fl( ){
  }
}
;
csl_isa yl{
    yl( ){
     set_decoder_out_name_prefix( "wn");
     set_decoder_out_name_suffix( "hw");
     print( isa.txt);
  }
}
;
csl_fifo hc{
   hc( ){
     add_logic( sync_fifo);
     add_logic( depth_extend, 1);
     add_logic( pushback);
     add_logic( stall_wr_side);
  }
}
;
csl_memory_map_page go{
    go( ){
     set_address_increment( 4);
     set_data_word_width( 1);
     set_endianess( little_endian);
     get_endianess( );
  }
}
;
csl_memory_map_page re{
  go qq;
  go ri;
    re( ){
     add_address_range( 5, 9);
     set_address_increment( 5);
     get_address_increment( );
     set_next_address( 0);
     add_reserved_address_range( 9, 5);
     get_lower_bound( );
     set_data_word_width( 8);
     get_data_word_wodth( );
     set_aligment( 7);
     set_endianess( little_endian);
     get_endianess( );
     get_symbol_lenght( );
  }
}
;
csl_memory_map il{
  go gp;
  re wv;
  go dj;
  re oa;
    il( ){
re.set_access_rights_enum( gore); 
     set_prefix( tm);
     get_prefix( );
     set_suffix( ge);
  }
}
;
csl_register cf{
    cf( ){
     set_width( 5);
     set_atribute( read);
     get_atributes( );
     add_logic( neg_output);
     add_logic( serial_output);
     add_logic( rd_en);
     set_value( 1);
     add_logic( inc_signal);
     add_logic( dec_signal);
  }
}
;
csl_register po{
    po( ){
     set_width( 0);
     get_width( );
     set_depth( 0);
     create_rtl_module( );
  }
}
;
