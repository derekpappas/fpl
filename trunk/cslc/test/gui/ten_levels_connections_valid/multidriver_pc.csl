// Copyright FastPath Logic (2009)
// Interface Library File v1.0, this is autogenerated by FastPath Generator 2009-12-17 21:14
//----------------------------------------------------------------------
// Copyright (c) 2005-2008 Fastpathlogic
// All Rights Reserved.
// This is UNPUBLISHED PROPRIETARY SOURCE CODE of Fastpathlogic;
// the contents of this file may not be disclosed to third parties,
// copied or duplicated in any form, in whole or in part, without the prior
// written permission of Fastpathlogic.
//
// RESTRICTED RIGHTS LEGEND:
// Use, duplication or disclosure by the Government is subject to
// restrictions as set forth in subdivision (c)(1)(ii) of the Rights in
// Technical Data and Computer Software clause at DFARS 252.227-7013,
// and/or in similar or succesor clauses in the FAR, DOD or NASA FAR Supplement.
// Unpublished rights reserved under the Copyright Laws of the United States
//----------------------------------------------------------------------




//------------------------------------------------------------
// Begin csl_interface declarations
//------------------------------------------------------------
csl_interface ifc1 { 
    csl_bitrange br_p1 ( 1,1);
    csl_port p1 ( output , reg , br_p1);
    csl_bitrange br_p2 ( 64,64);
    csl_port p2 ( output , wire , br_p2);
    csl_bitrange br_p3 ( 56,28);
    csl_port p3 ( output , wire , br_p3);

    ifc1() { 
    }
};

//------------------------------------------------------------
// Begin csl_unit predecalaration
//------------------------------------------------------------
csl_unit u1;
csl_unit u2;
csl_unit u3;
csl_unit u4;
csl_unit u5;
csl_unit u6;
csl_unit u7;



//------------------------------------------------------------
// Begin csl_unit declarations
//------------------------------------------------------------
//------------------------------------------------------
csl_unit u2 {  // declaration
	// unit instances
	u3 u32; // unit instance
	u4 u41; // unit instance
	// interface instances
	ifc1 ifc11; // receiver interface
	ifc1 ifc12; // receiver interface
	ifc1 ifc13; // receiver interface
	u2() { 
	}
};


//------------------------------------------------------
csl_unit u3 {  // declaration
	// unit instances
	u5 u51; // unit instance
	// interface instances
	ifc1 ifc11; // driver interface
	u3() { 
	}
};


//------------------------------------------------------
csl_unit u5 {  // declaration
	// unit instances
	u6 u62; // unit instance
	// interface instances
	u5() { 
	}
};


//------------------------------------------------------
csl_unit u6 {  // declaration
	// unit instances
	u7 u71; // unit instance
	// interface instances
	u6() { 
	}
};


//------------------------------------------------------
csl_unit u7 {  // declaration
	// unit instances
	// interface instances
	u7() { 
	}
};


//------------------------------------------------------
csl_unit u4 {  // declaration
	// unit instances
	u3 u33; // unit instance
	// interface instances
	ifc1 ifc11; // receiver interface
	u4() { 
	}
};


//------------------------------------------------------
csl_unit u1 {  // declaration
	// unit instances
	u2 u21; // unit instance
	u3 u31; // unit instance
	u6 u61; // unit instance
	// interface instances
	ifc1 ifc11; // driver interface
	ifc1 ifc12; // receiver interface
	ifc1 ifc13; // receiver interface
	ifc1 ifc14; // receiver interface
	u1() { 
		u1.ifc11.connect_by_name(u1.u21.ifc11,pc1);
		u1.u31.ifc11.connect_by_name(u1.ifc12,cc1);
		u1.u21.u41.u33.ifc11.connect_by_name(u1.u21.u41.ifc11,cc1);
		u1.u21.u41.ifc11.connect_by_name(u1.u21.ifc12,cp1);
		u1.u21.ifc12.connect_by_name(u1.ifc13,cp2);
		u1.u21.u32.ifc11.connect_by_name(u1.u21.ifc13,cp3);
		u1.u21.ifc13.connect_by_name(u1.ifc14,cp4);
	}
};


