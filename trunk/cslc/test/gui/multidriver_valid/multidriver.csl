// Copyright FastPath Logic (2009)
// Interface Library File v1.0, this is autogenerated by FastPath Generator 2010-03-09 08:40
//----------------------------------------------------------------------
// Copyright (c) 2005-2008 Fastpathlogic
// All Rights Reserved.
// This is UNPUBLISHED PROPRIETARY SOURCE CODE of Fastpathlogic;
// the contents of this file may not be disclosed to third parties,
// copied or duplicated in any form, in whole or in part, without the prior
// written permission of Fastpathlogic.
//
// RESTRICTED RIGHTS LEGEND:
// Use, duplication or disclosure by the Government is subject to
// restrictions as set forth in subdivision (c)(1)(ii) of the Rights in
// Technical Data and Computer Software clause at DFARS 252.227-7013,
// and/or in similar or succesor clauses in the FAR, DOD or NASA FAR Supplement.
// Unpublished rights reserved under the Copyright Laws of the United States
//----------------------------------------------------------------------




//------------------------------------------------------------
// Begin csl_interface declarations
//------------------------------------------------------------
csl_interface ifc1 { 
    csl_port p_in ( input , wire , 128);
    csl_port p_out ( output , reg , 16);

    ifc1() { 
    }
};

//------------------------------------------------------------
// Begin csl_unit predecalaration
//------------------------------------------------------------
csl_unit u_c1;
csl_unit u_c11;
csl_unit u_c12;
csl_unit u_c2;
csl_unit u_c21;
csl_unit u_top;



//------------------------------------------------------------
// Begin csl_unit declarations
//------------------------------------------------------------
//------------------------------------------------------
csl_unit u_c1 {  // declaration
	// unit instances
	u_c11 u11; // unit instance
	u_c12 u12; // unit instance
	// interface instances
	ifc1 ifc11; // receiver interface
	ifc1 ifc12; // driver interface
	u_c1() { 
	}
};


//------------------------------------------------------
csl_unit u_c21 {  // declaration
	// unit instances
	// interface instances
	ifc1 ifc11; // receiver interface
	ifc1 ifc12; // driver interface
	u_c21() { 
		ifc11.reverse();
	}
};


//------------------------------------------------------
csl_unit u_c12 {  // declaration
	// unit instances
	// interface instances
	ifc1 ifc12; // receiver interface
	ifc1 ifc13; // driver interface
	u_c12() { 
	}
};


//------------------------------------------------------
csl_unit u_c11 {  // declaration
	// unit instances
	// interface instances
	ifc1 ifc13; // receiver interface
	ifc1 ifc11; // driver interface
	u_c11() { 
		ifc13.reverse();
	}
};


//------------------------------------------------------
csl_unit u_c2 {  // declaration
	// unit instances
	u_c21 u21; // unit instance
	// interface instances
	ifc1 ifc12; // driver interface
	u_c2() { 
	}
};


//------------------------------------------------------
csl_unit u_top {  // declaration
	// unit instances
	u_c2 u2; // unit instance
	u_c1 u1; // unit instance
	// interface instances
	ifc1 ifc11; // driver interface
	ifc1 ifc12; // receiver interface
	ifc1 ifc13; // receiver interface
	u_top() { 
		u_top.ifc11.connect_by_name(u_top.u1.ifc11,pc1);
		u_top.u1.ifc12.connect_by_name(u_top.u1.u12.ifc12,pc2);
		u_top.u1.u12.ifc13.connect_by_name(u_top.u1.u11.ifc13,cc1);
		u_top.u1.u11.ifc11.connect_by_name(u_top.u2.u21.ifc11,ss1);
		u_top.u2.ifc12.connect_by_name(u_top.ifc12,cp2);
		u_top.u2.u21.ifc12.connect_by_name(u_top.u2.ifc12,cp1);
		u_top.u1.ifc12.connect_by_name(u_top.ifc13,cp3);
	}
};


