#!/usr/bin/perl

#Author Petronela
use strict;

my $path = "$ENV{WORK}/test/csl_test_gen/";
print "the path for generated tests is : $path"."conn_pattern_concat_replication_pps_sps_invalid/ \n";

if(! defined $ENV{WORK}){
    die "[ERROR] The environment variable WORK is not set. Set it to point to TOT/se";
}

my $totDir     = $ENV{WORK};
&testDirExists($totDir);

sub testDirExists {
    my($execName) = @_;
    unless(-e "$execName") { die "[ERROR] The directory $execName does not exist!\n"; }
    
}

sub mkDir {
    my($dirName) = @_;
    unless(-e "$dirName")  { `mkdir $dirName`; }
}

sub word {
    my $val = $_[0];
    my @alpha = ('a'..'z','A'..'Z');
    my @alphanumeric = ('a'..'z','A'..'Z','0'..'9');
    my $ret = $alpha[rand @alpha]."zz";
    for(my $i=1;$i < $val; ++$i){
        $ret = $ret.$alphanumeric[rand @alphanumeric];
    }
    return $ret;
}

my @lower = (0,4,8,16,28);
my @upper = (43,55,63,77,93);

for (my $i = 1; $i <= 5; ++$i ) {
    foreach my $l(@lower) {
        foreach my $u(@upper) { 
            &main($i,$l,$u);
        }
    }
}

sub main {
    my ($i,$l, $u) = @_;
    my $test_name = "connect_concat_replication_pps_sps$i"."_".$l."_".$u."_illegal.csl";
    &createCslFile($test_name,$i, $l, $u);
}

sub createCslFile {
    my($test_name, $i,$l, $u) = @_;
    my $w = $u - $l + 1;
    my $val = int(rand(20)) + 1;
    my $val12 = 2 * $val;
    my $val13 = 3 * $val;
    my $val14 = 4 * $val;
    my $val15 = 5 * $val;
    my $val16 = 6 * $val; 
   
    my $val2 = $w/2;
    my $val3 = 0;
    if($w % 3 == 0) {
        $val3 = $w/3;
    }
    my $val4 = 0;
    if($w % 4 == 0) {
        $val4 = $w/4;
    }
    my $val8 = $u + int(rand(50)) + 1;  
    my $val9 = $u + int(rand(50)) + 1;

    my $word = &word($val);
    my $word1 = &word($val2);
    my $word2 = &word($val);
    my $word3 = &word($val2);
    my $word4 = &word($val3);
    my $word5 = &word($val4);
    my $word6 = &word($val);
    my $word7 = &word($val3);
    my $word8 = &word($val);
    my $word9 = &word($val3);
    my $word10 = &word($val4);
    my $word11 = &word($val);
    my $word12 = &word($val3);
    my $word13 = &word($val);
    &mkDir("$path/conn_pattern_concat_replication_pps_sps_invalid");
    open(FH,">$path/conn_pattern_concat_replication_pps_sps_invalid/$test_name");

    print FH "//Generated by Petronela\n";
    print FH "//testing cmd. connect_by_pattern for connections  replication exp.,concat exp. to port,signal, port[part select] , signal[part select]\n\n";
    print FH "csl_bitrange br($val);\n";
    print FH "csl_bitrange brt($val16);\n";
    print FH "csl_bitrange br1($val8);\n";
    print FH "csl_unit a {\n";
    if($i <= 2) {
        print FH "  csl_port p_a$i(input,$val);\n"; 
        print FH "  csl_port pa(input,$val2);\n";
        print FH "  csl_port p_a_br$i(input,br);\n";
        print FH "  csl_port p(input,$val);\n";
        print FH "  csl_signal sa($val2);\n";
        if($val4 != 0) {
            print FH "  csl_signal s_a$i($val4);\n";
        }
        else {
            print FH "  csl_signal s_a$i($val2);\n";
        }
    }
    elsif($i > 2 && $i <= 4) {
        print FH "  csl_port p_a$i(output,$val);\n"; 
        if($val3 != 0 ) {
            print FH "  csl_port pa(input,$val3);\n";
        }
        elsif($val4 != 0) {
            print FH "  csl_port pa(input,$val4);\n";
        }
        else {
             print FH "  csl_port pa(input,$val2);\n";
        }
        print FH "  csl_port p(output,$val2);\n";
        if($val4 != 0) {
            print FH "  csl_signal s_a$i($val4);\n";
        }
        else {
            print FH "  csl_signal s_a$i($val2);\n";
        }
        print FH "  csl_signal sa($val2);\n";
    }
    elsif($i > 4) {
        print FH "  csl_port p_a$i(input,$val8);\n"; 
        print FH "  csl_port p_a_br$i(input,brt);\n";
        print FH "  csl_port pa(input,$val2);\n";
        print FH "  csl_port p(input,$val9);\n";
        print FH "  csl_signal s_a$i($val);\n";
        print FH "  csl_signal sa($val2);\n";
    }
    print FH "  a() {\n";                
    print FH "  }\n";        
    print FH "};\n";        
    print FH "\n";
    print FH "csl_unit b {\n";  
    print FH "  a a0;\n";
    print FH "  a a1;\n";
    if($i == 1) {
        print FH "  csl_port p_b$i(input,$val);\n";
        print FH "  csl_port p(input,$val12);\n";
        print FH "  csl_port pb(input,$val8);\n";
        print FH "  csl_signal s_b_br$i(br);\n";
        print FH "  csl_signal s_b$i($val);\n";
        print FH "  csl_signal sb($val2);\n";
    }
    elsif($i > 1 && $i <= 3) {      
        print FH "  csl_port p_b$i(output,$val2);\n";
        print FH "  csl_port pb(output,$val12);\n";
        print FH "  csl_port p_b_br$i(output,br);\n";
        print FH "  csl_port p(output,$val8);\n";
        print FH "  csl_signal s_b$i(br1[$u:$l]);\n";
        
    }
    elsif($i > 3) {      
        print FH "  csl_port p_b$i(output,$val8);\n";
        print FH "  csl_port p_b_br$i(input,brt);\n";
        print FH "  csl_port p(input,$val8);\n";
        print FH "  csl_port pb(input,$val2);\n";
        print FH "  csl_signal s_b$i($val2);\n";
        print FH "  csl_signal s_b_br$i(br);\n";
        print FH "  csl_signal sb($val9);\n";
    }
    print FH "  b() {\n";
    print FH "  }\n";        
    print FH "};\n";        
    print FH "\n";
    
    print FH "csl_unit c {\n";  
    print FH "   b b0;\n";
    print FH "   b b1;\n";
    if($i <= 3) {
        print FH "  csl_port p_c$i(input,$val);\n";
        print FH "  csl_port pc(input,$val2);\n";
        print FH "  csl_port p_c_br$i(output,brt);\n";
        print FH "  csl_port p(input,$val);\n";
        print FH "  csl_signal s_c$i($val);\n";
        print FH "  csl_signal sc($val8);\n";
    }
    elsif($i == 4) {      
        print FH "  csl_port p_c$i(output,$val2);\n";
        print FH "  csl_port p(output,$val12);\n";
        print FH "  csl_port pc(input,$val12);\n";
        print FH "  csl_signal sc($val3);\n";
        print FH "  csl_signal s_c_br$i(brt);\n";
        print FH "  csl_signal s_c$i($val2);\n";
    }
    elsif($i == 5) {      
        print FH "  csl_port pc(input,$val12);\n";
        print FH "  csl_port p(input,$val12);\n";
        print FH "  csl_port p_c_br$i(input,brt);\n";
        print FH "  csl_signal s_c$i($val8);\n";
        print FH "  csl_signal sc($val2);\n";
    }
    print FH "  c() {\n";
    print FH "  }\n";        
    print FH "};\n";        
    print FH "\n";
    
    print FH "csl_unit d {\n";  
    print FH "  a a0;\n";
    print FH "  b b0;\n";
    print FH "  c c0;\n"; 
    print FH "  c c1;\n";
    if($i <= 2) {
        print FH "  csl_port p_d$i(input,$val15);\n"; 
        print FH "  csl_port p_d_br$i(input,brt);\n";
        print FH "  csl_port p(input,$val8);\n";
        print FH "  csl_signal s_d_br$i($w);\n";
        print FH "  csl_signal s_d$i(br1[$u:$l]);\n";
    }
    elsif($i > 2 && $i <= 4) {      
        print FH "  csl_port p_d$i(output,$val);\n";
        if($val3 != 0) {
            print FH "  csl_port p(output,$val3);\n";
        }
        elsif($val4 != 0) {
            print FH "  csl_port p(output,$val4);\n"
        }
        else {
            print FH "  csl_port p(output,$val2);\n"
        }
        print FH "  csl_port pd(output,$val8);\n";
        print FH "  csl_signal s_d$i($val9);\n";
    }
    elsif($i > 4) {      
      print FH "  csl_port p_d$i(input,$val);\n";
      print FH "  csl_port p(input,$val2);\n";
      if($val4 != 0) {  
          print FH "  csl_signal s_d$i($val4);\n";
          print FH "  csl_signal s_d_br$i($val4);\n";
      }
      else {
          print FH "  csl_signal s_d$i($val2);\n";
          print FH "  csl_signal s_d_br$i($val2);\n"; 
      }
      print FH "  csl_signal sd($val14);\n";
    }
    print FH "  d() {\n";
    if($i <= 2) {
        print FH "    {5{b0.a0.p_a$i}}.connect_by_pattern(p_d$i);\n";
        print FH "    {c0.c0.a1.p,c0.b0.a0.p_a_br$i}.connect_by_pattern(p_d_br$i);\n";
        print FH "    {c0.p_c$i}.connect_by_pattern(p[$u:$l]);\n";
    }
    elsif($i > 2 && $i <= 4) {
        if($val3 != 0){
            print FH "    {3{b0.a1.pa}}.connect_by_pattern(s_d$i"."[$u:$l]);\n";   
            print FH "    {3{d.p}}.connect_by_pattern(b0.p[$u-:$l]);\n";
        }
        elsif($val4 != 0) {
            print FH "    {4{b0.a1.pa}}.connect_by_pattern(s_d$i"."[$u:$l]);\n";   
            print FH "    {4{d.p}}.connect_by_pattern(b0.p_b".$i."[$u-:$l]);\n";
        }
        else {
            print FH "    {2{a0.pa}}s_d$i"."[$u:$l].connect_by_pattern(s_d$i"."[$u:$l]);\n";
            print FH "    {d.p}.connect_by_pattern(b0.p_b".$i."[$u-:$l]);\n";
        }
        print FH "    {2{a0.sa}}.connect_by_pattern(pd[$u:$l]);\n";
    }
    elsif($i > 4) {
        print FH "    {2{c0.pc}}.connect_by_pattern(sd);\n";
        if($val4 != 0) {
            print FH "    {s_d_br$i,s_d$i}.connect_by_pattern(b0.p[$u:$l]);\n";
        }
        else {  
            print FH "    {2{s_d_br$i}}.connect_by_pattern(b0.p[$u:$l]);\n";
        }
    }
    
    print FH "  }\n";        
    print FH "};\n";        
    print FH "\n";
    

    print FH "csl_unit e {\n";  
    print FH "  c c0;\n";
    print FH "  d d0;\n";
    print FH "  d d1;\n";
    if($i == 1 ) {
        print FH "  csl_port p_e$i(input,$val9);\n"; 
        print FH "  csl_port p_e_br$i(input,brt);\n";   
        print FH "  csl_port p(input,$val2);\n";
        print FH "  csl_signal s_e$i($val8);\n";
        if($val4 != 0) {
            print FH "  csl_signal se($val4);\n";
            print FH "  csl_signal s($val4);\n";
        }
        else {
            print FH "  csl_signal se($val2);\n";
            print FH "  csl_signal s($val2);\n";
        }
        print FH "  csl_signal s_e_br$i(brt);\n";
        
    }
    elsif($i > 1 && $i <= 3) {      
        print FH "  csl_port p_e$i(output,$val9);\n";    
        print FH "  csl_port p(output,$val2);\n";
        print FH "  csl_port p_e_br$i(output,brt);\n";
        print FH "  csl_signal s_e$i($val8);\n";
        print FH "  csl_signal s_e_br$i($val12);\n";
    }
    elsif($i > 3) {      
        print FH "  csl_port p_e$i(input,$val);\n";
        print FH "  csl_port p(input,$val8);\n";
        print FH "  csl_port pe(input,$val);\n";
        print FH "  csl_signal se($val15);\n";
    }
    print FH "  e() {\n";
    if($i == 1) {
        print FH "    {c0.b0.p_b$i,c0.b0.p}.connect_by_pattern(s_e_br$i);\n";
        print FH "    {2{c0.b1.sb}}.connect_by_pattern(p_e$i"."[$u:$l]);\n";
        if($val4 != 0){
            print FH "    {se,s}.connect_by_pattern(b0.pb[$u:$l]);\n";
        }
        else {  
            print FH "    {2{se}}.connect_by_pattern(b0.pb[$u:$l]);\n";
        }
    }
    elsif($i > 1 && $i <= 3) {
        if($val4 != 0) {
            print FH "    {4{c0.b1.a1.s_a$i}}.connect_by_pattern(p_e$i"."[$u:$l]);\n";
        }
        else {
            print FH "    {2{c0.b0.a1.s_a$i}}.connect_by_pattern(p_e$i"."[$u:$l]);\n";
        }
        print FH "    {2{c0.b1.p_b$i}}.connect_by_pattern(s_e$i"."[$u:$l]);\n";
    }
    elsif($i > 3) {
        print FH "    {c0.b0.pb,c0.b1.p_b$i}.connect_by_pattern(p[$u:$l]);\n";
        print FH "    {5{d0.c1.b1.p_b$i}}.connect_by_pattern(se);\n";
    }
    print FH "  }\n";        
    print FH "};\n";        
    print FH "\n";
    
    print FH "csl_unit top {\n";
    print FH "  d d0;\n";
    print FH "  d d1;\n";
    print FH "  e e0;\n";
    print FH "  e e1;\n";
    if($i <= 2) {
        print FH "  csl_port ptop(input,$val8);\n";
        print FH "  csl_port p(input,$val2);\n";
        print FH "  csl_signal s_top$i($val16);\n";
        print FH "  csl_signal stop($val14);\n";
    }
    elsif($i == 3) {
        print FH "  csl_port p_top$i(output,$val3);\n";      
        print FH "  csl_port p(output,$val9);\n";
        print FH "  csl_port ptop(output,$val8);\n"; 
        print FH "  csl_signal stop($val14);\n";
        print FH "  csl_signal s_top$i($val14);\n";
    }
    elsif($i > 3) {
        print FH "  csl_port p_top$i(input,$val2);\n";      
        print FH "  csl_port p(input,$val8);\n";
        print FH "  csl_port ptop(input,$val9);\n";
        print FH "  csl_signal s_top$i(br1[$u:$l]);\n";
        print FH "  csl_signal s_top_br$i(brt);\n";
        print FH "  csl_signal stop($w);\n";
    }
    
    print FH "  top(){\n";
    if($i <= 2) {
        print FH "    {e0.d0.bc0.b0.a0.p_a_br$i,e0.d0.c0.b0.a0.p}.connect_by_pattern(stop);\n";
        print FH "    {d1.c0.p_c$i,d1.c0.pc,p}.connect_by_pattern(s_top$i);\n";
        print FH "    {2{e1.d1.c0.b1.a0.sa}}.connect_by_pattern(d0.p"."[$u:$l]);\n";
    }
    elsif($i == 3) {
        print FH "    {4{e1.d0.a0.p_a$i}}.connect_by_pattern(s_top$i);\n";
        print FH "    {2{e0.d0.b0.pb}}.connect_by_pattern(stop);\n";
        print FH "    {2{d1.a0.sa}}.connect_by_pattern(p[$u:$l]);\n";
    }
    elsif($i > 3) {
        print FH "    {e0.p_e$i,e0.pe}.connect_by_pattern(s_top_br$i);\n";
        print FH "    {4{d0.p_d$i}}.connect_by_pattern(s_top_br$i);\n";
        print FH "    {2{p_top$i}}.connect_by_pattern(d0.b0.p_b$i"."[$u-:$l]);\n";
    }
    print FH "  }\n";        
    print FH "};\n";        
    print FH "\n";
   
    close(FH);

}
