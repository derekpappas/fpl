#!/usr/bin/perl

#Author Petronela
use strict;
use Switch;

my $path = "$ENV{WORK}/test/csl_test_gen/";
print "the path for generated tests is : $path"."conn_pattern_p_s_ifc_sg_u_invalid/ \n";

if(! defined $ENV{WORK}){
    die "[ERROR] The environment variable WORK is not set. Set it to point to TOT/se";
}

my $totDir     = $ENV{WORK};
&testDirExists($totDir);

sub testDirExists {
    my($execName) = @_;
    unless(-e "$execName") { die "[ERROR] The directory $execName does not exist!\n"; }
    
}

sub mkDir {
    my($dirName) = @_;
    unless(-e "$dirName")  { `mkdir $dirName`; }
}

sub word {
    my $val = $_[0];
    my @alpha = ('a'..'z','A'..'Z');
    my @alphanumeric = ('a'..'z','A'..'Z','0'..'9');
    my $ret = $alpha[rand @alpha]."zz";
    for(my $i=1;$i < $val; ++$i){
        $ret = $ret.$alphanumeric[rand @alphanumeric];
    }
    return $ret;
}

my @units = ("fifo","register","register_file","memory");
foreach my $unit(@units){
    foreach(my $i = 1; $i <= 15; $i++) {
        my @map1  = ("p_a$i","pa","p");
        my @map11 = ("p_ifca$i","p_ifa");
        my @map12 = ("p_ifcb$i","p_ifb","p_if");
        my @map2  = ("p","p_b$i");
        my @map21 = ("p_ifca$i","p_ifa","p_if");
        my @map22 = ("p_ifcb$i","p_ifb");
        my @map3  = ("pc","p","p_c_br$i");
        my @map31 = ("p_ifca$i","p_ifa","p_if","p_ifta$i");
        my @map32 = ("p_ifcb$i","p_ifb","p_if","p_iftb$i","p_b");
        
        if($i <= 5 ) {  
            foreach my $it1 (@map1) {
                if($i <= 2 ) {
                    foreach my $it2 (@map11) {
                        &main($i,$it1,$it2,$unit);
                    }
                }   
                else {
                    foreach my $it3(@map12) { 
                        &main($i,$it1,$it3,$unit);
                    }
                }
            }
        }
        elsif($i > 5 && $i <= 10) {
            foreach my $it1 (@map2) {
                if($i > 5 && $i <= 7) {
                    foreach my $it2(@map21) {
                        &main($i,$it1,$it2,$unit);
                    }
                }
                else {
                    foreach my $it3(@map22) {
                        &main($i,$it1,$it3,$unit);
                    }
                }
            }       
        }
        elsif($i > 10 && $i <= 15) {
            foreach my $it1 (@map3) {
                if($i > 10 && $i <= 12) {
                    foreach my $it2(@map31) {
                        &main($i,$it1,$it2,$unit);
                    }
                }
                else {
                    foreach my $it3(@map32) {
                        &main($i,$it1,$it3,$unit);
                    }       
                }
            }       
        }
    }
}

sub main {
    my ($i,$it1,$it2,$unit) = @_;
    my $test_name = "connect_pattern_p_s_ifc_sg_".$unit."_".$i."_".$it1."_".$it2."_illegal.csl";
    &createCslFile($test_name, $i,$it1,$it2,$unit);
}
sub createCslFile {
    my($test_name, $i,$it1,$it2,$unit) = @_;
    my $l = 3;
    my $u = 3+int(rand(30)) +1;
    my $val1 = $u+int(rand(30)) + 1;
    my $val2 = int(rand(40)) + 1;
    my $val3 = int(rand(40)) + 1;
    my $val4 = int(rand(30)) + 1;
    my $val5 = int(rand(30)) + 1;
    my $word = &word($val1);
    my $word1 = &word($val2);
    my $word2 = &word($val1);
    my $word3 = &word($val2);
    my $word4 = &word($val3);
    my $word5 = &word($val4);
    my $word6 = &word($val5);
    my $word7 = &word($val3);
    my $word8 = &word($val5);
    my $word9 = &word($val3);
    my $word10 = &word($val4);
    my $word11 = &word($val5);
    my $word12 = &word($val3);
    my $word13 = &word($val5);
    &mkDir("$path/conn_pattern_p_s_ifc_sg_u_invalid");
    open(FH,">$path/conn_pattern_p_s_ifc_sg_u_invalid/$test_name");
    
    print FH "//Generated by Petronela\n";
    print FH "//testing the method connect_by_pattern for conections port to units(unit,fifo,memory,register_file,register), signal to units, ifc to units ,signal_group to units,signal_group.sig to units, ifc.p to units\n\n";
    print FH "csl_bitrange br($val1);\n";
    print FH "csl_bitrange brt($val2);\n";
    print FH "csl_interface ifca {\n";
    if($i <= 5 ) {
        print FH "  csl_port p_ifca$i(input,$val1);\n";
        print FH "  csl_port p_ifa(input,$val1);\n";
    }
    elsif($i > 5 && $i <= 10) {
        print FH "  csl_port p_ifca$i(output,$val1);\n";
        print FH "  csl_port p_ifa(output,$val1);\n";
        print FH "  csl_port p_if(output,$val1);\n";
    }
    elsif($i > 10 ) { 
        print FH "  csl_port p_ifca$i(input,$val1);\n";
        print FH "  csl_port p_ifa(input,$val1);\n";
        print FH "  csl_port p_if(input,$val1);\n";
        print FH "  csl_port p_ifta$i(input,$val1);\n";
    }
    print FH "  ifca() {\n";
    print FH "  }\n";        
    print FH "};\n";        
    print FH "\n";

    print FH "csl_interface ifcb {\n";
    print FH "  ifca ifca0;\n";
    if($i <= 5 || ($i > 20 && $i <= 25)) {
        print FH "  csl_port p_ifcb$i(input,$val1);\n";
        print FH "  csl_port p_ifb(input,$val1);\n";
        print FH "  csl_port p_if(input,$val1);\n";
    }
    elsif($i > 5 && $i <= 10) {
        print FH "  csl_port p_ifcb$i(output,$val1);\n";
        print FH "  csl_port p_ifb(output,$val1);\n";
        
    }
    elsif($i > 10) {  
        print FH "  csl_port p_ifcb$i(input,$val1);\n";
        print FH "  csl_port p_ifb(input,$val1);\n";
        print FH "  csl_port p_if(input,$val1);\n";
        print FH "  csl_port p_iftb$i(input,$val1);\n";
        print FH "  csl_port p_b(input,$val1);\n";
    }
    print FH "  ifcb() {\n";
    print FH "  }\n";        
    print FH "};\n";        
    print FH "\n";
   
    print FH "csl_signal_group sga {\n";
    print FH "  csl_signal s_sga($val1);\n";
    print FH "  csl_signal s_sa($val2);\n";
    print FH "  csl_signal s_sgga($val1);\n";
    print FH "  csl_signal s_siga($val1);\n";
    print FH "  csl_signal s_sigga($val1);\n";
    print FH "  sga() {\n";
    print FH "  }\n";
    print FH "};\n\n";
    print FH "csl_signal_group sgb {\n";
    print FH "  sga sga0;\n";
    print FH "  csl_signal s_sgb($val1);\n";
    print FH "  csl_signal s_sb($val1);\n";
    print FH "  csl_signal s_sggb($val1);\n";
    print FH "  csl_signal s_sigb($val1);\n";
    print FH "  csl_signal s_siggb($val1);\n";
    print FH "  sgb() {\n";
    print FH "  }\n";
    print FH "};\n\n";

    print FH "csl_$unit ua {\n";
    print FH "  ua(){\n";
    print FH "    set_width($val4);\n";
    if($unit ne "register"){
        print FH "    set_depth($val1);\n";
    }
    else{
        print FH "    set_type(register);\n";
    }   
    print FH "  }\n";
    print FH "};\n\n";
    
    print FH "csl_$unit ub {\n";
    print FH "  ub(){\n";
    print FH "    set_width($val4);\n";
    if($unit ne "register"){
        print FH "    set_depth($val1);\n";
    }
    else{
        print FH "    set_type(register);\n";
    }  
    print FH "  }\n";
    print FH "};\n\n";
    
    print FH "csl_unit a {\n";
    print FH "  ua ua0;\n";
    print FH "  ua ua1;\n";
    print FH "  ifca ifca1;\n";
    print FH "  ifcb ifcb0;\n";
    print FH "  sga sga1;\n";
    print FH "  sgb sgb0;\n";
    if($i <= 5  || ($i > 25 && $i <= 30)) {
        print FH "  csl_port p_a$i(input,$val1);\n"; 
        print FH "  csl_port pa(input,$val1);\n";
        print FH "  csl_port p(input,$val1);\n";
        print FH "  csl_signal s_a$i($val1);\n";
        print FH "  csl_signal sa($val1);\n";
    }
    elsif($i > 5 && $i <= 10) {
        print FH "  csl_port p_a$i(output,$val1);\n"; 
        print FH "  csl_port pa(output,$val1);\n";
        print FH "  csl_port p(output,$val1);\n";
        print FH "  csl_signal s_a$i($val1);\n";
        print FH "  csl_signal sa($val1);\n";
    }
    elsif($i > 10 && $i <= 25) {
        print FH "  csl_port p_a$i(input,$val1);\n"; 
        print FH "  csl_port p_a_br$i(input,br);\n";
        print FH "  csl_port pa(input,$val1);\n";
        print FH "  csl_port p(input,$val1);\n";
        print FH "  csl_signal s_a$i($val1);\n";
    }
    print FH "  a() {\n";    
    print FH "  }\n";        
    print FH "};\n";        
    print FH "\n";
    print FH "csl_unit b {\n";  
    print FH "  a a0;\n";
    print FH "  a a1;\n";
    print FH "  ub ub0;\n";
    print FH "  ua ua1;\n";
    print FH "  ub ua0;\n";
    print FH "  ifca ifca1;\n";
    print FH "  ifcb ifcb0;\n";
    print FH "  sga sga1;\n";
    print FH "  sgb sgb0;\n";
    if($i <= 5) {
        print FH "  csl_port p_b$i(input,$val1);\n";
        print FH "  csl_port p(input,$val1);\n";
        print FH "  csl_signal s_b$i($val1);\n";
        print FH "  csl_signal sb($val1);\n";
    }
    elsif(($i > 5 && $i <= 10) || ($i > 20 && $i <= 25) ) {      
        print FH "  csl_port p_b$i(output,$val1);\n";
        print FH "  csl_port pb(output,$val1);\n";
        print FH "  csl_port p_b_br$i(output,br);\n";
        print FH "  csl_port p(output,$val1);\n";
        print FH "  csl_signal s_b_br$i(br);\n";
        print FH "  csl_signal s_b$i($val1);\n";
    }
    elsif($i > 10) {      
        print FH "  csl_port p_b$i(input,$val1);\n";
        print FH "  csl_port p_b_br$i(input,br);\n";
        print FH "  csl_port p(input,$val1);\n";
        print FH "  csl_signal sb($val1);\n";
        print FH "  csl_signal s_b_br$i(br);\n";
    }
    print FH "  b() {\n";
    if($i <= 5){
        print FH "    ifcb0.p_ifb[$u:$l].connect_by_pattern(a0,$word);\n";
        print FH "    s_b$i"."[$u:$l].connect_by_pattern(a1);\n";
        print FH "    sgb0.s_sb.connect_by_pattern(a1,$word1);\n";
        print FH "    s_b$i.connect_by_pattern(ua1);\n";
        print FH "    ifcb0.p_ifb.connect_by_pattern(ua0,$word);\n";
        print FH "    sgb0.s_sb.connect_by_pattern(ub0,$word1);\n";
    }
    elsif($i > 5 && $i <= 7) {
        print FH "    a1.connect_by_pattern(a0.ifcb0.ifca1.p_ifa,$word1);\n";
        print FH "    a0.connect_by_pattern(a1.ifcb0);\n";
        print FH "    a0.ifcb0.p_ifb.connect_by_pattern(a0,$word);\n";
        print FH "    ua1.connect_by_pattern(a0.ifca1.p_ifa[$u:$l],$word1);\n";
        print FH "    ub0.connect_by_pattern(a1.ifcb0);\n";
        print FH "    a0.ifcb0.p_ifb[$u:$l].connect_by_pattern(ub1,$word);\n";
    }
    elsif($i > 7 && $i <=10) {
        print FH "    $it1.connect_by_pattern(ua1,$word1);\n";
        print FH "    a1.connect_by_pattern(ub1.ifcb0.ifca1.p_ifca$i,$word);\n";
        print FH "    a0.connect_by_pattern(s_b_br$i);\n";
    }
    elsif($i > 10 && $i <= 15) {
        print FH "    a0.ifca1.p_ifta$i.connect_by_pattern(a1,$word);\n";
        print FH "    a1.sgb0.sga0.connect_by_pattern(a0,$word1);\n";
        print FH "    a0.ifca1.p_ifta$i.connect_by_pattern(ua1,$word);\n";
        print FH "    a1.sgb0.sga0.connect_by_pattern(ub0,$word1);\n";
    }
    print FH "  }\n";        
    print FH "};\n";        
    print FH "\n";
    
    print FH "csl_unit c {\n";  
    print FH "  b b0;\n";
    print FH "  b b1;\n";
    print FH "  a a0;\n";
    print FH "  ub ub0;\n";
    print FH "  ua ub1;\n";
    print FH "  ub ua0;\n";
    print FH "  ifca ifca1;\n";
    print FH "  ifcb ifcb0;\n";
    print FH "  sga sga1;\n";
    print FH "  sgb sgb0;\n";
    if($i <= 5 || $i > 20 && $i <= 25 ) {
        print FH "  csl_port p_c$i(input,$val1);\n";
        print FH "  csl_port pc(input,$val1);\n";
        print FH "  csl_port p_c_br$i(input,br);\n";
        print FH "  csl_port p(input,$val1);\n";
        print FH "  csl_signal sc($val1);\n";
    }
    elsif($i > 5 && $i <= 10) {      
        print FH "  csl_port p_c$i(output,$val1);\n";
        print FH "  csl_port p(output,$val1);\n";
        print FH "  csl_signal sc($val1);\n";
        print FH "  csl_signal s_c$i($val1);\n";
        print FH "  csl_signal s_c_br$i(br);\n";
    }
    elsif($i > 10 && $i <= 20) {      
        print FH "  csl_port pc(input,$val1);\n";
        print FH "  csl_port p(input,$val1);\n";
        print FH "  csl_port p_c_br$i(input,br);\n";
        print FH "  csl_signal s_c$i($val1);\n";
        print FH "  csl_signal s($val1);\n";
        print FH "  csl_signal sc($val1);\n";
    }
    print FH "  c() {\n";
    if($i <= 5){
        print FH "    b0.ifca1.connect_by_pattern(b0.a0,$word2);\n";
        print FH "    sc.connect_by_pattern(b1,$word3);\n";
        print FH "    b0.ifca1.connect_by_pattern(b0.ua0,$word2);\n";
        print FH "    sc.connect_by_pattern(ub1,$word3);\n";
    }
    elsif($i > 5 && $i <= 10) {
        print FH "    b0.connect_by_pattern(b0.ifca1.p_ifa,$word2);\n";
        print FH "    a0.sgb0.s_sggb.connect_by_pattern(b1,$word3);\n";
        print FH "    ub0.connect_by_pattern(b0.ifca1.p_ifa,$word2);\n";
        print FH "    a0.sgb0.s_sggb[$u:$l].connect_by_pattern(ub1,$word3);\n";
    }
    elsif($i > 10 && $i <= 12) {
        print FH "    $it1.connect_by_pattern(a1,$word3);\n";
        print FH "    b0.connect_by_pattern(a0.ifcb0.p_b,$word2);\n";
        print FH "    $it1.connect_by_pattern(ua1,$word3);\n";
        print FH "    b0.ub0.connect_by_pattern(a0.ifcb0.p_b,$word2);\n";
    }
    elsif($i > 12 && $i <= 15) {
        print FH "    b1.connect_by_pattern(a1.ifcb0,$word3);\n";
        print FH "    a0.connect_by_pattern(sc,$word2);\n";
        print FH "    ub1.connect_by_pattern(a1.ifcb0,$word3);\n";
        print FH "    ua0.connect_by_pattern(sc,$word2);\n";
    }
    print FH "  }\n";        
    print FH "};\n";        
    print FH "\n";
    
    print FH "csl_unit d {\n";  
    print FH "  a a0;\n";
    print FH "  b b0;\n";
    print FH "  b b1;\n";
    print FH "  c c1;\n";
    print FH "  c c0;\n";; 
    print FH "  ub ub0;\n";
    print FH "  ua ub1;\n";
    print FH "  ub ub2;\n";
    print FH "  ifca ifca2;\n";
    print FH "  ifcb ifcb1;\n";
    print FH "  sga sga2;\n";
    print FH "  sgb sgb1;\n";
    if($i <= 5) {
        print FH "  csl_port p_d$i(input,$val1);\n"; 
        print FH "  csl_port p_d_br$i(input,br);\n";
        print FH "  csl_port p(input,$val1);\n";
        print FH "  csl_signal s_d$i($val1);\n";
        print FH "  csl_signal sd($val1);\n";
    }
    elsif($i > 5 && $i <= 10  ) {      
        print FH "  csl_port p_d$i(output,$val1);\n";
        print FH "  csl_port p(output,$val1);\n";
        print FH "  csl_port pd(output,$val1);\n";
        print FH "  csl_signal s_d$i($val1);\n";
        print FH "  csl_signal s_d_br$i($val1);\n";
    }
    elsif($i > 10 && $i <= 15) {      
       print FH "  csl_port p_d$i(input,$val1);\n";
       print FH "  csl_port p(input,$val1);\n";
       print FH "  csl_signal sd($val1);\n";
       print FH "  csl_signal s_d$i($val1);\n";
       print FH "  csl_signal s_d_br$i($val1);\n";
    }
    print FH "  d() {\n";
if($i <= 2) {
        print FH "    c0.b0.p_b$i"."[$u:$l].connect_by_pattern(c0,$word4);\n";
        print FH "    b0.sb.connect_by_pattern(b0.a0,$word11);\n";
        print FH "    c0.connect_by_pattern(c1.ifcb0.p_if,$word5);\n";
        print FH "    c0.b0.p_b$i.connect_by_pattern(c0.ub1,$word4);\n";
        print FH "    b0.sb.connect_by_pattern(b0.ub0,$word11);\n";
        print FH "    c0.ub0.connect_by_pattern(c1.ifcb0.p_if[$u:$l],$word5);\n";
    }
    elsif($i >2 && $i <= 5) {
        print FH "    c0.connect_by_pattern(a0.ifcb0,$word4);\n";
        print FH "    s_d$i.connect_by_pattern(b0,$word5);\n";
        print FH "    a0.ifcb0.ifca1.p_ifca$i.connect_by_pattern(b0,$word11);\n";
        print FH "    c0.ub0.connect_by_pattern(a0.ifcb0,$word4);\n";
        print FH "    s_d$i.connect_by_pattern(c0.ub0,$word5);\n";
        print FH "    a0.ifca1.p_ifca$i.connect_by_pattern(a0.ub0,$word11);\n";
    }
    elsif($i > 5 && $i <= 7) {
        print FH "    s_d$i.connect_by_pattern(c0,$word4);\n";
        print FH "    c0.connect_by_pattern(s_d_br$i,$word5);\n";
        print FH "    s_d$i.connect_by_pattern(c0.ub1,$word4);\n";
        print FH "    ub2.connect_by_pattern(s_d_br$i,$word5);\n";
    }
    elsif($i > 7 && $i <= 10) {
        print FH "    a0.connect_by_pattern(p_d$i,$word5);\n";
        print FH "    s_d_br$i.connect_by_pattern(a0,$word4);\n";
        print FH "    a0.ua0.connect_by_pattern(p_d$i,$word5);\n";
        print FH "    s_d_br$i.connect_by_pattern(a0.ub0,$word4);\n";
    }
    elsif($i > 10 && $i <= 15) {
        print FH "    sd[$u:$l].connect_by_pattern(b0,$word4);\n";
        print FH "    p_d$i.connect_by_pattern(b0,$word5);\n";
        print FH "    sd[$u:$l].connect_by_pattern(b0.ua0,$word4);\n";
        print FH "    p_d$i.connect_by_pattern(b0.ub0,$word5);\n";
    }
    
    print FH "  }\n";        
    print FH "};\n";        
    print FH "\n";
    

    print FH "csl_unit e {\n";  
    print FH "  b b0;\n";
    print FH "  c c0;\n";
    print FH "  c c1;\n";
    print FH "  d d0;\n";
    print FH "  d d1;\n";
    print FH "  ub ub0;\n";
    print FH "  ua ub1;\n";
    print FH "  ub ua1;\n";
    print FH "  ub ua0;\n";
    print FH "  ifca ifca3;\n";
    print FH "  ifcb ifcb2;\n";
    print FH "  sga sga3;\n";
    print FH "  sgb sgb2;\n";
    if($i <= 5) {
        print FH "  csl_port p_e$i(input,$val1);\n"; 
        print FH "  csl_port p_e_br$i(input,br);\n";   
        print FH "  csl_port p(input,$val1);\n";
        print FH "  csl_signal s_e$i($val1);\n";
        print FH "  csl_signal s_e_br(br);\n";
    }
    elsif($i > 5 && $i <= 10) {      
        print FH "  csl_port p_e$i(output,$val1);\n";    
        print FH "  csl_port p(output,$val1);\n";
        print FH "  csl_port p_e_br$i(output,br);\n";
        print FH "  csl_signal se($val1);\n";
    }
    elsif($i > 10 && $i <= 15) {      
        print FH "  csl_port p_e$i(input,$val1);\n";
        print FH "  csl_port p(input,$val1);\n";
        print FH "  csl_port pe(input,$val1);\n";
        print FH "  csl_signal s_e_br$i(br);\n";
        print FH "  csl_signal se($val1);\n";
    }
    print FH "  e() {\n";
    if($i <= 5) {
        print FH "    d0.connect_by_pattern(c1.b0.ifca1.p_ifa,$word6);\n";
        print FH "    b0.a0.sa[$u:$l].connect_by_pattern(c0,$word10);\n";
        print FH "    d0.ub1.connect_by_pattern(c1.b0.ifca1.p_ifa[$u:$l],$word6);\n";
        print FH "    b0.a0.sa.connect_by_pattern(c0.ua0,$word10);\n";
    }
    elsif($i > 5 && $i <= 10) {
        print FH "    se.connect_by_pattern(c0,$word9);\n";
        print FH "    b0.connect_by_pattern(ifcb2,$word6);\n";
        print FH "    se.connect_by_pattern(c0.ua1,$word9);\n";
        print FH "    b0.ua1.connect_by_pattern(ifcb2,$word6);\n";
    }
    elsif($i > 10 && $i <= 15) {
        print FH "    ifca3.p_if.connect_by_pattern(c0.b1,$word6);\n";
        print FH "    s_e_br$i.connect_by_pattern(c1.b0,$word10);\n";
        print FH "    sgb2.sga0.connect_by_pattern(c1.b1.a0,$word9);\n";
        print FH "    ifca3.p_if[$u:$l].connect_by_pattern(c0.b1.ua1,$word6);\n";
        print FH "    s_e_br$i.connect_by_pattern(c1.b0.ub1,$word10);\n";
        print FH "    sga3.connect_by_pattern(c1.b1.a0.ua1,$word9);\n"
    }
    print FH "  }\n";        
    print FH "};\n";        
    print FH "\n";
    
    print FH "csl_unit top {\n";
    print FH "  d d0;\n";
    print FH "  d d1;\n";
    print FH "  e e0;\n";
    print FH "  e e1;\n";
    print FH "  e e2;\n";
    print FH "  ub ub0;\n";
    print FH "  ua ub1;\n";
    print FH "  ub ua1;\n";
    print FH "  ub ua0;\n";
    print FH "  ifca ifca4;\n";
    print FH "  ifcb ifcb3;\n";
    print FH "  sga sga4;\n";
    print FH "  sgb sgb3;\n";
    if($i <= 5) {
        print FH "  csl_port ptop(input,$val1);\n";
        print FH "  csl_port p(input,$val1);\n";
        print FH "  csl_signal s_top$i($val1);\n";
        print FH "  csl_signal stop($val1);\n";
    }
    elsif($i > 5 && $i <= 10) {
        print FH "  csl_port p_top$i(output,$val1);\n";      
        print FH "  csl_port p(output,$val1);\n";
        print FH "  csl_port ptop(output,$val1);\n";        
        print FH "  csl_signal st($val1);\n";
        print FH "  csl_signal s_top_br$i(br);\n";
    }
    elsif($i > 10 && $i <= 15) {
        print FH "  csl_port p_top$i(input,$val1);\n";      
        print FH "  csl_port p(input,$val1);\n";
        print FH "  csl_port p_top_br$i(input,br);\n";
        print FH "  csl_signal s_top$i($val1);\n";
        print FH "  csl_signal stop($val1);\n";
    }
    print FH "  top(){\n";
    if($i <= 5) {
        print FH "    ifca4.p_ifa.connect_by_pattern(d0.a0,$word7);\n";
        print FH "    d0.b0connect_by_pattern(ifca4,$word8);\n";
        print FH "    s_top$i.connect_by_pattern(d0,$word12);\n";
        print FH "    ifcb3.ifca4.p_ifa.[$u:$l].connect_by_pattern(d0.a0.ua1,$word7);\n";
        print FH "    d0.b0.ua1.connect_by_pattern(ifca4,$word8);\n";
        print FH "    s_top$i"."[$u:$l].connect_by_pattern(d0.ub2,$word12);\n";
    }
    elsif($i > 5 && $i <= 10) {
        print FH "    ifcb3.p_ifb.connect_by_pattern(e2.b0,$word8);\n";
        print FH "    e1.connect_by_pattern(st,$word7);\n";
        print FH "    s_top_br$i.connect_by_pattern(d1.b0,$word12);\n";
        print FH "    ifcb3.p_ifb.connect_by_pattern(e2.b0.ua1,$word8);\n";
        print FH "    e1.ub1.connect_by_pattern(st,$word7);\n";
        print FH "    s_top_br$i.connect_by_pattern(d1.ub0,$word12);\n";
    }
    elsif($i > 10 && $i <= 15) {
        print FH "    e1.connect_by_pattern(p[$u:$l],$word7);\n";
        print FH "    e0.sgb2.s_siggb.connect_by_pattern(e1,$word12);\n";
        print FH "    e1.ub1.connect_by_pattern(p[$u:$l],$word7);\n";
        print FH "    e0.sgb2.s_siggb.connect_by_pattern(e1.ua1,$word12);\n";
    }
   
    print FH "  }\n";        
    print FH "};\n";        
    print FH "\n";
   
    close(FH);
}
