#!/usr/bin/perl

#Author Petronela
use strict;
use Switch;

my $path = "$ENV{WORK}/test/csl_test_gen/";
print "the path for generated tests is : $path"."conn_pattern_ifc_sg_invalid/ \n";

if(! defined $ENV{WORK}){
    die "[ERROR] The environment variable WORK is not set. Set it to point to TOT/se";
}

my $totDir     = $ENV{WORK};
&testDirExists($totDir);

sub testDirExists {
    my($execName) = @_;
    unless(-e "$execName") { die "[ERROR] The directory $execName does not exist!\n"; }
    
}

sub mkDir {
    my($dirName) = @_;
    unless(-e "$dirName")  { `mkdir $dirName`; }
}

sub word {
    my $val = $_[0];
    my @alpha = ('a'..'z','A'..'Z');
    my @alphanumeric = ('a'..'z','A'..'Z','0'..'9');
    my $ret = $alpha[rand @alpha]."zz";
    for(my $i=1;$i < $val; ++$i){
        $ret = $ret.$alphanumeric[rand @alphanumeric];
    }
    return $ret;
}



foreach(my $i = 1; $i <= 20; $i++) {
    my @map1  = ("ifca0","ifca1");
    my @map11 = ("ifcb0","ifcb1");
    my @map12 = ("ifcd0","ifcd1");
    my @map2  = ("sga0","sga1");
    my @map21 = ("sgb0","sgb1");
    my @map22 = ("sgd0","sgd1");
    if($i <= 5 ) {  
        foreach my $it1 (@map1) {
            foreach my $it2 (@map2) {
                    &main($i,$it1,$it2);
                }
        }   
    }
    
    elsif($i > 5 && $i <= 10) {
        foreach my $it1 (@map11) {
            foreach my $it2(@map21) {
                    &main($i,$it1,$it2);
                
            }
  
        }       
    }
    elsif($i > 10 && $i <= 20) {
        foreach my $it1 (@map12) {
            foreach my $it2(@map22) {
                &main($i,$it1,$it2);
            }
        }       
    }

}

sub main {
    my ($i,$it1,$it2) = @_;
    my $test_name = "connect_pattern_ifc_sg".$i."_".$it1."_".$it2."_illegal.csl";
    &createCslFile($test_name, $i,$it1,$it2);
}

sub createCslFile {
    my($test_name, $i,$it1,$it2) = @_;
    my $val1 = int(rand(30)) + 1;
    my $val2 = int(rand(30)) + 1;
    my $val3 = int(rand(30)) + 1;
    my $val4 = int(rand(30)) + 1;
    my $word = &word($val1);
    my $word1 = &word($val3);
    my $word2 = &word($val3);
    my $word3 = &word($val2);
    my $word4 = &word($val1);
    my $word5 = &word($val4);
    my $word6 = &word($val1);
    my $word7 = &word($val2);
    my $word8 = &word($val4);
    my $word9 = &word($val3);
    my $word10 = &word($val4);
    my $word11 = &word($val1);
    my $word12 = &word($val3);
    my $word13 = &word($val2);
    my $word14 = &word($val4);
    my $word15 = &word($val1);
    my $word16 = &word($val3);
    my $word17 = &word($val2);
   
    &mkDir("$path/conn_pattern_ifc_sg_invalid");
    open(FH,">$path/conn_pattern_ifc_sg_invalid/$test_name");
    
    print FH "//Generated by Petronela\n";
    print FH "//testing the method connect_by_pattern for invalid conections ifc to ifc, signal_group to ifc, ifc to signal_group  \n";
    print FH "//ifc to ifc.[+]ifc, signal_group to ifc.[+]ifc, ifc.[+]ifc to ifc.[+]ifc, ifc.[+]ifc to sg.[+]sg, ifc.[+]ifc to sg\n\n";
    print FH "csl_bitrange br($val1);\n";
    print FH "csl_bitrange brt($val2);\n";
    print FH "csl_interface ifca {\n";
    if($i <= 5 ) {
        print FH "  csl_port p_ifca$i(input,$val1);\n";
        print FH "  csl_port p_ifa(input,$val1);\n";
        print FH "  csl_port p_if(output,$val1);\n";
    }
    elsif($i > 5 && $i <= 10) {
        print FH "  csl_port p_ifca$i(output,$val1);\n";
        print FH "  csl_port p_ifa(output,$val1);\n";
        
    }
    elsif($i > 10 ) { 
        print FH "  csl_port p_ifca$i(input,$val1);\n";
        print FH "  csl_port p_ifa(input,$val1);\n";
        print FH "  csl_port p_if(input,$val1);\n";
        print FH "  csl_port p_ifta$i(input,$val1);\n";
        print FH "  csl_port p_a(input,$val1);\n";
    }
    print FH "  ifca() {\n";
    print FH "  }\n";        
    print FH "};\n";        
    print FH "\n";

    print FH "csl_interface ifcb {\n";
    print FH "  ifca ifca0;\n";
    print FH "  ifca ifca1;\n";
    if($i <= 5) {
        print FH "  csl_port p_ifca$i(input,$val1);\n";
        print FH "  csl_port p_ifa(input,$val1);\n";
        print FH "  csl_port p_if(input,$val1);\n";
    }
    elsif($i > 5 && $i <= 10) {
        print FH "  csl_port p_ifca$i(output,$val1);\n";
        print FH "  csl_port p_ifa(output,$val1);\n";
        
    }
    elsif($i > 10) {  
        print FH "  csl_port p_ifca$i(input,$val1);\n";
        print FH "  csl_port p_ifa(input,$val1);\n";
        print FH "  csl_port p_if(input,$val1);\n";
        print FH "  csl_port p_ifta$i(input,$val1);\n";
        print FH "  csl_port p_a(input,$val1);\n";
    }
    print FH "  ifcb() {\n";
    print FH "  }\n";        
    print FH "};\n";        
    print FH "\n";
    
    print FH "csl_interface ifcd {\n";
    print FH "  ifcb ifcb0;\n";
    print FH "  ifcb ifcb1;\n";
    if($i <= 5 ) {
        print FH "  csl_port p_ifca$i(input,$val1);\n";
        print FH "  csl_port p_ifa(input,$val1);\n";
    }
    elsif($i > 5 && $i <= 10) {
        print FH "  csl_port p_ifca$i(output,$val1);\n";
        print FH "  csl_port p_ifa(output,$val1);\n";
        print FH "  csl_port p_if(output,$val1);\n";
    }
    elsif($i > 10 ) { 
        print FH "  csl_port p_ifca$i(input,$val1);\n";
        print FH "  csl_port p_ifa(input,$val1);\n";
        print FH "  csl_port p_if(input,$val1);\n";
        print FH "  csl_port p_ifta$i(input,$val1);\n";
    }
    print FH "  ifcd() {\n";
    print FH "  }\n";        
    print FH "};\n";        
    print FH "\n";
    
    print FH "csl_interface ifce {\n";
    print FH "  ifcd ifcd0;\n";
    print FH "  ifcd ifcd1;\n";
    if($i <= 5 ) {
        print FH "  csl_port p_ifca$i(input,$val1);\n";
        print FH "  csl_port p_ifa(input,$val1);\n";
    }
    elsif($i > 5 && $i <= 10) {
        print FH "  csl_port p_ifca$i(output,$val1);\n";
        print FH "  csl_port p_ifa(output,$val1);\n";
        print FH "  csl_port p_if(output,$val1);\n";
    }
    elsif($i > 10 ) { 
        print FH "  csl_port p_ifca$i(input,$val1);\n";
        print FH "  csl_port p_ifa(input,$val1);\n";
        print FH "  csl_port p_if(input,$val1);\n";
        print FH "  csl_port p_ifta$i(input,$val1);\n";
    }
    print FH "  ifce() {\n";
    print FH "  }\n";        
    print FH "};\n";        
    print FH "\n";

    print FH "csl_signal_group sga {\n";
    print FH "  csl_signal p_ifca$i($val1);\n";
    print FH "  csl_signal p_ifa($val1);\n";
    print FH "  csl_signal p_if($val1);\n";
    print FH "  csl_signal p_ifta$i($val1);\n";
    print FH "  sga() {\n";
    print FH "  }\n";
    print FH "};\n\n";
    print FH "csl_signal_group sgb {\n";
    print FH "  sga sga0;\n";
    print FH "  sga sga1;\n";
    print FH "  csl_signal p_ifca$i($val1);\n";
    print FH "  csl_signal p_ifa($val1);\n";
    print FH "  csl_signal p_if($val1);\n";
    print FH "  csl_signal p_ifta$i($val1);\n";
    print FH "  sgb() {\n";
    print FH "  }\n";
    print FH "};\n\n";

    print FH "csl_signal_group sgd {\n";
    print FH "  sgb sgb0;\n";
    print FH "  sgb sgb1;\n";
    print FH "  csl_signal p_ifca$i($val1);\n";
    print FH "  csl_signal p_ifa($val1);\n";
    print FH "  csl_signal p_if($val1);\n";
    print FH "  csl_signal p_ifta$i($val1);\n";
    print FH "  sgd() {\n";
    print FH "  }\n";
    print FH "};\n\n";
    
    print FH "csl_signal_group sge {\n";
    print FH "  sgd sgd0;\n";
    print FH "  sgd sgd1;\n";
    print FH "  csl_signal p_ifca$i($val1);\n";
    print FH "  csl_signal p_ifa($val2);\n";
    print FH "  csl_signal p_if($val1);\n";
    print FH "  csl_signal p_ifta$i($val1);\n";
    print FH "  sge() {\n";
    print FH "  }\n";
    print FH "};\n\n";

    print FH "csl_unit a {\n";
    print FH "  ifca ifca2;\n";
    print FH "  ifcb ifcb2;\n";
    print FH "  ifcd ifcd2;\n";
    print FH "  ifce ifce0;\n";
    print FH "  sga sga2;\n";
    print FH "  sgb sgb2;\n";
    print FH "  sgd sgd2;\n";
    print FH "  sge sge0;\n";
    if($i <= 5) {
        print FH "  csl_port p_a$i(input,$val1);\n"; 
        print FH "  csl_port pa(input,$val1);\n";
        print FH "  csl_port p(input,$val1);\n";
        print FH "  csl_signal s_a$i($val1);\n";
        print FH "  csl_signal sa($val1);\n";
    }
    elsif($i > 5 && $i <= 10) {
        print FH "  csl_port p_a$i(output,$val2);\n"; 
        print FH "  csl_port pa(output,$val2);\n";
        print FH "  csl_port p(output,$val2);\n";
        print FH "  csl_signal s_a$i($val2);\n";
        print FH "  csl_signal sa($val2);\n";
    }
    elsif($i > 10) {
        print FH "  csl_port p_a$i(input,$val1);\n"; 
        print FH "  csl_port p_a_br$i(input,br);\n";
        print FH "  csl_port pa(input,$val1);\n";
        print FH "  csl_port p(input,$val1);\n";
        print FH "  csl_signal s_a$i($val1);\n";
    }
    print FH "  a() {\n";
    print FH "  }\n";        
    print FH "};\n";        
    print FH "\n";
    print FH "csl_unit b {\n";  
    print FH "  a a0;\n";
    print FH "  a a1;\n";
    print FH "  ifca ifca2;\n";
    print FH "  ifcb ifcb2;\n";
    print FH "  ifcd ifcd2;\n";
    print FH "  ifce ifce0;\n";
    print FH "  sga sga2;\n";
    print FH "  sgb sgb2;\n";
    print FH "  sgd sgd2;\n";
    print FH "  sge sge0;\n";
    if($i <= 5) {
        print FH "  csl_port p_b$i(input,$val1);\n";
        print FH "  csl_port p(input,$val1);\n";
        print FH "  csl_signal s_b$i($val1);\n";
        print FH "  csl_signal sb($val1);\n";
    }
    elsif($i > 5 && $i <= 10) {      
        print FH "  csl_port p_b$i(output,$val2);\n";
        print FH "  csl_port pb(output,$val2);\n";
        print FH "  csl_port p_b_br$i(output,brt);\n";
        print FH "  csl_port p(output,$val2);\n";
        print FH "  csl_signal s_b_br$i(brt);\n";
        print FH "  csl_signal s_b$i($val2);\n";
    }
    elsif($i > 10) {      
        print FH "  csl_port p_b$i(input,$val1);\n";
        print FH "  csl_port p_b_br$i(input,br);\n";
        print FH "  csl_port p(input,$val1);\n";
        print FH "  csl_signal sb($val1);\n";
        print FH "  csl_signal s_b_br$i(br);\n";
    }
    print FH "  b() {\n";
    if($i <= 5){
        print FH "    a0.ifcb2.$it1.connect_by_pattern(b.ifcd2);\n";
        print FH "    a1.ifca2.connect_by_pattern(b.ifcb2);\n";
        print FH "    a0.sgb2.$it2.connect_by_pattern(b.ifcd2);\n";
        print FH "    a1.sga2.connect_by_pattern(b.ifcb2);\n";
    }
    elsif($i > 5 && $i <= 10) {
        print FH "    a1.ifcd2.$it1.connect_by_pattern(b.ifca2);\n";
        print FH "    a0.sgd2.$it2.connect_by_pattern(b.ifce0.ifcd1.$it1);\n";
    }
  
    elsif($i > 10 && $i <= 15) {
        print FH "    a1.ifce0.$it1.ifcb1.ifca0.connect_by_pattern(b.sge0.$it2);\n";
        print FH "    a0.sgb2.connect_by_pattern(b.ifcb2.ifca0);\n";
    }
    elsif($i > 15) {
        print FH "    a1.ifce0.$it1.ifcb1.ifca0.no_prefix();\n";
        print FH "    a1.ifce0.$it1.ifcb1.ifca0.connect_by_pattern(b.sge0.$it2);\n";
        print FH "    a0.sgb2.connect_by_pattern(b.ifcb2.ifca0);\n";
    }
    print FH "  }\n";        
    print FH "};\n";        
    print FH "\n";
    
    print FH "csl_unit c {\n";  
    print FH "  b b0;\n";
    print FH "  b b1;\n";
    print FH "  ifca ifca2;\n";
    print FH "  ifcb ifcb2;\n";
    print FH "  ifcd ifcd2;\n"; 
    print FH "  ifce ifce0;\n";
    print FH "  sga sga2;\n";
    print FH "  sgb sgb2;\n";
    print FH "  sgd sgd2;\n";
    print FH "  sge sge0;\n";
    if($i <= 5 ) {
        print FH "  csl_port p_c$i(input,$val1);\n";
        print FH "  csl_port pc(input,$val1);\n";
        print FH "  csl_port p_c_br$i(input,br);\n";
        print FH "  csl_port p(input,$val1);\n";
        print FH "  csl_signal sc($val1);\n";
    }
    elsif($i > 5 && $i <= 10) {      
        print FH "  csl_port p_c$i(output,$val2);\n";
        print FH "  csl_port p(output,$val2);\n";
        print FH "  csl_signal sc($val2);\n";
        print FH "  csl_signal s_c$i($val2);\n";
        print FH "  csl_signal s_c_br$i(brt);\n";
    }
    elsif($i > 10) {      
        print FH "  csl_port pc(input,$val1);\n";
        print FH "  csl_port p(input,$val1);\n";
        print FH "  csl_port p_c_br$i(input,br);\n";
        print FH "  csl_signal s_c$i($val1);\n";
        print FH "  csl_signal s($val1);\n";
        print FH "  csl_signal sc($val1);\n";
    }
    print FH "  c() {\n";
    if($i <= 5){
        print FH "    ifca2.connect_by_pattern(b0.ifcb2.$it1);\n";
        print FH "    b1.sgd2.connect_by_pattern(ifcb2);\n";
    }
    elsif($i > 5 && $i <= 10) {
        print FH "    ifcd2.$it1.ifca0.connect_by_pattern(b0.sgb2);\n";
        print FH "    ifca2.connect_by_pattern(b0.a0.ifce0.ifcd1.$it1);\n";
        print FH "    sgd2.$it2.sga1.connect_by_pattern(ifce0);\n";
    }
    elsif($i > 10 && $i <= 15) {
        print FH "    ifce0.$it1.connect_by_pattern(b1.a0.ifca2);\n";
        print FH "    b0.sge0.$it2.connect_by_pattern(ifcb0.ifca0);\n";
    }
    elsif($i > 15) {
        print FH "    ifce0.set_prefix(\"$word\");\n";
        print FH "    ifce0.$it1.connect_by_pattern(b1.a0.ifca2);\n";
        print FH "    b0.sge0.$it2.connect_by_pattern(ifcb0.ifca0);\n";

    }
    print FH "  }\n";        
    print FH "};\n";        
    print FH "\n";
    
    print FH "csl_unit d {\n";  
    print FH "  a a0;\n";
    print FH "  b b0;\n";
    print FH "  c c1;\n";
    print FH "  c c0;\n"; 
    print FH "  ifca ifca3;\n";
    print FH "  ifcb ifcb3;\n";
    print FH "  ifcd ifcd3;\n";
    print FH "  ifce ifce1;\n";
    print FH "  sga sga3;\n";
    print FH "  sgb sgb3;\n";
    print FH "  sgd sgd3;\n";
    print FH "  sge sge1;\n";
    if($i <= 5 ) {
        print FH "  csl_port p_d$i(input,$val1);\n"; 
        print FH "  csl_port p_d_br$i(input,br);\n";
        print FH "  csl_port p(input,$val1);\n";
        print FH "  csl_signal s_d$i($val1);\n";
        print FH "  csl_signal sd($val1);\n";
    }
    elsif($i > 5 && $i <= 10  ) {      
        print FH "  csl_port p_d$i(output,$val2);\n";
        print FH "  csl_port p(output,$val2);\n";
        print FH "  csl_port pd(output,$val2);\n";
        print FH "  csl_signal s_d$i($val2);\n";
        print FH "  csl_signal s_d_br$i($val2);\n";
    }
    elsif($i > 10 ) {      
       print FH "  csl_port p_d$i(input,$val1);\n";
       print FH "  csl_port p(input,$val1);\n";
       print FH "  csl_signal sd($val1);\n";
       print FH "  csl_signal s_d$i($val1);\n";
       print FH "  csl_signal s_d_br$i($val1);\n";
    }
    print FH "  d() {\n";
    if($i <= 5) {
        print FH "    a0.ifcd2.ifcb0.connect_by_pattern(ifcd3);\n";
        print FH "    c0.ifcb2.ifca1.connect_by_pattern(ifcb3.$it1);\n";
    }
    
    elsif($i > 5 && $i <= 10) {
        print FH "    sgd3.connect_by_pattern(c0.ifce0.ifcd1.$it1);\n";
        print FH "    c0.ifca2.connect_by_pattern(sge0.sgd1.$it2);\n";
    }
    elsif($i > 10 && $i <= 15) {
        print FH "    ifca3.connect_by_pattern(sgd3.sgb0.sga0);\n";
        print FH "    ifcd3.connect_by_pattern(b0.sgb2.sga0);\n";
    }
    elsif($i > 15) {
        print FH "    sgb3.set_suffix(\"$word3\");\n";
        print FH "    sgd3.connect_by_pattern(c0.ifce0.$it1);\n";
        print FH "    c0.ifca2.connect_by_pattern(sge0.$it2);\n";
    }
    
    print FH "  }\n";        
    print FH "};\n";        
    print FH "\n";
    

    print FH "csl_unit e {\n";  
    print FH "  b b1;\n";
    print FH "  b b0;\n";
    print FH "  c c0;\n";
    print FH "  d d0;\n";
    print FH "  d d1;\n";
    print FH "  ifca ifca4;\n";
    print FH "  ifcb ifcb4;\n";
    print FH "  ifcd ifcd4;\n";
    print FH "  ifce ifce2;\n"; 
    print FH "  sga sga4;\n";
    print FH "  sgb sgb4;\n";
    print FH "  sgd sgd4;\n";
    print FH "  sge sge2;\n";
    if($i <= 5) {
        print FH "  csl_port p_e$i(input,$val1);\n"; 
        print FH "  csl_port p_e_br$i(input,br);\n";   
        print FH "  csl_port p(input,$val1);\n";
        print FH "  csl_signal s_e$i($val1);\n";
        print FH "  csl_signal s_e_br(br);\n";
    }
    elsif($i > 5 && $i <= 10) {      
        print FH "  csl_port p_e$i(output,$val2);\n";    
        print FH "  csl_port p(output,$val2);\n";
        print FH "  csl_port p_e_br$i(output,brt);\n";
        print FH "  csl_signal se($val2);\n";
    }
    elsif($i > 10 ) {      
        print FH "  csl_port p_e$i(input,$val1);\n";
        print FH "  csl_port p(input,$val1);\n";
        print FH "  csl_port pe(input,$val1);\n";
        print FH "  csl_signal s_e_br$i(br);\n";
        print FH "  csl_signal se($val1);\n";
    }
    print FH "  e() {\n";
    if($i <= 5) {
        print FH "    d0.sgb3.$it2.connect_by_pattern(ifcd4.ifcb1.$it1);\n";
        print FH "    b0.a0.sga2.connect_by_pattern(ifca4);\n";
    }
    elsif($i > 5 && $i <= 10) {
        print FH "    ifce2.ifcd0.$it1.connect_by_pattern(ifcd4);\n";
        print FH "    sge2.connect_by_pattern(c0.ifcb2.ifca0);\n";
        print FH "    b0.sge0.sgd1.$it2.connect_by_pattern(ifcb3);\n";
    }
    elsif($i > 10 && $i <= 15) {
        print FH "    ifca4.connect_by_pattern(a0.ifcb2);\n";
        print FH "    sgb4.connect_by_pattern(b0.ifca2);\n";
    }
    elsif($i > 10 && $i <= 15) {
        print FH "    ifcb4.set_suffix(\"$word5\");\n";
        print FH "    ifcd4.connect_by_pattern(a0.ifcb2);\n";
        print FH "    sga4.connect_by_pattern(b0.ifca2);\n";
    }
    print FH "  }\n";        
    print FH "};\n";        
    print FH "\n";
    
    print FH "csl_unit top {\n";
    print FH "  d d0;\n";
    print FH "  d d1;\n";
    print FH "  e e0;\n";
    print FH "  e e1;\n";
    print FH "  ifca ifca5;\n";
    print FH "  ifcb ifcb5;\n";
    print FH "  ifcd ifcd5;\n";
    print FH "  ifce ifce3;\n";
    print FH "  sga sga5;\n";
    print FH "  sgb sgb5;\n";
    print FH "  sgd sgd5;\n";
    print FH "  sge sge3;\n";
    if($i <= 5) {
        print FH "  csl_port ptop(input,$val1);\n";
        print FH "  csl_port p(input,$val1);\n";
        print FH "  csl_signal s_top$i($val1);\n";
        print FH "  csl_signal stop($val1);\n";
    }
    elsif($i > 5 && $i <= 10) {
        print FH "  csl_port p_top$i(output,$val2);\n";      
        print FH "  csl_port p(output,$val2);\n";
        print FH "  csl_port ptop(output,$val2);\n";        
        print FH "  csl_signal st($val2);\n";
        print FH "  csl_signal s_top_br$i(brt);\n";
    }
    elsif($i > 10 ) {
        print FH "  csl_port p_top$i(input,$val1);\n";      
        print FH "  csl_port p(input,$val1);\n";
        print FH "  csl_port p_top_br$i(input,br);\n";
        print FH "  csl_signal s_top$i($val1);\n";
        print FH "  csl_signal stop($val1);\n";
    }
    print FH "  top(){\n";
    if($i <= 5) {
        print FH "    ifca5.connect_by_pattern(d0.b0.ifcb2.$it1);\n";
        print FH "    ifcd5.connect_by_pattern(e0.b0.ifca2);\n";
        print FH "    sgb5.connect_by_pattern(d0.ifcd3);\n";
    }
    elsif($i > 5 && $i <= 10) {
        print FH "    ifcb5.connect_by_pattern(e0.b0.a0.sga2);\n";
        print FH "    d0.sga3.connect_by_pattern(ifcd5);\n";
    }
    elsif($i > 10 && $i <= 15) {
        print FH "    e0.sgd4.sgb1.connect_by_pattern(d0.ifca3);\n";
        print FH "    d0.ifcb3.ifca0.connect_by_pattern(sge3);\n";
    }
    elsif($i > 15) {
        print FH "    d0.sgb3.set_prefix(\"$word3\");\n";
        print FH "    e0.sgd4.sgb0.connect_by_pattern(d0.ifca3);\n";
        print FH "    d0.ifcb3.ifca1.connect_by_pattern(sge3);\n";
    }
    print FH "  }\n";        
    print FH "};\n";        
    print FH "\n";
   
    close(FH);
}
