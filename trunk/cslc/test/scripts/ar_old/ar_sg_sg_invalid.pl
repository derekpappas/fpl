#!/usr/bin/perl

#Author Monica
use strict;

if(! defined $ENV{WORK}){
    die "[ERROR] The environment variable WORK is not set. Set it to point to TOT/se";
}

my $totDir     = $ENV{WORK};
&testDirExists($totDir);

 
sub testDirExists {
    my($execName) = @_;
    unless(-e "$execName") { die "[ERROR] The directory $execName does not exist!\n"; }
    
}

sub mkDir {
    my($dirName) = @_;
    unless(-e "$dirName")  { `mkdir $dirName`; }
}

foreach(my $i = 1; $i <=80; $i++) {
    &main($i);
 
}

sub main {
    my $i = $_[0];
    my $test_name = "connect_sg_sg_test".$i."_illegal.csl";
    &createCslFile($test_name, $i);
}
sub createCslFile {
    my($test_name, $i) = @_;
    my $path = "$ENV{WORK}/test/csl_ar_gen";
   if($i==1){
        print (" Generated path: $path/ar_connect_sg_sg_invalid/\n");}
    my $val = int(rand(500));
    if($val == 0) { $val = 1; }
    my $val1= int(rand(200));
    if($val1== 0) { $val1= 1; }
    my $val2 = int(rand(100));
    if($val2==0) {$val2=1;}
    my $val3=(int(rand(50))+1);
    if($test_name=~/(_illegal)/){
        &mkDir("$path/ar_connect_sg_sg_invalid");
        open(FH,">$path/ar_connect_sg_sg_invalid/$test_name");
    }
  
if($i>0 && $i<=80){
   my $o=0;
    if($i > 0 && $i <=10) {
    print FH "//Generated by Monica\n";
    print FH "//Connect SG.signal--SG.sg1.signal\n\n";
    print FH "//INVALID  TEST $i;\n";
   
        print FH "csl_bitrange br1($val1);\n";
        print FH "csl_bitrange br2($val2);\n\n";
      foreach(my $j=1; $j<=$i; $j++){
        print FH "csl_signal_group sg_$i$j {\n";
        foreach(my $k=1; $k<=$j; $k++){
            print FH "   csl_signal s1_$j$k(br1);\n";
            print FH "   csl_signal s2_$j$k(br2);\n";
        }
            if(($i>=2 && $i<=10)&&($j>1)){
                foreach(my $m=1; $m<$j; $m++){
                    print FH "   sg_$i$m sg_i$j$m;\n";
                    }
            }
        
    print FH "   sg_$i$j() {\n";
    print FH "   }\n";
    print FH "};\n";
      
   
          if($i>=1 && $i<=10){
              if($i==$j){
              print FH "csl_unit u_$i$j {\n";
              print FH "   sg_$i$i sg1_$i;\n";
              print FH "   u_$i$j() {\n";    
              print FH "   }\n";
              print FH "};\n";                      
            }  
          }
           
          if($i>=1 && $i<=10){
              if($i==$j){
              print FH "csl_unit u_$i {\n";
              print FH "   sg_$i$i sg2_$i;\n"; 
              print FH "   u_$i$j u_i$i;\n";
              print FH "   u_$i() {\n";
                  
            if($i==1){
                print FH "sg2_$i.s1_$i$i.connect(u_i$i.sg1_$i.s1_$i$i);       //invalid connection: sg.sig--sg.sig\n";
                print FH "sg2_$i.s2_$i$i.connect(u_i$i.sg1_$i.s2_$i$i);       //invalid connection: sg.sig--sg.sig\n";
             }

          
            elsif($i==2){
              
              print FH "sg2_$i.s1_$i$i.connect(u_i$i.sg1_$i.s1_$i$i);        //invalid connection: sg.sig--sg.sig\n";
              print FH "sg2_$i.s2_$i$i.connect(u_i$i.sg1_$i.s2_$i$i);        //invalid connection: sg.sig--sg.sig\n"; 
          }
              elsif($i>2 && $i<=10){
      
                  foreach(my $k=$i-1; $k>=1; $k--){
                      foreach(my $m=$k-1; $m>=1; $m--){
                          print FH "  sg2_$i.s1_$i$k.connect(u_i$i.sg1_$i.sg_i$i$k.s1_$k$m);  //invalid connection: sg.sig--sg.sg1.sig\n"; 
                          print FH "  sg2_$i.s2_$i$k.connect(u_i$i.sg1_$i.sg_i$i$k.s2_$k$m);   //invalid connection: sg.sig--sg.sg1.sig\n";
                      }
                  }
              }
           
    print FH "   }\n";
    print FH "};\n";      
           }
          }
   
     }  
  
  }

#*******************************************************************
# sg.sig[part_select]--sg.sg1.signal

    if($i>10 && $i <=20){
        my $o=0;
    print FH "//Generated by Monica\n";
    print FH "//Connect SG.signal[part_select]--SG.sg1.signal\n\n";
    print FH "// INVALID TEST $i;\n";
    print FH " csl_bitrange br1($val1);\n";
    print FH " csl_bitrange br2($val2);\n";        
         
      foreach( my $j=10; $j<=$i; $j++){
          my $k=2*$j;
         print FH " csl_signal_group sg1_$j {\n";
         print FH "   csl_signal  s11_$j($k);\n";
     
         print FH " sg1_$j(){}\n";
         print FH " };\n";
         print FH " csl_signal_group sg2_$j {\n";
         print FH "   csl_signal s21_$j($j);\n";
         print FH "   csl_signal s22_$j($j);\n";
         print FH "   sg2_$j (){}\n";
         print FH " };\n";
    }
      print FH " csl_signal_group sg2{\n";
      print FH "   csl_signal s12 (br2);\n";
   foreach( my $j=10; $j<=$i; $j++){
       my $k=$j+1;
       if( $k>10){
           print FH "  sg2_$j sg2_i$k;\n";
          }
   }
      print FH " sg2(){}\n";
      print FH "};\n";
    
         print FH " csl_unit u1{\n";
         print FH "   sg2 sg_i2;\n";
         print FH "  u1(){}\n";
         print FH " };\n";
        
         print FH " csl_unit u2{\n";
         print FH "    u1 u1_i;\n";
      foreach( my $j=10; $j<=$i; $j++){
          my $ui=$j-1;
         print FH " sg1_$j sg1_i$j;\n"; 
      }
         print FH " u2(){\n";
    foreach( my $j=10; $j<=$i; $j++){
      my $ui=$j-1;                             #upper_index
      my $li=$ui+1;                           #lower_index
      my $k=$j+1;
      my $k1=2*$j-1;
      
       if( $k>10){
         print FH " sg1_i$j.s11_$j [$o: $ui].connect(u1_i.sg_i2.sg2_i$k.s21_$j);    //invalid connection: sg.sig[ps]--sg.sg1.sig\n";  
         print FH " sg1_i$j.s11_$j [$li: $k1].connect(u1_i.sg_i2.sg2_i$k.s22_$j);   //invalid connection: sg.sig[ps]--sg.sg1.sig\n";    
     }
   }
  
       print FH "}\n";
         print FH " };\n"; 
     }
#*******************************************************************
# sg.sg1.sig[part_select]--sg.sg1.signal

    if($i>20 && $i <=30){
        my $o=0;
    print FH "//Generated by Monica\n";
    print FH "//Connect SG.sg1.signal[part_select]--SG.sg1.signal\n\n";
    print FH "//INVALID  TEST $i;\n";
    print FH " csl_bitrange br1($val1);\n";
    print FH " csl_bitrange br2($val2);\n"; 
foreach( my $j=21; $j<=$i; $j++){
          my $k=2*$j;
         print FH " csl_signal_group sg1_$j {\n";
         print FH "   csl_signal  s11_$j($k);\n";
     
         print FH " sg1_$j(){}\n";
         print FH " };\n";

         print FH " csl_signal_group sg2_$j {\n";
         print FH "   csl_signal s21_$j($j);\n";
         print FH "   csl_signal s22_$j($j);\n";
         print FH "   sg2_$j (){}\n";
         print FH " };\n";
    }
      print FH " csl_signal_group sg2{\n";
      print FH "   csl_signal s12 (br2);\n";
   foreach( my $j=21; $j<=$i; $j++){
  
           print FH "   sg2_$j sg2_i$j;\n";
     }
      print FH " sg2(){}\n";
      print FH "};\n";
    
         print FH " csl_unit u1{\n";
         print FH "  sg2 sg_i2;\n";
         print FH "  u1(){}\n";
         print FH " };\n";

    print FH " csl_signal_group sg3{\n";
    print FH "  csl_signal s31(br1);\n";
    print FH "  csl_signal s32(br3);\n";
    foreach( my $j=21; $j<=$i; $j++){
         
         print FH " sg1_$j sg1_i$j;\n"; 
      }
    print FH " sg3(){}\n";
    print FH " };\n";

         print FH " csl_unit u2{\n";
         print FH "    u1 u1_i;\n";
         print FH "    sg3 sg3_i;\n"; 
         print FH " u2(){\n";
    foreach( my $j=21; $j<=$i; $j++){
      my $ui=$j-1;                             #upper_index
      my $li=$ui+1;                           #lower_index
      my $k1=2*$j-1;
      
   
         print FH " sg2_i.sg1_i$j.s11_$j [$o:$ui].connect(u1_i.sg_i2.sg2_i$j.s21_$j);  //invalid connection: sg.sg1.sig[ps]--sg.sg1.sig\n";  
         print FH " sg2_i.sg1_i$j.s11_$j [$li:$k1].connect(u1_i.sg_i2.sg2_i$j.s22_$j);  //invalid connection: sg.sg1.sig[ps]--sg.sg1.sig\n";    
 
   }   
    print FH " }\n";
    print FH " };\n";
}
#*******************************************************************
# sg.sg1.sig--sg.sg1.signal

    if($i>30 && $i <=40){
        
    print FH "//Generated by Monica\n";
    print FH "//Connect SG.sg1.signal--SG.sg1.signal\n\n";
    print FH "// INVALID TEST $i;\n";
    print FH " csl_bitrange br1($val1);\n";
    print FH " csl_bitrange br2($val2);\n"; 
 foreach( my $j=31; $j<=$i; $j++){
       my $k=2*$j; 
         print FH " csl_signal_group sg1_$j {\n";
         print FH "   csl_signal  s11_$j($j);\n";
         print FH "   csl_signal  s12_$j($k);\n";
     
         print FH " sg1_$j(){}\n";
         print FH " };\n";
         print FH " csl_signal_group  sg2_$j {\n";
         print FH "   csl_signal s21_$j($j);\n";
         print FH "   csl_signal s22_$j($k);\n";
         print FH "   sg2_$j (){}\n";
         print FH " };\n";
    }
      print FH " csl_signal_group sg2{\n";
      print FH "   csl_signal s12 (br2);\n";
   foreach( my $j=31; $j<=$i; $j++){
       
           print FH "   sg2_$j sg2_i$j;\n";
          
   }
      print FH " sg2(){}\n";
      print FH "};\n";
      print FH " csl_unit u1{\n";
         print FH "   sg2 sg_i2;\n";
         print FH "  u1(){}\n";
         print FH " };\n";
        
    print FH " csl_signal_group sg3{\n";
    print FH "  csl_signal s31(br1);\n";
    print FH "  csl_signal s32(br2);\n";
    foreach( my $j=31; $j<=$i; $j++){
      
         print FH " sg1_$j sg1_i$j;\n"; 
     
      }
    print FH " sg3(){}\n";
    print FH " };\n";

         print FH " csl_unit u2{\n";
         print FH "    u1 u1_i;\n";
         print FH "    sg3 sg3_i;\n"; 
         print FH " u2(){\n";
    foreach( my $j=31; $j<=$i; $j++){
   
         print FH " sg3_i.sg1_i$j.s11_$j.connect(u1_i.sg_i2.sg2_i$j.s21_$j);    //invalid connection: sg.sg1.sig--sg.sg1.sig\n";  
         print FH " sg3_i.sg1_i$j.s12_$j.connect(u1_i.sg_i2.sg2_i$j.s22_$j);     //invalid connection: sg.sg1.sig--sg.sg1.sig\n";    
   
   }   
    print FH " }\n";
    print FH " };\n";
}


#*************************************************************
# sg.sig.connect(sg.sg1.sig[ps])
 if( $i>40 && $i<=50){
    print FH "//Generated by Monica\n";
    print FH "//Connect SG.signal--SG.sg1.sig[ part_select]\n\n";
    print FH "// INVALID TEST $i;\n";

    print FH " csl_bitrange br1($val1);\n";
    print FH " csl_bitrange br2($val2);\n";
    print FH " csl_bitrange br3($val3);\n\n";

  foreach( my $j=1; $j<=8; $j++){
        print FH "csl_signal_group sg1_$i$j {\n";
        print FH "   csl_signal s1_$j(br2);\n";
        foreach( my $k=1; $k<=$j; $k++){
              print FH "   csl_signal s1_$j$k($k);\n";
          }
        print FH "sg1_$i$j() {\n";
        print FH "  }\n";
        print FH "};\n";
    }    
    foreach( my $j=1; $j<=8; $j++){
        print FH "csl_signal_group sg2_$i$j {\n";
        print FH "   csl_signal s2_$j(br2);\n";
        foreach( my $k=1; $k<=$j; $k++){
              print FH "   csl_signal s2_$j$k($k);\n\n";
                 }
        
           foreach( my $k=1; $k<$j; $k++){
            print FH "  sg2_$i$k  sg2_i$i$k;\n";
       
         }      
        print FH "sg2_$i$j() {\n";
        print FH "  }\n";
        print FH "};\n";
    }    
   foreach( my $j=1; $j<=8; $j++){
      if($j>=2 && $j<=8){
       print FH "csl_unit u_$i$j {\n";
       print FH "   sg2_$i$j  sg2_i$i$j;\n";
       print FH "   sg1_$i$j  sg1_i$i$j;\n";
   
        print FH "u_$i$j() {\n";
       print FH "  }\n";
        print FH "};\n";
    }    
  }
   print FH " csl_unit u_top_$i {\n";
       foreach( my $j=1; $j<=8; $j++){
           if($j>=2 && $j<=8){
           print FH " u_$i$j  u_i$i$j;\n";
       }
      }  
     print FH " u_top_$i() {\n";
  foreach( my $j=1; $j<=8; $j++){
           if($j>=2 && $j<=8){ 
    foreach (my $k=1; $k<$j; $k++){
        if($k == $j-1){
            foreach (my $l=1; $l<$k; $l++){
               
                if($l==$k-1){
                     my $val=$l-1;
                    print FH " u_i$i$j.sg1_i$i$j.s1_$j$l.connect(u_i$i$k.sg2_i$i$k.sg2_i$i$l.s2_$l$l);                  //invalid connection: sg.sig--sg.sg1.sig\n";
                     if($j>2){
                         print FH " u_i$i$j.sg1_i$i$j.s1_$j$l.connect(u_i$i$k.sg2_i$i$k.sg2_i$i$l.s2_$l$l [$o:$val]);   //invalid connection: sg.sig--sg.sg1.sig[ps]\n";
 }
                        }
                   }
             }
          }
      }
 } 
     print FH "  }\n";
     print FH "};\n";
  }

#*************************************************************
# sg.sig[ps].connect(sg.sg1.sig[ps])

  if($i>50 && $i<=60){
    print FH "//Generated by Monica\n";
    print FH "//Connect SG.signal[part_select]--SG.sg1.signal[ part_select]\n\n";
    print FH "// INVALID TEST $i;\n";

    print FH " csl_bitrange br1($val1);\n";
    print FH " csl_bitrange br2($val2);\n";
    print FH " csl_bitrange br3($val3);\n\n";
        
         
      foreach( my $j=51; $j<=$i; $j++){
          my $k=2*$j;
         print FH " csl_signal_group sg1_$j {\n";
         print FH "   csl_signal  s11_$j($k);\n";
     
         print FH " sg1_$j(){}\n";
         print FH " };\n";
         print FH " csl_signal_group sg2_$j {\n";
         print FH "   csl_signal s21_$j($k);\n";
         print FH "   sg2_$j (){}\n";
         print FH " };\n";
    }
      print FH " csl_signal_group sg2{\n";
      print FH "   csl_signal s12 (br2);\n";
   foreach( my $j=51; $j<=$i; $j++){
       my $k=$j+1;
       if( $k>50){
           print FH "   sg2_$j sg2_i$k;\n";
          }
   }
      print FH " sg2(){}\n";
      print FH "};\n";
    
         print FH " csl_unit u1{\n";
         print FH "   sg2 sg_i2;\n";
         print FH "  u1(){}\n";
         print FH " };\n";
        
         print FH " csl_unit u2{\n";
         print FH "    u1 u1_i;\n";
      foreach( my $j=51; $j<=$i; $j++){
          my $ui=$j-1;
         print FH " sg1_$j sg1_i$j;\n"; 
      }
         print FH " u2(){\n";
    foreach( my $j=51; $j<=$i; $j++){
      my $ui=$j-1;                             #upper_index
      my $li=$ui+1;                           #lower_index
      my $k=$j+1;
      my $k1=2*$j-1;
      
       if( $k>50){
         print FH " sg1_i$j.s11_$j [$o: $ui].connect(u1_i.sg_i2.sg2_i$k.s21_$j [$o: $ui]);    //invalid connection: sg.sig[ps]--sg.sg1.sig[ps]\n";  
         print FH " sg1_i$j.s11_$j [$li: $k1].connect(u1_i.sg_i2.sg2_i$k.s21_$j [$li: $k1]);   //invalid connection: sg.sig[ps]--sg.sg1.sig[ps]\n";    
     }
   }
  
       print FH "}\n";
         print FH " };\n"; 
     }

#***************************************************************
# sg.sg1.sig.connect(sg.sg1.sig[ps])
     if ($i>60 && $i<=70){
    print FH "//Generated by Monica\n";
    print FH "//Connect SG.sg1.signal--SG.sg1.signal[ part_select]\n\n";
    print FH "// INVALID TEST $i;\n";

    print FH " csl_bitrange br1($val1);\n";
    print FH " csl_bitrange br2($val2);\n";
    print FH " csl_bitrange br3($val3);\n\n";

  foreach( my $j=61; $j<=$i; $j++){
       my $k=2*$j; 
         print FH " csl_signal_group sg1_$j {\n";
         print FH "   csl_signal  s11_$j($j);\n";
     
         print FH " sg1_$j(){}\n";
         print FH " };\n";
         print FH " csl_signal_group sg2_$j {\n";
         print FH "   csl_signal s21_$j($k);\n";
         print FH "   sg2_$j (){}\n";
         print FH " };\n";
    }
      print FH " csl_signal_group sg2{\n";
      print FH "   csl_signal s12 (br2);\n";
   foreach( my $j=61; $j<=$i; $j++){
       my $k=$j+1;
       if( $k>60){
           print FH "   sg2_$j sg2_i$k;\n";
          }
   }
      print FH " sg2(){}\n";
      print FH "};\n";
      print FH " csl_unit u1{\n";
         print FH "   sg2 sg2_i2;\n";
         print FH "  u1(){}\n";
         print FH " };\n";
        
    print FH " csl_signal_group sg3{\n";
    print FH "  csl_signal s31(br1);\n";
    print FH "  csl_signal s32(br3);\n";
    foreach( my $j=61; $j<=$i; $j++){
         
         print FH " sg1_$j sg1_i$j;\n"; 
      }
    print FH " sg3(){}\n";
    print FH " };\n";

         print FH " csl_unit u2{\n";
         print FH "    u1 u1_i;\n";
         print FH "    sg3 sg3_i;\n"; 
         print FH " u2(){\n";
    foreach( my $j=61; $j<=$i; $j++){
      my $ui=$j-1;                             #upper_index
      my $li=$ui+1;                           #lower_index
      my $k=$j+1;
      my $k1=2*$j-1;
      
       if( $k>60){
         print FH " sg3_i.sg1_i$j.s11_$j.connect(u1_i.sg2_i2.sg2_i$k.s21_$j [$o: $ui]);       //invalid connection: sg.sg1.sig--sg.sg1.sig[ps]\n";  
      #   print FH " sg2_i.sg1_i$j.s11_$j.connect(u1_i.ifci_2.ifc1_i$k.p11_$j [$li: $k1]);\n";    
     }
   }   
    print FH " }\n";
    print FH " };\n";
}
#***************************************************************
# sg.sg1.sig[ps].connect(sg.sg1.sig[ps])
     if ($i>70 && $i<=80){
    print FH "//Generated by Monica\n";
    print FH "//Connect SG.sg1.signal[part_select]--SG.sg1.signal[ part_select]\n\n";
    print FH "// INVALID TEST $i;\n";

    print FH " csl_bitrange br1($val1);\n";
    print FH " csl_bitrange br2($val2);\n";
    print FH " csl_bitrange br3($val3);\n\n";

 foreach( my $j=71; $j<=$i; $j++){
          my $k=2*$j;
         print FH " csl_signal_group sg1_$j {\n";
         print FH "   csl_signal  s11_$j($k);\n";
     
         print FH " sg1_$j(){}\n";
         print FH " };\n";

         print FH " csl_signal_group sg2_$j {\n";
         print FH "   csl_signal s21_$j($k);\n";
         print FH "   sg2_$j (){}\n";
         print FH " };\n";
    }
      print FH " csl_signal_group sg2{\n";
      print FH "   csl_signal s12 (br2);\n";
   foreach( my $j=71; $j<=$i; $j++){
       my $k=$j+1;
       if( $k>70){
           print FH "   sg2_$j sg2_i$k;\n";
          }
   }
      print FH " sg2(){}\n";
      print FH "};\n";
    
         print FH " csl_unit u1{\n";
         print FH "   sg2 sg2_i2;\n";
         print FH "  u1(){}\n";
         print FH " };\n";

    print FH " csl_signal_group sg3{\n";
    print FH "  csl_signal s31(br1);\n";
    print FH "  csl_signal s32(br3);\n";
    foreach( my $j=71; $j<=$i; $j++){
         
         print FH " sg1_$j sg1_i$j;\n"; 
      }
    print FH " sg3(){}\n";
    print FH " };\n";

         print FH " csl_unit u2{\n";
         print FH "    u1 u1_i;\n";
         print FH "    sg3 sg3_i;\n"; 
         print FH " u2(){\n";
    foreach( my $j=71; $j<=$i; $j++){
      my $ui=$j-1;                             #upper_index
      my $li=$ui+1;                           #lower_index
      my $k=$j+1;
      my $k1=2*$j-1;
      
       if( $k>70){
         print FH " sg3_i.sg1_i$j.s11_$j [$o:$ui].connect(u1_i.sg2_i2.sg2_i$k.s21_$j [$o: $ui]);     //invalid connection: sg.sg1.sig[ps]--sg.sg1.sig[ps]\n";  
         print FH " sg3_i.sg1_i$j.s11_$j [$li:$k1].connect(u1_i.sg2_i2.sg2_i$k.s21_$j [$li: $k1]);   //invalid connection: sg.sg1.sig[ps]--sg.sg1.sig[ps]\n";    
     }
   }   
    print FH " }\n";
    print FH " };\n";
}
}
    close(FH);
}
