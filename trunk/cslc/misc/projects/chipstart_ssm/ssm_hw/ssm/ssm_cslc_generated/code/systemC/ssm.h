#ifndef INC_GUARD_ssm_h
#define INC_GUARD_ssm_h

#include "systemc.h"
#include "SystemCVectorWriterTrace.h"
#include "arm.h"
#include "dummy_unit_synth_removes.h"
#include "Va2r_tap.h"
#include "dsp.h"
#include "Va2r_tap.h"
#include "cmpr.h"
#include "Va2r_tap.h"
#include "ssm_master.h"
#include "h264.h"

SC_MODULE(ssm) {
  sc_in<bool> gbl_clk;
  sc_in<bool> gbl_reset_;
  sc_in<bool> gbl_enable;
  sc_signal<bool> master_a2p_arm_address;
  sc_signal<bool> master_a2p_arm_write_data;
  sc_signal<bool> master_a2p_arm_read;
  sc_signal<bool> master_a2p_arm_write;
  sc_signal<bool> master_a2p_arm_read_data;
  sc_signal<bool> master_a2p_arm_ready;
  sc_signal<bool> master_a2p_arm_error;
  sc_signal<bool> master_dummy1_address;
  sc_signal<bool> master_dummy1_write_data;
  sc_signal<bool> master_dummy1_read;
  sc_signal<bool> master_dummy1_write;
  sc_signal<bool> master_dummy1_read_data;
  sc_signal<bool> master_dummy1_ready;
  sc_signal<bool> master_dummy1_error;
  sc_signal<bool> master_dummy2_address;
  sc_signal<bool> master_dummy2_write_data;
  sc_signal<bool> master_dummy2_read;
  sc_signal<bool> master_dummy2_write;
  sc_signal<bool> master_dummy2_read_data;
  sc_signal<bool> master_dummy2_ready;
  sc_signal<bool> master_dummy2_error;
  sc_signal<bool> master_dummy3_address;
  sc_signal<bool> master_dummy3_write_data;
  sc_signal<bool> master_dummy3_read;
  sc_signal<bool> master_dummy3_write;
  sc_signal<bool> master_dummy3_read_data;
  sc_signal<bool> master_dummy3_ready;
  sc_signal<bool> master_dummy3_error;
  sc_signal<bool> ring_arm_dsp_grant;
  sc_signal<bool> ring_arm_dsp_request;
  sc_signal<bool> ring_arm_dsp_in;
  sc_signal<bool> ring_arm_dsp_aphi;
  sc_signal<bool> ring_arm_dsp_write;
  sc_signal<bool> ring_arm_dsp_read;
  sc_signal<bool> ring_arm_dsp_ready;
  sc_signal<bool> ring_arm_dsp_error;
  sc_signal<bool> ring_dsp_h264_grant;
  sc_signal<bool> ring_dsp_h264_request;
  sc_signal<bool> ring_dsp_h264_in;
  sc_signal<bool> ring_dsp_h264_aphi;
  sc_signal<bool> ring_dsp_h264_write;
  sc_signal<bool> ring_dsp_h264_read;
  sc_signal<bool> ring_dsp_h264_ready;
  sc_signal<bool> ring_dsp_h264_error;
  sc_signal<bool> ring_h264_cmpr_grant;
  sc_signal<bool> ring_h264_cmpr_request;
  sc_signal<bool> ring_h264_cmpr_in;
  sc_signal<bool> ring_h264_cmpr_aphi;
  sc_signal<bool> ring_h264_cmpr_write;
  sc_signal<bool> ring_h264_cmpr_read;
  sc_signal<bool> ring_h264_cmpr_ready;
  sc_signal<bool> ring_h264_cmpr_error;
  sc_signal<bool> ring_cmpr_arm_grant;
  sc_signal<bool> ring_cmpr_arm_request;
  sc_signal<bool> ring_cmpr_arm_in;
  sc_signal<bool> ring_cmpr_arm_aphi;
  sc_signal<bool> ring_cmpr_arm_write;
  sc_signal<bool> ring_cmpr_arm_read;
  sc_signal<bool> ring_cmpr_arm_ready;
  sc_signal<bool> ring_cmpr_arm_error;
  sc_signal<sc_uint<32> > slave_Va2r_tap_arm_read_data;
  sc_signal<bool> slave_Va2r_tap_arm_ready;
  sc_signal<bool> slave_Va2r_tap_arm_error;
  sc_signal<sc_uint<20> > slave_Va2r_tap_arm_address;
  sc_signal<sc_uint<32> > slave_Va2r_tap_arm_data;
  sc_signal<bool> slave_Va2r_tap_arm_read;
  sc_signal<bool> slave_Va2r_tap_arm_write;
  sc_signal<sc_uint<32> > slave_Va2r_tap_dsp_read_data;
  sc_signal<bool> slave_Va2r_tap_dsp_ready;
  sc_signal<bool> slave_Va2r_tap_dsp_error;
  sc_signal<sc_uint<20> > slave_Va2r_tap_dsp_address;
  sc_signal<sc_uint<32> > slave_Va2r_tap_dsp_data;
  sc_signal<bool> slave_Va2r_tap_dsp_read;
  sc_signal<bool> slave_Va2r_tap_dsp_write;
  sc_signal<sc_uint<32> > slave_Va2r_tap_h264_read_data;
  sc_signal<bool> slave_Va2r_tap_h264_ready;
  sc_signal<bool> slave_Va2r_tap_h264_error;
  sc_signal<sc_uint<20> > slave_Va2r_tap_h264_address;
  sc_signal<sc_uint<32> > slave_Va2r_tap_h264_data;
  sc_signal<bool> slave_Va2r_tap_h264_read;
  sc_signal<bool> slave_Va2r_tap_h264_write;
  sc_signal<sc_uint<32> > slave_Va2r_tap_cmpr_read_data;
  sc_signal<bool> slave_Va2r_tap_cmpr_ready;
  sc_signal<bool> slave_Va2r_tap_cmpr_error;
  sc_signal<sc_uint<20> > slave_Va2r_tap_cmpr_address;
  sc_signal<sc_uint<32> > slave_Va2r_tap_cmpr_data;
  sc_signal<bool> slave_Va2r_tap_cmpr_read;
  sc_signal<bool> slave_Va2r_tap_cmpr_write;
                    
  arm *arm_;
  dummy_unit_synth_removes *dumb_;
  Va2r_tap *Va2r_tap_arm_;
  dsp *dsp_;
  Va2r_tap *Va2r_tap_cmpr_;
  cmpr *cmpr_;
  Va2r_tap *Va2r_tap_dsp_;
  Va2r_tap *Va2r_tap_h264_;
  ssm_master *ssm_master_;
  h264 *h264_;
  // stimulus vector file 
  sc_trace_file * stimVecFile_ssm;  
  // expected vector file 
  sc_trace_file * expVecFile_ssm;  

  void createInstVec(std::string inst) { 
    char st[] = "stim_vec_"; 
    char exp[] = "exp_vec_"; 
    const char* nm = inst.c_str(); 
    char* stimInst = strcat(st,nm); 
    char* expInst = strcat(exp,nm); 

    // create the vector files
    stimVecFile_ssm = sc_create_vec_file(stimInst,2,4);
    ((vec_file*)stimVecFile_ssm)->sc_set_vcd_time_unit(-9);
    expVecFile_ssm = sc_create_vec_file(expInst,2,4);
    ((vec_file*)expVecFile_ssm)->sc_set_vcd_time_unit(-9);
    sc_trace(stimVecFile_ssm, gbl_clk, std::string("gbl_clk") );
    sc_trace(stimVecFile_ssm, gbl_reset_, std::string("gbl_reset_") );
    sc_trace(stimVecFile_ssm, gbl_enable, std::string("gbl_enable") );

  }

  SC_CTOR(ssm) {
      arm_ = new arm("arm_");
      arm_->createInstVec("arm_");
      dumb_ = new dummy_unit_synth_removes("dumb_");
      dumb_->createInstVec("dumb_");
      Va2r_tap_arm_ = new Va2r_tap("Va2r_tap_arm_");
      Va2r_tap_arm_->createInstVec("Va2r_tap_arm_");
      dsp_ = new dsp("dsp_");
      dsp_->createInstVec("dsp_");
      Va2r_tap_cmpr_ = new Va2r_tap("Va2r_tap_cmpr_");
      Va2r_tap_cmpr_->createInstVec("Va2r_tap_cmpr_");
      cmpr_ = new cmpr("cmpr_");
      cmpr_->createInstVec("cmpr_");
      Va2r_tap_dsp_ = new Va2r_tap("Va2r_tap_dsp_");
      Va2r_tap_dsp_->createInstVec("Va2r_tap_dsp_");
      Va2r_tap_h264_ = new Va2r_tap("Va2r_tap_h264_");
      Va2r_tap_h264_->createInstVec("Va2r_tap_h264_");
      ssm_master_ = new ssm_master("ssm_master_");
      ssm_master_->createInstVec("ssm_master_");
      h264_ = new h264("h264_");
      h264_->createInstVec("h264_");
      arm_->gbl_clk(gbl_clk);
      arm_->gbl_enable(gbl_enable);
      arm_->gbl_reset_(gbl_reset_);
      arm_->slave_Va2r_tap_arm_address(slave_Va2r_tap_arm_address);
      arm_->slave_Va2r_tap_arm_data(slave_Va2r_tap_arm_data);
      arm_->slave_Va2r_tap_arm_error(slave_Va2r_tap_arm_error);
      arm_->slave_Va2r_tap_arm_read(slave_Va2r_tap_arm_read);
      arm_->slave_Va2r_tap_arm_read_data(slave_Va2r_tap_arm_read_data);
      arm_->slave_Va2r_tap_arm_ready(slave_Va2r_tap_arm_ready);
      arm_->slave_Va2r_tap_arm_write(slave_Va2r_tap_arm_write);
      dumb_->dummy1_master_ifc_address(master_dummy1_address);
      dumb_->dummy1_master_ifc_error(master_dummy1_error);
      dumb_->dummy1_master_ifc_read(master_dummy1_read);
      dumb_->dummy1_master_ifc_read_data(master_dummy1_read_data);
      dumb_->dummy1_master_ifc_ready(master_dummy1_ready);
      dumb_->dummy1_master_ifc_write(master_dummy1_write);
      dumb_->dummy1_master_ifc_write_data(master_dummy1_write_data);
      dumb_->dummy2_master_ifc_address(master_dummy2_address);
      dumb_->dummy2_master_ifc_error(master_dummy2_error);
      dumb_->dummy2_master_ifc_read(master_dummy2_read);
      dumb_->dummy2_master_ifc_read_data(master_dummy2_read_data);
      dumb_->dummy2_master_ifc_ready(master_dummy2_ready);
      dumb_->dummy2_master_ifc_write(master_dummy2_write);
      dumb_->dummy2_master_ifc_write_data(master_dummy2_write_data);
      dumb_->dummy3_master_ifc_address(master_dummy3_address);
      dumb_->dummy3_master_ifc_error(master_dummy3_error);
      dumb_->dummy3_master_ifc_read(master_dummy3_read);
      dumb_->dummy3_master_ifc_read_data(master_dummy3_read_data);
      dumb_->dummy3_master_ifc_ready(master_dummy3_ready);
      dumb_->dummy3_master_ifc_write(master_dummy3_write);
      dumb_->dummy3_master_ifc_write_data(master_dummy3_write_data);
      Va2r_tap_arm_->Va2r_tap_master_ifc_address(master_a2p_arm_address);
      Va2r_tap_arm_->Va2r_tap_master_ifc_error(master_a2p_arm_error);
      Va2r_tap_arm_->Va2r_tap_master_ifc_read(master_a2p_arm_read);
      Va2r_tap_arm_->Va2r_tap_master_ifc_read_data(master_a2p_arm_read_data);
      Va2r_tap_arm_->Va2r_tap_master_ifc_ready(master_a2p_arm_ready);
      Va2r_tap_arm_->Va2r_tap_master_ifc_write(master_a2p_arm_write);
      Va2r_tap_arm_->Va2r_tap_master_ifc_write_data(master_a2p_arm_write_data);
      Va2r_tap_arm_->Va2r_tap_slave_out_ifc_address(slave_Va2r_tap_arm_address);
      Va2r_tap_arm_->Va2r_tap_slave_out_ifc_data(slave_Va2r_tap_arm_data);
      Va2r_tap_arm_->Va2r_tap_slave_out_ifc_error(slave_Va2r_tap_arm_error);
      Va2r_tap_arm_->Va2r_tap_slave_out_ifc_read(slave_Va2r_tap_arm_read);
      Va2r_tap_arm_->Va2r_tap_slave_out_ifc_read_data(slave_Va2r_tap_arm_read_data);
      Va2r_tap_arm_->Va2r_tap_slave_out_ifc_ready(slave_Va2r_tap_arm_ready);
      Va2r_tap_arm_->Va2r_tap_slave_out_ifc_write(slave_Va2r_tap_arm_write);
      Va2r_tap_arm_->gbl_clk(gbl_clk);
      Va2r_tap_arm_->gbl_enable(gbl_enable);
      Va2r_tap_arm_->gbl_reset_(gbl_reset_);
      Va2r_tap_arm_->ring_in_ifc_aphi(ring_cmpr_arm_aphi);
      Va2r_tap_arm_->ring_in_ifc_error(ring_cmpr_arm_error);
      Va2r_tap_arm_->ring_in_ifc_grant(ring_cmpr_arm_grant);
      Va2r_tap_arm_->ring_in_ifc_in(ring_cmpr_arm_in);
      Va2r_tap_arm_->ring_in_ifc_read(ring_cmpr_arm_read);
      Va2r_tap_arm_->ring_in_ifc_ready(ring_cmpr_arm_ready);
      Va2r_tap_arm_->ring_in_ifc_request(ring_cmpr_arm_request);
      Va2r_tap_arm_->ring_in_ifc_write(ring_cmpr_arm_write);
      Va2r_tap_arm_->ring_out_ifc_aphi(ring_arm_dsp_aphi);
      Va2r_tap_arm_->ring_out_ifc_error(ring_arm_dsp_error);
      Va2r_tap_arm_->ring_out_ifc_grant(ring_arm_dsp_grant);
      Va2r_tap_arm_->ring_out_ifc_in(ring_arm_dsp_in);
      Va2r_tap_arm_->ring_out_ifc_read(ring_arm_dsp_read);
      Va2r_tap_arm_->ring_out_ifc_ready(ring_arm_dsp_ready);
      Va2r_tap_arm_->ring_out_ifc_request(ring_arm_dsp_request);
      Va2r_tap_arm_->ring_out_ifc_write(ring_arm_dsp_write);
      dsp_->gbl_clk(gbl_clk);
      dsp_->gbl_enable(gbl_enable);
      dsp_->gbl_reset_(gbl_reset_);
      dsp_->slave_Va2r_tap_dsp_address(slave_Va2r_tap_dsp_address);
      dsp_->slave_Va2r_tap_dsp_data(slave_Va2r_tap_dsp_data);
      dsp_->slave_Va2r_tap_dsp_error(slave_Va2r_tap_dsp_error);
      dsp_->slave_Va2r_tap_dsp_read(slave_Va2r_tap_dsp_read);
      dsp_->slave_Va2r_tap_dsp_read_data(slave_Va2r_tap_dsp_read_data);
      dsp_->slave_Va2r_tap_dsp_ready(slave_Va2r_tap_dsp_ready);
      dsp_->slave_Va2r_tap_dsp_write(slave_Va2r_tap_dsp_write);
      Va2r_tap_cmpr_->Va2r_tap_master_ifc_address(master_dummy3_address);
      Va2r_tap_cmpr_->Va2r_tap_master_ifc_error(master_dummy3_error);
      Va2r_tap_cmpr_->Va2r_tap_master_ifc_read(master_dummy3_read);
      Va2r_tap_cmpr_->Va2r_tap_master_ifc_read_data(master_dummy3_read_data);
      Va2r_tap_cmpr_->Va2r_tap_master_ifc_ready(master_dummy3_ready);
      Va2r_tap_cmpr_->Va2r_tap_master_ifc_write(master_dummy3_write);
      Va2r_tap_cmpr_->Va2r_tap_master_ifc_write_data(master_dummy3_write_data);
      Va2r_tap_cmpr_->Va2r_tap_slave_out_ifc_address(slave_Va2r_tap_cmpr_address);
      Va2r_tap_cmpr_->Va2r_tap_slave_out_ifc_data(slave_Va2r_tap_cmpr_data);
      Va2r_tap_cmpr_->Va2r_tap_slave_out_ifc_error(slave_Va2r_tap_cmpr_error);
      Va2r_tap_cmpr_->Va2r_tap_slave_out_ifc_read(slave_Va2r_tap_cmpr_read);
      Va2r_tap_cmpr_->Va2r_tap_slave_out_ifc_read_data(slave_Va2r_tap_cmpr_read_data);
      Va2r_tap_cmpr_->Va2r_tap_slave_out_ifc_ready(slave_Va2r_tap_cmpr_ready);
      Va2r_tap_cmpr_->Va2r_tap_slave_out_ifc_write(slave_Va2r_tap_cmpr_write);
      Va2r_tap_cmpr_->gbl_clk(gbl_clk);
      Va2r_tap_cmpr_->gbl_enable(gbl_enable);
      Va2r_tap_cmpr_->gbl_reset_(gbl_reset_);
      Va2r_tap_cmpr_->ring_in_ifc_aphi(ring_h264_cmpr_aphi);
      Va2r_tap_cmpr_->ring_in_ifc_error(ring_h264_cmpr_error);
      Va2r_tap_cmpr_->ring_in_ifc_grant(ring_h264_cmpr_grant);
      Va2r_tap_cmpr_->ring_in_ifc_in(ring_h264_cmpr_in);
      Va2r_tap_cmpr_->ring_in_ifc_read(ring_h264_cmpr_read);
      Va2r_tap_cmpr_->ring_in_ifc_ready(ring_h264_cmpr_ready);
      Va2r_tap_cmpr_->ring_in_ifc_request(ring_h264_cmpr_request);
      Va2r_tap_cmpr_->ring_in_ifc_write(ring_h264_cmpr_write);
      Va2r_tap_cmpr_->ring_out_ifc_aphi(ring_cmpr_arm_aphi);
      Va2r_tap_cmpr_->ring_out_ifc_error(ring_cmpr_arm_error);
      Va2r_tap_cmpr_->ring_out_ifc_grant(ring_cmpr_arm_grant);
      Va2r_tap_cmpr_->ring_out_ifc_in(ring_cmpr_arm_in);
      Va2r_tap_cmpr_->ring_out_ifc_read(ring_cmpr_arm_read);
      Va2r_tap_cmpr_->ring_out_ifc_ready(ring_cmpr_arm_ready);
      Va2r_tap_cmpr_->ring_out_ifc_request(ring_cmpr_arm_request);
      Va2r_tap_cmpr_->ring_out_ifc_write(ring_cmpr_arm_write);
      cmpr_->gbl_clk(gbl_clk);
      cmpr_->gbl_enable(gbl_enable);
      cmpr_->gbl_reset_(gbl_reset_);
      cmpr_->slave_Va2r_tap_cmpr_address(slave_Va2r_tap_cmpr_address);
      cmpr_->slave_Va2r_tap_cmpr_data(slave_Va2r_tap_cmpr_data);
      cmpr_->slave_Va2r_tap_cmpr_error(slave_Va2r_tap_cmpr_error);
      cmpr_->slave_Va2r_tap_cmpr_read(slave_Va2r_tap_cmpr_read);
      cmpr_->slave_Va2r_tap_cmpr_read_data(slave_Va2r_tap_cmpr_read_data);
      cmpr_->slave_Va2r_tap_cmpr_ready(slave_Va2r_tap_cmpr_ready);
      cmpr_->slave_Va2r_tap_cmpr_write(slave_Va2r_tap_cmpr_write);
      Va2r_tap_dsp_->Va2r_tap_master_ifc_address(master_dummy1_address);
      Va2r_tap_dsp_->Va2r_tap_master_ifc_error(master_dummy1_error);
      Va2r_tap_dsp_->Va2r_tap_master_ifc_read(master_dummy1_read);
      Va2r_tap_dsp_->Va2r_tap_master_ifc_read_data(master_dummy1_read_data);
      Va2r_tap_dsp_->Va2r_tap_master_ifc_ready(master_dummy1_ready);
      Va2r_tap_dsp_->Va2r_tap_master_ifc_write(master_dummy1_write);
      Va2r_tap_dsp_->Va2r_tap_master_ifc_write_data(master_dummy1_write_data);
      Va2r_tap_dsp_->Va2r_tap_slave_out_ifc_address(slave_Va2r_tap_dsp_address);
      Va2r_tap_dsp_->Va2r_tap_slave_out_ifc_data(slave_Va2r_tap_dsp_data);
      Va2r_tap_dsp_->Va2r_tap_slave_out_ifc_error(slave_Va2r_tap_dsp_error);
      Va2r_tap_dsp_->Va2r_tap_slave_out_ifc_read(slave_Va2r_tap_dsp_read);
      Va2r_tap_dsp_->Va2r_tap_slave_out_ifc_read_data(slave_Va2r_tap_dsp_read_data);
      Va2r_tap_dsp_->Va2r_tap_slave_out_ifc_ready(slave_Va2r_tap_dsp_ready);
      Va2r_tap_dsp_->Va2r_tap_slave_out_ifc_write(slave_Va2r_tap_dsp_write);
      Va2r_tap_dsp_->gbl_clk(gbl_clk);
      Va2r_tap_dsp_->gbl_enable(gbl_enable);
      Va2r_tap_dsp_->gbl_reset_(gbl_reset_);
      Va2r_tap_dsp_->ring_in_ifc_aphi(ring_arm_dsp_aphi);
      Va2r_tap_dsp_->ring_in_ifc_error(ring_arm_dsp_error);
      Va2r_tap_dsp_->ring_in_ifc_grant(ring_arm_dsp_grant);
      Va2r_tap_dsp_->ring_in_ifc_in(ring_arm_dsp_in);
      Va2r_tap_dsp_->ring_in_ifc_read(ring_arm_dsp_read);
      Va2r_tap_dsp_->ring_in_ifc_ready(ring_arm_dsp_ready);
      Va2r_tap_dsp_->ring_in_ifc_request(ring_arm_dsp_request);
      Va2r_tap_dsp_->ring_in_ifc_write(ring_arm_dsp_write);
      Va2r_tap_dsp_->ring_out_ifc_aphi(ring_dsp_h264_aphi);
      Va2r_tap_dsp_->ring_out_ifc_error(ring_dsp_h264_error);
      Va2r_tap_dsp_->ring_out_ifc_grant(ring_dsp_h264_grant);
      Va2r_tap_dsp_->ring_out_ifc_in(ring_dsp_h264_in);
      Va2r_tap_dsp_->ring_out_ifc_read(ring_dsp_h264_read);
      Va2r_tap_dsp_->ring_out_ifc_ready(ring_dsp_h264_ready);
      Va2r_tap_dsp_->ring_out_ifc_request(ring_dsp_h264_request);
      Va2r_tap_dsp_->ring_out_ifc_write(ring_dsp_h264_write);
      Va2r_tap_h264_->Va2r_tap_master_ifc_address(master_dummy2_address);
      Va2r_tap_h264_->Va2r_tap_master_ifc_error(master_dummy2_error);
      Va2r_tap_h264_->Va2r_tap_master_ifc_read(master_dummy2_read);
      Va2r_tap_h264_->Va2r_tap_master_ifc_read_data(master_dummy2_read_data);
      Va2r_tap_h264_->Va2r_tap_master_ifc_ready(master_dummy2_ready);
      Va2r_tap_h264_->Va2r_tap_master_ifc_write(master_dummy2_write);
      Va2r_tap_h264_->Va2r_tap_master_ifc_write_data(master_dummy2_write_data);
      Va2r_tap_h264_->Va2r_tap_slave_out_ifc_address(slave_Va2r_tap_h264_address);
      Va2r_tap_h264_->Va2r_tap_slave_out_ifc_data(slave_Va2r_tap_h264_data);
      Va2r_tap_h264_->Va2r_tap_slave_out_ifc_error(slave_Va2r_tap_h264_error);
      Va2r_tap_h264_->Va2r_tap_slave_out_ifc_read(slave_Va2r_tap_h264_read);
      Va2r_tap_h264_->Va2r_tap_slave_out_ifc_read_data(slave_Va2r_tap_h264_read_data);
      Va2r_tap_h264_->Va2r_tap_slave_out_ifc_ready(slave_Va2r_tap_h264_ready);
      Va2r_tap_h264_->Va2r_tap_slave_out_ifc_write(slave_Va2r_tap_h264_write);
      Va2r_tap_h264_->gbl_clk(gbl_clk);
      Va2r_tap_h264_->gbl_enable(gbl_enable);
      Va2r_tap_h264_->gbl_reset_(gbl_reset_);
      Va2r_tap_h264_->ring_in_ifc_aphi(ring_dsp_h264_aphi);
      Va2r_tap_h264_->ring_in_ifc_error(ring_dsp_h264_error);
      Va2r_tap_h264_->ring_in_ifc_grant(ring_dsp_h264_grant);
      Va2r_tap_h264_->ring_in_ifc_in(ring_dsp_h264_in);
      Va2r_tap_h264_->ring_in_ifc_read(ring_dsp_h264_read);
      Va2r_tap_h264_->ring_in_ifc_ready(ring_dsp_h264_ready);
      Va2r_tap_h264_->ring_in_ifc_request(ring_dsp_h264_request);
      Va2r_tap_h264_->ring_in_ifc_write(ring_dsp_h264_write);
      Va2r_tap_h264_->ring_out_ifc_aphi(ring_h264_cmpr_aphi);
      Va2r_tap_h264_->ring_out_ifc_error(ring_h264_cmpr_error);
      Va2r_tap_h264_->ring_out_ifc_grant(ring_h264_cmpr_grant);
      Va2r_tap_h264_->ring_out_ifc_in(ring_h264_cmpr_in);
      Va2r_tap_h264_->ring_out_ifc_read(ring_h264_cmpr_read);
      Va2r_tap_h264_->ring_out_ifc_ready(ring_h264_cmpr_ready);
      Va2r_tap_h264_->ring_out_ifc_request(ring_h264_cmpr_request);
      Va2r_tap_h264_->ring_out_ifc_write(ring_h264_cmpr_write);
      ssm_master_->Va2r_tap_master_ifc_address(master_a2p_arm_address);
      ssm_master_->Va2r_tap_master_ifc_error(master_a2p_arm_error);
      ssm_master_->Va2r_tap_master_ifc_read(master_a2p_arm_read);
      ssm_master_->Va2r_tap_master_ifc_read_data(master_a2p_arm_read_data);
      ssm_master_->Va2r_tap_master_ifc_ready(master_a2p_arm_ready);
      ssm_master_->Va2r_tap_master_ifc_write(master_a2p_arm_write);
      ssm_master_->Va2r_tap_master_ifc_write_data(master_a2p_arm_write_data);
      ssm_master_->gbl_clk(gbl_clk);
      ssm_master_->gbl_enable(gbl_enable);
      ssm_master_->gbl_reset_(gbl_reset_);
      h264_->gbl_clk(gbl_clk);
      h264_->gbl_enable(gbl_enable);
      h264_->gbl_reset_(gbl_reset_);
      h264_->slave_Va2r_tap_h264_address(slave_Va2r_tap_h264_address);
      h264_->slave_Va2r_tap_h264_data(slave_Va2r_tap_h264_data);
      h264_->slave_Va2r_tap_h264_error(slave_Va2r_tap_h264_error);
      h264_->slave_Va2r_tap_h264_read(slave_Va2r_tap_h264_read);
      h264_->slave_Va2r_tap_h264_read_data(slave_Va2r_tap_h264_read_data);
      h264_->slave_Va2r_tap_h264_ready(slave_Va2r_tap_h264_ready);
      h264_->slave_Va2r_tap_h264_write(slave_Va2r_tap_h264_write);
    dont_initialize();
  }
};

#endif
