{\rtf1\ansi\ansicpg1252\deff0
{\fonttbl
{\f0\fnil\fcharset0\fprq0\fttruetype Times New Roman;}
{\f1\fnil\fcharset0\fprq0\fttruetype Nimbus Sans L;}
{\f2\fnil\fcharset0\fprq0\fttruetype Dingbats;}
{\f3\fnil\fcharset0\fprq0\fttruetype Symbol;}
{\f4\fnil\fcharset0\fprq0\fttruetype Courier New;}}
{\colortbl
\red0\green0\blue0;
\red255\green255\blue255;}
{\stylesheet
{\s1\fi-427\li720\sbasedon28\snext28 Contents 1;}
{\s2\fi-427\li1440\sbasedon28\snext28 Contents 2;}
{\s3\fi-427\li2160\sbasedon28\snext28 Contents 3;}
{\s8\fi-427\li720\sbasedon28 Lower Roman List;}
{\s5\tx431\sbasedon24\snext28 Numbered Heading 1;}
{\s6\tx431\sbasedon25\snext28 Numbered Heading 2;}
{\s7\fi-427\li720 Square List;}
{\*\cs11\sbasedon28 Endnote Text;}
{\s4\fi-427\li2880\sbasedon28\snext28 Contents 4;}
{\s9\fi-427\li720 Diamond List;}
{\s10\fi-427\li720 Numbered List;}
{\*\cs12\fs20\super Endnote Reference;}
{\s13\fi-427\li720 Triangle List;}
{\s14\tx431\sbasedon26\snext28 Numbered Heading 3;}
{\s15\fi-427\li720 Dashed List;}
{\s16\fi-427\li720\sbasedon10 Upper Roman List;}
{\s17\sb440\sa60\f1\fs24\b\sbasedon28\snext28 Heading 4;}
{\s18\fi-427\li720 Heart List;}
{\s34\fi-427\li720 Box List;}
{\s20\fi-427\li720\sbasedon10 Upper Case List;}
{\s21\fi-427\li720 Bullet List;}
{\s22\fi-427\li720 Hand List;}
{\*\cs23\fs20\sbasedon28 Footnote Text;}
{\s24\sb440\sa60\f1\fs34\b\sbasedon28\snext28 Heading 1;}
{\s25\sb440\sa60\f1\fs28\b\sbasedon28\snext28 Heading 2;}
{\s19\qc\sb240\sa117\f1\fs32\b\sbasedon28\snext28 Contents Header;}
{\s27\fi-427\li720 Tick List;}
{\s26\sb440\sa60\f1\fs24\b\sbasedon28\snext28 Heading 3;}
{\s29\fi-427\li720\sbasedon10 Lower Case List;}
{\s30\li1440\ri1440\sa117\sbasedon28 Block Text;}
{\s36\f4\sbasedon28 Plain Text;}
{\s32\tx1584\sbasedon5\snext28 Section Heading;}
{\s33\fi-427\li720 Implies List;}
{\s28\f0\fs24\lang1033 Normal;}
{\s35\fi-427\li720 Star List;}
{\*\cs31\fs20\super Footnote Reference;}
{\s37\tx1584\sbasedon5\snext28 Chapter Heading;}}
\kerning0\cf0\ftnbj\fet2\ftnstart1\ftnnar\aftnnar\ftnstart1\aftnstart1\aenddoc\facingp\titlepg\revprop3{\info}\deftab720\viewkind1\paperw12240\paperh15840\margl1440\margr1440\widowctl
\sectd\sbknone\colsx360\pgncont\ltrsect
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch regress_parser.pl\tab Help File by Dramba Doru-Gabriel: gabrield@fastpathlogic.ro}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab I. Introduction.}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab }{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab When many test files are required to test a project, then this script is what you need. It makes it easier for you to process that huge amount of input.}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab It is written in perl by (cronological order): Codrin Pruteanu, Stefan Andrei Pruteanu and Dramba Doru-Gabriel.}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\fi720\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\fi720\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch II. Usage.}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\fi720\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\fi720\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch You can run the script in many ways. For example, if you change it to an executable ( with: chmod +x regress_parser.pl ) you can run it with this command:}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\fi720\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\fi720\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch ./regress_parser.pl}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\fi720\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\fi720\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch Another way of running it is:}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\fi720\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\fi720\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch perl regress_parser.pl}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\fi720\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\fi720\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch I personaly like the second way of running it and because of that I'll use it in the rest of the document.}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\fi720\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch You can get a short description of it's command line arguments by typing:}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\fi720\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\fi720\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch perl regress_parser.pl -h}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\fi720\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\fi720\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch That will produce the folowing output:}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\fi720\s28\itap0{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\fi720\s28\itap0{\s28\f0\fs18\lang1033{\*\listtag0}\abinodiroverride\ltrch Regress Parser Usage:}{\s28\f0\fs18\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\fi720\s28\itap0{\s28\f0\fs18\lang1033{\*\listtag0}\abinodiroverride\ltrch [perl] regress_parser.pl [-hdl <name> [-dir <path1>]] [-v] [-root <path2>] [-vparser <path3>] [-vpreproc <path4>] [-nohistory] [-version] [-h] [-valgrind <tool>] [-cp <path5>] [-reports <path6>] [-list <file>]}{\s28\f0\fs18\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\fi720\s28\itap0{\s28\f0\fs18\lang1033{\*\listtag0}\abinodiroverride\ltrch  -hdl <name> -> only tests from hdl named <name> are chosen. <name> can be one of the folowing: v1995, v2001, preprocessor, all.}{\s28\f0\fs18\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\fi720\s28\itap0{\s28\f0\fs18\lang1033{\*\listtag0}\abinodiroverride\ltrch  -dir <path1> -> only tests from <path1> are chosen, where <path1> is the relative path to the chosen hdl. E.g.: regress_parser.pl -hdl v2001 -dir rules/legal}{\s28\f0\fs18\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\fi720\s28\itap0{\s28\f0\fs18\lang1033{\*\listtag0}\abinodiroverride\ltrch  -v -> verbosity on}{\s28\f0\fs18\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\fi720\s28\itap0{\s28\f0\fs18\lang1033{\*\listtag0}\abinodiroverride\ltrch  -version -> prints version}{\s28\f0\fs18\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\fi720\s28\itap0{\s28\f0\fs18\lang1033{\*\listtag0}\abinodiroverride\ltrch  -h -> prints help information}{\s28\f0\fs18\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\fi720\s28\itap0{\s28\f0\fs18\lang1033{\*\listtag0}\abinodiroverride\ltrch  -valgrind <tool> -> selects the tool for running valgrind (memcheck only - for the moment)}{\s28\f0\fs18\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\fi720\s28\itap0{\s28\f0\fs18\lang1033{\*\listtag0}\abinodiroverride\ltrch  -root <path2> -> sets the root directory of the entire project. Must be an absolute path}{\s28\f0\fs18\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\fi720\s28\itap0{\s28\f0\fs18\lang1033{\*\listtag0}\abinodiroverride\ltrch  -vparser <path3> -> sets the path of the vparser relative to the root directory of the project or the absolute path to <path3>.}{\s28\f0\fs18\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\fi720\s28\itap0{\s28\f0\fs18\lang1033{\*\listtag0}\abinodiroverride\ltrch  -preproc <path4> -> sets the path of the preprocessor relative to the root directory of the project or the absolute path to <path4>.}{\s28\f0\fs18\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\fi720\s28\itap0{\s28\f0\fs18\lang1033{\*\listtag0}\abinodiroverride\ltrch  -nohistory -> there is no history of the job. The reports are overwritten.}{\s28\f0\fs18\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\fi720\s28\itap0{\s28\f0\fs18\lang1033{\*\listtag0}\abinodiroverride\ltrch  -cp <path5> -> copy the reports to the given <path5>. If <path5> doesn't exist then it is automaticaly created.}{\s28\f0\fs18\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\fi720\s28\itap0{\s28\f0\fs18\lang1033{\*\listtag0}\abinodiroverride\ltrch  -reports <path6> -> copy the reports to the given <path6>, removes the sources from the parent dir etc. The script must be called from where it is (e.g: /somedir/cslc/test/parser/scripts ). Destination folder must exist. (unstable/deprecated)}{\s28\f0\fs18\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\fi720\s28\itap0\tx0{\s28\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\fi720\s28\itap0\tx1440{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch Let's explain it's options but, before we do that, you must know the difference between the relative path and absolute path. If you do not know about these two notions than you should learn about them. Tip: google or wikipedia.}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\fi720\s28\itap0\tx1440{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch It is very important from which directory you run the script because it will use it as a starting point for all the other paths involved in the regression. And, because of that, if you want to run the script from another directory you should know that it searches for an enviroment variable called PROJECT that should contain the absolute path to the project, in this case CSLC directory (reminder: CSLC directory contains the "misc" and "trunk" subdirectories). So, if the PROJECT enviroment variable is set to: /home/gabrield/svn/cslc then the root directory of the project is set to that value. If the PROJECT variable is missing it will use the current directory to get the relative path to the root directory of the project and setting it to: ../../../.. Because of this, if the PROJECT variable doesn't exist and you are in a wrong directory then the script won't find the binaries or the test files. So run the script from where it is located. A possible solution is the:}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\fi720\s28\itap0\tx1440{\s28\f0\fs20\i\lang1033{\*\listtag0}\abinodiroverride\ltrch -root <dir>}{\s28\f0\fs20\lang1033{\*\listtag0}\tab - option, used to override the root path of the project. <dir> must be the absolute path to the CSLC directory and not a relative path. If you'll use a relative path the use of the preprocessor messes up the paths and the regression fails.}{\s28\f0\fs20\i\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\fi720\s28\itap0\tx1440{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch For the next command line arguments you should have in mind the current directory hierarchy. The starting point of the tests is: ROOT/misc/test/parser/sources . Let's call this directory SOURCES. ROOT is the project's root directory.}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\fi720\s28\itap0\tx1440{\s28\f0\fs20\i\lang1033{\*\listtag0}\abinodiroverride\ltrch -hdl <dir>}{\s28\f0\fs20\lang1033{\*\listtag0}\tab - as described above, only subdirectories from the SOURCES named <dir> are selected to be used for testing. If you want to select a certain subdirectory from <dir> you must also use the next option:}{\s28\f0\fs20\i\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\fi720\s28\itap0\tx1440{\s28\f0\fs20\i\lang1033{\*\listtag0}\abinodiroverride\ltrch -dir <subdir>}{\s28\f0\fs20\lang1033{\*\listtag0}\tab - <subdir> is the path of the subdirectory you want to be used for testing. It is concatenated to the <dir> path. For example:}{\s28\f0\fs20\i\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\fi720\s28\itap0\tx1440{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\fi720\s28\itap0\tx1440{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch perl regress_parser.pl -hdl v2001 -dir rules/legal/inout_declaration}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\fi720\s28\itap0\tx1440{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\fi720\s28\itap0\tx1440{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch makes the script run the tests only from SOURCES/v2001/rules/legal/inout_declaration/ . You can't use the -dir option without the -hdl option. If you want to see the results open:}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\fi720\s28\itap0\tx1440{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch ROOT/misc/test/parser/reports/results/index.html  with a browser.}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\fi720\s28\itap0\tx1440{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\fi720\s28\itap0\tx1440{\s28\f0\fs20\i\lang1033{\*\listtag0}\abinodiroverride\ltrch -v}{\s28\f0\fs20\lang1033{\*\listtag0}\tab \tab - this option turns on verbosity mode. It is usualy used for debugging. Please be advised that it can give a huge amount of output so do not use it unless you want to debug the script.}{\s28\f0\fs20\i\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\fi720\s28\itap0\tx1440{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\fi720\s28\itap0\tx1440{\s28\f0\fs20\i\lang1033{\*\listtag0}\abinodiroverride\ltrch -version}{\s28\f0\fs20\lang1033{\*\listtag0}\tab \tab - this option gives you information about the version of the script and the current maintainer of the script. So if you have any comments or bugs to report please email that person.}{\s28\f0\fs20\i\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\fi720\s28\itap0\tx1440{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\fi720\s28\itap0\tx1440{\s28\f0\fs20\i\lang1033{\*\listtag0}\abinodiroverride\ltrch -valgrind <tool>}{\s28\f0\fs20\lang1033{\*\listtag0}\tab - with this option you can chose what tool should valgrind use. For the moment only memcheck is implemented. If the tool is not set or this option is not selected then valgrind would not run.}{\s28\f0\fs20\i\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\fi720\s28\itap0\tx1440{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\fi720\s28\itap0\tx1440{\s28\f0\fs20\i\lang1033{\*\listtag0}\abinodiroverride\ltrch -nohistory}{\s28\f0\fs20\lang1033{\*\listtag0}\tab - with this option you can control if the scripts creates some sort of history. The so called history is in fact a collection of 10 directories. In each directory are the reports of one run of the regress_script.pl. You can find them in: ROOT/misc/test/parser/ .Each directory contains in it's name the date and time of the run in the folowing sequence: yy_mm_dd_hh_mm_ss .The date and time are the ones when the script finishes all of it's work.}{\s28\f0\fs20\i\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\fi720\s28\itap0\tx1440{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\fi720\s28\itap0\tx1440{\s28\f0\fs20\i\lang1033{\*\listtag0}\abinodiroverride\ltrch -vparser <path>}{\s28\f0\fs20\lang1033{\*\listtag0}\tab - this option sets the absolute path to vparser binary to <path> or if the path is relative (doesn't start with / ) then it is considered to be relative to ROOT.}{\s28\f0\fs20\i\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\fi720\s28\itap0\tx1440{\s28\f0\fs20\i\lang1033{\*\listtag0}\abinodiroverride\ltrch -preproc <path>}{\s28\f0\fs20\lang1033{\*\listtag0}\tab -this option sets the absolute path to the verilog preprocessor's binary to <path> or if the path is relative then it is considered to be relative to ROOT.}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\fi720\s28\itap0\tx1440{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\fi720\s28\itap0\tx1440{\s28\f0\fs20\i\lang1033{\*\listtag0}\abinodiroverride\ltrch -cp <path>}{\s28\f0\fs20\lang1033{\*\listtag0}\tab - with this option you can copy the reports of the run to <path>. If <path> doesn't exist then it is created automaticaly. The original location is kept. The original location is: ROOT/misc/test/parser/reports}{\s28\f0\fs20\i\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\fi720\s28\itap0\tx1440{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\fi720\s28\itap0\tx1440{\s28\f0\fs20\i\lang1033{\*\listtag0}\abinodiroverride\ltrch -reports <path6>\tab }{\s28\f0\fs20\lang1033{\*\listtag0}- copy the reports to the given <path6>, removes the SOURCES from the parent directory. The script must be called from where it is (e.g: ROOT/misc/test/parser/scripts ). Destination folder must exist. It is somewhat deprecated because of the presence of the -cp option. Still it is used by some other scripts.}{\s28\f0\fs20\i\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\fi720\s28\itap0\tx1440{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\fi720\s28\itap0\tx1440{\s28\f0\fs20\i\lang1033{\*\listtag0}\abinodiroverride\ltrch -list <listName>}{\s28\f0\fs20\lang1033{\*\listtag0}\tab - this option enables you to use a file as a list of directories and subdirectories to test the vparser and/or verilog preprocessor. The file has a specific syntax. Each line that starts with # is considered a comentary and is being skipped. To select a specific subdirectory from SOURCE like v2001 or v1995 use a line that starts with: }{\s28\f0\fs20\i\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\fi720\s28\itap0\tx1440{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch [hdl=subdir]}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\fi720\s28\itap0\tx1440{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch where subdir is the desired subdirectory, let's call it HDL.}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\fi720\s28\itap0\tx1440{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch Then you have to select a certain subdirectory from the selected HDL. Use a new line for that. That line must contain the relative path to HDL, let's call it SUBDIR, like :}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\fi720\s28\itap0\tx1440{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\fi720\s28\itap0\tx1440{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch #next is the HDL}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\fi720\s28\itap0\tx1440{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch [hdl=v2001]}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\fi720\s28\itap0\tx1440{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch #next is the SUBDIR}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\fi720\s28\itap0\tx1440{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch rules/legal}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\fi720\s28\itap0\tx1440{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\fi720\s28\itap0\tx1440{\s28\f0\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch The example above will run the tests for SOURCES/HDL/SUBDIR/ and put the results in the default directory: ROOT/misc/test/parser/reports/results/HDL/SUBDIR. You can find the output logs for preprocessor, valgrind or vparser to: ROOT/misc/test/parser/reports/errlog/HDL/SUBDIR/}{\s28\f0\fs20\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\fi720\s28\itap0\tx1440{\s28\f0\fs20\lang1033{\*\listtag0}\par}}