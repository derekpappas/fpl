automatically ordering the C++ simulator signals to match the signal
order of the vector/architectural writer, vector/architectural state
file, testbench memory, design under test interface, and testbench comparator.


The C++ simultor is cycle based. The C++ simultor contains a
simulation engine which ahs several phases.

unit_name.generate_cpp_unit(cpp_unit_name);

C++ class cpp_unit_name is the name of the cpp unit which cooresponds to the
RTL unit named unit_name. cpp_unit_name is a C++ class which is
derived from the C++ class unit which is a C++ simulator library
class.C++ class cpp_unit_name contains private/protected variables for
each interface signal. The C++ class cpp_unit_name contains public
functions to set and get the value of each interface signal. The CSL
verification components can add vector and architectural state writers
to the C++ class cpp_unit_name which are connnected to the C++ class
cpp_unit_name's interface signals. The writers capture the values of
the C++ class cpp_unit_name's interface signals and write them out to
a file. The file can then be loaded into the testbench.


In addition other CSL objects can add objects to the C++ class
cpp_unit_name. Examples include registers, register files, fifos,...
Moreover, the address space of the design is specified in CSL and is
converted into C++ and Verilog code. The generated C++ address
constants are used to create the correct address structure in each C++ 
unit.

The generated C++ class unit_name inherits C++ class unit which is in
the CSL C++ simulator library. The  C++ class unit declares virtual
functions which include propogate and generate. These functions are
defined by the user in the class unit_name_user. The simulation team 
writes a C++ class unit_name_user which defines the virtual functions 
in the C++ class unit. 

Additional functions such as get_unit are defined in the  C++ class
unit. 
get_unit() returns the reference to the unit and is used by the
command shell debug interface to access the individual objects in the 
C++ class unit, unit_name, and unit_name_user.All other CSL chapters 
which contain components which have C++ equivalents generate C++ code 
which is added to the C++ class unit. 

Table
class unit      // defined in the C++ simulator library
class unit_name // generated by the csl from the CSL unit specfication
class unit      // written by the user


The automatic generation of the unit_name class which contains the
interface variables and the vector writer classes automatically ties
the C++ simulator unit interface to the testbench memory which is
connected to the design under test or the testbench DUT output comparator. 
The DUT stimulus vectors are used to "drive" the DUT and the DUT
expected vectors are comapred against the DUT outputs.




 
