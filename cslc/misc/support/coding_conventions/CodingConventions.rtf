{\rtf1\ansi\ansicpg1252\uc1\deff0\stshfdbch0\stshfloch0\stshfhich0\stshfbi0\deflang1033\deflangfe1033{\fonttbl{\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}
{\f2\fmodern\fcharset0\fprq1{\*\panose 02070309020205020404}Courier New;}{\f36\fmodern\fcharset0\fprq1 Courier New CYR;}{\f37\froman\fcharset238\fprq2 Times New Roman CE;}{\f38\froman\fcharset204\fprq2 Times New Roman Cyr;}
{\f40\froman\fcharset161\fprq2 Times New Roman Greek;}{\f41\froman\fcharset162\fprq2 Times New Roman Tur;}{\f42\froman\fcharset177\fprq2 Times New Roman (Hebrew);}{\f43\froman\fcharset178\fprq2 Times New Roman (Arabic);}
{\f44\froman\fcharset186\fprq2 Times New Roman Baltic;}{\f45\froman\fcharset163\fprq2 Times New Roman (Vietnamese);}{\f57\fmodern\fcharset238\fprq1 Courier New CE;}{\f58\fmodern\fcharset204\fprq1 Courier New Cyr;}
{\f60\fmodern\fcharset161\fprq1 Courier New Greek;}{\f61\fmodern\fcharset162\fprq1 Courier New Tur;}{\f62\fmodern\fcharset177\fprq1 Courier New (Hebrew);}{\f63\fmodern\fcharset178\fprq1 Courier New (Arabic);}
{\f64\fmodern\fcharset186\fprq1 Courier New Baltic;}{\f65\fmodern\fcharset163\fprq1 Courier New (Vietnamese);}{\f397\fmodern\fcharset238\fprq1 Courier New CYR CE;}{\f398\fmodern\fcharset204\fprq1 Courier New CYR Cyr;}
{\f400\fmodern\fcharset161\fprq1 Courier New CYR Greek;}{\f401\fmodern\fcharset162\fprq1 Courier New CYR Tur;}{\f402\fmodern\fcharset177\fprq1 Courier New CYR (Hebrew);}{\f403\fmodern\fcharset178\fprq1 Courier New CYR (Arabic);}
{\f404\fmodern\fcharset186\fprq1 Courier New CYR Baltic;}{\f405\fmodern\fcharset163\fprq1 Courier New CYR (Vietnamese);}}{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;
\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;}
{\stylesheet{\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \snext0 Normal;}{\*\cs10 \additive \ssemihidden Default Paragraph Font;}{\*
\ts11\tsrowd\trftsWidthB3\trpaddl108\trpaddr108\trpaddfl3\trpaddft3\trpaddfb3\trpaddfr3\trcbpat1\trcfpat1\tscellwidthfts0\tsvertalt\tsbrdrt\tsbrdrl\tsbrdrb\tsbrdrr\tsbrdrdgl\tsbrdrdgr\tsbrdrh\tsbrdrv 
\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1024\langfe1024\cgrid\langnp1024\langfenp1024 \snext11 \ssemihidden Normal Table;}}{\*\rsidtbl \rsid67471\rsid680227\rsid800251\rsid1066248\rsid1977462\rsid2116775
\rsid2241359\rsid2702431\rsid2842820\rsid2889981\rsid3736890\rsid4007979\rsid4348121\rsid4401877\rsid4467811\rsid4603762\rsid4733803\rsid5056205\rsid5655888\rsid5701954\rsid5727453\rsid5844244\rsid5905817\rsid5927860\rsid6184493\rsid6186625\rsid6429081
\rsid6649110\rsid6707301\rsid6978987\rsid7371669\rsid7410519\rsid7936138\rsid8130439\rsid8532325\rsid8659262\rsid8738163\rsid8809515\rsid8872230\rsid8930105\rsid9780039\rsid10424233\rsid10621288\rsid10649421\rsid10830328\rsid10834019\rsid10973336
\rsid11076004\rsid11228698\rsid11284776\rsid11956291\rsid12071123\rsid12151548\rsid12463774\rsid12673997\rsid12923267\rsid12998604\rsid13045744\rsid13122509\rsid13190251\rsid14118510\rsid14224174\rsid14496690\rsid14834030\rsid15141961\rsid15298598
\rsid15939236\rsid16078534\rsid16519192\rsid16674856}{\*\generator Microsoft Word 10.0.2627;}{\info{\author cryb}{\operator Butincu Cristian}{\creatim\yr2005\mo7\dy22\hr22\min20}{\revtim\yr2006\mo9\dy6\hr13\min9}{\version62}{\edmins274}{\nofpages4}
{\nofwords835}{\nofchars4764}{\*\company ICETEAM}{\nofcharsws5588}{\vern16437}}\margl1701\margr850\margt1134\margb1134 \widowctrl\ftnbj\aenddoc\noxlattoyen\expshrtn\noultrlspc\dntblnsbdb\nospaceforul\hyphcaps0\horzdoc\dghspace120\dgvspace120\dghorigin1701
\dgvorigin1984\dghshow0\dgvshow3\jcompress\viewkind1\viewscale100\nolnhtadjtbl\rsidroot8738163 \fet0\sectd \linex0\sectdefaultcl\sftnbj {\*\pnseclvl1\pnucrm\pnstart1\pnindent720\pnhang {\pntxta .}}{\*\pnseclvl2\pnucltr\pnstart1\pnindent720\pnhang 
{\pntxta .}}{\*\pnseclvl3\pndec\pnstart1\pnindent720\pnhang {\pntxta .}}{\*\pnseclvl4\pnlcltr\pnstart1\pnindent720\pnhang {\pntxta )}}{\*\pnseclvl5\pndec\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl6\pnlcltr\pnstart1\pnindent720\pnhang 
{\pntxtb (}{\pntxta )}}{\*\pnseclvl7\pnlcrm\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl8\pnlcltr\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl9\pnlcrm\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}\pard\plain 
\ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\f36\fs20\cf2\insrsid12923267 Namespaces:
\par Prefix namespace names with \'93NS\'94: NSSampleNamespace
\par 
\par }{\f36\fs20\cf2\insrsid680227\charrsid8738163 Type names:
\par 
\par Prefix type names (typedefs, structs, etc...) with \'93T\'94.}{\f36\fs20\cf2\insrsid680227 
\par }{\f36\fs20\cf2\insrsid12923267\charrsid8738163 Prefix }{\f36\fs20\cf2\insrsid12923267 enums}{\f36\fs20\cf2\insrsid12923267\charrsid8738163  with \'93}{\f36\fs20\cf2\insrsid12923267 E\'94.
\par }{\f36\fs20\cf2\insrsid12923267\charrsid8738163 P}{\f36\fs20\cf2\insrsid12923267 ostfix}{\f36\fs20\cf2\insrsid12923267\charrsid8738163  }{\f36\fs20\cf2\insrsid12923267 exceptions}{\f36\fs20\cf2\insrsid12923267\charrsid8738163  with \'93}{
\f36\fs20\cf2\insrsid12923267 Exception\'94: InvalidOperationException, StackOverflowException.}{\f36\fs20\cf2\insrsid12923267\charrsid8738163 
\par }{\f36\fs20\cf2\insrsid680227\charrsid8738163 Prefix class names with \'93C\'94, even if class has only static members}{\f36\fs20\cf2\insrsid12923267  (or do not prefix them at all)}{\f36\fs20\cf2\insrsid680227\charrsid8738163 
, except for "java interface analog" where class name is prefixed with "I".}{\f36\fs20\cf2\insrsid5701954 
\par }{\f2\fs20\insrsid5701954 
\par }{\f36\fs20\cf2\insrsid680227\charrsid8738163 Examples:
\par \tab typedef int TInt;
\par \tab typedef short int TInt16;
\par \tab struct TPoint \{
\par \tab   TInt }{\f36\fs20\cf8\highlight6\insrsid8532325\charrsid8532325 m_}{\f36\fs20\cf8\highlight6\insrsid680227\charrsid8532325 x}{\f36\fs20\cf2\insrsid680227\charrsid8738163 ;
\par \tab   TInt }{\f36\fs20\cf8\highlight6\insrsid8532325\charrsid8532325 m_}{\f36\fs20\cf8\highlight6\insrsid680227\charrsid8532325 y}{\f36\fs20\cf2\insrsid680227\charrsid8738163 ;
\par \tab \}
\par \tab class CSampleClass;
\par \tab class CStaticClass;
\par \tab class ISampleInterface;
\par \tab enum }{\f36\fs20\cf2\insrsid12923267 E}{\f36\fs20\cf2\insrsid680227\charrsid8738163 BasicColor \{RED, GREEN, BLUE\};
\par }{\f36\fs20\cf2\insrsid5701954\charrsid7410519 
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0\pararsid5701954 {\f2\fs20\cf8\highlight6\insrsid5701954 SEALED}{\f2\fs20\cf8\insrsid5701954\charrsid8532325 
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 {\f36\fs20\insrsid4401877\charrsid5701954 
\par }{\f36\fs20\cf2\insrsid680227\charrsid8738163 Data names:
\par }{\f36\fs20\cf2\insrsid6186625\charrsid11076004 
\par }{\f36\fs20\cf2\insrsid11076004 All variable names should begin in lowercase}{\f36\fs20\cf2\insrsid11076004\charrsid11076004 ; if a var name contains multiple words}{\f36\fs20\cf2\insrsid11076004 , the first letter of each word will be capitalized.}{
\f36\fs20\cf2\insrsid11076004\charrsid11076004 
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0\pararsid2702431 {\f36\fs20\cf2\insrsid2702431\charrsid5701954 All constants and enumerated constants should be uppercase
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 {\f36\fs20\cf2\insrsid2702431\charrsid11076004 
\par }{\f36\fs20\cf2\insrsid11076004\charrsid11076004 Examples:}{\f36\fs20\cf2\insrsid11076004 
\par \tab string fileName;
\par \tab int xCoord, yCoord;
\par \tab bool myFlag;
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0\pararsid2702431 {\f36\fs20\cf2\insrsid2702431 
\par }{\f36\fs20\cf2\insrsid2702431\charrsid5701954 \tab }{\f36\fs20\cf2\insrsid2702431\charrsid7410519 #define ADD(_x, _y) (_x + _y)
\par \tab #define PI 3.14
\par }{\f36\fs20\cf2\insrsid2702431 
\par }{\f36\fs20\cf2\insrsid2702431\charrsid8738163 \tab enum }{\f36\fs20\cf2\insrsid2702431 T}{\f36\fs20\cf2\insrsid2702431\charrsid8738163 BasicColor \{RED, GREEN, BLUE\};
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 {\f36\fs20\cf2\insrsid2702431\charrsid2702431 
\par }{\f2\fs20\cf8\highlight6\insrsid6186625 SEALED}{\f2\fs20\cf8\highlight6\insrsid6186625\charrsid6186625 .}{\f36\fs20\insrsid6186625 
\par 
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0\pararsid11076004 {\f36\fs20\cf2\insrsid11076004 Prefix all function arguments with \'93_\'94 or with }{\f36\fs20\cf2\insrsid680227\charrsid8738163 \'93a}{\f36\fs20\cf2\insrsid2702431 _}{
\f36\fs20\cf2\insrsid680227\charrsid8738163 \'94}{\f36\fs20\cf2\insrsid2702431  or don\rquote t use a prefix at all.}{\f36\fs20\cf2\insrsid680227\charrsid8738163 
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 {\f36\fs20\cf2\insrsid680227\charrsid8738163 
\par }{\f36\fs20\cf2\insrsid11076004\charrsid11076004 Examples:}{\f36\fs20\cf2\insrsid680227 
\par }{\f36\fs20\cf2\insrsid680227\charrsid8738163 \tab void myFunction(int _x, int _y}{\f36\fs20\cf2\insrsid11076004 , string _fileName, bool _flag}{\f36\fs20\cf2\insrsid680227\charrsid8738163 ) \{\}}{\f36\fs20\cf2\insrsid680227 
\par }{\f36\fs20\cf2\insrsid11076004\charrsid8738163 \tab void myFunction}{\f36\fs20\cf2\insrsid2702431\charrsid8738163 (int }{\f36\fs20\cf2\insrsid2702431 a}{\f36\fs20\cf2\insrsid2702431\charrsid8738163 _x, int }{\f36\fs20\cf2\insrsid2702431 a}{
\f36\fs20\cf2\insrsid2702431\charrsid8738163 _y}{\f36\fs20\cf2\insrsid2702431 , string a_fileName, bool a_flag}{\f36\fs20\cf2\insrsid2702431\charrsid8738163 ) \{\}}{\f36\fs20\cf2\insrsid11076004 
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0\pararsid2702431 {\f36\fs20\cf2\insrsid2702431\charrsid8738163 \tab void myFunction(int x, int y}{\f36\fs20\cf2\insrsid2702431 , string fileName, bool flag}{
\f36\fs20\cf2\insrsid2702431\charrsid8738163 ) \{\}}{\f36\fs20\cf2\insrsid2702431 
\par }{\f36\fs20\cf2\insrsid12923267 
\par The 3}{\f36\fs20\cf2\super\insrsid12923267\charrsid12923267 rd}{\f36\fs20\cf2\insrsid12923267  style is recommended.}{\f36\fs20\cf2\insrsid12923267\charrsid8738163 
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 {\f36\fs20\cf2\insrsid2702431\charrsid8738163 
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0\pararsid11076004 {\f2\fs20\cf8\highlight6\insrsid11076004 SEALED}{\f2\fs20\cf8\highlight6\insrsid11076004\charrsid6186625 .}{\f36\fs20\insrsid11076004 
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 {\f36\fs20\cf2\insrsid680227\charrsid8738163 
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0\pararsid2702431 {\f36\fs20\cf2\insrsid2702431 U}{\f36\fs20\cf2\insrsid2702431\charrsid8738163 se "m_" prefix}{\f36\fs20\cf2\insrsid2702431  for member variables (class or struct): m_coordX, m_myString

\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 {\f36\fs20\cf2\insrsid680227\charrsid8738163 Automatic variables are not to be prefixed}{\f36\fs20\cf2\insrsid6649110 ; t}{\f36\fs20\cf2\insrsid2702431 
he same holds for heap vars defined inside functions.}{\f36\fs20\cf2\insrsid680227\charrsid8738163 
\par }{\f36\fs20\cf2\insrsid680227 
\par }{\f36\fs20\cf2\insrsid2702431 Examples:
\par \tab void f() \{
\par \tab   int x;
\par \tab   float startPoint;
\par \tab   }{\f36\fs20\cf2\lang1036\langfe1033\langnp1036\insrsid6649110\charrsid16674856 double myLocalVariable_1;}{\f36\fs20\cf2\lang1036\langfe1033\langnp1036\insrsid2702431\charrsid16674856 
\par }{\f36\fs20\cf2\lang1036\langfe1033\langnp1036\insrsid6649110\charrsid16674856 \tab   int* y;
\par \tab   float* endPoint;
\par \tab   }{\f36\fs20\cf2\insrsid6649110 double}{\f36\fs20\cf2\insrsid7410519 *}{\f36\fs20\cf2\insrsid6649110  myLocalVariable_2;
\par }\pard \ql \fi720\li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0\pararsid2702431 {\f36\fs20\cf2\insrsid2702431 \}
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 {\f36\fs20\cf2\insrsid2702431\charrsid8738163 
\par }{\f2\fs20\cf8\highlight6\insrsid14118510 SEALED.}{\f36\fs20\insrsid14118510\charrsid8738163 
\par }{\f36\fs20\cf2\insrsid8872230 
\par }{\f36\fs20\cf2\insrsid7410519 Global variables, static variables (class, function etc) are not to be prefixed.
\par }{\f36\fs20\cf2\insrsid680227 
\par }{\f2\fs20\cf8\highlight6\insrsid13190251 SEALED.}{\f36\fs20\cf2\insrsid13190251 
\par }{\f36\fs20\cf2\insrsid13190251\charrsid8738163 
\par }{\f36\fs20\cf2\insrsid15141961 Function names begin in lowercase and respect the same convention as var names:}{\f36\fs20\cf2\insrsid680227\charrsid8738163  length}{\f36\fs20\cf2\insrsid15141961 ()}{\f36\fs20\cf2\insrsid680227\charrsid8738163 
, handleCommand}{\f36\fs20\cf2\insrsid15141961 (...)}{\f36\fs20\cf2\insrsid680227\charrsid8738163 , setSize}{\f36\fs20\cf2\insrsid15141961 (...)}{\f36\fs20\cf2\insrsid680227\charrsid8738163 , }{\f36\fs20\cf2\insrsid15141961 getSize(), }{
\f36\fs20\cf2\insrsid680227\charrsid8738163 getText}{\f36\fs20\cf2\insrsid15141961 ()}{\f36\fs20\cf2\insrsid680227\charrsid8738163 
\par }{\f36\fs20\insrsid680227 
\par }{\f2\fs20\cf8\highlight6\insrsid14118510 SEALED.}{\f36\fs20\insrsid14118510 
\par }{\f36\fs20\insrsid14118510\charrsid8738163 
\par }{\f36\fs20\cf2\insrsid15141961 F}{\f36\fs20\cf2\insrsid680227\charrsid8738163 or acronyms: only the first acronym }{\f36\fs20\cf2\insrsid1977462 letter }{\f36\fs20\cf2\insrsid680227\charrsid8738163 should be uppercase
\par 
\par \tab string myUrlDesc; // compared to myURLDesc which is harder to read
\par \tab string url;
\par \tab void makeUrlMap() \{\} 
\par \tab void urlTest() \{\}
\par 
\par and for member vars:
\par }{\f36\fs20\cf2\insrsid15141961 
\par }{\f36\fs20\cf2\insrsid680227\charrsid8738163 \tab string m_myUrlDesc;
\par \tab string m_url;
\par }{\f36\fs20\insrsid680227 
\par }{\f2\fs20\cf8\highlight6\insrsid14118510 SEALED.}{\f36\fs20\insrsid14118510 
\par }{\f36\fs20\insrsid14118510\charrsid8738163 
\par }{\f36\fs20\cf2\insrsid680227\charrsid8738163 Ideal OOP should not expose its internal variables... in other words all member vars should be private or protected.
\par A cla}{\f36\fs20\cf2\insrsid680227 ss should expose accessors}{\f36\fs20\cf2\insrsid680227\charrsid8738163  to manipulate its internal state.
\par 
\par \tab class CTest \{
\par \tab   public:
\par \tab     CTest();
\par \tab     ~CTest();
\par \tab \tab \tab \tab \tab \tab     // place empty lines to group related functions (here, this should be an empty line)
\par \tab     int getCoord();
\par \tab     void setCoord(int _coord);
\par \tab \tab \tab \tab \tab \tab     // here, this should be an empty line
\par \tab   private:
\par \tab     int m_coord;
\par \tab \};
\par 
\par \tab ...
\par \tab CTest test;
\par \tab test.setCoord(10);
\par \tab cout << test.getCoord() << endl;}{\f36\fs20\insrsid680227\charrsid8738163 
\par 
\par }{\f36\fs20\cf2\insrsid15141961\charrsid10424233 Anyway the p}{\f36\fs20\cf2\insrsid680227\charrsid10424233 
rogrammer should use OOP (or ideal OOP) when it makes life easier. In some cases it may be better for project to break some OOP rules, or even to use functional style.}{\f36\fs20\cf2\insrsid15141961\charrsid10424233 
\par Anyway}{\f36\fs20\cf2\insrsid14118510\charrsid10424233  there are some cases in which breaking this OOP rule is justified. This OOP rule should be interpreted only as a hint.}{\f36\fs20\cf2\insrsid680227\charrsid10424233 
\par }{\f36\fs20\insrsid680227 
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0\pararsid10424233 {\f2\fs20\cf8\highlight6\insrsid10424233 HINT. SEALED.}{\f36\fs20\insrsid10424233 
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 {\f36\fs20\insrsid15939236\charrsid8738163 
\par }{\f36\fs20\cf2\insrsid10424233 O}{\f36\fs20\cf2\insrsid680227\charrsid8738163 ther conventions:
\par 
\par > Not to use private inheritance in classes
\par 
\par sometimes it is neces}{\f36\fs20\cf2\insrsid11284776 s}{\f36\fs20\cf2\insrsid680227\charrsid8738163 ary: when you want to benefit from the super class behavior internally but not to expose that behavior directly outside
\par }{\f36\fs20\cf2\insrsid680227\charrsid10424233 
\par In this case it is recommended to instantiate that class as a private variable. But anyway it is not strict requirement, if we see that private inheritance dramatically simplifies that task then will use it.
\par }{\f36\fs20\insrsid14224174 
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0\pararsid10424233 {\f2\fs20\cf8\highlight6\insrsid10424233 HINT. SEALED.}{\f36\fs20\insrsid10424233 
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 {\f36\fs20\insrsid15939236\charrsid8738163 
\par }{\f36\fs20\cf2\insrsid680227\charrsid8738163 > Try to avoid using multiple inheritance, use interfaces instead
\par }{\f36\fs20\insrsid680227 
\par }{\f2\fs20\cf8\highlight6\insrsid10424233 HINT}{\f2\fs20\cf8\highlight6\insrsid14224174 . SEALED.}{\f36\fs20\insrsid14224174 
\par }{\f36\fs20\insrsid14224174\charrsid8738163 
\par }{\f36\fs20\cf2\insrsid680227\charrsid8738163 > Identifiers that start with uppercase are often used as template parameters: templ}{\f36\fs20\cf2\insrsid10424233 ate <class T> class point \{ \}. A}{\f36\fs20\cf2\insrsid680227\charrsid8738163 
lso template parameters should be one letter in length}{\f36\fs20\cf2\insrsid10424233 , capitalized.}{\f36\fs20\cf2\insrsid680227\charrsid10424233 
\par }{\f36\fs20\insrsid680227 
\par }{\f2\fs20\cf8\highlight6\insrsid10424233 HINT}{\f2\fs20\cf8\highlight6\insrsid8659262 . }{\f2\fs20\cf8\highlight6\insrsid2842820 SEALED.}{\f36\fs20\insrsid8659262 
\par }{\f36\fs20\cf2\insrsid8659262\charrsid12923267 
\par }{\f36\fs20\cf2\insrsid680227\charrsid12923267 > Basic coding style:
\par }{\f36\fs20\insrsid680227\charrsid8738163 
\par }{\f36\fs20\cf2\insrsid680227\charrsid8738163 Place an empty line between different sections of a class: private, public, protected}{\f36\fs20\insrsid680227\charrsid8738163 
\par }{\f36\fs20\insrsid680227 
\par }{\f2\fs20\cf8\highlight6\insrsid2842820 SEALED.}{\f36\fs20\insrsid2842820 
\par }{\f36\fs20\insrsid2842820\charrsid8738163 
\par }{\f36\fs20\cf2\insrsid680227\charrsid8738163 Place an empty line between function definition section and variable definition section inside each private, public, protected section
\par Also place var defs before fun}{\f36\fs20\cf2\insrsid11284776 c}{\f36\fs20\cf2\insrsid680227\charrsid8738163 tion defs inside each section}{\f36\fs20\cf2\insrsid10424233 . Separate var defs and function defs in each section by an empty line.}{
\f36\fs20\cf2\insrsid680227\charrsid8738163 
\par }{\f36\fs20\insrsid680227 
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0\pararsid2842820 {\f36\fs20\cf2\insrsid2842820\charrsid10424233 class C}{\f36\fs20\cf2\insrsid5844244 T}{\f36\fs20\cf2\insrsid2842820\charrsid10424233 est}{\f36\fs20\cf2\insrsid5844244  }{
\f36\fs20\cf2\insrsid2842820\charrsid10424233 \{
\par     public:
\par         void someFunc();
\par }{\f36\fs20\cf2\insrsid10424233 \tab \tab \tab \tab // empty line}{\f36\fs20\cf2\insrsid2842820\charrsid10424233 
\par     private:
\par         int m_data1;
\par         int m_data2;
\par }{\f36\fs20\cf2\insrsid10424233 \tab \tab \tab \tab // empty line}{\f36\fs20\cf2\insrsid2842820\charrsid10424233 
\par         void f1();
\par         void f2();
\par \}
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 {\f36\fs20\cf8\highlight4\insrsid8809515\charrsid8809515 
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0\pararsid10424233 {\f2\fs20\cf8\highlight6\insrsid10424233 SEALED.}{\f36\fs20\insrsid10424233 
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 {\f36\fs20\insrsid8809515\charrsid8738163 
\par }{\f36\fs20\cf2\insrsid680227\charrsid8738163 Place \{, preceded by a space, on the same line as class defs, function defs etc
\par Place \} on its own line}{\f36\fs20\cf2\insrsid10424233 . }{\f36\fs20\cf2\insrsid680227\charrsid8738163 Use indentation of 2 }{\f36\fs20\cf2\insrsid12923267 or 4 }{\f36\fs20\cf2\insrsid680227\charrsid8738163 characters:
\par }{\f36\fs20\cf2\insrsid10424233 
\par }\pard \ql \fi720\li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0\pararsid10621288 {\f36\fs20\cf2\insrsid680227\charrsid8738163 if (a < b) \{
\par   doSomething();
\par   ...
\par \}
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0\pararsid10621288 {\f36\fs20\cf2\insrsid680227\charrsid8738163 
\par }\pard \ql \fi720\li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0\pararsid10621288 {\f36\fs20\cf2\insrsid680227\charrsid8738163 class CSample \{
\par   public:
\par     int m_publicVariable;
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0\pararsid10621288 {\f36\fs20\cf2\insrsid680227\charrsid8738163 
\par }\pard \ql \fi720\li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0\pararsid10621288 {\f36\fs20\cf2\insrsid680227\charrsid8738163     CSample();
\par     ~CSample();
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0\pararsid10621288 {\f36\fs20\cf2\insrsid680227\charrsid8738163 
\par }\pard \ql \fi720\li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0\pararsid10621288 {\f36\fs20\cf2\insrsid680227\charrsid8738163   private:
\par     int m_privateVariable;
\par \}
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0\pararsid10621288 {\f36\fs20\cf2\insrsid680227\charrsid8130439 
\par }\pard \ql \li720\ri0\nowidctlpar\faauto\rin0\lin720\itap0\pararsid10621288 {\f36\fs20\cf2\insrsid10621288\charrsid10621288 int test()}{\f36\fs20\cf2\insrsid10621288  }{\f36\fs20\cf2\insrsid10621288\charrsid10621288 \{
\par }\pard \ql \fi720\li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0\pararsid10621288 {\f36\fs20\cf2\insrsid10621288\charrsid10621288   int a, b, i, r;
\par   bool flag;
\par   ...
\par   while (a < b) \{
\par     if (flag)}{\f36\fs20\cf2\insrsid10621288  }{\f36\fs20\cf2\insrsid10621288\charrsid10621288 \{
\par       ...
\par     \}
\par     else}{\f36\fs20\cf2\insrsid10621288  }{\f36\fs20\cf2\insrsid10621288\charrsid10621288 \{
\par }{\f36\fs20\cf2\insrsid10621288       }{\f36\fs20\cf2\insrsid10621288\charrsid10621288 for(i = 0; i < N; i++)}{\f36\fs20\cf2\insrsid10621288  }{\f36\fs20\cf2\insrsid10621288\charrsid10621288 \{
\par }{\f36\fs20\cf2\insrsid10621288         ...}{\f36\fs20\cf2\insrsid10621288\charrsid10621288 
\par       \}
\par     \}
\par   \}
\par   return r;
\par \}
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 {\f36\fs20\insrsid15298598 
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0\pararsid15298598 {\f2\fs20\cf8\highlight6\insrsid15298598 SEALED.}{\f36\fs20\insrsid15298598 
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 {\f36\fs20\insrsid15298598\charrsid8738163 
\par }{\f36\fs20\cf2\insrsid680227\charrsid8738163 > Use spaces in expression: a + b , not a+b
\par > Do not use spaces in unary operators: ++i, not ++ i
\par > When passing arguments by reference or by pointer use this style}{\f36\fs20\cf2\insrsid12071123  for formal parameters}{\f36\fs20\cf2\insrsid680227\charrsid8738163 :
\par \tab void swap(int& a, int& b)  // do not use int &a}{\f36\fs20\cf2\insrsid680227 
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0\pararsid12071123 {\f36\fs20\cf2\insrsid12071123\charrsid8738163 \tab void }{\f36\fs20\cf2\insrsid12071123 display}{\f36\fs20\cf2\insrsid12071123\charrsid8738163 (int}{\f36\fs20\cf2\insrsid12071123 *}{
\f36\fs20\cf2\insrsid12071123\charrsid8738163  a, int}{\f36\fs20\cf2\insrsid12071123 * b)  // do not use int *}{\f36\fs20\cf2\insrsid12071123\charrsid8738163 a
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 {\f36\fs20\insrsid680227 
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0\pararsid12071123 {\f2\fs20\cf8\highlight6\insrsid12071123 SEALED.}{\f36\fs20\insrsid12071123 
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 {\f36\fs20\cf2\insrsid680227\charrsid12923267 
\par For variable declaration there may be a different situation. You may declare multiple variables:
\par \tab int* a, b, c;
\par and the int* will }{\f36\fs20\cf2\insrsid1977462 only be applied to "a";}{\f36\fs20\cf2\insrsid680227\charrsid12923267  "b" and "c" will have int type. In this case it is better to declare them in following way:
\par \tab int *a, b, c;
\par But, we can agree not to place pointer or reference declarations in multiple variable declaration statement, and rewrite this code like:
\par \tab int* a;
\par \tab int b, c;
\par In this case everything is OK.
\par }{\f36\fs20\cf2\insrsid8930105\charrsid12923267 
\par }{\f2\fs20\cf8\highlight6\insrsid12071123 HINT. SEALED.}{\f36\fs20\insrsid16674856 
\par }}