{\rtf1\ansi\ansicpg1252\uc1\deff0\stshfdbch0\stshfloch0\stshfhich0\stshfbi0\deflang1033\deflangfe1033{\fonttbl{\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}{\f1\fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Arial;}
{\f2\fmodern\fcharset0\fprq1{\*\panose 02070309020205020404}Courier New;}{\f36\froman\fcharset238\fprq2 Times New Roman CE;}{\f37\froman\fcharset204\fprq2 Times New Roman Cyr;}{\f39\froman\fcharset161\fprq2 Times New Roman Greek;}
{\f40\froman\fcharset162\fprq2 Times New Roman Tur;}{\f41\froman\fcharset177\fprq2 Times New Roman (Hebrew);}{\f42\froman\fcharset178\fprq2 Times New Roman (Arabic);}{\f43\froman\fcharset186\fprq2 Times New Roman Baltic;}
{\f44\froman\fcharset163\fprq2 Times New Roman (Vietnamese);}{\f46\fswiss\fcharset238\fprq2 Arial CE;}{\f47\fswiss\fcharset204\fprq2 Arial Cyr;}{\f49\fswiss\fcharset161\fprq2 Arial Greek;}{\f50\fswiss\fcharset162\fprq2 Arial Tur;}
{\f51\fswiss\fcharset177\fprq2 Arial (Hebrew);}{\f52\fswiss\fcharset178\fprq2 Arial (Arabic);}{\f53\fswiss\fcharset186\fprq2 Arial Baltic;}{\f54\fswiss\fcharset163\fprq2 Arial (Vietnamese);}{\f56\fmodern\fcharset238\fprq1 Courier New CE;}
{\f57\fmodern\fcharset204\fprq1 Courier New Cyr;}{\f59\fmodern\fcharset161\fprq1 Courier New Greek;}{\f60\fmodern\fcharset162\fprq1 Courier New Tur;}{\f61\fmodern\fcharset177\fprq1 Courier New (Hebrew);}
{\f62\fmodern\fcharset178\fprq1 Courier New (Arabic);}{\f63\fmodern\fcharset186\fprq1 Courier New Baltic;}{\f64\fmodern\fcharset163\fprq1 Courier New (Vietnamese);}}{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;
\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;
\red128\green128\blue128;\red192\green192\blue192;}{\stylesheet{\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \snext0 Normal;}{\*\cs10 \additive \ssemihidden 
Default Paragraph Font;}{\*\ts11\tsrowd\trftsWidthB3\trpaddl108\trpaddr108\trpaddfl3\trpaddft3\trpaddfb3\trpaddfr3\trcbpat1\trcfpat1\tscellwidthfts0\tsvertalt\tsbrdrt\tsbrdrl\tsbrdrb\tsbrdrr\tsbrdrdgl\tsbrdrdgr\tsbrdrh\tsbrdrv 
\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1024\langfe1024\cgrid\langnp1024\langfenp1024 \snext11 \ssemihidden Normal Table;}}{\*\rsidtbl \rsid1776112\rsid3110221\rsid4010088\rsid5463326\rsid9847822\rsid12270007
\rsid14954666}{\*\generator Microsoft Word 10.0.2627;}{\info{\author Derek Pappas}{\operator qwe}{\creatim\yr2005\mo7\dy28\hr1\min18}{\revtim\yr2006\mo5\dy14\hr13\min55}{\version6}{\edmins210}{\nofpages2}{\nofwords566}{\nofchars3231}{\*\company X}
{\nofcharsws3790}{\vern16437}}\widowctrl\ftnbj\aenddoc\noxlattoyen\expshrtn\noultrlspc\dntblnsbdb\nospaceforul\hyphcaps0\horzdoc\dghspace120\dgvspace120\dghorigin1701\dgvorigin1984\dghshow0\dgvshow3
\jcompress\viewkind4\viewscale90\nolnhtadjtbl\rsidroot12270007 \fet0\sectd \linex0\sectdefaultcl\sftnbj {\*\pnseclvl1\pnucrm\pnstart1\pnindent720\pnhang {\pntxta .}}{\*\pnseclvl2\pnucltr\pnstart1\pnindent720\pnhang {\pntxta .}}{\*\pnseclvl3
\pndec\pnstart1\pnindent720\pnhang {\pntxta .}}{\*\pnseclvl4\pnlcltr\pnstart1\pnindent720\pnhang {\pntxta )}}{\*\pnseclvl5\pndec\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl6\pnlcltr\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}
{\*\pnseclvl7\pnlcrm\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl8\pnlcltr\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl9\pnlcrm\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}\pard\plain 
\ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\f2\fs20\insrsid4010088 EMAIL to all developers on <project> email list
\par 
\par }{\f2\fs20\insrsid12270007 Broken Build report
\par 
\par <project_name> build <}{\f2\fs20\insrsid4010088 perforce_}{\f2\fs20\insrsid12270007 change_list_number> <status}{\f2\fs20\insrsid4010088  (PASS|FAIL)}{\f2\fs20\insrsid12270007 >
\par 
\par Changes submitted by one or more of:
\par 
\par   <user_list> // people who submitted changes between the last build which passed and the current build which fails. 
\par 
\par <build step that is passing>
\par <build step that is broken>
\par 
\par The results are available at the following page:
\par <url><page>/index.html}{\f1\fs20\insrsid12270007 
\par 
\par The algorithm for determining which check in broke the build}{\f1\fs20\insrsid9847822  }{\f1\fs20\insrsid12270007 is as follows.
\par }{\f1\fs20\insrsid14954666 - }{\f1\fs20\insrsid12270007 The build machine cannot build a new "build" for each check in.
\par }{\f1\fs20\insrsid14954666 - }{\f1\fs20\insrsid12270007 The build tree syncs to the repository.
\par }{\f1\fs20\insrsid14954666 - }{\f1\fs20\insrsid12270007 Instead the build machine starts a build based on a current snapshot of the build tree.
\par When the build finishes the build machine runs the simple regressions.
\par The results of the regressions are posted on the HTML page.
\par The regressions are broken down into an overall status and then finer grained reports.
\par If the build or regression fails then the last check in is removed from the build tree and the build regression is rerun.
\par The list of people who have checked in code since the last known good build are listed in a report which is emailed to the group.
\par If the build passes then the person(s) that checked in code are emailed and told to fix the build.
\par If there are multiple steps that are broken and one of the steps that w broken was fixed by reverting the build tree 
\par back one change list then a report is emailed to the group which says what was fixed and who is on the list of current 
\par outstanding checkins that will be verified.
\par Else if the build/regression is still broken then the process is repeated.
\par Pointers to the build report, build area, and regression area and results are sent out.
\par 
\par }{\f1\fs20\insrsid4010088 Regression Page
\par Changelist number   Status
\par 
\par 
\par }{\f1\fs20\insrsid5463326 Details about building: 
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0\pararsid5463326 {\f1\fs20\insrsid5463326\charrsid5463326 
\par - commit->tag->build->regress->tag the SVN repository
\par - not all commits will have the SERVER LEVEL build and regress
\par 
\par Lets separate the issues. We are talking about two levels here:
\par 1. on the user machine: when the user does a SVN commit on the local machine there is a build and mini regress 
\par and if they both pass then a commit is made.
\par 2. on the server machine: when a commit is received then a build and a full regress takes place 
\par Note that there can be other commits to the server after the first commit is made and while the SERVER LEVEL build and 
\par regress is running.
\par 
\par What if someone else commits before the full build/regression is done on the server ?
\par - If someone else commits before the full build/regression is done on the server then no build/regress takes place.
\par 
\par Say you have a commit and the B/R/T process starts and you have another commit and the first B/R/T process is still running, 
\par then there is another commit: that is commit number 4 then the next B/R/T process will run on commit 3
\par 
\par The last commit in queue is to be treated first after the current process ?
\par - yes. When the B/R is done if it succeeds then it is tagged. If commit 4 fails then thr B/R is performed on commit 3.
\par - We then work backwards to find the commit that broke the build. This process is automatic and is documented via email.
\par The last one is used because there is no reason to believe that the build is broken: in order to commit a local build and mini regress has to pass.
\par 
\par This is like two state machines: one on the local machine and one on the server:
\par - local state machine: edit->(SVN trigger->build->mini-regress->commit->tag)
\par - server state machaine: commit->build->regress->
\par If pass then send email
\par If fail then send email and repeat steps on commitn-1
\par 
\par We are not risking to be in a potentially large waiting loop ?
\par Only if there is a failure. But that loop takes less time than a manual debug. Trying to figure out which check in broke 
\par the build can take days. This is why we need the tagging.}{\f1\fs20\insrsid5463326\charrsid5463326 
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 {\f1\fs20\insrsid4010088 
\par }}