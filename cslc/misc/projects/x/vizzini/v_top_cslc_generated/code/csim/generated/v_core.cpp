#include "v_core.h"

namespace NSCsimGen {

void v_core::defaultInitialize() {
    //port allocations
  gpio_connect_a0_in = CsimPortTBool::build(RefString(new std::string("gpio_connect_a0_in")),1, getThis(), PORT_DIR_INPUT);
  gpio_connect_a0_out = CsimPortTBool::build(RefString(new std::string("gpio_connect_a0_out")),1, getThis(), PORT_DIR_OUTPUT);
  gpio_connect_a0_en = CsimPortTBool::build(RefString(new std::string("gpio_connect_a0_en")),1, getThis(), PORT_DIR_OUTPUT);
  gpio_connect_a1_in = CsimPortTBool::build(RefString(new std::string("gpio_connect_a1_in")),1, getThis(), PORT_DIR_INPUT);
  gpio_connect_a1_out = CsimPortTBool::build(RefString(new std::string("gpio_connect_a1_out")),1, getThis(), PORT_DIR_OUTPUT);
  gpio_connect_a1_en = CsimPortTBool::build(RefString(new std::string("gpio_connect_a1_en")),1, getThis(), PORT_DIR_OUTPUT);
  gpio_connect_a2_in = CsimPortTBool::build(RefString(new std::string("gpio_connect_a2_in")),1, getThis(), PORT_DIR_INPUT);
  gpio_connect_a2_out = CsimPortTBool::build(RefString(new std::string("gpio_connect_a2_out")),1, getThis(), PORT_DIR_OUTPUT);
  gpio_connect_a2_en = CsimPortTBool::build(RefString(new std::string("gpio_connect_a2_en")),1, getThis(), PORT_DIR_OUTPUT);
  gpio_connect_a3_in = CsimPortTBool::build(RefString(new std::string("gpio_connect_a3_in")),1, getThis(), PORT_DIR_INPUT);
  gpio_connect_a3_out = CsimPortTBool::build(RefString(new std::string("gpio_connect_a3_out")),1, getThis(), PORT_DIR_OUTPUT);
  gpio_connect_a3_en = CsimPortTBool::build(RefString(new std::string("gpio_connect_a3_en")),1, getThis(), PORT_DIR_OUTPUT);
  gpio_connect_a4_in = CsimPortTBool::build(RefString(new std::string("gpio_connect_a4_in")),1, getThis(), PORT_DIR_INPUT);
  gpio_connect_a4_out = CsimPortTBool::build(RefString(new std::string("gpio_connect_a4_out")),1, getThis(), PORT_DIR_OUTPUT);
  gpio_connect_a4_en = CsimPortTBool::build(RefString(new std::string("gpio_connect_a4_en")),1, getThis(), PORT_DIR_OUTPUT);
  gpio_connect_a5_in = CsimPortTBool::build(RefString(new std::string("gpio_connect_a5_in")),1, getThis(), PORT_DIR_INPUT);
  gpio_connect_a5_out = CsimPortTBool::build(RefString(new std::string("gpio_connect_a5_out")),1, getThis(), PORT_DIR_OUTPUT);
  gpio_connect_a5_en = CsimPortTBool::build(RefString(new std::string("gpio_connect_a5_en")),1, getThis(), PORT_DIR_OUTPUT);
  u1_modem_rx = CsimPortTBool::build(RefString(new std::string("u1_modem_rx")),1, getThis(), PORT_DIR_INPUT);
  u1_modem_tx = CsimPortTBool::build(RefString(new std::string("u1_modem_tx")),1, getThis(), PORT_DIR_OUTPUT);
  u1_modem_gp0_in = CsimPortTBool::build(RefString(new std::string("u1_modem_gp0_in")),1, getThis(), PORT_DIR_INPUT);
  u1_modem_gp0_out = CsimPortTBool::build(RefString(new std::string("u1_modem_gp0_out")),1, getThis(), PORT_DIR_OUTPUT);
  u1_modem_gp0_en = CsimPortTBool::build(RefString(new std::string("u1_modem_gp0_en")),1, getThis(), PORT_DIR_OUTPUT);
  u1_modem_gp1_in = CsimPortTBool::build(RefString(new std::string("u1_modem_gp1_in")),1, getThis(), PORT_DIR_INPUT);
  u1_modem_gp1_out = CsimPortTBool::build(RefString(new std::string("u1_modem_gp1_out")),1, getThis(), PORT_DIR_OUTPUT);
  u1_modem_gp1_en = CsimPortTBool::build(RefString(new std::string("u1_modem_gp1_en")),1, getThis(), PORT_DIR_OUTPUT);
  u1_modem_gp2_in = CsimPortTBool::build(RefString(new std::string("u1_modem_gp2_in")),1, getThis(), PORT_DIR_INPUT);
  u1_modem_gp2_out = CsimPortTBool::build(RefString(new std::string("u1_modem_gp2_out")),1, getThis(), PORT_DIR_OUTPUT);
  u1_modem_gp2_en = CsimPortTBool::build(RefString(new std::string("u1_modem_gp2_en")),1, getThis(), PORT_DIR_OUTPUT);
  u1_modem_gp3_in = CsimPortTBool::build(RefString(new std::string("u1_modem_gp3_in")),1, getThis(), PORT_DIR_INPUT);
  u1_modem_gp3_out = CsimPortTBool::build(RefString(new std::string("u1_modem_gp3_out")),1, getThis(), PORT_DIR_OUTPUT);
  u1_modem_gp3_en = CsimPortTBool::build(RefString(new std::string("u1_modem_gp3_en")),1, getThis(), PORT_DIR_OUTPUT);
  u1_modem_gp4_in = CsimPortTBool::build(RefString(new std::string("u1_modem_gp4_in")),1, getThis(), PORT_DIR_INPUT);
  u1_modem_gp4_out = CsimPortTBool::build(RefString(new std::string("u1_modem_gp4_out")),1, getThis(), PORT_DIR_OUTPUT);
  u1_modem_gp4_en = CsimPortTBool::build(RefString(new std::string("u1_modem_gp4_en")),1, getThis(), PORT_DIR_OUTPUT);
  u1_modem_gp5_in = CsimPortTBool::build(RefString(new std::string("u1_modem_gp5_in")),1, getThis(), PORT_DIR_INPUT);
  u1_modem_gp5_out = CsimPortTBool::build(RefString(new std::string("u1_modem_gp5_out")),1, getThis(), PORT_DIR_OUTPUT);
  u1_modem_gp5_en = CsimPortTBool::build(RefString(new std::string("u1_modem_gp5_en")),1, getThis(), PORT_DIR_OUTPUT);
  u2_modem_rx = CsimPortTBool::build(RefString(new std::string("u2_modem_rx")),1, getThis(), PORT_DIR_INPUT);
  u2_modem_tx = CsimPortTBool::build(RefString(new std::string("u2_modem_tx")),1, getThis(), PORT_DIR_OUTPUT);
  u2_modem_gp0_in = CsimPortTBool::build(RefString(new std::string("u2_modem_gp0_in")),1, getThis(), PORT_DIR_INPUT);
  u2_modem_gp0_out = CsimPortTBool::build(RefString(new std::string("u2_modem_gp0_out")),1, getThis(), PORT_DIR_OUTPUT);
  u2_modem_gp0_en = CsimPortTBool::build(RefString(new std::string("u2_modem_gp0_en")),1, getThis(), PORT_DIR_OUTPUT);
  u2_modem_gp1_in = CsimPortTBool::build(RefString(new std::string("u2_modem_gp1_in")),1, getThis(), PORT_DIR_INPUT);
  u2_modem_gp1_out = CsimPortTBool::build(RefString(new std::string("u2_modem_gp1_out")),1, getThis(), PORT_DIR_OUTPUT);
  u2_modem_gp1_en = CsimPortTBool::build(RefString(new std::string("u2_modem_gp1_en")),1, getThis(), PORT_DIR_OUTPUT);
  u2_modem_gp2_in = CsimPortTBool::build(RefString(new std::string("u2_modem_gp2_in")),1, getThis(), PORT_DIR_INPUT);
  u2_modem_gp2_out = CsimPortTBool::build(RefString(new std::string("u2_modem_gp2_out")),1, getThis(), PORT_DIR_OUTPUT);
  u2_modem_gp2_en = CsimPortTBool::build(RefString(new std::string("u2_modem_gp2_en")),1, getThis(), PORT_DIR_OUTPUT);
  u2_modem_gp3_in = CsimPortTBool::build(RefString(new std::string("u2_modem_gp3_in")),1, getThis(), PORT_DIR_INPUT);
  u2_modem_gp3_out = CsimPortTBool::build(RefString(new std::string("u2_modem_gp3_out")),1, getThis(), PORT_DIR_OUTPUT);
  u2_modem_gp3_en = CsimPortTBool::build(RefString(new std::string("u2_modem_gp3_en")),1, getThis(), PORT_DIR_OUTPUT);
  u2_modem_gp4_in = CsimPortTBool::build(RefString(new std::string("u2_modem_gp4_in")),1, getThis(), PORT_DIR_INPUT);
  u2_modem_gp4_out = CsimPortTBool::build(RefString(new std::string("u2_modem_gp4_out")),1, getThis(), PORT_DIR_OUTPUT);
  u2_modem_gp4_en = CsimPortTBool::build(RefString(new std::string("u2_modem_gp4_en")),1, getThis(), PORT_DIR_OUTPUT);
  u2_modem_gp5_in = CsimPortTBool::build(RefString(new std::string("u2_modem_gp5_in")),1, getThis(), PORT_DIR_INPUT);
  u2_modem_gp5_out = CsimPortTBool::build(RefString(new std::string("u2_modem_gp5_out")),1, getThis(), PORT_DIR_OUTPUT);
  u2_modem_gp5_en = CsimPortTBool::build(RefString(new std::string("u2_modem_gp5_en")),1, getThis(), PORT_DIR_OUTPUT);
  u3_modem_rx = CsimPortTBool::build(RefString(new std::string("u3_modem_rx")),1, getThis(), PORT_DIR_INPUT);
  u3_modem_tx = CsimPortTBool::build(RefString(new std::string("u3_modem_tx")),1, getThis(), PORT_DIR_OUTPUT);
  u3_modem_gp0_in = CsimPortTBool::build(RefString(new std::string("u3_modem_gp0_in")),1, getThis(), PORT_DIR_INPUT);
  u3_modem_gp0_out = CsimPortTBool::build(RefString(new std::string("u3_modem_gp0_out")),1, getThis(), PORT_DIR_OUTPUT);
  u3_modem_gp0_en = CsimPortTBool::build(RefString(new std::string("u3_modem_gp0_en")),1, getThis(), PORT_DIR_OUTPUT);
  u3_modem_gp1_in = CsimPortTBool::build(RefString(new std::string("u3_modem_gp1_in")),1, getThis(), PORT_DIR_INPUT);
  u3_modem_gp1_out = CsimPortTBool::build(RefString(new std::string("u3_modem_gp1_out")),1, getThis(), PORT_DIR_OUTPUT);
  u3_modem_gp1_en = CsimPortTBool::build(RefString(new std::string("u3_modem_gp1_en")),1, getThis(), PORT_DIR_OUTPUT);
  u3_modem_gp2_in = CsimPortTBool::build(RefString(new std::string("u3_modem_gp2_in")),1, getThis(), PORT_DIR_INPUT);
  u3_modem_gp2_out = CsimPortTBool::build(RefString(new std::string("u3_modem_gp2_out")),1, getThis(), PORT_DIR_OUTPUT);
  u3_modem_gp2_en = CsimPortTBool::build(RefString(new std::string("u3_modem_gp2_en")),1, getThis(), PORT_DIR_OUTPUT);
  u3_modem_gp3_in = CsimPortTBool::build(RefString(new std::string("u3_modem_gp3_in")),1, getThis(), PORT_DIR_INPUT);
  u3_modem_gp3_out = CsimPortTBool::build(RefString(new std::string("u3_modem_gp3_out")),1, getThis(), PORT_DIR_OUTPUT);
  u3_modem_gp3_en = CsimPortTBool::build(RefString(new std::string("u3_modem_gp3_en")),1, getThis(), PORT_DIR_OUTPUT);
  u3_modem_gp4_in = CsimPortTBool::build(RefString(new std::string("u3_modem_gp4_in")),1, getThis(), PORT_DIR_INPUT);
  u3_modem_gp4_out = CsimPortTBool::build(RefString(new std::string("u3_modem_gp4_out")),1, getThis(), PORT_DIR_OUTPUT);
  u3_modem_gp4_en = CsimPortTBool::build(RefString(new std::string("u3_modem_gp4_en")),1, getThis(), PORT_DIR_OUTPUT);
  u3_modem_gp5_in = CsimPortTBool::build(RefString(new std::string("u3_modem_gp5_in")),1, getThis(), PORT_DIR_INPUT);
  u3_modem_gp5_out = CsimPortTBool::build(RefString(new std::string("u3_modem_gp5_out")),1, getThis(), PORT_DIR_OUTPUT);
  u3_modem_gp5_en = CsimPortTBool::build(RefString(new std::string("u3_modem_gp5_en")),1, getThis(), PORT_DIR_OUTPUT);
  usb_rpu1_en = CsimPortTBool::build(RefString(new std::string("usb_rpu1_en")),1, getThis(), PORT_DIR_INPUT);
  usb_rpu2_en = CsimPortTBool::build(RefString(new std::string("usb_rpu2_en")),1, getThis(), PORT_DIR_INPUT);
  usb_data_in = CsimPortTBool::build(RefString(new std::string("usb_data_in")),1, getThis(), PORT_DIR_INPUT);
  usb_force_se0 = CsimPortTBool::build(RefString(new std::string("usb_force_se0")),1, getThis(), PORT_DIR_INPUT);
  usb_drv_enable = CsimPortTBool::build(RefString(new std::string("usb_drv_enable")),1, getThis(), PORT_DIR_INPUT);
  usb_suspend = CsimPortTBool::build(RefString(new std::string("usb_suspend")),1, getThis(), PORT_DIR_INPUT);
  usb_se_dp = CsimPortTBool::build(RefString(new std::string("usb_se_dp")),1, getThis(), PORT_DIR_OUTPUT);
  usb_enable_se = CsimPortTBool::build(RefString(new std::string("usb_enable_se")),1, getThis(), PORT_DIR_OUTPUT);
  usb_se_dn = CsimPortTBool::build(RefString(new std::string("usb_se_dn")),1, getThis(), PORT_DIR_OUTPUT);
  usb_data_out = CsimPortTBool::build(RefString(new std::string("usb_data_out")),1, getThis(), PORT_DIR_OUTPUT);
  usb_strobe = CsimPortTBool::build(RefString(new std::string("usb_strobe")),1, getThis(), PORT_DIR_OUTPUT);
  usb_enable_diff = CsimPortTBool::build(RefString(new std::string("usb_enable_diff")),1, getThis(), PORT_DIR_INPUT);
  //port registrations
  addConnectable(gpio_connect_a0_in);
  addConnectable(gpio_connect_a0_out);
  addConnectable(gpio_connect_a0_en);
  addConnectable(gpio_connect_a1_in);
  addConnectable(gpio_connect_a1_out);
  addConnectable(gpio_connect_a1_en);
  addConnectable(gpio_connect_a2_in);
  addConnectable(gpio_connect_a2_out);
  addConnectable(gpio_connect_a2_en);
  addConnectable(gpio_connect_a3_in);
  addConnectable(gpio_connect_a3_out);
  addConnectable(gpio_connect_a3_en);
  addConnectable(gpio_connect_a4_in);
  addConnectable(gpio_connect_a4_out);
  addConnectable(gpio_connect_a4_en);
  addConnectable(gpio_connect_a5_in);
  addConnectable(gpio_connect_a5_out);
  addConnectable(gpio_connect_a5_en);
  addConnectable(u1_modem_rx);
  addConnectable(u1_modem_tx);
  addConnectable(u1_modem_gp0_in);
  addConnectable(u1_modem_gp0_out);
  addConnectable(u1_modem_gp0_en);
  addConnectable(u1_modem_gp1_in);
  addConnectable(u1_modem_gp1_out);
  addConnectable(u1_modem_gp1_en);
  addConnectable(u1_modem_gp2_in);
  addConnectable(u1_modem_gp2_out);
  addConnectable(u1_modem_gp2_en);
  addConnectable(u1_modem_gp3_in);
  addConnectable(u1_modem_gp3_out);
  addConnectable(u1_modem_gp3_en);
  addConnectable(u1_modem_gp4_in);
  addConnectable(u1_modem_gp4_out);
  addConnectable(u1_modem_gp4_en);
  addConnectable(u1_modem_gp5_in);
  addConnectable(u1_modem_gp5_out);
  addConnectable(u1_modem_gp5_en);
  addConnectable(u2_modem_rx);
  addConnectable(u2_modem_tx);
  addConnectable(u2_modem_gp0_in);
  addConnectable(u2_modem_gp0_out);
  addConnectable(u2_modem_gp0_en);
  addConnectable(u2_modem_gp1_in);
  addConnectable(u2_modem_gp1_out);
  addConnectable(u2_modem_gp1_en);
  addConnectable(u2_modem_gp2_in);
  addConnectable(u2_modem_gp2_out);
  addConnectable(u2_modem_gp2_en);
  addConnectable(u2_modem_gp3_in);
  addConnectable(u2_modem_gp3_out);
  addConnectable(u2_modem_gp3_en);
  addConnectable(u2_modem_gp4_in);
  addConnectable(u2_modem_gp4_out);
  addConnectable(u2_modem_gp4_en);
  addConnectable(u2_modem_gp5_in);
  addConnectable(u2_modem_gp5_out);
  addConnectable(u2_modem_gp5_en);
  addConnectable(u3_modem_rx);
  addConnectable(u3_modem_tx);
  addConnectable(u3_modem_gp0_in);
  addConnectable(u3_modem_gp0_out);
  addConnectable(u3_modem_gp0_en);
  addConnectable(u3_modem_gp1_in);
  addConnectable(u3_modem_gp1_out);
  addConnectable(u3_modem_gp1_en);
  addConnectable(u3_modem_gp2_in);
  addConnectable(u3_modem_gp2_out);
  addConnectable(u3_modem_gp2_en);
  addConnectable(u3_modem_gp3_in);
  addConnectable(u3_modem_gp3_out);
  addConnectable(u3_modem_gp3_en);
  addConnectable(u3_modem_gp4_in);
  addConnectable(u3_modem_gp4_out);
  addConnectable(u3_modem_gp4_en);
  addConnectable(u3_modem_gp5_in);
  addConnectable(u3_modem_gp5_out);
  addConnectable(u3_modem_gp5_en);
  addConnectable(usb_rpu1_en);
  addConnectable(usb_rpu2_en);
  addConnectable(usb_data_in);
  addConnectable(usb_force_se0);
  addConnectable(usb_drv_enable);
  addConnectable(usb_suspend);
  addConnectable(usb_se_dp);
  addConnectable(usb_enable_se);
  addConnectable(usb_se_dn);
  addConnectable(usb_data_out);
  addConnectable(usb_strobe);
  addConnectable(usb_enable_diff);
  //signal allocations
  ram_ufm_valid = CsimSignalTBool::build(RefString(new std::string("ram_ufm_valid")),1, getThis());
  ram_ufm_write_en = CsimSignalTBool::build(RefString(new std::string("ram_ufm_write_en")),1, getThis());
  ram_ufm_addr = CsimSignalTChar::build(RefString(new std::string("ram_ufm_addr")),5, getThis());
  ram_ufm_write_data = CsimSignalTShort::build(RefString(new std::string("ram_ufm_write_data")),12, getThis());
  ram_ufm_read_data = CsimSignalTShort::build(RefString(new std::string("ram_ufm_read_data")),12, getThis());
  ram_ufm_ready = CsimSignalTBool::build(RefString(new std::string("ram_ufm_ready")),1, getThis());
  ram_upm_valid = CsimSignalTBool::build(RefString(new std::string("ram_upm_valid")),1, getThis());
  ram_upm_write_en = CsimSignalTBool::build(RefString(new std::string("ram_upm_write_en")),1, getThis());
  ram_upm_addr = CsimSignalTChar::build(RefString(new std::string("ram_upm_addr")),5, getThis());
  ram_upm_write_data = CsimSignalTShort::build(RefString(new std::string("ram_upm_write_data")),12, getThis());
  ram_upm_read_data = CsimSignalTShort::build(RefString(new std::string("ram_upm_read_data")),12, getThis());
  ram_upm_ready = CsimSignalTBool::build(RefString(new std::string("ram_upm_ready")),1, getThis());
  ram_utm_valid = CsimSignalTBool::build(RefString(new std::string("ram_utm_valid")),1, getThis());
  ram_utm_write_en = CsimSignalTBool::build(RefString(new std::string("ram_utm_write_en")),1, getThis());
  ram_utm_addr = CsimSignalTChar::build(RefString(new std::string("ram_utm_addr")),5, getThis());
  ram_utm_write_data = CsimSignalTShort::build(RefString(new std::string("ram_utm_write_data")),12, getThis());
  ram_utm_read_data = CsimSignalTShort::build(RefString(new std::string("ram_utm_read_data")),12, getThis());
  ram_utm_ready = CsimSignalTBool::build(RefString(new std::string("ram_utm_ready")),1, getThis());
  umf_ufm_drop_valid = CsimSignalTBool::build(RefString(new std::string("umf_ufm_drop_valid")),1, getThis());
  umf_ufm_drop_type = CsimSignalTChar::build(RefString(new std::string("umf_ufm_drop_type")),2, getThis());
  umf_ufm_drop_src_nid = CsimSignalTChar::build(RefString(new std::string("umf_ufm_drop_src_nid")),4, getThis());
  umf_ufm_drop_addr = CsimSignalTShort::build(RefString(new std::string("umf_ufm_drop_addr")),12, getThis());
  umf_ufm_drop_data = CsimSignalTShort::build(RefString(new std::string("umf_ufm_drop_data")),12, getThis());
  umf_ufm_add_valid = CsimSignalTBool::build(RefString(new std::string("umf_ufm_add_valid")),1, getThis());
  umf_ufm_add_type = CsimSignalTChar::build(RefString(new std::string("umf_ufm_add_type")),2, getThis());
  umf_ufm_add_dst_nid = CsimSignalTChar::build(RefString(new std::string("umf_ufm_add_dst_nid")),4, getThis());
  umf_ufm_add_addr = CsimSignalTShort::build(RefString(new std::string("umf_ufm_add_addr")),12, getThis());
  umf_ufm_add_data = CsimSignalTShort::build(RefString(new std::string("umf_ufm_add_data")),12, getThis());
  umf_ufm_add_ready = CsimSignalTBool::build(RefString(new std::string("umf_ufm_add_ready")),1, getThis());
  uf0_ut0_drop_valid = CsimSignalTBool::build(RefString(new std::string("uf0_ut0_drop_valid")),1, getThis());
  uf0_ut0_drop_type = CsimSignalTChar::build(RefString(new std::string("uf0_ut0_drop_type")),2, getThis());
  uf0_ut0_drop_src_nid = CsimSignalTChar::build(RefString(new std::string("uf0_ut0_drop_src_nid")),4, getThis());
  uf0_ut0_drop_addr = CsimSignalTShort::build(RefString(new std::string("uf0_ut0_drop_addr")),12, getThis());
  uf0_ut0_drop_data = CsimSignalTShort::build(RefString(new std::string("uf0_ut0_drop_data")),12, getThis());
  uf0_ut0_add_valid = CsimSignalTBool::build(RefString(new std::string("uf0_ut0_add_valid")),1, getThis());
  uf0_ut0_add_type = CsimSignalTChar::build(RefString(new std::string("uf0_ut0_add_type")),2, getThis());
  uf0_ut0_add_dst_nid = CsimSignalTChar::build(RefString(new std::string("uf0_ut0_add_dst_nid")),4, getThis());
  uf0_ut0_add_addr = CsimSignalTShort::build(RefString(new std::string("uf0_ut0_add_addr")),12, getThis());
  uf0_ut0_add_data = CsimSignalTShort::build(RefString(new std::string("uf0_ut0_add_data")),12, getThis());
  uf0_ut0_add_ready = CsimSignalTBool::build(RefString(new std::string("uf0_ut0_add_ready")),1, getThis());
  uf1_ut1_drop_valid = CsimSignalTBool::build(RefString(new std::string("uf1_ut1_drop_valid")),1, getThis());
  uf1_ut1_drop_type = CsimSignalTChar::build(RefString(new std::string("uf1_ut1_drop_type")),2, getThis());
  uf1_ut1_drop_src_nid = CsimSignalTChar::build(RefString(new std::string("uf1_ut1_drop_src_nid")),4, getThis());
  uf1_ut1_drop_addr = CsimSignalTShort::build(RefString(new std::string("uf1_ut1_drop_addr")),12, getThis());
  uf1_ut1_drop_data = CsimSignalTShort::build(RefString(new std::string("uf1_ut1_drop_data")),12, getThis());
  uf1_ut1_add_valid = CsimSignalTBool::build(RefString(new std::string("uf1_ut1_add_valid")),1, getThis());
  uf1_ut1_add_type = CsimSignalTChar::build(RefString(new std::string("uf1_ut1_add_type")),2, getThis());
  uf1_ut1_add_dst_nid = CsimSignalTChar::build(RefString(new std::string("uf1_ut1_add_dst_nid")),4, getThis());
  uf1_ut1_add_addr = CsimSignalTShort::build(RefString(new std::string("uf1_ut1_add_addr")),12, getThis());
  uf1_ut1_add_data = CsimSignalTShort::build(RefString(new std::string("uf1_ut1_add_data")),12, getThis());
  uf1_ut1_add_ready = CsimSignalTBool::build(RefString(new std::string("uf1_ut1_add_ready")),1, getThis());
  uf2_ut2_drop_valid = CsimSignalTBool::build(RefString(new std::string("uf2_ut2_drop_valid")),1, getThis());
  uf2_ut2_drop_type = CsimSignalTChar::build(RefString(new std::string("uf2_ut2_drop_type")),2, getThis());
  uf2_ut2_drop_src_nid = CsimSignalTChar::build(RefString(new std::string("uf2_ut2_drop_src_nid")),4, getThis());
  uf2_ut2_drop_addr = CsimSignalTShort::build(RefString(new std::string("uf2_ut2_drop_addr")),12, getThis());
  uf2_ut2_drop_data = CsimSignalTShort::build(RefString(new std::string("uf2_ut2_drop_data")),12, getThis());
  uf2_ut2_add_valid = CsimSignalTBool::build(RefString(new std::string("uf2_ut2_add_valid")),1, getThis());
  uf2_ut2_add_type = CsimSignalTChar::build(RefString(new std::string("uf2_ut2_add_type")),2, getThis());
  uf2_ut2_add_dst_nid = CsimSignalTChar::build(RefString(new std::string("uf2_ut2_add_dst_nid")),4, getThis());
  uf2_ut2_add_addr = CsimSignalTShort::build(RefString(new std::string("uf2_ut2_add_addr")),12, getThis());
  uf2_ut2_add_data = CsimSignalTShort::build(RefString(new std::string("uf2_ut2_add_data")),12, getThis());
  uf2_ut2_add_ready = CsimSignalTBool::build(RefString(new std::string("uf2_ut2_add_ready")),1, getThis());
  uf3_ut3_drop_valid = CsimSignalTBool::build(RefString(new std::string("uf3_ut3_drop_valid")),1, getThis());
  uf3_ut3_drop_type = CsimSignalTChar::build(RefString(new std::string("uf3_ut3_drop_type")),2, getThis());
  uf3_ut3_drop_src_nid = CsimSignalTChar::build(RefString(new std::string("uf3_ut3_drop_src_nid")),4, getThis());
  uf3_ut3_drop_addr = CsimSignalTShort::build(RefString(new std::string("uf3_ut3_drop_addr")),12, getThis());
  uf3_ut3_drop_data = CsimSignalTShort::build(RefString(new std::string("uf3_ut3_drop_data")),12, getThis());
  uf3_ut3_add_valid = CsimSignalTBool::build(RefString(new std::string("uf3_ut3_add_valid")),1, getThis());
  uf3_ut3_add_type = CsimSignalTChar::build(RefString(new std::string("uf3_ut3_add_type")),2, getThis());
  uf3_ut3_add_dst_nid = CsimSignalTChar::build(RefString(new std::string("uf3_ut3_add_dst_nid")),4, getThis());
  uf3_ut3_add_addr = CsimSignalTShort::build(RefString(new std::string("uf3_ut3_add_addr")),12, getThis());
  uf3_ut3_add_data = CsimSignalTShort::build(RefString(new std::string("uf3_ut3_add_data")),12, getThis());
  uf3_ut3_add_ready = CsimSignalTBool::build(RefString(new std::string("uf3_ut3_add_ready")),1, getThis());
  fic_i2c_drop_valid = CsimSignalTBool::build(RefString(new std::string("fic_i2c_drop_valid")),1, getThis());
  fic_i2c_drop_type = CsimSignalTChar::build(RefString(new std::string("fic_i2c_drop_type")),2, getThis());
  fic_i2c_drop_src_nid = CsimSignalTChar::build(RefString(new std::string("fic_i2c_drop_src_nid")),4, getThis());
  fic_i2c_drop_addr = CsimSignalTShort::build(RefString(new std::string("fic_i2c_drop_addr")),12, getThis());
  fic_i2c_drop_data = CsimSignalTShort::build(RefString(new std::string("fic_i2c_drop_data")),12, getThis());
  fic_i2c_add_valid = CsimSignalTBool::build(RefString(new std::string("fic_i2c_add_valid")),1, getThis());
  fic_i2c_add_type = CsimSignalTChar::build(RefString(new std::string("fic_i2c_add_type")),2, getThis());
  fic_i2c_add_dst_nid = CsimSignalTChar::build(RefString(new std::string("fic_i2c_add_dst_nid")),4, getThis());
  fic_i2c_add_addr = CsimSignalTShort::build(RefString(new std::string("fic_i2c_add_addr")),12, getThis());
  fic_i2c_add_data = CsimSignalTShort::build(RefString(new std::string("fic_i2c_add_data")),12, getThis());
  fic_i2c_add_ready = CsimSignalTBool::build(RefString(new std::string("fic_i2c_add_ready")),1, getThis());
  prf_upm_drop_valid = CsimSignalTBool::build(RefString(new std::string("prf_upm_drop_valid")),1, getThis());
  prf_upm_drop_type = CsimSignalTChar::build(RefString(new std::string("prf_upm_drop_type")),2, getThis());
  prf_upm_drop_src_nid = CsimSignalTChar::build(RefString(new std::string("prf_upm_drop_src_nid")),4, getThis());
  prf_upm_drop_addr = CsimSignalTShort::build(RefString(new std::string("prf_upm_drop_addr")),12, getThis());
  prf_upm_drop_data = CsimSignalTShort::build(RefString(new std::string("prf_upm_drop_data")),12, getThis());
  prf_upm_add_valid = CsimSignalTBool::build(RefString(new std::string("prf_upm_add_valid")),1, getThis());
  prf_upm_add_type = CsimSignalTChar::build(RefString(new std::string("prf_upm_add_type")),2, getThis());
  prf_upm_add_dst_nid = CsimSignalTChar::build(RefString(new std::string("prf_upm_add_dst_nid")),4, getThis());
  prf_upm_add_addr = CsimSignalTShort::build(RefString(new std::string("prf_upm_add_addr")),12, getThis());
  prf_upm_add_data = CsimSignalTShort::build(RefString(new std::string("prf_upm_add_data")),12, getThis());
  prf_upm_add_ready = CsimSignalTBool::build(RefString(new std::string("prf_upm_add_ready")),1, getThis());
  trf_utm_drop_valid = CsimSignalTBool::build(RefString(new std::string("trf_utm_drop_valid")),1, getThis());
  trf_utm_drop_type = CsimSignalTChar::build(RefString(new std::string("trf_utm_drop_type")),2, getThis());
  trf_utm_drop_src_nid = CsimSignalTChar::build(RefString(new std::string("trf_utm_drop_src_nid")),4, getThis());
  trf_utm_drop_addr = CsimSignalTShort::build(RefString(new std::string("trf_utm_drop_addr")),12, getThis());
  trf_utm_drop_data = CsimSignalTShort::build(RefString(new std::string("trf_utm_drop_data")),12, getThis());
  trf_utm_add_valid = CsimSignalTBool::build(RefString(new std::string("trf_utm_add_valid")),1, getThis());
  trf_utm_add_type = CsimSignalTChar::build(RefString(new std::string("trf_utm_add_type")),2, getThis());
  trf_utm_add_dst_nid = CsimSignalTChar::build(RefString(new std::string("trf_utm_add_dst_nid")),4, getThis());
  trf_utm_add_addr = CsimSignalTShort::build(RefString(new std::string("trf_utm_add_addr")),12, getThis());
  trf_utm_add_data = CsimSignalTShort::build(RefString(new std::string("trf_utm_add_data")),12, getThis());
  trf_utm_add_ready = CsimSignalTBool::build(RefString(new std::string("trf_utm_add_ready")),1, getThis());
  trf_prf_valid = CsimSignalTBool::build(RefString(new std::string("trf_prf_valid")),1, getThis());
  trf_prf_age = CsimSignalTBool::build(RefString(new std::string("trf_prf_age")),1, getThis());
  trf_prf_type = CsimSignalTChar::build(RefString(new std::string("trf_prf_type")),2, getThis());
  trf_prf_src_nid = CsimSignalTChar::build(RefString(new std::string("trf_prf_src_nid")),4, getThis());
  trf_prf_dst_nid = CsimSignalTChar::build(RefString(new std::string("trf_prf_dst_nid")),4, getThis());
  trf_prf_addr = CsimSignalTShort::build(RefString(new std::string("trf_prf_addr")),12, getThis());
  trf_prf_data = CsimSignalTShort::build(RefString(new std::string("trf_prf_data")),12, getThis());
  prf_ffl_valid = CsimSignalTBool::build(RefString(new std::string("prf_ffl_valid")),1, getThis());
  prf_ffl_age = CsimSignalTBool::build(RefString(new std::string("prf_ffl_age")),1, getThis());
  prf_ffl_type = CsimSignalTChar::build(RefString(new std::string("prf_ffl_type")),2, getThis());
  prf_ffl_src_nid = CsimSignalTChar::build(RefString(new std::string("prf_ffl_src_nid")),4, getThis());
  prf_ffl_dst_nid = CsimSignalTChar::build(RefString(new std::string("prf_ffl_dst_nid")),4, getThis());
  prf_ffl_addr = CsimSignalTShort::build(RefString(new std::string("prf_ffl_addr")),12, getThis());
  prf_ffl_data = CsimSignalTShort::build(RefString(new std::string("prf_ffl_data")),12, getThis());
  ffl_umf_valid = CsimSignalTBool::build(RefString(new std::string("ffl_umf_valid")),1, getThis());
  ffl_umf_age = CsimSignalTBool::build(RefString(new std::string("ffl_umf_age")),1, getThis());
  ffl_umf_type = CsimSignalTChar::build(RefString(new std::string("ffl_umf_type")),2, getThis());
  ffl_umf_src_nid = CsimSignalTChar::build(RefString(new std::string("ffl_umf_src_nid")),4, getThis());
  ffl_umf_dst_nid = CsimSignalTChar::build(RefString(new std::string("ffl_umf_dst_nid")),4, getThis());
  ffl_umf_addr = CsimSignalTShort::build(RefString(new std::string("ffl_umf_addr")),12, getThis());
  ffl_umf_data = CsimSignalTShort::build(RefString(new std::string("ffl_umf_data")),12, getThis());
  umf_fic_valid = CsimSignalTBool::build(RefString(new std::string("umf_fic_valid")),1, getThis());
  umf_fic_age = CsimSignalTBool::build(RefString(new std::string("umf_fic_age")),1, getThis());
  umf_fic_type = CsimSignalTChar::build(RefString(new std::string("umf_fic_type")),2, getThis());
  umf_fic_src_nid = CsimSignalTChar::build(RefString(new std::string("umf_fic_src_nid")),4, getThis());
  umf_fic_dst_nid = CsimSignalTChar::build(RefString(new std::string("umf_fic_dst_nid")),4, getThis());
  umf_fic_addr = CsimSignalTShort::build(RefString(new std::string("umf_fic_addr")),12, getThis());
  umf_fic_data = CsimSignalTShort::build(RefString(new std::string("umf_fic_data")),12, getThis());
  fic_uf0_valid = CsimSignalTBool::build(RefString(new std::string("fic_uf0_valid")),1, getThis());
  fic_uf0_age = CsimSignalTBool::build(RefString(new std::string("fic_uf0_age")),1, getThis());
  fic_uf0_type = CsimSignalTChar::build(RefString(new std::string("fic_uf0_type")),2, getThis());
  fic_uf0_src_nid = CsimSignalTChar::build(RefString(new std::string("fic_uf0_src_nid")),4, getThis());
  fic_uf0_dst_nid = CsimSignalTChar::build(RefString(new std::string("fic_uf0_dst_nid")),4, getThis());
  fic_uf0_addr = CsimSignalTShort::build(RefString(new std::string("fic_uf0_addr")),12, getThis());
  fic_uf0_data = CsimSignalTShort::build(RefString(new std::string("fic_uf0_data")),12, getThis());
  uf0_uf1_valid = CsimSignalTBool::build(RefString(new std::string("uf0_uf1_valid")),1, getThis());
  uf0_uf1_age = CsimSignalTBool::build(RefString(new std::string("uf0_uf1_age")),1, getThis());
  uf0_uf1_type = CsimSignalTChar::build(RefString(new std::string("uf0_uf1_type")),2, getThis());
  uf0_uf1_src_nid = CsimSignalTChar::build(RefString(new std::string("uf0_uf1_src_nid")),4, getThis());
  uf0_uf1_dst_nid = CsimSignalTChar::build(RefString(new std::string("uf0_uf1_dst_nid")),4, getThis());
  uf0_uf1_addr = CsimSignalTShort::build(RefString(new std::string("uf0_uf1_addr")),12, getThis());
  uf0_uf1_data = CsimSignalTShort::build(RefString(new std::string("uf0_uf1_data")),12, getThis());
  uf1_uf2_valid = CsimSignalTBool::build(RefString(new std::string("uf1_uf2_valid")),1, getThis());
  uf1_uf2_age = CsimSignalTBool::build(RefString(new std::string("uf1_uf2_age")),1, getThis());
  uf1_uf2_type = CsimSignalTChar::build(RefString(new std::string("uf1_uf2_type")),2, getThis());
  uf1_uf2_src_nid = CsimSignalTChar::build(RefString(new std::string("uf1_uf2_src_nid")),4, getThis());
  uf1_uf2_dst_nid = CsimSignalTChar::build(RefString(new std::string("uf1_uf2_dst_nid")),4, getThis());
  uf1_uf2_addr = CsimSignalTShort::build(RefString(new std::string("uf1_uf2_addr")),12, getThis());
  uf1_uf2_data = CsimSignalTShort::build(RefString(new std::string("uf1_uf2_data")),12, getThis());
  uf2_uf3_valid = CsimSignalTBool::build(RefString(new std::string("uf2_uf3_valid")),1, getThis());
  uf2_uf3_age = CsimSignalTBool::build(RefString(new std::string("uf2_uf3_age")),1, getThis());
  uf2_uf3_type = CsimSignalTChar::build(RefString(new std::string("uf2_uf3_type")),2, getThis());
  uf2_uf3_src_nid = CsimSignalTChar::build(RefString(new std::string("uf2_uf3_src_nid")),4, getThis());
  uf2_uf3_dst_nid = CsimSignalTChar::build(RefString(new std::string("uf2_uf3_dst_nid")),4, getThis());
  uf2_uf3_addr = CsimSignalTShort::build(RefString(new std::string("uf2_uf3_addr")),12, getThis());
  uf2_uf3_data = CsimSignalTShort::build(RefString(new std::string("uf2_uf3_data")),12, getThis());
  uf3_trf_valid = CsimSignalTBool::build(RefString(new std::string("uf3_trf_valid")),1, getThis());
  uf3_trf_age = CsimSignalTBool::build(RefString(new std::string("uf3_trf_age")),1, getThis());
  uf3_trf_type = CsimSignalTChar::build(RefString(new std::string("uf3_trf_type")),2, getThis());
  uf3_trf_src_nid = CsimSignalTChar::build(RefString(new std::string("uf3_trf_src_nid")),4, getThis());
  uf3_trf_dst_nid = CsimSignalTChar::build(RefString(new std::string("uf3_trf_dst_nid")),4, getThis());
  uf3_trf_addr = CsimSignalTShort::build(RefString(new std::string("uf3_trf_addr")),12, getThis());
  uf3_trf_data = CsimSignalTShort::build(RefString(new std::string("uf3_trf_data")),12, getThis());
  ufm_ffr_write_en = CsimSignalTBool::build(RefString(new std::string("ufm_ffr_write_en")),1, getThis());
  ufm_ffr_addr = CsimSignalTChar::build(RefString(new std::string("ufm_ffr_addr")),5, getThis());
  ufm_ffr_write_data = CsimSignalTShort::build(RefString(new std::string("ufm_ffr_write_data")),12, getThis());
  ufm_ffr_read_data = CsimSignalTShort::build(RefString(new std::string("ufm_ffr_read_data")),12, getThis());
  ffr_upm_write_en = CsimSignalTBool::build(RefString(new std::string("ffr_upm_write_en")),1, getThis());
  ffr_upm_addr = CsimSignalTChar::build(RefString(new std::string("ffr_upm_addr")),5, getThis());
  ffr_upm_write_data = CsimSignalTShort::build(RefString(new std::string("ffr_upm_write_data")),12, getThis());
  ffr_upm_read_data = CsimSignalTShort::build(RefString(new std::string("ffr_upm_read_data")),12, getThis());
  tp_bus_t2p_valid = CsimSignalTBool::build(RefString(new std::string("tp_bus_t2p_valid")),1, getThis());
  tp_bus_t2p_length = CsimSignalTChar::build(RefString(new std::string("tp_bus_t2p_length")),6, getThis());
  tp_bus_t2p_endpoint = CsimSignalTChar::build(RefString(new std::string("tp_bus_t2p_endpoint")),4, getThis());
  tp_bus_t2p_ready = CsimSignalTBool::build(RefString(new std::string("tp_bus_t2p_ready")),1, getThis());
  tp_bus_p2t_valid = CsimSignalTBool::build(RefString(new std::string("tp_bus_p2t_valid")),1, getThis());
  tp_bus_p2t_length = CsimSignalTChar::build(RefString(new std::string("tp_bus_p2t_length")),6, getThis());
  tp_bus_p2t_endpoint = CsimSignalTChar::build(RefString(new std::string("tp_bus_p2t_endpoint")),4, getThis());
  tp_bus_p2t_ready = CsimSignalTBool::build(RefString(new std::string("tp_bus_p2t_ready")),1, getThis());
  phy_rx_valid = CsimSignalTBool::build(RefString(new std::string("phy_rx_valid")),1, getThis());
  phy_rx_cmd = CsimSignalTBool::build(RefString(new std::string("phy_rx_cmd")),1, getThis());
  phy_rx_data = CsimSignalTChar::build(RefString(new std::string("phy_rx_data")),8, getThis());
  phy_rx_ready = CsimSignalTBool::build(RefString(new std::string("phy_rx_ready")),1, getThis());
  phy_tx_valid = CsimSignalTBool::build(RefString(new std::string("phy_tx_valid")),1, getThis());
  phy_tx_cmd = CsimSignalTBool::build(RefString(new std::string("phy_tx_cmd")),1, getThis());
  phy_tx_data = CsimSignalTChar::build(RefString(new std::string("phy_tx_data")),8, getThis());
  phy_tx_ready = CsimSignalTBool::build(RefString(new std::string("phy_tx_ready")),1, getThis());
  //signal registrations
  addConnectable(ram_ufm_valid);
  addConnectable(ram_ufm_write_en);
  addConnectable(ram_ufm_addr);
  addConnectable(ram_ufm_write_data);
  addConnectable(ram_ufm_read_data);
  addConnectable(ram_ufm_ready);
  addConnectable(ram_upm_valid);
  addConnectable(ram_upm_write_en);
  addConnectable(ram_upm_addr);
  addConnectable(ram_upm_write_data);
  addConnectable(ram_upm_read_data);
  addConnectable(ram_upm_ready);
  addConnectable(ram_utm_valid);
  addConnectable(ram_utm_write_en);
  addConnectable(ram_utm_addr);
  addConnectable(ram_utm_write_data);
  addConnectable(ram_utm_read_data);
  addConnectable(ram_utm_ready);
  addConnectable(umf_ufm_drop_valid);
  addConnectable(umf_ufm_drop_type);
  addConnectable(umf_ufm_drop_src_nid);
  addConnectable(umf_ufm_drop_addr);
  addConnectable(umf_ufm_drop_data);
  addConnectable(umf_ufm_add_valid);
  addConnectable(umf_ufm_add_type);
  addConnectable(umf_ufm_add_dst_nid);
  addConnectable(umf_ufm_add_addr);
  addConnectable(umf_ufm_add_data);
  addConnectable(umf_ufm_add_ready);
  addConnectable(uf0_ut0_drop_valid);
  addConnectable(uf0_ut0_drop_type);
  addConnectable(uf0_ut0_drop_src_nid);
  addConnectable(uf0_ut0_drop_addr);
  addConnectable(uf0_ut0_drop_data);
  addConnectable(uf0_ut0_add_valid);
  addConnectable(uf0_ut0_add_type);
  addConnectable(uf0_ut0_add_dst_nid);
  addConnectable(uf0_ut0_add_addr);
  addConnectable(uf0_ut0_add_data);
  addConnectable(uf0_ut0_add_ready);
  addConnectable(uf1_ut1_drop_valid);
  addConnectable(uf1_ut1_drop_type);
  addConnectable(uf1_ut1_drop_src_nid);
  addConnectable(uf1_ut1_drop_addr);
  addConnectable(uf1_ut1_drop_data);
  addConnectable(uf1_ut1_add_valid);
  addConnectable(uf1_ut1_add_type);
  addConnectable(uf1_ut1_add_dst_nid);
  addConnectable(uf1_ut1_add_addr);
  addConnectable(uf1_ut1_add_data);
  addConnectable(uf1_ut1_add_ready);
  addConnectable(uf2_ut2_drop_valid);
  addConnectable(uf2_ut2_drop_type);
  addConnectable(uf2_ut2_drop_src_nid);
  addConnectable(uf2_ut2_drop_addr);
  addConnectable(uf2_ut2_drop_data);
  addConnectable(uf2_ut2_add_valid);
  addConnectable(uf2_ut2_add_type);
  addConnectable(uf2_ut2_add_dst_nid);
  addConnectable(uf2_ut2_add_addr);
  addConnectable(uf2_ut2_add_data);
  addConnectable(uf2_ut2_add_ready);
  addConnectable(uf3_ut3_drop_valid);
  addConnectable(uf3_ut3_drop_type);
  addConnectable(uf3_ut3_drop_src_nid);
  addConnectable(uf3_ut3_drop_addr);
  addConnectable(uf3_ut3_drop_data);
  addConnectable(uf3_ut3_add_valid);
  addConnectable(uf3_ut3_add_type);
  addConnectable(uf3_ut3_add_dst_nid);
  addConnectable(uf3_ut3_add_addr);
  addConnectable(uf3_ut3_add_data);
  addConnectable(uf3_ut3_add_ready);
  addConnectable(fic_i2c_drop_valid);
  addConnectable(fic_i2c_drop_type);
  addConnectable(fic_i2c_drop_src_nid);
  addConnectable(fic_i2c_drop_addr);
  addConnectable(fic_i2c_drop_data);
  addConnectable(fic_i2c_add_valid);
  addConnectable(fic_i2c_add_type);
  addConnectable(fic_i2c_add_dst_nid);
  addConnectable(fic_i2c_add_addr);
  addConnectable(fic_i2c_add_data);
  addConnectable(fic_i2c_add_ready);
  addConnectable(prf_upm_drop_valid);
  addConnectable(prf_upm_drop_type);
  addConnectable(prf_upm_drop_src_nid);
  addConnectable(prf_upm_drop_addr);
  addConnectable(prf_upm_drop_data);
  addConnectable(prf_upm_add_valid);
  addConnectable(prf_upm_add_type);
  addConnectable(prf_upm_add_dst_nid);
  addConnectable(prf_upm_add_addr);
  addConnectable(prf_upm_add_data);
  addConnectable(prf_upm_add_ready);
  addConnectable(trf_utm_drop_valid);
  addConnectable(trf_utm_drop_type);
  addConnectable(trf_utm_drop_src_nid);
  addConnectable(trf_utm_drop_addr);
  addConnectable(trf_utm_drop_data);
  addConnectable(trf_utm_add_valid);
  addConnectable(trf_utm_add_type);
  addConnectable(trf_utm_add_dst_nid);
  addConnectable(trf_utm_add_addr);
  addConnectable(trf_utm_add_data);
  addConnectable(trf_utm_add_ready);
  addConnectable(trf_prf_valid);
  addConnectable(trf_prf_age);
  addConnectable(trf_prf_type);
  addConnectable(trf_prf_src_nid);
  addConnectable(trf_prf_dst_nid);
  addConnectable(trf_prf_addr);
  addConnectable(trf_prf_data);
  addConnectable(prf_ffl_valid);
  addConnectable(prf_ffl_age);
  addConnectable(prf_ffl_type);
  addConnectable(prf_ffl_src_nid);
  addConnectable(prf_ffl_dst_nid);
  addConnectable(prf_ffl_addr);
  addConnectable(prf_ffl_data);
  addConnectable(ffl_umf_valid);
  addConnectable(ffl_umf_age);
  addConnectable(ffl_umf_type);
  addConnectable(ffl_umf_src_nid);
  addConnectable(ffl_umf_dst_nid);
  addConnectable(ffl_umf_addr);
  addConnectable(ffl_umf_data);
  addConnectable(umf_fic_valid);
  addConnectable(umf_fic_age);
  addConnectable(umf_fic_type);
  addConnectable(umf_fic_src_nid);
  addConnectable(umf_fic_dst_nid);
  addConnectable(umf_fic_addr);
  addConnectable(umf_fic_data);
  addConnectable(fic_uf0_valid);
  addConnectable(fic_uf0_age);
  addConnectable(fic_uf0_type);
  addConnectable(fic_uf0_src_nid);
  addConnectable(fic_uf0_dst_nid);
  addConnectable(fic_uf0_addr);
  addConnectable(fic_uf0_data);
  addConnectable(uf0_uf1_valid);
  addConnectable(uf0_uf1_age);
  addConnectable(uf0_uf1_type);
  addConnectable(uf0_uf1_src_nid);
  addConnectable(uf0_uf1_dst_nid);
  addConnectable(uf0_uf1_addr);
  addConnectable(uf0_uf1_data);
  addConnectable(uf1_uf2_valid);
  addConnectable(uf1_uf2_age);
  addConnectable(uf1_uf2_type);
  addConnectable(uf1_uf2_src_nid);
  addConnectable(uf1_uf2_dst_nid);
  addConnectable(uf1_uf2_addr);
  addConnectable(uf1_uf2_data);
  addConnectable(uf2_uf3_valid);
  addConnectable(uf2_uf3_age);
  addConnectable(uf2_uf3_type);
  addConnectable(uf2_uf3_src_nid);
  addConnectable(uf2_uf3_dst_nid);
  addConnectable(uf2_uf3_addr);
  addConnectable(uf2_uf3_data);
  addConnectable(uf3_trf_valid);
  addConnectable(uf3_trf_age);
  addConnectable(uf3_trf_type);
  addConnectable(uf3_trf_src_nid);
  addConnectable(uf3_trf_dst_nid);
  addConnectable(uf3_trf_addr);
  addConnectable(uf3_trf_data);
  addConnectable(ufm_ffr_write_en);
  addConnectable(ufm_ffr_addr);
  addConnectable(ufm_ffr_write_data);
  addConnectable(ufm_ffr_read_data);
  addConnectable(ffr_upm_write_en);
  addConnectable(ffr_upm_addr);
  addConnectable(ffr_upm_write_data);
  addConnectable(ffr_upm_read_data);
  addConnectable(tp_bus_t2p_valid);
  addConnectable(tp_bus_t2p_length);
  addConnectable(tp_bus_t2p_endpoint);
  addConnectable(tp_bus_t2p_ready);
  addConnectable(tp_bus_p2t_valid);
  addConnectable(tp_bus_p2t_length);
  addConnectable(tp_bus_p2t_endpoint);
  addConnectable(tp_bus_p2t_ready);
  addConnectable(phy_rx_valid);
  addConnectable(phy_rx_cmd);
  addConnectable(phy_rx_data);
  addConnectable(phy_rx_ready);
  addConnectable(phy_tx_valid);
  addConnectable(phy_tx_cmd);
  addConnectable(phy_tx_data);
  addConnectable(phy_tx_ready);
  //building vector writers
  //initializers
  allocate();
  //instance registration
  RAM_->setParent(getThis());
  RAM_->setInstanceName(RefString(new std::string("RAM_")));
  fab_uart_mgr->setParent(getThis());
  fab_uart_mgr->setInstanceName(RefString(new std::string("fab_uart_mgr")));
  uart_mgr_->setParent(getThis());
  uart_mgr_->setInstanceName(RefString(new std::string("uart_mgr_")));
  uart_fab_0->setParent(getThis());
  uart_fab_0->setInstanceName(RefString(new std::string("uart_fab_0")));
  uart_mod0->setParent(getThis());
  uart_mod0->setInstanceName(RefString(new std::string("uart_mod0")));
  uart_fab_1->setParent(getThis());
  uart_fab_1->setInstanceName(RefString(new std::string("uart_fab_1")));
  uart_mod1->setParent(getThis());
  uart_mod1->setInstanceName(RefString(new std::string("uart_mod1")));
  uart_fab_2->setParent(getThis());
  uart_fab_2->setInstanceName(RefString(new std::string("uart_fab_2")));
  uart_mod2->setParent(getThis());
  uart_mod2->setInstanceName(RefString(new std::string("uart_mod2")));
  uart_fab_3->setParent(getThis());
  uart_fab_3->setInstanceName(RefString(new std::string("uart_fab_3")));
  uart_mod3->setParent(getThis());
  uart_mod3->setInstanceName(RefString(new std::string("uart_mod3")));
  fab_i2c->setParent(getThis());
  fab_i2c->setInstanceName(RefString(new std::string("fab_i2c")));
  i2c_->setParent(getThis());
  i2c_->setInstanceName(RefString(new std::string("i2c_")));
  proto_fab->setParent(getThis());
  proto_fab->setInstanceName(RefString(new std::string("proto_fab")));
  usb_protocol_mgr_->setParent(getThis());
  usb_protocol_mgr_->setInstanceName(RefString(new std::string("usb_protocol_mgr_")));
  fab_filter_->setParent(getThis());
  fab_filter_->setInstanceName(RefString(new std::string("fab_filter_")));
  trans_fab->setParent(getThis());
  trans_fab->setInstanceName(RefString(new std::string("trans_fab")));
  usb_transaction_mgr_->setParent(getThis());
  usb_transaction_mgr_->setInstanceName(RefString(new std::string("usb_transaction_mgr_")));
  fifo_regs_->setParent(getThis());
  fifo_regs_->setInstanceName(RefString(new std::string("fifo_regs_")));
  usb_phy_->setParent(getThis());
  usb_phy_->setInstanceName(RefString(new std::string("usb_phy_")));
  //clock connections
default initis
  RAM_->defaultInitialize();
  fab_uart_mgr->defaultInitialize();
  uart_mgr_->defaultInitialize();
  uart_fab_0->defaultInitialize();
  uart_mod0->defaultInitialize();
  uart_fab_1->defaultInitialize();
  uart_mod1->defaultInitialize();
  uart_fab_2->defaultInitialize();
  uart_mod2->defaultInitialize();
  uart_fab_3->defaultInitialize();
  uart_mod3->defaultInitialize();
  fab_i2c->defaultInitialize();
  i2c_->defaultInitialize();
  proto_fab->defaultInitialize();
  usb_protocol_mgr_->defaultInitialize();
  fab_filter_->defaultInitialize();
  trans_fab->defaultInitialize();
  usb_transaction_mgr_->defaultInitialize();
  fifo_regs_->defaultInitialize();
  usb_phy_->defaultInitialize();
  connect();
  initialize();
}

void v_core::connect() {
    addr->connect(boost::static_pointer_cast<CsimPortTChar>(RAM_->getSignalByName(RefString(new std::string("addr")))));
    read_data->connect(boost::static_pointer_cast<CsimPortTShort>(RAM_->getSignalByName(RefString(new std::string("read_data")))));
    ready->connect(boost::static_pointer_cast<CsimPortTBool>(RAM_->getSignalByName(RefString(new std::string("ready")))));
    valid->connect(boost::static_pointer_cast<CsimPortTBool>(RAM_->getSignalByName(RefString(new std::string("valid")))));
    write_data->connect(boost::static_pointer_cast<CsimPortTShort>(RAM_->getSignalByName(RefString(new std::string("write_data")))));
    write_en->connect(boost::static_pointer_cast<CsimPortTBool>(RAM_->getSignalByName(RefString(new std::string("write_en")))));
    addr->connect(boost::static_pointer_cast<CsimPortTChar>(RAM_->getSignalByName(RefString(new std::string("addr")))));
    read_data->connect(boost::static_pointer_cast<CsimPortTShort>(RAM_->getSignalByName(RefString(new std::string("read_data")))));
    ready->connect(boost::static_pointer_cast<CsimPortTBool>(RAM_->getSignalByName(RefString(new std::string("ready")))));
    valid->connect(boost::static_pointer_cast<CsimPortTBool>(RAM_->getSignalByName(RefString(new std::string("valid")))));
    write_data->connect(boost::static_pointer_cast<CsimPortTShort>(RAM_->getSignalByName(RefString(new std::string("write_data")))));
    write_en->connect(boost::static_pointer_cast<CsimPortTBool>(RAM_->getSignalByName(RefString(new std::string("write_en")))));
    addr->connect(boost::static_pointer_cast<CsimPortTChar>(RAM_->getSignalByName(RefString(new std::string("addr")))));
    read_data->connect(boost::static_pointer_cast<CsimPortTShort>(RAM_->getSignalByName(RefString(new std::string("read_data")))));
    ready->connect(boost::static_pointer_cast<CsimPortTBool>(RAM_->getSignalByName(RefString(new std::string("ready")))));
    valid->connect(boost::static_pointer_cast<CsimPortTBool>(RAM_->getSignalByName(RefString(new std::string("valid")))));
    write_data->connect(boost::static_pointer_cast<CsimPortTShort>(RAM_->getSignalByName(RefString(new std::string("write_data")))));
    write_en->connect(boost::static_pointer_cast<CsimPortTBool>(RAM_->getSignalByName(RefString(new std::string("write_en")))));
    add_addr->connect(boost::static_pointer_cast<CsimPortTShort>(fab_uart_mgr->getSignalByName(RefString(new std::string("add_addr")))));
    add_data->connect(boost::static_pointer_cast<CsimPortTShort>(fab_uart_mgr->getSignalByName(RefString(new std::string("add_data")))));
    add_dst_nid->connect(boost::static_pointer_cast<CsimPortTChar>(fab_uart_mgr->getSignalByName(RefString(new std::string("add_dst_nid")))));
    add_ready->connect(boost::static_pointer_cast<CsimPortTBool>(fab_uart_mgr->getSignalByName(RefString(new std::string("add_ready")))));
    add_type->connect(boost::static_pointer_cast<CsimPortTChar>(fab_uart_mgr->getSignalByName(RefString(new std::string("add_type")))));
    add_valid->connect(boost::static_pointer_cast<CsimPortTBool>(fab_uart_mgr->getSignalByName(RefString(new std::string("add_valid")))));
    drop_addr->connect(boost::static_pointer_cast<CsimPortTShort>(fab_uart_mgr->getSignalByName(RefString(new std::string("drop_addr")))));
    drop_data->connect(boost::static_pointer_cast<CsimPortTShort>(fab_uart_mgr->getSignalByName(RefString(new std::string("drop_data")))));
    drop_src_nid->connect(boost::static_pointer_cast<CsimPortTChar>(fab_uart_mgr->getSignalByName(RefString(new std::string("drop_src_nid")))));
    drop_type->connect(boost::static_pointer_cast<CsimPortTChar>(fab_uart_mgr->getSignalByName(RefString(new std::string("drop_type")))));
    drop_valid->connect(boost::static_pointer_cast<CsimPortTBool>(fab_uart_mgr->getSignalByName(RefString(new std::string("drop_valid")))));
    addr->connect(boost::static_pointer_cast<CsimPortTShort>(fab_uart_mgr->getSignalByName(RefString(new std::string("addr")))));
    age->connect(boost::static_pointer_cast<CsimPortTBool>(fab_uart_mgr->getSignalByName(RefString(new std::string("age")))));
    data->connect(boost::static_pointer_cast<CsimPortTShort>(fab_uart_mgr->getSignalByName(RefString(new std::string("data")))));
    dst_nid->connect(boost::static_pointer_cast<CsimPortTChar>(fab_uart_mgr->getSignalByName(RefString(new std::string("dst_nid")))));
    src_nid->connect(boost::static_pointer_cast<CsimPortTChar>(fab_uart_mgr->getSignalByName(RefString(new std::string("src_nid")))));
    type->connect(boost::static_pointer_cast<CsimPortTChar>(fab_uart_mgr->getSignalByName(RefString(new std::string("type")))));
    valid->connect(boost::static_pointer_cast<CsimPortTBool>(fab_uart_mgr->getSignalByName(RefString(new std::string("valid")))));
    addr->connect(boost::static_pointer_cast<CsimPortTShort>(fab_uart_mgr->getSignalByName(RefString(new std::string("addr")))));
    age->connect(boost::static_pointer_cast<CsimPortTBool>(fab_uart_mgr->getSignalByName(RefString(new std::string("age")))));
    data->connect(boost::static_pointer_cast<CsimPortTShort>(fab_uart_mgr->getSignalByName(RefString(new std::string("data")))));
    dst_nid->connect(boost::static_pointer_cast<CsimPortTChar>(fab_uart_mgr->getSignalByName(RefString(new std::string("dst_nid")))));
    src_nid->connect(boost::static_pointer_cast<CsimPortTChar>(fab_uart_mgr->getSignalByName(RefString(new std::string("src_nid")))));
    type->connect(boost::static_pointer_cast<CsimPortTChar>(fab_uart_mgr->getSignalByName(RefString(new std::string("type")))));
    valid->connect(boost::static_pointer_cast<CsimPortTBool>(fab_uart_mgr->getSignalByName(RefString(new std::string("valid")))));
    add_addr->connect(boost::static_pointer_cast<CsimPortTShort>(uart_mgr_->getSignalByName(RefString(new std::string("add_addr")))));
    add_data->connect(boost::static_pointer_cast<CsimPortTShort>(uart_mgr_->getSignalByName(RefString(new std::string("add_data")))));
    add_dst_nid->connect(boost::static_pointer_cast<CsimPortTChar>(uart_mgr_->getSignalByName(RefString(new std::string("add_dst_nid")))));
    add_ready->connect(boost::static_pointer_cast<CsimPortTBool>(uart_mgr_->getSignalByName(RefString(new std::string("add_ready")))));
    add_type->connect(boost::static_pointer_cast<CsimPortTChar>(uart_mgr_->getSignalByName(RefString(new std::string("add_type")))));
    add_valid->connect(boost::static_pointer_cast<CsimPortTBool>(uart_mgr_->getSignalByName(RefString(new std::string("add_valid")))));
    drop_addr->connect(boost::static_pointer_cast<CsimPortTShort>(uart_mgr_->getSignalByName(RefString(new std::string("drop_addr")))));
    drop_data->connect(boost::static_pointer_cast<CsimPortTShort>(uart_mgr_->getSignalByName(RefString(new std::string("drop_data")))));
    drop_src_nid->connect(boost::static_pointer_cast<CsimPortTChar>(uart_mgr_->getSignalByName(RefString(new std::string("drop_src_nid")))));
    drop_type->connect(boost::static_pointer_cast<CsimPortTChar>(uart_mgr_->getSignalByName(RefString(new std::string("drop_type")))));
    drop_valid->connect(boost::static_pointer_cast<CsimPortTBool>(uart_mgr_->getSignalByName(RefString(new std::string("drop_valid")))));
    addr->connect(boost::static_pointer_cast<CsimPortTChar>(uart_mgr_->getSignalByName(RefString(new std::string("addr")))));
    read_data->connect(boost::static_pointer_cast<CsimPortTShort>(uart_mgr_->getSignalByName(RefString(new std::string("read_data")))));
    write_data->connect(boost::static_pointer_cast<CsimPortTShort>(uart_mgr_->getSignalByName(RefString(new std::string("write_data")))));
    write_en->connect(boost::static_pointer_cast<CsimPortTBool>(uart_mgr_->getSignalByName(RefString(new std::string("write_en")))));
    addr->connect(boost::static_pointer_cast<CsimPortTChar>(uart_mgr_->getSignalByName(RefString(new std::string("addr")))));
    read_data->connect(boost::static_pointer_cast<CsimPortTShort>(uart_mgr_->getSignalByName(RefString(new std::string("read_data")))));
    ready->connect(boost::static_pointer_cast<CsimPortTBool>(uart_mgr_->getSignalByName(RefString(new std::string("ready")))));
    valid->connect(boost::static_pointer_cast<CsimPortTBool>(uart_mgr_->getSignalByName(RefString(new std::string("valid")))));
    write_data->connect(boost::static_pointer_cast<CsimPortTShort>(uart_mgr_->getSignalByName(RefString(new std::string("write_data")))));
    write_en->connect(boost::static_pointer_cast<CsimPortTBool>(uart_mgr_->getSignalByName(RefString(new std::string("write_en")))));
    add_addr->connect(boost::static_pointer_cast<CsimPortTShort>(uart_fab_0->getSignalByName(RefString(new std::string("add_addr")))));
    add_data->connect(boost::static_pointer_cast<CsimPortTShort>(uart_fab_0->getSignalByName(RefString(new std::string("add_data")))));
    add_dst_nid->connect(boost::static_pointer_cast<CsimPortTChar>(uart_fab_0->getSignalByName(RefString(new std::string("add_dst_nid")))));
    add_ready->connect(boost::static_pointer_cast<CsimPortTBool>(uart_fab_0->getSignalByName(RefString(new std::string("add_ready")))));
    add_type->connect(boost::static_pointer_cast<CsimPortTChar>(uart_fab_0->getSignalByName(RefString(new std::string("add_type")))));
    add_valid->connect(boost::static_pointer_cast<CsimPortTBool>(uart_fab_0->getSignalByName(RefString(new std::string("add_valid")))));
    drop_addr->connect(boost::static_pointer_cast<CsimPortTShort>(uart_fab_0->getSignalByName(RefString(new std::string("drop_addr")))));
    drop_data->connect(boost::static_pointer_cast<CsimPortTShort>(uart_fab_0->getSignalByName(RefString(new std::string("drop_data")))));
    drop_src_nid->connect(boost::static_pointer_cast<CsimPortTChar>(uart_fab_0->getSignalByName(RefString(new std::string("drop_src_nid")))));
    drop_type->connect(boost::static_pointer_cast<CsimPortTChar>(uart_fab_0->getSignalByName(RefString(new std::string("drop_type")))));
    drop_valid->connect(boost::static_pointer_cast<CsimPortTBool>(uart_fab_0->getSignalByName(RefString(new std::string("drop_valid")))));
    addr->connect(boost::static_pointer_cast<CsimPortTShort>(uart_fab_0->getSignalByName(RefString(new std::string("addr")))));
    age->connect(boost::static_pointer_cast<CsimPortTBool>(uart_fab_0->getSignalByName(RefString(new std::string("age")))));
    data->connect(boost::static_pointer_cast<CsimPortTShort>(uart_fab_0->getSignalByName(RefString(new std::string("data")))));
    dst_nid->connect(boost::static_pointer_cast<CsimPortTChar>(uart_fab_0->getSignalByName(RefString(new std::string("dst_nid")))));
    src_nid->connect(boost::static_pointer_cast<CsimPortTChar>(uart_fab_0->getSignalByName(RefString(new std::string("src_nid")))));
    type->connect(boost::static_pointer_cast<CsimPortTChar>(uart_fab_0->getSignalByName(RefString(new std::string("type")))));
    valid->connect(boost::static_pointer_cast<CsimPortTBool>(uart_fab_0->getSignalByName(RefString(new std::string("valid")))));
    addr->connect(boost::static_pointer_cast<CsimPortTShort>(uart_fab_0->getSignalByName(RefString(new std::string("addr")))));
    age->connect(boost::static_pointer_cast<CsimPortTBool>(uart_fab_0->getSignalByName(RefString(new std::string("age")))));
    data->connect(boost::static_pointer_cast<CsimPortTShort>(uart_fab_0->getSignalByName(RefString(new std::string("data")))));
    dst_nid->connect(boost::static_pointer_cast<CsimPortTChar>(uart_fab_0->getSignalByName(RefString(new std::string("dst_nid")))));
    src_nid->connect(boost::static_pointer_cast<CsimPortTChar>(uart_fab_0->getSignalByName(RefString(new std::string("src_nid")))));
    type->connect(boost::static_pointer_cast<CsimPortTChar>(uart_fab_0->getSignalByName(RefString(new std::string("type")))));
    valid->connect(boost::static_pointer_cast<CsimPortTBool>(uart_fab_0->getSignalByName(RefString(new std::string("valid")))));
    add_addr->connect(boost::static_pointer_cast<CsimPortTShort>(uart_mod0->getSignalByName(RefString(new std::string("add_addr")))));
    add_data->connect(boost::static_pointer_cast<CsimPortTShort>(uart_mod0->getSignalByName(RefString(new std::string("add_data")))));
    add_dst_nid->connect(boost::static_pointer_cast<CsimPortTChar>(uart_mod0->getSignalByName(RefString(new std::string("add_dst_nid")))));
    add_ready->connect(boost::static_pointer_cast<CsimPortTBool>(uart_mod0->getSignalByName(RefString(new std::string("add_ready")))));
    add_type->connect(boost::static_pointer_cast<CsimPortTChar>(uart_mod0->getSignalByName(RefString(new std::string("add_type")))));
    add_valid->connect(boost::static_pointer_cast<CsimPortTBool>(uart_mod0->getSignalByName(RefString(new std::string("add_valid")))));
    drop_addr->connect(boost::static_pointer_cast<CsimPortTShort>(uart_mod0->getSignalByName(RefString(new std::string("drop_addr")))));
    drop_data->connect(boost::static_pointer_cast<CsimPortTShort>(uart_mod0->getSignalByName(RefString(new std::string("drop_data")))));
    drop_src_nid->connect(boost::static_pointer_cast<CsimPortTChar>(uart_mod0->getSignalByName(RefString(new std::string("drop_src_nid")))));
    drop_type->connect(boost::static_pointer_cast<CsimPortTChar>(uart_mod0->getSignalByName(RefString(new std::string("drop_type")))));
    drop_valid->connect(boost::static_pointer_cast<CsimPortTBool>(uart_mod0->getSignalByName(RefString(new std::string("drop_valid")))));
    en->connect(boost::static_pointer_cast<CsimPortTBool>(uart_mod0->getSignalByName(RefString(new std::string("en")))));
    in->connect(boost::static_pointer_cast<CsimPortTBool>(uart_mod0->getSignalByName(RefString(new std::string("in")))));
    out->connect(boost::static_pointer_cast<CsimPortTBool>(uart_mod0->getSignalByName(RefString(new std::string("out")))));
    en->connect(boost::static_pointer_cast<CsimPortTBool>(uart_mod0->getSignalByName(RefString(new std::string("en")))));
    in->connect(boost::static_pointer_cast<CsimPortTBool>(uart_mod0->getSignalByName(RefString(new std::string("in")))));
    out->connect(boost::static_pointer_cast<CsimPortTBool>(uart_mod0->getSignalByName(RefString(new std::string("out")))));
    en->connect(boost::static_pointer_cast<CsimPortTBool>(uart_mod0->getSignalByName(RefString(new std::string("en")))));
    in->connect(boost::static_pointer_cast<CsimPortTBool>(uart_mod0->getSignalByName(RefString(new std::string("in")))));
    out->connect(boost::static_pointer_cast<CsimPortTBool>(uart_mod0->getSignalByName(RefString(new std::string("out")))));
    en->connect(boost::static_pointer_cast<CsimPortTBool>(uart_mod0->getSignalByName(RefString(new std::string("en")))));
    in->connect(boost::static_pointer_cast<CsimPortTBool>(uart_mod0->getSignalByName(RefString(new std::string("in")))));
    out->connect(boost::static_pointer_cast<CsimPortTBool>(uart_mod0->getSignalByName(RefString(new std::string("out")))));
    en->connect(boost::static_pointer_cast<CsimPortTBool>(uart_mod0->getSignalByName(RefString(new std::string("en")))));
    in->connect(boost::static_pointer_cast<CsimPortTBool>(uart_mod0->getSignalByName(RefString(new std::string("in")))));
    out->connect(boost::static_pointer_cast<CsimPortTBool>(uart_mod0->getSignalByName(RefString(new std::string("out")))));
    en->connect(boost::static_pointer_cast<CsimPortTBool>(uart_mod0->getSignalByName(RefString(new std::string("en")))));
    in->connect(boost::static_pointer_cast<CsimPortTBool>(uart_mod0->getSignalByName(RefString(new std::string("in")))));
    out->connect(boost::static_pointer_cast<CsimPortTBool>(uart_mod0->getSignalByName(RefString(new std::string("out")))));
    add_addr->connect(boost::static_pointer_cast<CsimPortTShort>(uart_fab_1->getSignalByName(RefString(new std::string("add_addr")))));
    add_data->connect(boost::static_pointer_cast<CsimPortTShort>(uart_fab_1->getSignalByName(RefString(new std::string("add_data")))));
    add_dst_nid->connect(boost::static_pointer_cast<CsimPortTChar>(uart_fab_1->getSignalByName(RefString(new std::string("add_dst_nid")))));
    add_ready->connect(boost::static_pointer_cast<CsimPortTBool>(uart_fab_1->getSignalByName(RefString(new std::string("add_ready")))));
    add_type->connect(boost::static_pointer_cast<CsimPortTChar>(uart_fab_1->getSignalByName(RefString(new std::string("add_type")))));
    add_valid->connect(boost::static_pointer_cast<CsimPortTBool>(uart_fab_1->getSignalByName(RefString(new std::string("add_valid")))));
    drop_addr->connect(boost::static_pointer_cast<CsimPortTShort>(uart_fab_1->getSignalByName(RefString(new std::string("drop_addr")))));
    drop_data->connect(boost::static_pointer_cast<CsimPortTShort>(uart_fab_1->getSignalByName(RefString(new std::string("drop_data")))));
    drop_src_nid->connect(boost::static_pointer_cast<CsimPortTChar>(uart_fab_1->getSignalByName(RefString(new std::string("drop_src_nid")))));
    drop_type->connect(boost::static_pointer_cast<CsimPortTChar>(uart_fab_1->getSignalByName(RefString(new std::string("drop_type")))));
    drop_valid->connect(boost::static_pointer_cast<CsimPortTBool>(uart_fab_1->getSignalByName(RefString(new std::string("drop_valid")))));
    addr->connect(boost::static_pointer_cast<CsimPortTShort>(uart_fab_1->getSignalByName(RefString(new std::string("addr")))));
    age->connect(boost::static_pointer_cast<CsimPortTBool>(uart_fab_1->getSignalByName(RefString(new std::string("age")))));
    data->connect(boost::static_pointer_cast<CsimPortTShort>(uart_fab_1->getSignalByName(RefString(new std::string("data")))));
    dst_nid->connect(boost::static_pointer_cast<CsimPortTChar>(uart_fab_1->getSignalByName(RefString(new std::string("dst_nid")))));
    src_nid->connect(boost::static_pointer_cast<CsimPortTChar>(uart_fab_1->getSignalByName(RefString(new std::string("src_nid")))));
    type->connect(boost::static_pointer_cast<CsimPortTChar>(uart_fab_1->getSignalByName(RefString(new std::string("type")))));
    valid->connect(boost::static_pointer_cast<CsimPortTBool>(uart_fab_1->getSignalByName(RefString(new std::string("valid")))));
    addr->connect(boost::static_pointer_cast<CsimPortTShort>(uart_fab_1->getSignalByName(RefString(new std::string("addr")))));
    age->connect(boost::static_pointer_cast<CsimPortTBool>(uart_fab_1->getSignalByName(RefString(new std::string("age")))));
    data->connect(boost::static_pointer_cast<CsimPortTShort>(uart_fab_1->getSignalByName(RefString(new std::string("data")))));
    dst_nid->connect(boost::static_pointer_cast<CsimPortTChar>(uart_fab_1->getSignalByName(RefString(new std::string("dst_nid")))));
    src_nid->connect(boost::static_pointer_cast<CsimPortTChar>(uart_fab_1->getSignalByName(RefString(new std::string("src_nid")))));
    type->connect(boost::static_pointer_cast<CsimPortTChar>(uart_fab_1->getSignalByName(RefString(new std::string("type")))));
    valid->connect(boost::static_pointer_cast<CsimPortTBool>(uart_fab_1->getSignalByName(RefString(new std::string("valid")))));
    add_addr->connect(boost::static_pointer_cast<CsimPortTShort>(uart_mod1->getSignalByName(RefString(new std::string("add_addr")))));
    add_data->connect(boost::static_pointer_cast<CsimPortTShort>(uart_mod1->getSignalByName(RefString(new std::string("add_data")))));
    add_dst_nid->connect(boost::static_pointer_cast<CsimPortTChar>(uart_mod1->getSignalByName(RefString(new std::string("add_dst_nid")))));
    add_ready->connect(boost::static_pointer_cast<CsimPortTBool>(uart_mod1->getSignalByName(RefString(new std::string("add_ready")))));
    add_type->connect(boost::static_pointer_cast<CsimPortTChar>(uart_mod1->getSignalByName(RefString(new std::string("add_type")))));
    add_valid->connect(boost::static_pointer_cast<CsimPortTBool>(uart_mod1->getSignalByName(RefString(new std::string("add_valid")))));
    drop_addr->connect(boost::static_pointer_cast<CsimPortTShort>(uart_mod1->getSignalByName(RefString(new std::string("drop_addr")))));
    drop_data->connect(boost::static_pointer_cast<CsimPortTShort>(uart_mod1->getSignalByName(RefString(new std::string("drop_data")))));
    drop_src_nid->connect(boost::static_pointer_cast<CsimPortTChar>(uart_mod1->getSignalByName(RefString(new std::string("drop_src_nid")))));
    drop_type->connect(boost::static_pointer_cast<CsimPortTChar>(uart_mod1->getSignalByName(RefString(new std::string("drop_type")))));
    drop_valid->connect(boost::static_pointer_cast<CsimPortTBool>(uart_mod1->getSignalByName(RefString(new std::string("drop_valid")))));
    en->connect(boost::static_pointer_cast<CsimPortTBool>(uart_mod1->getSignalByName(RefString(new std::string("en")))));
    in->connect(boost::static_pointer_cast<CsimPortTBool>(uart_mod1->getSignalByName(RefString(new std::string("in")))));
    out->connect(boost::static_pointer_cast<CsimPortTBool>(uart_mod1->getSignalByName(RefString(new std::string("out")))));
    en->connect(boost::static_pointer_cast<CsimPortTBool>(uart_mod1->getSignalByName(RefString(new std::string("en")))));
    in->connect(boost::static_pointer_cast<CsimPortTBool>(uart_mod1->getSignalByName(RefString(new std::string("in")))));
    out->connect(boost::static_pointer_cast<CsimPortTBool>(uart_mod1->getSignalByName(RefString(new std::string("out")))));
    en->connect(boost::static_pointer_cast<CsimPortTBool>(uart_mod1->getSignalByName(RefString(new std::string("en")))));
    in->connect(boost::static_pointer_cast<CsimPortTBool>(uart_mod1->getSignalByName(RefString(new std::string("in")))));
    out->connect(boost::static_pointer_cast<CsimPortTBool>(uart_mod1->getSignalByName(RefString(new std::string("out")))));
    en->connect(boost::static_pointer_cast<CsimPortTBool>(uart_mod1->getSignalByName(RefString(new std::string("en")))));
    in->connect(boost::static_pointer_cast<CsimPortTBool>(uart_mod1->getSignalByName(RefString(new std::string("in")))));
    out->connect(boost::static_pointer_cast<CsimPortTBool>(uart_mod1->getSignalByName(RefString(new std::string("out")))));
    en->connect(boost::static_pointer_cast<CsimPortTBool>(uart_mod1->getSignalByName(RefString(new std::string("en")))));
    in->connect(boost::static_pointer_cast<CsimPortTBool>(uart_mod1->getSignalByName(RefString(new std::string("in")))));
    out->connect(boost::static_pointer_cast<CsimPortTBool>(uart_mod1->getSignalByName(RefString(new std::string("out")))));
    en->connect(boost::static_pointer_cast<CsimPortTBool>(uart_mod1->getSignalByName(RefString(new std::string("en")))));
    in->connect(boost::static_pointer_cast<CsimPortTBool>(uart_mod1->getSignalByName(RefString(new std::string("in")))));
    out->connect(boost::static_pointer_cast<CsimPortTBool>(uart_mod1->getSignalByName(RefString(new std::string("out")))));
    rx->connect(boost::static_pointer_cast<CsimPortTBool>(uart_mod1->getSignalByName(RefString(new std::string("rx")))));
    tx->connect(boost::static_pointer_cast<CsimPortTBool>(uart_mod1->getSignalByName(RefString(new std::string("tx")))));
    add_addr->connect(boost::static_pointer_cast<CsimPortTShort>(uart_fab_2->getSignalByName(RefString(new std::string("add_addr")))));
    add_data->connect(boost::static_pointer_cast<CsimPortTShort>(uart_fab_2->getSignalByName(RefString(new std::string("add_data")))));
    add_dst_nid->connect(boost::static_pointer_cast<CsimPortTChar>(uart_fab_2->getSignalByName(RefString(new std::string("add_dst_nid")))));
    add_ready->connect(boost::static_pointer_cast<CsimPortTBool>(uart_fab_2->getSignalByName(RefString(new std::string("add_ready")))));
    add_type->connect(boost::static_pointer_cast<CsimPortTChar>(uart_fab_2->getSignalByName(RefString(new std::string("add_type")))));
    add_valid->connect(boost::static_pointer_cast<CsimPortTBool>(uart_fab_2->getSignalByName(RefString(new std::string("add_valid")))));
    drop_addr->connect(boost::static_pointer_cast<CsimPortTShort>(uart_fab_2->getSignalByName(RefString(new std::string("drop_addr")))));
    drop_data->connect(boost::static_pointer_cast<CsimPortTShort>(uart_fab_2->getSignalByName(RefString(new std::string("drop_data")))));
    drop_src_nid->connect(boost::static_pointer_cast<CsimPortTChar>(uart_fab_2->getSignalByName(RefString(new std::string("drop_src_nid")))));
    drop_type->connect(boost::static_pointer_cast<CsimPortTChar>(uart_fab_2->getSignalByName(RefString(new std::string("drop_type")))));
    drop_valid->connect(boost::static_pointer_cast<CsimPortTBool>(uart_fab_2->getSignalByName(RefString(new std::string("drop_valid")))));
    addr->connect(boost::static_pointer_cast<CsimPortTShort>(uart_fab_2->getSignalByName(RefString(new std::string("addr")))));
    age->connect(boost::static_pointer_cast<CsimPortTBool>(uart_fab_2->getSignalByName(RefString(new std::string("age")))));
    data->connect(boost::static_pointer_cast<CsimPortTShort>(uart_fab_2->getSignalByName(RefString(new std::string("data")))));
    dst_nid->connect(boost::static_pointer_cast<CsimPortTChar>(uart_fab_2->getSignalByName(RefString(new std::string("dst_nid")))));
    src_nid->connect(boost::static_pointer_cast<CsimPortTChar>(uart_fab_2->getSignalByName(RefString(new std::string("src_nid")))));
    type->connect(boost::static_pointer_cast<CsimPortTChar>(uart_fab_2->getSignalByName(RefString(new std::string("type")))));
    valid->connect(boost::static_pointer_cast<CsimPortTBool>(uart_fab_2->getSignalByName(RefString(new std::string("valid")))));
    addr->connect(boost::static_pointer_cast<CsimPortTShort>(uart_fab_2->getSignalByName(RefString(new std::string("addr")))));
    age->connect(boost::static_pointer_cast<CsimPortTBool>(uart_fab_2->getSignalByName(RefString(new std::string("age")))));
    data->connect(boost::static_pointer_cast<CsimPortTShort>(uart_fab_2->getSignalByName(RefString(new std::string("data")))));
    dst_nid->connect(boost::static_pointer_cast<CsimPortTChar>(uart_fab_2->getSignalByName(RefString(new std::string("dst_nid")))));
    src_nid->connect(boost::static_pointer_cast<CsimPortTChar>(uart_fab_2->getSignalByName(RefString(new std::string("src_nid")))));
    type->connect(boost::static_pointer_cast<CsimPortTChar>(uart_fab_2->getSignalByName(RefString(new std::string("type")))));
    valid->connect(boost::static_pointer_cast<CsimPortTBool>(uart_fab_2->getSignalByName(RefString(new std::string("valid")))));
    add_addr->connect(boost::static_pointer_cast<CsimPortTShort>(uart_mod2->getSignalByName(RefString(new std::string("add_addr")))));
    add_data->connect(boost::static_pointer_cast<CsimPortTShort>(uart_mod2->getSignalByName(RefString(new std::string("add_data")))));
    add_dst_nid->connect(boost::static_pointer_cast<CsimPortTChar>(uart_mod2->getSignalByName(RefString(new std::string("add_dst_nid")))));
    add_ready->connect(boost::static_pointer_cast<CsimPortTBool>(uart_mod2->getSignalByName(RefString(new std::string("add_ready")))));
    add_type->connect(boost::static_pointer_cast<CsimPortTChar>(uart_mod2->getSignalByName(RefString(new std::string("add_type")))));
    add_valid->connect(boost::static_pointer_cast<CsimPortTBool>(uart_mod2->getSignalByName(RefString(new std::string("add_valid")))));
    drop_addr->connect(boost::static_pointer_cast<CsimPortTShort>(uart_mod2->getSignalByName(RefString(new std::string("drop_addr")))));
    drop_data->connect(boost::static_pointer_cast<CsimPortTShort>(uart_mod2->getSignalByName(RefString(new std::string("drop_data")))));
    drop_src_nid->connect(boost::static_pointer_cast<CsimPortTChar>(uart_mod2->getSignalByName(RefString(new std::string("drop_src_nid")))));
    drop_type->connect(boost::static_pointer_cast<CsimPortTChar>(uart_mod2->getSignalByName(RefString(new std::string("drop_type")))));
    drop_valid->connect(boost::static_pointer_cast<CsimPortTBool>(uart_mod2->getSignalByName(RefString(new std::string("drop_valid")))));
    en->connect(boost::static_pointer_cast<CsimPortTBool>(uart_mod2->getSignalByName(RefString(new std::string("en")))));
    in->connect(boost::static_pointer_cast<CsimPortTBool>(uart_mod2->getSignalByName(RefString(new std::string("in")))));
    out->connect(boost::static_pointer_cast<CsimPortTBool>(uart_mod2->getSignalByName(RefString(new std::string("out")))));
    en->connect(boost::static_pointer_cast<CsimPortTBool>(uart_mod2->getSignalByName(RefString(new std::string("en")))));
    in->connect(boost::static_pointer_cast<CsimPortTBool>(uart_mod2->getSignalByName(RefString(new std::string("in")))));
    out->connect(boost::static_pointer_cast<CsimPortTBool>(uart_mod2->getSignalByName(RefString(new std::string("out")))));
    en->connect(boost::static_pointer_cast<CsimPortTBool>(uart_mod2->getSignalByName(RefString(new std::string("en")))));
    in->connect(boost::static_pointer_cast<CsimPortTBool>(uart_mod2->getSignalByName(RefString(new std::string("in")))));
    out->connect(boost::static_pointer_cast<CsimPortTBool>(uart_mod2->getSignalByName(RefString(new std::string("out")))));
    en->connect(boost::static_pointer_cast<CsimPortTBool>(uart_mod2->getSignalByName(RefString(new std::string("en")))));
    in->connect(boost::static_pointer_cast<CsimPortTBool>(uart_mod2->getSignalByName(RefString(new std::string("in")))));
    out->connect(boost::static_pointer_cast<CsimPortTBool>(uart_mod2->getSignalByName(RefString(new std::string("out")))));
    en->connect(boost::static_pointer_cast<CsimPortTBool>(uart_mod2->getSignalByName(RefString(new std::string("en")))));
    in->connect(boost::static_pointer_cast<CsimPortTBool>(uart_mod2->getSignalByName(RefString(new std::string("in")))));
    out->connect(boost::static_pointer_cast<CsimPortTBool>(uart_mod2->getSignalByName(RefString(new std::string("out")))));
    en->connect(boost::static_pointer_cast<CsimPortTBool>(uart_mod2->getSignalByName(RefString(new std::string("en")))));
    in->connect(boost::static_pointer_cast<CsimPortTBool>(uart_mod2->getSignalByName(RefString(new std::string("in")))));
    out->connect(boost::static_pointer_cast<CsimPortTBool>(uart_mod2->getSignalByName(RefString(new std::string("out")))));
    rx->connect(boost::static_pointer_cast<CsimPortTBool>(uart_mod2->getSignalByName(RefString(new std::string("rx")))));
    tx->connect(boost::static_pointer_cast<CsimPortTBool>(uart_mod2->getSignalByName(RefString(new std::string("tx")))));
    add_addr->connect(boost::static_pointer_cast<CsimPortTShort>(uart_fab_3->getSignalByName(RefString(new std::string("add_addr")))));
    add_data->connect(boost::static_pointer_cast<CsimPortTShort>(uart_fab_3->getSignalByName(RefString(new std::string("add_data")))));
    add_dst_nid->connect(boost::static_pointer_cast<CsimPortTChar>(uart_fab_3->getSignalByName(RefString(new std::string("add_dst_nid")))));
    add_ready->connect(boost::static_pointer_cast<CsimPortTBool>(uart_fab_3->getSignalByName(RefString(new std::string("add_ready")))));
    add_type->connect(boost::static_pointer_cast<CsimPortTChar>(uart_fab_3->getSignalByName(RefString(new std::string("add_type")))));
    add_valid->connect(boost::static_pointer_cast<CsimPortTBool>(uart_fab_3->getSignalByName(RefString(new std::string("add_valid")))));
    drop_addr->connect(boost::static_pointer_cast<CsimPortTShort>(uart_fab_3->getSignalByName(RefString(new std::string("drop_addr")))));
    drop_data->connect(boost::static_pointer_cast<CsimPortTShort>(uart_fab_3->getSignalByName(RefString(new std::string("drop_data")))));
    drop_src_nid->connect(boost::static_pointer_cast<CsimPortTChar>(uart_fab_3->getSignalByName(RefString(new std::string("drop_src_nid")))));
    drop_type->connect(boost::static_pointer_cast<CsimPortTChar>(uart_fab_3->getSignalByName(RefString(new std::string("drop_type")))));
    drop_valid->connect(boost::static_pointer_cast<CsimPortTBool>(uart_fab_3->getSignalByName(RefString(new std::string("drop_valid")))));
    addr->connect(boost::static_pointer_cast<CsimPortTShort>(uart_fab_3->getSignalByName(RefString(new std::string("addr")))));
    age->connect(boost::static_pointer_cast<CsimPortTBool>(uart_fab_3->getSignalByName(RefString(new std::string("age")))));
    data->connect(boost::static_pointer_cast<CsimPortTShort>(uart_fab_3->getSignalByName(RefString(new std::string("data")))));
    dst_nid->connect(boost::static_pointer_cast<CsimPortTChar>(uart_fab_3->getSignalByName(RefString(new std::string("dst_nid")))));
    src_nid->connect(boost::static_pointer_cast<CsimPortTChar>(uart_fab_3->getSignalByName(RefString(new std::string("src_nid")))));
    type->connect(boost::static_pointer_cast<CsimPortTChar>(uart_fab_3->getSignalByName(RefString(new std::string("type")))));
    valid->connect(boost::static_pointer_cast<CsimPortTBool>(uart_fab_3->getSignalByName(RefString(new std::string("valid")))));
    addr->connect(boost::static_pointer_cast<CsimPortTShort>(uart_fab_3->getSignalByName(RefString(new std::string("addr")))));
    age->connect(boost::static_pointer_cast<CsimPortTBool>(uart_fab_3->getSignalByName(RefString(new std::string("age")))));
    data->connect(boost::static_pointer_cast<CsimPortTShort>(uart_fab_3->getSignalByName(RefString(new std::string("data")))));
    dst_nid->connect(boost::static_pointer_cast<CsimPortTChar>(uart_fab_3->getSignalByName(RefString(new std::string("dst_nid")))));
    src_nid->connect(boost::static_pointer_cast<CsimPortTChar>(uart_fab_3->getSignalByName(RefString(new std::string("src_nid")))));
    type->connect(boost::static_pointer_cast<CsimPortTChar>(uart_fab_3->getSignalByName(RefString(new std::string("type")))));
    valid->connect(boost::static_pointer_cast<CsimPortTBool>(uart_fab_3->getSignalByName(RefString(new std::string("valid")))));
    add_addr->connect(boost::static_pointer_cast<CsimPortTShort>(uart_mod3->getSignalByName(RefString(new std::string("add_addr")))));
    add_data->connect(boost::static_pointer_cast<CsimPortTShort>(uart_mod3->getSignalByName(RefString(new std::string("add_data")))));
    add_dst_nid->connect(boost::static_pointer_cast<CsimPortTChar>(uart_mod3->getSignalByName(RefString(new std::string("add_dst_nid")))));
    add_ready->connect(boost::static_pointer_cast<CsimPortTBool>(uart_mod3->getSignalByName(RefString(new std::string("add_ready")))));
    add_type->connect(boost::static_pointer_cast<CsimPortTChar>(uart_mod3->getSignalByName(RefString(new std::string("add_type")))));
    add_valid->connect(boost::static_pointer_cast<CsimPortTBool>(uart_mod3->getSignalByName(RefString(new std::string("add_valid")))));
    drop_addr->connect(boost::static_pointer_cast<CsimPortTShort>(uart_mod3->getSignalByName(RefString(new std::string("drop_addr")))));
    drop_data->connect(boost::static_pointer_cast<CsimPortTShort>(uart_mod3->getSignalByName(RefString(new std::string("drop_data")))));
    drop_src_nid->connect(boost::static_pointer_cast<CsimPortTChar>(uart_mod3->getSignalByName(RefString(new std::string("drop_src_nid")))));
    drop_type->connect(boost::static_pointer_cast<CsimPortTChar>(uart_mod3->getSignalByName(RefString(new std::string("drop_type")))));
    drop_valid->connect(boost::static_pointer_cast<CsimPortTBool>(uart_mod3->getSignalByName(RefString(new std::string("drop_valid")))));
    en->connect(boost::static_pointer_cast<CsimPortTBool>(uart_mod3->getSignalByName(RefString(new std::string("en")))));
    in->connect(boost::static_pointer_cast<CsimPortTBool>(uart_mod3->getSignalByName(RefString(new std::string("in")))));
    out->connect(boost::static_pointer_cast<CsimPortTBool>(uart_mod3->getSignalByName(RefString(new std::string("out")))));
    en->connect(boost::static_pointer_cast<CsimPortTBool>(uart_mod3->getSignalByName(RefString(new std::string("en")))));
    in->connect(boost::static_pointer_cast<CsimPortTBool>(uart_mod3->getSignalByName(RefString(new std::string("in")))));
    out->connect(boost::static_pointer_cast<CsimPortTBool>(uart_mod3->getSignalByName(RefString(new std::string("out")))));
    en->connect(boost::static_pointer_cast<CsimPortTBool>(uart_mod3->getSignalByName(RefString(new std::string("en")))));
    in->connect(boost::static_pointer_cast<CsimPortTBool>(uart_mod3->getSignalByName(RefString(new std::string("in")))));
    out->connect(boost::static_pointer_cast<CsimPortTBool>(uart_mod3->getSignalByName(RefString(new std::string("out")))));
    en->connect(boost::static_pointer_cast<CsimPortTBool>(uart_mod3->getSignalByName(RefString(new std::string("en")))));
    in->connect(boost::static_pointer_cast<CsimPortTBool>(uart_mod3->getSignalByName(RefString(new std::string("in")))));
    out->connect(boost::static_pointer_cast<CsimPortTBool>(uart_mod3->getSignalByName(RefString(new std::string("out")))));
    en->connect(boost::static_pointer_cast<CsimPortTBool>(uart_mod3->getSignalByName(RefString(new std::string("en")))));
    in->connect(boost::static_pointer_cast<CsimPortTBool>(uart_mod3->getSignalByName(RefString(new std::string("in")))));
    out->connect(boost::static_pointer_cast<CsimPortTBool>(uart_mod3->getSignalByName(RefString(new std::string("out")))));
    en->connect(boost::static_pointer_cast<CsimPortTBool>(uart_mod3->getSignalByName(RefString(new std::string("en")))));
    in->connect(boost::static_pointer_cast<CsimPortTBool>(uart_mod3->getSignalByName(RefString(new std::string("in")))));
    out->connect(boost::static_pointer_cast<CsimPortTBool>(uart_mod3->getSignalByName(RefString(new std::string("out")))));
    rx->connect(boost::static_pointer_cast<CsimPortTBool>(uart_mod3->getSignalByName(RefString(new std::string("rx")))));
    tx->connect(boost::static_pointer_cast<CsimPortTBool>(uart_mod3->getSignalByName(RefString(new std::string("tx")))));
    add_addr->connect(boost::static_pointer_cast<CsimPortTShort>(fab_i2c->getSignalByName(RefString(new std::string("add_addr")))));
    add_data->connect(boost::static_pointer_cast<CsimPortTShort>(fab_i2c->getSignalByName(RefString(new std::string("add_data")))));
    add_dst_nid->connect(boost::static_pointer_cast<CsimPortTChar>(fab_i2c->getSignalByName(RefString(new std::string("add_dst_nid")))));
    add_ready->connect(boost::static_pointer_cast<CsimPortTBool>(fab_i2c->getSignalByName(RefString(new std::string("add_ready")))));
    add_type->connect(boost::static_pointer_cast<CsimPortTChar>(fab_i2c->getSignalByName(RefString(new std::string("add_type")))));
    add_valid->connect(boost::static_pointer_cast<CsimPortTBool>(fab_i2c->getSignalByName(RefString(new std::string("add_valid")))));
    drop_addr->connect(boost::static_pointer_cast<CsimPortTShort>(fab_i2c->getSignalByName(RefString(new std::string("drop_addr")))));
    drop_data->connect(boost::static_pointer_cast<CsimPortTShort>(fab_i2c->getSignalByName(RefString(new std::string("drop_data")))));
    drop_src_nid->connect(boost::static_pointer_cast<CsimPortTChar>(fab_i2c->getSignalByName(RefString(new std::string("drop_src_nid")))));
    drop_type->connect(boost::static_pointer_cast<CsimPortTChar>(fab_i2c->getSignalByName(RefString(new std::string("drop_type")))));
    drop_valid->connect(boost::static_pointer_cast<CsimPortTBool>(fab_i2c->getSignalByName(RefString(new std::string("drop_valid")))));
    addr->connect(boost::static_pointer_cast<CsimPortTShort>(fab_i2c->getSignalByName(RefString(new std::string("addr")))));
    age->connect(boost::static_pointer_cast<CsimPortTBool>(fab_i2c->getSignalByName(RefString(new std::string("age")))));
    data->connect(boost::static_pointer_cast<CsimPortTShort>(fab_i2c->getSignalByName(RefString(new std::string("data")))));
    dst_nid->connect(boost::static_pointer_cast<CsimPortTChar>(fab_i2c->getSignalByName(RefString(new std::string("dst_nid")))));
    src_nid->connect(boost::static_pointer_cast<CsimPortTChar>(fab_i2c->getSignalByName(RefString(new std::string("src_nid")))));
    type->connect(boost::static_pointer_cast<CsimPortTChar>(fab_i2c->getSignalByName(RefString(new std::string("type")))));
    valid->connect(boost::static_pointer_cast<CsimPortTBool>(fab_i2c->getSignalByName(RefString(new std::string("valid")))));
    addr->connect(boost::static_pointer_cast<CsimPortTShort>(fab_i2c->getSignalByName(RefString(new std::string("addr")))));
    age->connect(boost::static_pointer_cast<CsimPortTBool>(fab_i2c->getSignalByName(RefString(new std::string("age")))));
    data->connect(boost::static_pointer_cast<CsimPortTShort>(fab_i2c->getSignalByName(RefString(new std::string("data")))));
    dst_nid->connect(boost::static_pointer_cast<CsimPortTChar>(fab_i2c->getSignalByName(RefString(new std::string("dst_nid")))));
    src_nid->connect(boost::static_pointer_cast<CsimPortTChar>(fab_i2c->getSignalByName(RefString(new std::string("src_nid")))));
    type->connect(boost::static_pointer_cast<CsimPortTChar>(fab_i2c->getSignalByName(RefString(new std::string("type")))));
    valid->connect(boost::static_pointer_cast<CsimPortTBool>(fab_i2c->getSignalByName(RefString(new std::string("valid")))));
    add_addr->connect(boost::static_pointer_cast<CsimPortTShort>(i2c_->getSignalByName(RefString(new std::string("add_addr")))));
    add_data->connect(boost::static_pointer_cast<CsimPortTShort>(i2c_->getSignalByName(RefString(new std::string("add_data")))));
    add_dst_nid->connect(boost::static_pointer_cast<CsimPortTChar>(i2c_->getSignalByName(RefString(new std::string("add_dst_nid")))));
    add_ready->connect(boost::static_pointer_cast<CsimPortTBool>(i2c_->getSignalByName(RefString(new std::string("add_ready")))));
    add_type->connect(boost::static_pointer_cast<CsimPortTChar>(i2c_->getSignalByName(RefString(new std::string("add_type")))));
    add_valid->connect(boost::static_pointer_cast<CsimPortTBool>(i2c_->getSignalByName(RefString(new std::string("add_valid")))));
    drop_addr->connect(boost::static_pointer_cast<CsimPortTShort>(i2c_->getSignalByName(RefString(new std::string("drop_addr")))));
    drop_data->connect(boost::static_pointer_cast<CsimPortTShort>(i2c_->getSignalByName(RefString(new std::string("drop_data")))));
    drop_src_nid->connect(boost::static_pointer_cast<CsimPortTChar>(i2c_->getSignalByName(RefString(new std::string("drop_src_nid")))));
    drop_type->connect(boost::static_pointer_cast<CsimPortTChar>(i2c_->getSignalByName(RefString(new std::string("drop_type")))));
    drop_valid->connect(boost::static_pointer_cast<CsimPortTBool>(i2c_->getSignalByName(RefString(new std::string("drop_valid")))));
    add_addr->connect(boost::static_pointer_cast<CsimPortTShort>(proto_fab->getSignalByName(RefString(new std::string("add_addr")))));
    add_data->connect(boost::static_pointer_cast<CsimPortTShort>(proto_fab->getSignalByName(RefString(new std::string("add_data")))));
    add_dst_nid->connect(boost::static_pointer_cast<CsimPortTChar>(proto_fab->getSignalByName(RefString(new std::string("add_dst_nid")))));
    add_ready->connect(boost::static_pointer_cast<CsimPortTBool>(proto_fab->getSignalByName(RefString(new std::string("add_ready")))));
    add_type->connect(boost::static_pointer_cast<CsimPortTChar>(proto_fab->getSignalByName(RefString(new std::string("add_type")))));
    add_valid->connect(boost::static_pointer_cast<CsimPortTBool>(proto_fab->getSignalByName(RefString(new std::string("add_valid")))));
    drop_addr->connect(boost::static_pointer_cast<CsimPortTShort>(proto_fab->getSignalByName(RefString(new std::string("drop_addr")))));
    drop_data->connect(boost::static_pointer_cast<CsimPortTShort>(proto_fab->getSignalByName(RefString(new std::string("drop_data")))));
    drop_src_nid->connect(boost::static_pointer_cast<CsimPortTChar>(proto_fab->getSignalByName(RefString(new std::string("drop_src_nid")))));
    drop_type->connect(boost::static_pointer_cast<CsimPortTChar>(proto_fab->getSignalByName(RefString(new std::string("drop_type")))));
    drop_valid->connect(boost::static_pointer_cast<CsimPortTBool>(proto_fab->getSignalByName(RefString(new std::string("drop_valid")))));
    addr->connect(boost::static_pointer_cast<CsimPortTShort>(proto_fab->getSignalByName(RefString(new std::string("addr")))));
    age->connect(boost::static_pointer_cast<CsimPortTBool>(proto_fab->getSignalByName(RefString(new std::string("age")))));
    data->connect(boost::static_pointer_cast<CsimPortTShort>(proto_fab->getSignalByName(RefString(new std::string("data")))));
    dst_nid->connect(boost::static_pointer_cast<CsimPortTChar>(proto_fab->getSignalByName(RefString(new std::string("dst_nid")))));
    src_nid->connect(boost::static_pointer_cast<CsimPortTChar>(proto_fab->getSignalByName(RefString(new std::string("src_nid")))));
    type->connect(boost::static_pointer_cast<CsimPortTChar>(proto_fab->getSignalByName(RefString(new std::string("type")))));
    valid->connect(boost::static_pointer_cast<CsimPortTBool>(proto_fab->getSignalByName(RefString(new std::string("valid")))));
    addr->connect(boost::static_pointer_cast<CsimPortTShort>(proto_fab->getSignalByName(RefString(new std::string("addr")))));
    age->connect(boost::static_pointer_cast<CsimPortTBool>(proto_fab->getSignalByName(RefString(new std::string("age")))));
    data->connect(boost::static_pointer_cast<CsimPortTShort>(proto_fab->getSignalByName(RefString(new std::string("data")))));
    dst_nid->connect(boost::static_pointer_cast<CsimPortTChar>(proto_fab->getSignalByName(RefString(new std::string("dst_nid")))));
    src_nid->connect(boost::static_pointer_cast<CsimPortTChar>(proto_fab->getSignalByName(RefString(new std::string("src_nid")))));
    type->connect(boost::static_pointer_cast<CsimPortTChar>(proto_fab->getSignalByName(RefString(new std::string("type")))));
    valid->connect(boost::static_pointer_cast<CsimPortTBool>(proto_fab->getSignalByName(RefString(new std::string("valid")))));
    add_addr->connect(boost::static_pointer_cast<CsimPortTShort>(usb_protocol_mgr_->getSignalByName(RefString(new std::string("add_addr")))));
    add_data->connect(boost::static_pointer_cast<CsimPortTShort>(usb_protocol_mgr_->getSignalByName(RefString(new std::string("add_data")))));
    add_dst_nid->connect(boost::static_pointer_cast<CsimPortTChar>(usb_protocol_mgr_->getSignalByName(RefString(new std::string("add_dst_nid")))));
    add_ready->connect(boost::static_pointer_cast<CsimPortTBool>(usb_protocol_mgr_->getSignalByName(RefString(new std::string("add_ready")))));
    add_type->connect(boost::static_pointer_cast<CsimPortTChar>(usb_protocol_mgr_->getSignalByName(RefString(new std::string("add_type")))));
    add_valid->connect(boost::static_pointer_cast<CsimPortTBool>(usb_protocol_mgr_->getSignalByName(RefString(new std::string("add_valid")))));
    drop_addr->connect(boost::static_pointer_cast<CsimPortTShort>(usb_protocol_mgr_->getSignalByName(RefString(new std::string("drop_addr")))));
    drop_data->connect(boost::static_pointer_cast<CsimPortTShort>(usb_protocol_mgr_->getSignalByName(RefString(new std::string("drop_data")))));
    drop_src_nid->connect(boost::static_pointer_cast<CsimPortTChar>(usb_protocol_mgr_->getSignalByName(RefString(new std::string("drop_src_nid")))));
    drop_type->connect(boost::static_pointer_cast<CsimPortTChar>(usb_protocol_mgr_->getSignalByName(RefString(new std::string("drop_type")))));
    drop_valid->connect(boost::static_pointer_cast<CsimPortTBool>(usb_protocol_mgr_->getSignalByName(RefString(new std::string("drop_valid")))));
    addr->connect(boost::static_pointer_cast<CsimPortTChar>(usb_protocol_mgr_->getSignalByName(RefString(new std::string("addr")))));
    read_data->connect(boost::static_pointer_cast<CsimPortTShort>(usb_protocol_mgr_->getSignalByName(RefString(new std::string("read_data")))));
    write_data->connect(boost::static_pointer_cast<CsimPortTShort>(usb_protocol_mgr_->getSignalByName(RefString(new std::string("write_data")))));
    write_en->connect(boost::static_pointer_cast<CsimPortTBool>(usb_protocol_mgr_->getSignalByName(RefString(new std::string("write_en")))));
    addr->connect(boost::static_pointer_cast<CsimPortTChar>(usb_protocol_mgr_->getSignalByName(RefString(new std::string("addr")))));
    read_data->connect(boost::static_pointer_cast<CsimPortTShort>(usb_protocol_mgr_->getSignalByName(RefString(new std::string("read_data")))));
    ready->connect(boost::static_pointer_cast<CsimPortTBool>(usb_protocol_mgr_->getSignalByName(RefString(new std::string("ready")))));
    valid->connect(boost::static_pointer_cast<CsimPortTBool>(usb_protocol_mgr_->getSignalByName(RefString(new std::string("valid")))));
    write_data->connect(boost::static_pointer_cast<CsimPortTShort>(usb_protocol_mgr_->getSignalByName(RefString(new std::string("write_data")))));
    write_en->connect(boost::static_pointer_cast<CsimPortTBool>(usb_protocol_mgr_->getSignalByName(RefString(new std::string("write_en")))));
    endpoint->connect(boost::static_pointer_cast<CsimPortTChar>(usb_protocol_mgr_->getSignalByName(RefString(new std::string("endpoint")))));
    length->connect(boost::static_pointer_cast<CsimPortTChar>(usb_protocol_mgr_->getSignalByName(RefString(new std::string("length")))));
    ready->connect(boost::static_pointer_cast<CsimPortTBool>(usb_protocol_mgr_->getSignalByName(RefString(new std::string("ready")))));
    valid->connect(boost::static_pointer_cast<CsimPortTBool>(usb_protocol_mgr_->getSignalByName(RefString(new std::string("valid")))));
    endpoint->connect(boost::static_pointer_cast<CsimPortTChar>(usb_protocol_mgr_->getSignalByName(RefString(new std::string("endpoint")))));
    length->connect(boost::static_pointer_cast<CsimPortTChar>(usb_protocol_mgr_->getSignalByName(RefString(new std::string("length")))));
    ready->connect(boost::static_pointer_cast<CsimPortTBool>(usb_protocol_mgr_->getSignalByName(RefString(new std::string("ready")))));
    valid->connect(boost::static_pointer_cast<CsimPortTBool>(usb_protocol_mgr_->getSignalByName(RefString(new std::string("valid")))));
    addr->connect(boost::static_pointer_cast<CsimPortTShort>(fab_filter_->getSignalByName(RefString(new std::string("addr")))));
    age->connect(boost::static_pointer_cast<CsimPortTBool>(fab_filter_->getSignalByName(RefString(new std::string("age")))));
    data->connect(boost::static_pointer_cast<CsimPortTShort>(fab_filter_->getSignalByName(RefString(new std::string("data")))));
    dst_nid->connect(boost::static_pointer_cast<CsimPortTChar>(fab_filter_->getSignalByName(RefString(new std::string("dst_nid")))));
    src_nid->connect(boost::static_pointer_cast<CsimPortTChar>(fab_filter_->getSignalByName(RefString(new std::string("src_nid")))));
    type->connect(boost::static_pointer_cast<CsimPortTChar>(fab_filter_->getSignalByName(RefString(new std::string("type")))));
    valid->connect(boost::static_pointer_cast<CsimPortTBool>(fab_filter_->getSignalByName(RefString(new std::string("valid")))));
    addr->connect(boost::static_pointer_cast<CsimPortTShort>(fab_filter_->getSignalByName(RefString(new std::string("addr")))));
    age->connect(boost::static_pointer_cast<CsimPortTBool>(fab_filter_->getSignalByName(RefString(new std::string("age")))));
    data->connect(boost::static_pointer_cast<CsimPortTShort>(fab_filter_->getSignalByName(RefString(new std::string("data")))));
    dst_nid->connect(boost::static_pointer_cast<CsimPortTChar>(fab_filter_->getSignalByName(RefString(new std::string("dst_nid")))));
    src_nid->connect(boost::static_pointer_cast<CsimPortTChar>(fab_filter_->getSignalByName(RefString(new std::string("src_nid")))));
    type->connect(boost::static_pointer_cast<CsimPortTChar>(fab_filter_->getSignalByName(RefString(new std::string("type")))));
    valid->connect(boost::static_pointer_cast<CsimPortTBool>(fab_filter_->getSignalByName(RefString(new std::string("valid")))));
    add_addr->connect(boost::static_pointer_cast<CsimPortTShort>(trans_fab->getSignalByName(RefString(new std::string("add_addr")))));
    add_data->connect(boost::static_pointer_cast<CsimPortTShort>(trans_fab->getSignalByName(RefString(new std::string("add_data")))));
    add_dst_nid->connect(boost::static_pointer_cast<CsimPortTChar>(trans_fab->getSignalByName(RefString(new std::string("add_dst_nid")))));
    add_ready->connect(boost::static_pointer_cast<CsimPortTBool>(trans_fab->getSignalByName(RefString(new std::string("add_ready")))));
    add_type->connect(boost::static_pointer_cast<CsimPortTChar>(trans_fab->getSignalByName(RefString(new std::string("add_type")))));
    add_valid->connect(boost::static_pointer_cast<CsimPortTBool>(trans_fab->getSignalByName(RefString(new std::string("add_valid")))));
    drop_addr->connect(boost::static_pointer_cast<CsimPortTShort>(trans_fab->getSignalByName(RefString(new std::string("drop_addr")))));
    drop_data->connect(boost::static_pointer_cast<CsimPortTShort>(trans_fab->getSignalByName(RefString(new std::string("drop_data")))));
    drop_src_nid->connect(boost::static_pointer_cast<CsimPortTChar>(trans_fab->getSignalByName(RefString(new std::string("drop_src_nid")))));
    drop_type->connect(boost::static_pointer_cast<CsimPortTChar>(trans_fab->getSignalByName(RefString(new std::string("drop_type")))));
    drop_valid->connect(boost::static_pointer_cast<CsimPortTBool>(trans_fab->getSignalByName(RefString(new std::string("drop_valid")))));
    addr->connect(boost::static_pointer_cast<CsimPortTShort>(trans_fab->getSignalByName(RefString(new std::string("addr")))));
    age->connect(boost::static_pointer_cast<CsimPortTBool>(trans_fab->getSignalByName(RefString(new std::string("age")))));
    data->connect(boost::static_pointer_cast<CsimPortTShort>(trans_fab->getSignalByName(RefString(new std::string("data")))));
    dst_nid->connect(boost::static_pointer_cast<CsimPortTChar>(trans_fab->getSignalByName(RefString(new std::string("dst_nid")))));
    src_nid->connect(boost::static_pointer_cast<CsimPortTChar>(trans_fab->getSignalByName(RefString(new std::string("src_nid")))));
    type->connect(boost::static_pointer_cast<CsimPortTChar>(trans_fab->getSignalByName(RefString(new std::string("type")))));
    valid->connect(boost::static_pointer_cast<CsimPortTBool>(trans_fab->getSignalByName(RefString(new std::string("valid")))));
    addr->connect(boost::static_pointer_cast<CsimPortTShort>(trans_fab->getSignalByName(RefString(new std::string("addr")))));
    age->connect(boost::static_pointer_cast<CsimPortTBool>(trans_fab->getSignalByName(RefString(new std::string("age")))));
    data->connect(boost::static_pointer_cast<CsimPortTShort>(trans_fab->getSignalByName(RefString(new std::string("data")))));
    dst_nid->connect(boost::static_pointer_cast<CsimPortTChar>(trans_fab->getSignalByName(RefString(new std::string("dst_nid")))));
    src_nid->connect(boost::static_pointer_cast<CsimPortTChar>(trans_fab->getSignalByName(RefString(new std::string("src_nid")))));
    type->connect(boost::static_pointer_cast<CsimPortTChar>(trans_fab->getSignalByName(RefString(new std::string("type")))));
    valid->connect(boost::static_pointer_cast<CsimPortTBool>(trans_fab->getSignalByName(RefString(new std::string("valid")))));
    add_addr->connect(boost::static_pointer_cast<CsimPortTShort>(usb_transaction_mgr_->getSignalByName(RefString(new std::string("add_addr")))));
    add_data->connect(boost::static_pointer_cast<CsimPortTShort>(usb_transaction_mgr_->getSignalByName(RefString(new std::string("add_data")))));
    add_dst_nid->connect(boost::static_pointer_cast<CsimPortTChar>(usb_transaction_mgr_->getSignalByName(RefString(new std::string("add_dst_nid")))));
    add_ready->connect(boost::static_pointer_cast<CsimPortTBool>(usb_transaction_mgr_->getSignalByName(RefString(new std::string("add_ready")))));
    add_type->connect(boost::static_pointer_cast<CsimPortTChar>(usb_transaction_mgr_->getSignalByName(RefString(new std::string("add_type")))));
    add_valid->connect(boost::static_pointer_cast<CsimPortTBool>(usb_transaction_mgr_->getSignalByName(RefString(new std::string("add_valid")))));
    drop_addr->connect(boost::static_pointer_cast<CsimPortTShort>(usb_transaction_mgr_->getSignalByName(RefString(new std::string("drop_addr")))));
    drop_data->connect(boost::static_pointer_cast<CsimPortTShort>(usb_transaction_mgr_->getSignalByName(RefString(new std::string("drop_data")))));
    drop_src_nid->connect(boost::static_pointer_cast<CsimPortTChar>(usb_transaction_mgr_->getSignalByName(RefString(new std::string("drop_src_nid")))));
    drop_type->connect(boost::static_pointer_cast<CsimPortTChar>(usb_transaction_mgr_->getSignalByName(RefString(new std::string("drop_type")))));
    drop_valid->connect(boost::static_pointer_cast<CsimPortTBool>(usb_transaction_mgr_->getSignalByName(RefString(new std::string("drop_valid")))));
    cmd->connect(boost::static_pointer_cast<CsimPortTBool>(usb_transaction_mgr_->getSignalByName(RefString(new std::string("cmd")))));
    data->connect(boost::static_pointer_cast<CsimPortTChar>(usb_transaction_mgr_->getSignalByName(RefString(new std::string("data")))));
    ready->connect(boost::static_pointer_cast<CsimPortTBool>(usb_transaction_mgr_->getSignalByName(RefString(new std::string("ready")))));
    valid->connect(boost::static_pointer_cast<CsimPortTBool>(usb_transaction_mgr_->getSignalByName(RefString(new std::string("valid")))));
    cmd->connect(boost::static_pointer_cast<CsimPortTBool>(usb_transaction_mgr_->getSignalByName(RefString(new std::string("cmd")))));
    data->connect(boost::static_pointer_cast<CsimPortTChar>(usb_transaction_mgr_->getSignalByName(RefString(new std::string("data")))));
    ready->connect(boost::static_pointer_cast<CsimPortTBool>(usb_transaction_mgr_->getSignalByName(RefString(new std::string("ready")))));
    valid->connect(boost::static_pointer_cast<CsimPortTBool>(usb_transaction_mgr_->getSignalByName(RefString(new std::string("valid")))));
    addr->connect(boost::static_pointer_cast<CsimPortTChar>(usb_transaction_mgr_->getSignalByName(RefString(new std::string("addr")))));
    read_data->connect(boost::static_pointer_cast<CsimPortTShort>(usb_transaction_mgr_->getSignalByName(RefString(new std::string("read_data")))));
    ready->connect(boost::static_pointer_cast<CsimPortTBool>(usb_transaction_mgr_->getSignalByName(RefString(new std::string("ready")))));
    valid->connect(boost::static_pointer_cast<CsimPortTBool>(usb_transaction_mgr_->getSignalByName(RefString(new std::string("valid")))));
    write_data->connect(boost::static_pointer_cast<CsimPortTShort>(usb_transaction_mgr_->getSignalByName(RefString(new std::string("write_data")))));
    write_en->connect(boost::static_pointer_cast<CsimPortTBool>(usb_transaction_mgr_->getSignalByName(RefString(new std::string("write_en")))));
    endpoint->connect(boost::static_pointer_cast<CsimPortTChar>(usb_transaction_mgr_->getSignalByName(RefString(new std::string("endpoint")))));
    length->connect(boost::static_pointer_cast<CsimPortTChar>(usb_transaction_mgr_->getSignalByName(RefString(new std::string("length")))));
    ready->connect(boost::static_pointer_cast<CsimPortTBool>(usb_transaction_mgr_->getSignalByName(RefString(new std::string("ready")))));
    valid->connect(boost::static_pointer_cast<CsimPortTBool>(usb_transaction_mgr_->getSignalByName(RefString(new std::string("valid")))));
    endpoint->connect(boost::static_pointer_cast<CsimPortTChar>(usb_transaction_mgr_->getSignalByName(RefString(new std::string("endpoint")))));
    length->connect(boost::static_pointer_cast<CsimPortTChar>(usb_transaction_mgr_->getSignalByName(RefString(new std::string("length")))));
    ready->connect(boost::static_pointer_cast<CsimPortTBool>(usb_transaction_mgr_->getSignalByName(RefString(new std::string("ready")))));
    valid->connect(boost::static_pointer_cast<CsimPortTBool>(usb_transaction_mgr_->getSignalByName(RefString(new std::string("valid")))));
    addr->connect(boost::static_pointer_cast<CsimPortTChar>(fifo_regs_->getSignalByName(RefString(new std::string("addr")))));
    read_data->connect(boost::static_pointer_cast<CsimPortTShort>(fifo_regs_->getSignalByName(RefString(new std::string("read_data")))));
    write_data->connect(boost::static_pointer_cast<CsimPortTShort>(fifo_regs_->getSignalByName(RefString(new std::string("write_data")))));
    write_en->connect(boost::static_pointer_cast<CsimPortTBool>(fifo_regs_->getSignalByName(RefString(new std::string("write_en")))));
    addr->connect(boost::static_pointer_cast<CsimPortTChar>(fifo_regs_->getSignalByName(RefString(new std::string("addr")))));
    read_data->connect(boost::static_pointer_cast<CsimPortTShort>(fifo_regs_->getSignalByName(RefString(new std::string("read_data")))));
    write_data->connect(boost::static_pointer_cast<CsimPortTShort>(fifo_regs_->getSignalByName(RefString(new std::string("write_data")))));
    write_en->connect(boost::static_pointer_cast<CsimPortTBool>(fifo_regs_->getSignalByName(RefString(new std::string("write_en")))));
    cmd->connect(boost::static_pointer_cast<CsimPortTBool>(usb_phy_->getSignalByName(RefString(new std::string("cmd")))));
    data->connect(boost::static_pointer_cast<CsimPortTChar>(usb_phy_->getSignalByName(RefString(new std::string("data")))));
    ready->connect(boost::static_pointer_cast<CsimPortTBool>(usb_phy_->getSignalByName(RefString(new std::string("ready")))));
    valid->connect(boost::static_pointer_cast<CsimPortTBool>(usb_phy_->getSignalByName(RefString(new std::string("valid")))));
    cmd->connect(boost::static_pointer_cast<CsimPortTBool>(usb_phy_->getSignalByName(RefString(new std::string("cmd")))));
    data->connect(boost::static_pointer_cast<CsimPortTChar>(usb_phy_->getSignalByName(RefString(new std::string("data")))));
    ready->connect(boost::static_pointer_cast<CsimPortTBool>(usb_phy_->getSignalByName(RefString(new std::string("ready")))));
    valid->connect(boost::static_pointer_cast<CsimPortTBool>(usb_phy_->getSignalByName(RefString(new std::string("valid")))));
    data_in->connect(boost::static_pointer_cast<CsimPortTBool>(usb_phy_->getSignalByName(RefString(new std::string("data_in")))));
    data_out->connect(boost::static_pointer_cast<CsimPortTBool>(usb_phy_->getSignalByName(RefString(new std::string("data_out")))));
    drv_enable->connect(boost::static_pointer_cast<CsimPortTBool>(usb_phy_->getSignalByName(RefString(new std::string("drv_enable")))));
    enable_diff->connect(boost::static_pointer_cast<CsimPortTBool>(usb_phy_->getSignalByName(RefString(new std::string("enable_diff")))));
    enable_se->connect(boost::static_pointer_cast<CsimPortTBool>(usb_phy_->getSignalByName(RefString(new std::string("enable_se")))));
    force_se0->connect(boost::static_pointer_cast<CsimPortTBool>(usb_phy_->getSignalByName(RefString(new std::string("force_se0")))));
    rpu1_en->connect(boost::static_pointer_cast<CsimPortTBool>(usb_phy_->getSignalByName(RefString(new std::string("rpu1_en")))));
    rpu2_en->connect(boost::static_pointer_cast<CsimPortTBool>(usb_phy_->getSignalByName(RefString(new std::string("rpu2_en")))));
    se_dn->connect(boost::static_pointer_cast<CsimPortTBool>(usb_phy_->getSignalByName(RefString(new std::string("se_dn")))));
    se_dp->connect(boost::static_pointer_cast<CsimPortTBool>(usb_phy_->getSignalByName(RefString(new std::string("se_dp")))));
    strobe->connect(boost::static_pointer_cast<CsimPortTBool>(usb_phy_->getSignalByName(RefString(new std::string("strobe")))));
    suspend->connect(boost::static_pointer_cast<CsimPortTBool>(usb_phy_->getSignalByName(RefString(new std::string("suspend")))));
}
}
