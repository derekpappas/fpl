class mengine : public csl_unit{
  void csl_build(){

//add interface 
    add_interface(me_ifc);

//add unit instances
    add_instance(mrom, mrom);
    add_instance(mrf,  mrf );
    add_instance(malu, malu);
    add_instance(mmem, mmem);
    add_instance(mram, mram);

    csl_signal alu_opcode = ir_3.alu_fmt.select_field(op2);

//create pipeline
    csl_pipeline me_pipeline(4);
    csl_pipestage fetch(0);
    csl_pipestage decode(1);
    csl_pipestage rf_read(2);
    csl_pipestage execute(3);
    me_pipeline.add_pipestage_list(fetch, decode, rf_read, execute);

    me_pipeline.add_signal( 6, pc, 0, 2);
//pipeline_name.add_signal(br, signal_name, start_stage, end_stage);
    me_pipeline.add_signal(32, ir, 1, 3);
    me_pipeline.add_signal( 1, v,  1, 3);
    me_pipeline.add_signal_list(1, csl_list(alu, mem), 2, 3);
    
//create program counter register
    pc_0.set_type(pc);
    //connect branch control
    pc_0.connect_br_en(br_2);
    pc_0.connect_br_addr(br_addr_2);

//create decoder    
    csl_enum op_enum(csl_list("br_2", "alu_2", "mem_2"));
    ir_1.opcode.set_enum(op_enum);
    csl_signal op_dec; // width is created by the gen_decoder option
    ir_1.opcode.gen_decoder(op_dec);


  }
}

//micro_engine interface
class me_ifc : public csl_interface {
  void csl_build{
    add_port_list(input, 1, csl_list(clock, reset_));
    add_port(output, 32, ir_2);
    add_port(output,  6, pc_2);
    add_port(output,  1, v_2 );
  }
}

//ROM memory - Instruction Memory
class mrom : public csl_memory {
  void csl_build{
    set_type(rom);
    set_word_width(32);
    set_addr_width(6);
    set_data_sgn(ir_1);
    set_addr_sgn(pc_0);
  }
}

//Register File
class mrf : public csl_register_file {
  void csl_build{
    set_width(32);
    set_depth(32);
    connect_rd_addr(i2.alu_fmt.select_field(src_a));
    connect_rd_addr(i2.alu_fmt.select_field(src_b));
    connect_wr_addr(i2.alu_fmt.select_field(dest ));
    connect_rd_data(rd_data_a_3);
    connect_rd_data(rd_data_b_3); 
    connect_wr_data(wr_data_3);
  }
}

//ALU
class malu : public csl_unit {
  void csl_build{
    add_port(input, 1, alu_3);
    add_port(input, 3, alu_opcode);
    add_port_list(input, 32, csl_list(rd_data_a_3, rd_data_b_3));
    alu_port(output, 32, wr_data_3);
  }
}

//Memory unit
class mmem : public csl_unit {
  void csl_build{
    add_port(input, 1, mem_3);
    add_port(input, 3, mem_opcode);
    add_port(input, 32, rd_data_a_3);
    alu_port(output, 32, wr_data_3);
  }
}

//ROM memory - Data Memory
class mram : public csl_memory {
  void csl_build{
    set_type(ram);
    set_word_width(32);
    set_addr_width(6);
    //connection needed!
  }
}
