ifeq ($(TARGET_ARCH), linux64)
SYSTEMC_INCLUDE_DIR=$(SYSTEMC_INCLUDE)/include
BOOST_INCLUDE_DIR=$(BOOST_HOME)
SYSTEMC_LIB_DIR=$(SYSTEMC)/lib-linux64
else ifeq ($(TARGET_ARCH), x86_64)
SYSTEMC_INCLUDE_DIR=$(SYSTEMC_INCLUDE)/include
BOOST_INCLUDE_DIR=$(BOOST_HOME)
SYSTEMC_LIB_DIR=$(SYSTEMC)/lib-linux64
else
SYSTEMC_INCLUDE_DIR=$(SYSTEMC_INCLUDE)/include
BOOST_INCLUDE_DIR=$(BOOST_HOME)
SYSTEMC_LIB_DIR=$(SYSTEMC)
endif


SUPPORT_DIRECTORY=../../support
INCDIR = -I. -I.. -I$(SYSTEMC_INCLUDE_DIR) -I$(WORK)/trunk/src/cdom/ \
         -I$(BOOST_INCLUDE_DIR) -I$(SUPPORT_DIRECTORY)
LIBDIR = -L$(SYSTEMC_LIB_DIR) 
LIBS   =  -lsystemc -lm $(EXTRA_LIBS) 

.SUFFIXES: .cc .cpp .o

all: libme.a $(EXE)

libme.a: $(OBJS) 
	$(AR) $(ARFLAGS) $@ $^

.cc.o: 
	$(CC) $(CFLAGS) $(INCDIR) -c $< 

#main : $(EXE)  $(OBJS) $(SYSTEMC_LIB_DIR)/libsystemc.a 

main: $(OBJS) $(SYSTEMC_LIB_DIR)/libsystemc.a 
	 $(CC) $(CFLAGS) $(INCDIR) $(LIBDIR) -o $@ $(OBJS) $(LIBS) 2>&1 | c++filt

print :
	  echo objs = $(OBJS)

clean:
	rm -f $(OBJS) main core 

ultraclean: clean 
	rm -f Makefile.deps 

Makefile.deps: 
#	$(CC) $(CFLAGS) $(INCDIR) -M $(SRCS) >> Makefile.deps 


#include Makefile.deps

print:
	echo SYSTEMC_LIB_DIR = ${SYSTEMC_LIB_DIR}
	echo BOOST_INCLUDE_DIR = ${BOOST_INCLUDE_DIR}
	echo SYSTEMC_INCLUDE_DIR = ${SYSTEMC_INCLUDE_DIR}
	echo TARGET_ARCH = $(TARGET_ARCH)
	echo BOOST_INCLUDE_DIR = $(BOOST_INCLUDE_DIR)

