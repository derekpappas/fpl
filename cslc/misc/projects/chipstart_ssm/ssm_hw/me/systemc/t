unit me instance name = ME_TB.me0_
unit me instance name = ME_TB.me0_.instruction_memory
unit me instance name = ME_TB.me0_.rf0_
unit me instance name = ME_TB.me0_.eu0_
NO read op  buffer[0] = 0 im read operation  = 0 data = 0
rf::****************************************
rf::v = 0
rf::instructionReg = 0
rf::reset_ = 0
rf::rd_addr_a = 0
rf::rden_a    = 0
rf::rd_addr_b = 0
rf::rden_b    = 0
rf::reset = 0
rf::eu_rf_wr_addr = 0
rf::eu_rf_wr_data = 0
rf::eu_rf_wren    = 0
rf::swapbit_wr_data_a = 0
rf::swapbit_wr_addr_a = 0
rf::swapbit_wr_data_b = 0
rf::swapbit_wr_addr_b = 0
rf::swapbit_wren.writ = 0
rf::eu_rf_wren 	  = 0
rf::swap_wren 		  = 0
rf::swapbit_wren 	  = 0
rf::testbit_wren 	  = 0
rf::setbit_wren 	  = 0
rf::ldimm_ab_16_wren = 0
rf::rf_mux_in_wren_a = 0
rf::rf_mux_in_wren_b = 0
rf::enable = 0
rf::operandA = 0
rf::operandB = 0
rf::im_rf_ir.read()  = 0
rf::im_rf_instructionDecoder->getInstructionReg()  = 0
rf:: isInstFormatOpLas = 1
rf:: isInstFormatOpBit = 0
rf:: isInstFormatOpLdIm= 0
rf:: isInstFormatOpBr  = 0
rf:: getLdImmOperand16Field= 0
rf:: signExtend16(im_rf_instructionDecoder->getLdImmOperand16Field ()) = 0
rf:: rf_dest_data  = 0
rf::im_rf_ir = 0
rf::eu_rf_ir = 0
rf::op_imm_a = 0
rf::op_imm_b = 0
rf:: getOperandAImm8Field  = 0
rf:: getOperandBImm8Field  = 0
rf::signExtend8 (op_imm_a) = 0
rf::signExtend8 (op_imm_b) = 0
rf::signExtend16(op_imm_b) = 0
rf::rd_data_rf_a = 0
rf::rd_data_rf_b = 0
rf::rd_data_imm_a = 0
rf::rd_data_imm_b = 0
rf::rd_data_imm_mux_sel_a = 0
rf::rd_data_imm_mux_sel_b = 0
rf::rd_data_imm_mux_a = 0
rf::rd_data_imm_mux_b = 0
rf::rd_data_bypass_mux_a = 0
rf::rd_data_bypass_mux_b = 0
rf::rf_eu_wr_addr = 0
rf::enable = 0
rf::eu_rf_wr_addr = 00
rf::rd_addr_a     = 00
rf::eu_rf_wr_addr_equal_rd_addr_a = 1
rf::eu_rf_wren.read() = 0
rf::eu_rf_wren_int = 0
rf::rfRdAddrEqEuRfWrAddr_a = 0
rf::bypass_a = 0
rf::eu_rf_wr_addr = 00
rf::rd_addr_b     = 00
rf::eu_rf_wr_addr_equal_rd_addr_b = 1
rf::eu_rf_wren.read() = 0
rf::eu_rf_wren_int = 0
rf::rfRdAddrEqEuRfWrAddr_b = 0
rf::bypass_b = 0
rf::eu_data_a = 0
rf::rd_data_a = 000000000
rf::rd_data_b = 000000000
rf::rf_eu_v = 0
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 000000000
rf::eu_rf_wren    = 0
rf::rf_stall = 0
rf::   rf[0] = 0
rf::   rf[1] = 0
rf::   rf[2] = 0
rf::   rf[3] = 0
rf::   rf[4] = 0
rf::   rf[5] = 0
rf::   rf[6] = 0
rf::   rf[7] = 0
rf::   rf[8] = 0
rf::   rf[9] = 0
rf::   rf[a] = 0
rf::   rf[b] = 0
rf::   rf[c] = 0
rf::   rf[d] = 0
rf::   rf[e] = 0
rf::   rf[f] = 0
rf::   rf[10] = 0
rf::   rf[11] = 0
rf::   rf[12] = 0
rf::   rf[13] = 0
rf::   rf[14] = 0
rf::   rf[15] = 0
rf::   rf[16] = 0
rf::   rf[17] = 0
rf::   rf[18] = 0
rf::   rf[19] = 0
rf::   rf[1a] = 0
rf::   rf[1b] = 0
rf::   rf[1c] = 0
rf::   rf[1d] = 0
rf::   rf[1e] = 0
rf::   rf[1f] = 0
executionUnit::****************************************
executionUnit:: rf_eu_v=0
executionUnit::enable =0
executionUnit:: instReg=0 isInstFmtLas=1 instFmt=0
executionUnit:: rf_eu_ir = 000000000
executionUnit:: las op = ELasAdd	 las op = 0
executionUnit:: src_a = 000000000
executionUnit:: src_b = 000000000
executionUnit:: eu_rf_wr_data_las = 0
executionUnit:: eu_rf_wr_data_bit = 0
executionUnit:: id->dest = 0
executionUnit:: eu_rf_wr_data = 000000000
executionUnit:: eu_rf_wr_addr = 00
executionUnit:: eu_rf_wren             = 0
reset_ = 0
enable = 0
eu_branch = 0
 pc_im_v   = 0
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 0 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 1
 pc_im_v   = 0
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 000000000
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
not pcx = 0
   read op  buffer[0] = 0 im read operation  = 0 data = 0
not pcx = 0
reset_ = 0
enable = 0
eu_branch = 0
 pc_im_v   = 0
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 0 im_RnW = 1 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 1
 pc_im_v   = 0
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 000000000
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
loadInstructionMemory::loadBinaryFileName = hw_test.asm
0xbf000002
0x80000000
0x80010001
0x80020002
0x80030003
0x80040004
0x80050005
0x80060006
0x80070007
0x80080008
0x80090009
0x800a000a
0x800b000b
0x800c000c
0x800d000d
0x800e000e
0x800f000f
0x80100010
0x80110011
0x80120012
0x80130013
0x80140014
0x80150015
0x80160016
0x80170017
0x80180018
0x80190019
0x801a001a
0x801b001b
0x801c001c
0x801d001d
0x801e001e
0x801f001f
0x1
0x2
0x3
0x4
0x5
0x6
0x7
0x8
0x9
0xa
0xb
0xc
0xd
0xe
0xf
0x10
0x11
0x12
0x13
0x14
0x15
0x16
0x17
0x18
0x19
0x1a
0x1b
0x1c
0x1d
0x1e
0x1f
0x100
0x200
0x300
0x400
0x500
0x600
0x700
0x800
0x900
0xa00
0xb00
0xc00
0xd00
0xe00
0xf00
0x1000
0x1100
0x1200
0x1300
0x1400
0x1500
0x1600
0x1700
0x1800
0x1900
0x1a00
0x1b00
0x1c00
0x1d00
0x1e00
0x1f00
0x1100007c
0x1100007c
0x1100007c
0x1100007c
0x1100007c
0x1100007c
0x1100007c
0x1100007c
0x8001000d
0xc100006a
0xe000006e
0xbf000001
0xe000006a
0xbf000000
0xe000006c
0x80010001
0x80000000
0xc100006a
0x80010002
0xc200006a
0x80010003
0xc300006a
0x80010004
0xc0000078
0xe000006a
0x80010005
0xc500007b
0xe000006a
0x80010006
0xc400007e
0xe000006a
0x80010007
0x300001ff
0xc100006a
0x80010008
0x3100ffff
0xc100006a
0x80010009
0x3400ffff
0x10000001
0xc100006a
0x340000ff
0xc100006a
0x8001000a
0x35000000
0xc100006a
0x350000ff
0x10000001
0xc100006a
0x8001000b
0x36000000
0xc100006a
0x3600ffff
0xc100006a
0x3600ff00
0x10000001
0xc100006a
0x360000ff
0x10000001
0xc100006a
0x8001000c
0x370000ff
0xc100006a
0x3700ff00
0xc100006a
0x37000000
0x10000001
0xc100006a
0x3700ffff
0x10000001
0xc100006a
0x8001000e
0x8000ffee
0x10000012
0xc100006a
0x80010000
0xe000006c
loadInstructionMemory::opened file for readinghw_test.asm
IM[0] = bf000002
IM[1] = 80000000
IM[2] = 80010001
IM[3] = 80020002
IM[4] = 80030003
IM[5] = 80040004
IM[6] = 80050005
IM[7] = 80060006
IM[8] = 80070007
IM[9] = 80080008
IM[a] = 80090009
IM[b] = 800a000a
IM[c] = 800b000b
IM[d] = 800c000c
IM[e] = 800d000d
IM[f] = 800e000e
IM[10] = 800f000f
IM[11] = 80100010
IM[12] = 80110011
IM[13] = 80120012
IM[14] = 80130013
IM[15] = 80140014
IM[16] = 80150015
IM[17] = 80160016
IM[18] = 80170017
IM[19] = 80180018
IM[1a] = 80190019
IM[1b] = 801a001a
IM[1c] = 801b001b
IM[1d] = 801c001c
IM[1e] = 801d001d
IM[1f] = 801e001e
IM[20] = 801f001f
IM[21] = 1
IM[22] = 2
IM[23] = 3
IM[24] = 4
IM[25] = 5
IM[26] = 6
IM[27] = 7
IM[28] = 8
IM[29] = 9
IM[2a] = a
IM[2b] = b
IM[2c] = c
IM[2d] = d
IM[2e] = e
IM[2f] = f
IM[30] = 10
IM[31] = 11
IM[32] = 12
IM[33] = 13
IM[34] = 14
IM[35] = 15
IM[36] = 16
IM[37] = 17
IM[38] = 18
IM[39] = 19
IM[3a] = 1a
IM[3b] = 1b
IM[3c] = 1c
IM[3d] = 1d
IM[3e] = 1e
IM[3f] = 1f
IM[40] = 100
IM[41] = 200
IM[42] = 300
IM[43] = 400
IM[44] = 500
IM[45] = 600
IM[46] = 700
IM[47] = 800
IM[48] = 900
IM[49] = a00
IM[4a] = b00
IM[4b] = c00
IM[4c] = d00
IM[4d] = e00
IM[4e] = f00
IM[4f] = 1000
IM[50] = 1100
IM[51] = 1200
IM[52] = 1300
IM[53] = 1400
IM[54] = 1500
IM[55] = 1600
IM[56] = 1700
IM[57] = 1800
IM[58] = 1900
IM[59] = 1a00
IM[5a] = 1b00
IM[5b] = 1c00
IM[5c] = 1d00
IM[5d] = 1e00
IM[5e] = 1f00
IM[5f] = 1100007c
IM[60] = 1100007c
IM[61] = 1100007c
IM[62] = 1100007c
IM[63] = 1100007c
IM[64] = 1100007c
IM[65] = 1100007c
IM[66] = 1100007c
IM[67] = 8001000d
IM[68] = c100006a
IM[69] = e000006e
IM[6a] = bf000001
IM[6b] = e000006a
IM[6c] = bf000000
IM[6d] = e000006c
IM[6e] = 80010001
IM[6f] = 80000000
IM[70] = c100006a
IM[71] = 80010002
IM[72] = c200006a
IM[73] = 80010003
IM[74] = c300006a
IM[75] = 80010004
IM[76] = c0000078
IM[77] = e000006a
IM[78] = 80010005
IM[79] = c500007b
IM[7a] = e000006a
IM[7b] = 80010006
IM[7c] = c400007e
IM[7d] = e000006a
IM[7e] = 80010007
IM[7f] = 300001ff
IM[80] = c100006a
IM[81] = 80010008
IM[82] = 3100ffff
IM[83] = c100006a
IM[84] = 80010009
IM[85] = 3400ffff
IM[86] = 10000001
IM[87] = c100006a
IM[88] = 340000ff
IM[89] = c100006a
IM[8a] = 8001000a
IM[8b] = 35000000
IM[8c] = c100006a
IM[8d] = 350000ff
IM[8e] = 10000001
IM[8f] = c100006a
IM[90] = 8001000b
IM[91] = 36000000
IM[92] = c100006a
IM[93] = 3600ffff
IM[94] = c100006a
IM[95] = 3600ff00
IM[96] = 10000001
IM[97] = c100006a
IM[98] = 360000ff
IM[99] = 10000001
IM[9a] = c100006a
IM[9b] = 8001000c
IM[9c] = 370000ff
IM[9d] = c100006a
IM[9e] = 3700ff00
IM[9f] = c100006a
IM[a0] = 37000000
IM[a1] = 10000001
IM[a2] = c100006a
IM[a3] = 3700ffff
IM[a4] = 10000001
IM[a5] = c100006a
IM[a6] = 8001000e
IM[a7] = 8000ffee
IM[a8] = 10000012
IM[a9] = c100006a
IM[aa] = 80010000
IM[ab] = e000006c
IM[ac] = 0
IM[ad] = 0
IM[ae] = 0
IM[af] = 0
IM[b0] = 0
IM[b1] = 0
IM[b2] = 0
IM[b3] = 0
IM[b4] = 0
IM[b5] = 0
IM[b6] = 0
IM[b7] = 0
IM[b8] = 0
IM[b9] = 0
IM[ba] = 0
IM[bb] = 0
IM[bc] = 0
IM[bd] = 0
IM[be] = 0
IM[bf] = 0
IM[c0] = 0
IM[c1] = 0
IM[c2] = 0
IM[c3] = 0
IM[c4] = 0
IM[c5] = 0
IM[c6] = 0
IM[c7] = 0
IM[c8] = 0
IM[c9] = 0
IM[ca] = 0
IM[cb] = 0
IM[cc] = 0
IM[cd] = 0
IM[ce] = 0
IM[cf] = 0
IM[d0] = 0
IM[d1] = 0
IM[d2] = 0
IM[d3] = 0
IM[d4] = 0
IM[d5] = 0
IM[d6] = 0
IM[d7] = 0
IM[d8] = 0
IM[d9] = 0
IM[da] = 0
IM[db] = 0
IM[dc] = 0
IM[dd] = 0
IM[de] = 0
IM[df] = 0
IM[e0] = 0
IM[e1] = 0
IM[e2] = 0
IM[e3] = 0
IM[e4] = 0
IM[e5] = 0
IM[e6] = 0
IM[e7] = 0
IM[e8] = 0
IM[e9] = 0
IM[ea] = 0
IM[eb] = 0
IM[ec] = 0
IM[ed] = 0
IM[ee] = 0
IM[ef] = 0
IM[f0] = 0
IM[f1] = 0
IM[f2] = 0
IM[f3] = 0
IM[f4] = 0
IM[f5] = 0
IM[f6] = 0
IM[f7] = 0
IM[f8] = 0
IM[f9] = 0
IM[fa] = 0
IM[fb] = 0
IM[fc] = 0
IM[fd] = 0
IM[fe] = 0
IM[ff] = 0
WARNING: Default time step is used for VCD tracing.
   read op  buffer[0] = bf000002 im read operation  = 0 data = 0
reset_ = 1
enable = 0
eu_branch = 0
 pc_im_v   = 0
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 0 im_RnW = 1 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 1
 pc_im_v   = 0
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 000000000
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
rf::****************************************
rf::v = 0
rf::instructionReg = bf000002
rf::reset_ = 1
rf::rd_addr_a = 00
rf::rden_a    = 0
rf::rd_addr_b = 02
rf::rden_b    = 0
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 000000000
rf::eu_rf_wren    = 0
rf::swapbit_wr_data_a = 0
rf::swapbit_wr_addr_a = 0
rf::swapbit_wr_data_b = 0
rf::swapbit_wr_addr_b = 0
rf::swapbit_wren.writ = 0
rf::eu_rf_wren 	  = 0
rf::swap_wren 		  = 0
rf::swapbit_wren 	  = 0
rf::testbit_wren 	  = 0
rf::setbit_wren 	  = 0
rf::ldimm_ab_16_wren = 0
rf::rf_mux_in_wren_a = 0
rf::rf_mux_in_wren_b = 0
rf::enable = 0
rf::operandA = 0
rf::operandB = 0
rf::im_rf_ir.read()  = bf000002
rf::im_rf_instructionDecoder->getInstructionReg()  = bf000002
rf:: isInstFormatOpLas = 0
rf:: isInstFormatOpBit = 0
rf:: isInstFormatOpLdIm= 1
rf:: isInstFormatOpBr  = 0
rf:: getLdImmOperand16Field= 2
rf:: signExtend16(im_rf_instructionDecoder->getLdImmOperand16Field ()) = 2
rf:: rf_dest_data  = 0
rf::im_rf_ir = bf000002
rf::eu_rf_ir = 000000000
rf::op_imm_a = 0
rf::op_imm_b = 2
rf:: getOperandAImm8Field  = 0
rf:: getOperandBImm8Field  = 2
rf::signExtend8 (op_imm_a) = 0
rf::signExtend8 (op_imm_b) = 2
rf::signExtend16(op_imm_b) = 2
rf::rd_data_rf_a = 0
rf::rd_data_rf_b = 0
rf::rd_data_imm_a = 0
rf::rd_data_imm_b = 2
rf::rd_data_imm_mux_sel_a = 1
rf::rd_data_imm_mux_sel_b = 1
rf::rd_data_imm_mux_a = 0
rf::rd_data_imm_mux_b = 2
rf::rd_data_bypass_mux_a = 0
rf::rd_data_bypass_mux_b = 2
rf::rf_eu_wr_addr = 0
rf::enable = 0
rf::eu_rf_wr_addr = 00
rf::rd_addr_a     = 00
rf::eu_rf_wr_addr_equal_rd_addr_a = 1
rf::eu_rf_wren.read() = 0
rf::eu_rf_wren_int = 0
rf::rfRdAddrEqEuRfWrAddr_a = 0
rf::bypass_a = 0
rf::eu_rf_wr_addr = 00
rf::rd_addr_b     = 02
rf::eu_rf_wr_addr_equal_rd_addr_b = 0
rf::eu_rf_wren.read() = 0
rf::eu_rf_wren_int = 0
rf::rfRdAddrEqEuRfWrAddr_b = 0
rf::bypass_b = 0
rf::eu_data_a = 0
rf::rd_data_a = 000000000
rf::rd_data_b = 000000000
rf::rf_eu_v = 0
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 000000000
rf::eu_rf_wren    = 0
rf::rf_stall = 0
rf::   rf[0] = 0
rf::   rf[1] = 0
rf::   rf[2] = 0
rf::   rf[3] = 0
rf::   rf[4] = 0
rf::   rf[5] = 0
rf::   rf[6] = 0
rf::   rf[7] = 0
rf::   rf[8] = 0
rf::   rf[9] = 0
rf::   rf[a] = 0
rf::   rf[b] = 0
rf::   rf[c] = 0
rf::   rf[d] = 0
rf::   rf[e] = 0
rf::   rf[f] = 0
rf::   rf[10] = 0
rf::   rf[11] = 0
rf::   rf[12] = 0
rf::   rf[13] = 0
rf::   rf[14] = 0
rf::   rf[15] = 0
rf::   rf[16] = 0
rf::   rf[17] = 0
rf::   rf[18] = 0
rf::   rf[19] = 0
rf::   rf[1a] = 0
rf::   rf[1b] = 0
rf::   rf[1c] = 0
rf::   rf[1d] = 0
rf::   rf[1e] = 0
rf::   rf[1f] = 0
   read op  buffer[0] = bf000002 im read operation  = 0 data = bf000002
reset_ = 1
enable = 0
eu_branch = 0
 pc_im_v   = 0
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = bf000002
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 0 im_RnW = 1 pc_im_address = 0  im_1 = bf000002
im_data = bf000002
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 1
 pc_im_v   = 0
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 2
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 000000000
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
rf::****************************************
rf::v = 0
rf::instructionReg = bf000002
rf::reset_ = 1
rf::rd_addr_a = 00
rf::rden_a    = 0
rf::rd_addr_b = 02
rf::rden_b    = 0
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 000000000
rf::eu_rf_wren    = 0
rf::swapbit_wr_data_a = 0
rf::swapbit_wr_addr_a = 0
rf::swapbit_wr_data_b = 0
rf::swapbit_wr_addr_b = 0
rf::swapbit_wren.writ = 0
rf::eu_rf_wren 	  = 0
rf::swap_wren 		  = 0
rf::swapbit_wren 	  = 0
rf::testbit_wren 	  = 0
rf::setbit_wren 	  = 0
rf::ldimm_ab_16_wren = 0
rf::rf_mux_in_wren_a = 0
rf::rf_mux_in_wren_b = 0
rf::enable = 0
rf::operandA = 0
rf::operandB = 0
rf::im_rf_ir.read()  = bf000002
rf::im_rf_instructionDecoder->getInstructionReg()  = bf000002
rf:: isInstFormatOpLas = 0
rf:: isInstFormatOpBit = 0
rf:: isInstFormatOpLdIm= 1
rf:: isInstFormatOpBr  = 0
rf:: getLdImmOperand16Field= 2
rf:: signExtend16(im_rf_instructionDecoder->getLdImmOperand16Field ()) = 2
rf:: rf_dest_data  = 0
rf::im_rf_ir = bf000002
rf::eu_rf_ir = 000000000
rf::op_imm_a = 0
rf::op_imm_b = 2
rf:: getOperandAImm8Field  = 0
rf:: getOperandBImm8Field  = 2
rf::signExtend8 (op_imm_a) = 0
rf::signExtend8 (op_imm_b) = 2
rf::signExtend16(op_imm_b) = 2
rf::rd_data_rf_a = 0
rf::rd_data_rf_b = 0
rf::rd_data_imm_a = 0
rf::rd_data_imm_b = 2
rf::rd_data_imm_mux_sel_a = 1
rf::rd_data_imm_mux_sel_b = 1
rf::rd_data_imm_mux_a = 0
rf::rd_data_imm_mux_b = 2
rf::rd_data_bypass_mux_a = 0
rf::rd_data_bypass_mux_b = 2
rf::rf_eu_wr_addr = 0
rf::enable = 0
rf::eu_rf_wr_addr = 00
rf::rd_addr_a     = 00
rf::eu_rf_wr_addr_equal_rd_addr_a = 1
rf::eu_rf_wren.read() = 0
rf::eu_rf_wren_int = 0
rf::rfRdAddrEqEuRfWrAddr_a = 0
rf::bypass_a = 0
rf::eu_rf_wr_addr = 00
rf::rd_addr_b     = 02
rf::eu_rf_wr_addr_equal_rd_addr_b = 0
rf::eu_rf_wren.read() = 0
rf::eu_rf_wren_int = 0
rf::rfRdAddrEqEuRfWrAddr_b = 0
rf::bypass_b = 0
rf::eu_data_a = 0
rf::rd_data_a = 000000000
rf::rd_data_b = 000000002
rf::rf_eu_v = 0
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 000000000
rf::eu_rf_wren    = 0
rf::rf_stall = 0
rf::   rf[0] = 0
rf::   rf[1] = 0
rf::   rf[2] = 0
rf::   rf[3] = 0
rf::   rf[4] = 0
rf::   rf[5] = 0
rf::   rf[6] = 0
rf::   rf[7] = 0
rf::   rf[8] = 0
rf::   rf[9] = 0
rf::   rf[a] = 0
rf::   rf[b] = 0
rf::   rf[c] = 0
rf::   rf[d] = 0
rf::   rf[e] = 0
rf::   rf[f] = 0
rf::   rf[10] = 0
rf::   rf[11] = 0
rf::   rf[12] = 0
rf::   rf[13] = 0
rf::   rf[14] = 0
rf::   rf[15] = 0
rf::   rf[16] = 0
rf::   rf[17] = 0
rf::   rf[18] = 0
rf::   rf[19] = 0
rf::   rf[1a] = 0
rf::   rf[1b] = 0
rf::   rf[1c] = 0
rf::   rf[1d] = 0
rf::   rf[1e] = 0
rf::   rf[1f] = 0
executionUnit::****************************************
executionUnit:: rf_eu_v=0
executionUnit::enable =0
executionUnit:: instReg=bf000002 isInstFmtLas=0 instFmt=2
executionUnit:: rf_eu_ir = 0bf000002
executionUnit:: las op = NA las op = f
executionUnit:: src_a = 000000000
executionUnit:: src_b = 000000002
executionUnit:: eu_rf_wr_data_las = 0
executionUnit:: eu_rf_wr_data_bit = 0
executionUnit:: id->dest = 0
executionUnit:: eu_rf_wr_data = 000000000
executionUnit:: eu_rf_wr_addr = 00
executionUnit:: eu_rf_wren             = 0
   read op  buffer[0] = bf000002 im read operation  = 0 data = bf000002
reset_ = 1
enable = 0
eu_branch = 0
 pc_im_v   = 0
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = bf000002
npc_2 = 00002
npc_3 = 00000
npc_4 = 00000
pc_im_v = 0 im_RnW = 1 pc_im_address = 0  im_1 = bf000002
im_data = bf000002
ir_rf_3 = 0bf000002
ir_eu_4 = 000000000
 eu_branch.read() = 1
 pc_im_v   = 0
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 2
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 000000002
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
rf::****************************************
rf::v = 0
rf::instructionReg = bf000002
rf::reset_ = 1
rf::rd_addr_a = 00
rf::rden_a    = 0
rf::rd_addr_b = 02
rf::rden_b    = 0
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 000000000
rf::eu_rf_wren    = 0
rf::swapbit_wr_data_a = 0
rf::swapbit_wr_addr_a = 0
rf::swapbit_wr_data_b = 0
rf::swapbit_wr_addr_b = 0
rf::swapbit_wren.writ = 0
rf::eu_rf_wren 	  = 0
rf::swap_wren 		  = 0
rf::swapbit_wren 	  = 0
rf::testbit_wren 	  = 0
rf::setbit_wren 	  = 0
rf::ldimm_ab_16_wren = 0
rf::rf_mux_in_wren_a = 0
rf::rf_mux_in_wren_b = 0
rf::enable = 0
rf::operandA = 0
rf::operandB = 0
rf::im_rf_ir.read()  = bf000002
rf::im_rf_instructionDecoder->getInstructionReg()  = bf000002
rf:: isInstFormatOpLas = 0
rf:: isInstFormatOpBit = 0
rf:: isInstFormatOpLdIm= 1
rf:: isInstFormatOpBr  = 0
rf:: getLdImmOperand16Field= 2
rf:: signExtend16(im_rf_instructionDecoder->getLdImmOperand16Field ()) = 2
rf:: rf_dest_data  = 0
rf::im_rf_ir = bf000002
rf::eu_rf_ir = 0bf000002
rf::op_imm_a = 0
rf::op_imm_b = 2
rf:: getOperandAImm8Field  = 0
rf:: getOperandBImm8Field  = 2
rf::signExtend8 (op_imm_a) = 0
rf::signExtend8 (op_imm_b) = 2
rf::signExtend16(op_imm_b) = 2
rf::rd_data_rf_a = 0
rf::rd_data_rf_b = 0
rf::rd_data_imm_a = 0
rf::rd_data_imm_b = 2
rf::rd_data_imm_mux_sel_a = 1
rf::rd_data_imm_mux_sel_b = 1
rf::rd_data_imm_mux_a = 0
rf::rd_data_imm_mux_b = 2
rf::rd_data_bypass_mux_a = 0
rf::rd_data_bypass_mux_b = 2
rf::rf_eu_wr_addr = 0
rf::enable = 0
rf::eu_rf_wr_addr = 00
rf::rd_addr_a     = 00
rf::eu_rf_wr_addr_equal_rd_addr_a = 1
rf::eu_rf_wren.read() = 0
rf::eu_rf_wren_int = 0
rf::rfRdAddrEqEuRfWrAddr_a = 0
rf::bypass_a = 0
rf::eu_rf_wr_addr = 00
rf::rd_addr_b     = 02
rf::eu_rf_wr_addr_equal_rd_addr_b = 0
rf::eu_rf_wren.read() = 0
rf::eu_rf_wren_int = 0
rf::rfRdAddrEqEuRfWrAddr_b = 0
rf::bypass_b = 0
rf::eu_data_a = 0
rf::rd_data_a = 000000000
rf::rd_data_b = 000000002
rf::rf_eu_v = 0
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 000000000
rf::eu_rf_wren    = 0
rf::rf_stall = 0
rf::   rf[0] = 0
rf::   rf[1] = 0
rf::   rf[2] = 0
rf::   rf[3] = 0
rf::   rf[4] = 0
rf::   rf[5] = 0
rf::   rf[6] = 0
rf::   rf[7] = 0
rf::   rf[8] = 0
rf::   rf[9] = 0
rf::   rf[a] = 0
rf::   rf[b] = 0
rf::   rf[c] = 0
rf::   rf[d] = 0
rf::   rf[e] = 0
rf::   rf[f] = 0
rf::   rf[10] = 0
rf::   rf[11] = 0
rf::   rf[12] = 0
rf::   rf[13] = 0
rf::   rf[14] = 0
rf::   rf[15] = 0
rf::   rf[16] = 0
rf::   rf[17] = 0
rf::   rf[18] = 0
rf::   rf[19] = 0
rf::   rf[1a] = 0
rf::   rf[1b] = 0
rf::   rf[1c] = 0
rf::   rf[1d] = 0
rf::   rf[1e] = 0
rf::   rf[1f] = 0
   read op  buffer[0] = bf000002 im read operation  = 0 data = bf000002
reset_ = 1
enable = 0
eu_branch = 0
 pc_im_v   = 0
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = bf000002
npc_2 = 00002
npc_3 = 00002
npc_4 = 00000
pc_im_v = 0 im_RnW = 1 pc_im_address = 0  im_1 = bf000002
im_data = bf000002
ir_rf_3 = 0bf000002
ir_eu_4 = 0bf000002
 eu_branch.read() = 1
 pc_im_v   = 0
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 2
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 000000002
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
   read op  buffer[0] = bf000002 im read operation  = 0 data = bf000002
reset_ = 1
enable = 0
eu_branch = 0
 pc_im_v   = 0
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = bf000002
npc_2 = 00002
npc_3 = 00002
npc_4 = 00000
pc_im_v = 0 im_RnW = 1 pc_im_address = 0  im_1 = bf000002
im_data = bf000002
ir_rf_3 = 0bf000002
ir_eu_4 = 0bf000002
 eu_branch.read() = 1
 pc_im_v   = 0
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 2
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 000000002
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
   read op  buffer[0] = bf000002 im read operation  = 0 data = bf000002
reset_ = 1
enable = 0
eu_branch = 0
 pc_im_v   = 0
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = bf000002
npc_2 = 00002
npc_3 = 00002
npc_4 = 00000
pc_im_v = 0 im_RnW = 1 pc_im_address = 0  im_1 = bf000002
im_data = bf000002
ir_rf_3 = 0bf000002
ir_eu_4 = 0bf000002
 eu_branch.read() = 1
 pc_im_v   = 0
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 2
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 000000002
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
   read op  buffer[0] = bf000002 im read operation  = 0 data = bf000002
reset_ = 1
enable = 0
eu_branch = 0
 pc_im_v   = 0
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = bf000002
npc_2 = 00002
npc_3 = 00002
npc_4 = 00000
pc_im_v = 0 im_RnW = 1 pc_im_address = 0  im_1 = bf000002
im_data = bf000002
ir_rf_3 = 0bf000002
ir_eu_4 = 0bf000002
 eu_branch.read() = 1
 pc_im_v   = 0
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 2
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 000000002
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
   read op  buffer[0] = bf000002 im read operation  = 0 data = bf000002
reset_ = 1
enable = 0
eu_branch = 0
 pc_im_v   = 0
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = bf000002
npc_2 = 00002
npc_3 = 00002
npc_4 = 00000
pc_im_v = 0 im_RnW = 1 pc_im_address = 0  im_1 = bf000002
im_data = bf000002
ir_rf_3 = 0bf000002
ir_eu_4 = 0bf000002
 eu_branch.read() = 1
 pc_im_v   = 0
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 2
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 000000002
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
   read op  buffer[0] = bf000002 im read operation  = 0 data = bf000002
reset_ = 1
enable = 0
eu_branch = 0
 pc_im_v   = 0
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = bf000002
npc_2 = 00002
npc_3 = 00002
npc_4 = 00000
pc_im_v = 0 im_RnW = 1 pc_im_address = 0  im_1 = bf000002
im_data = bf000002
ir_rf_3 = 0bf000002
ir_eu_4 = 0bf000002
 eu_branch.read() = 1
 pc_im_v   = 0
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 2
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 000000002
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
   read op  buffer[0] = bf000002 im read operation  = 0 data = bf000002
reset_ = 1
enable = 0
eu_branch = 0
 pc_im_v   = 0
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = bf000002
npc_2 = 00002
npc_3 = 00002
npc_4 = 00000
pc_im_v = 0 im_RnW = 1 pc_im_address = 0  im_1 = bf000002
im_data = bf000002
ir_rf_3 = 0bf000002
ir_eu_4 = 0bf000002
 eu_branch.read() = 1
 pc_im_v   = 0
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 2
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 000000002
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
   read op  buffer[0] = bf000002 im read operation  = 0 data = bf000002
reset_ = 1
enable = 0
eu_branch = 0
 pc_im_v   = 0
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = bf000002
npc_2 = 00002
npc_3 = 00002
npc_4 = 00000
pc_im_v = 0 im_RnW = 1 pc_im_address = 0  im_1 = bf000002
im_data = bf000002
ir_rf_3 = 0bf000002
ir_eu_4 = 0bf000002
 eu_branch.read() = 1
 pc_im_v   = 0
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 2
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 000000002
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
   read op  buffer[0] = bf000002 im read operation  = 0 data = bf000002
reset_ = 1
enable = 0
eu_branch = 0
 pc_im_v   = 0
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = bf000002
npc_2 = 00002
npc_3 = 00002
npc_4 = 00000
pc_im_v = 0 im_RnW = 1 pc_im_address = 0  im_1 = bf000002
im_data = bf000002
ir_rf_3 = 0bf000002
ir_eu_4 = 0bf000002
 eu_branch.read() = 1
 pc_im_v   = 0
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 2
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 000000002
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
   read op  buffer[0] = bf000002 im read operation  = 0 data = bf000002
reset_ = 1
enable = 0
eu_branch = 0
 pc_im_v   = 0
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = bf000002
npc_2 = 00002
npc_3 = 00002
npc_4 = 00000
pc_im_v = 0 im_RnW = 1 pc_im_address = 0  im_1 = bf000002
im_data = bf000002
ir_rf_3 = 0bf000002
ir_eu_4 = 0bf000002
 eu_branch.read() = 1
 pc_im_v   = 0
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 2
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 000000002
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
   read op  buffer[0] = bf000002 im read operation  = 0 data = bf000002
reset_ = 1
enable = 0
eu_branch = 0
 pc_im_v   = 0
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = bf000002
npc_2 = 00002
npc_3 = 00002
npc_4 = 00000
pc_im_v = 0 im_RnW = 1 pc_im_address = 0  im_1 = bf000002
im_data = bf000002
ir_rf_3 = 0bf000002
ir_eu_4 = 0bf000002
 eu_branch.read() = 1
 pc_im_v   = 0
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 2
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 000000002
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
   read op  buffer[0] = bf000002 im read operation  = 0 data = bf000002
reset_ = 1
enable = 0
eu_branch = 0
 pc_im_v   = 0
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = bf000002
npc_2 = 00002
npc_3 = 00002
npc_4 = 00000
pc_im_v = 0 im_RnW = 1 pc_im_address = 0  im_1 = bf000002
im_data = bf000002
ir_rf_3 = 0bf000002
ir_eu_4 = 0bf000002
 eu_branch.read() = 1
 pc_im_v   = 0
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 2
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 000000002
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
   read op  buffer[0] = bf000002 im read operation  = 0 data = bf000002
reset_ = 1
enable = 0
eu_branch = 0
 pc_im_v   = 0
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = bf000002
npc_2 = 00002
npc_3 = 00002
npc_4 = 00000
pc_im_v = 0 im_RnW = 1 pc_im_address = 0  im_1 = bf000002
im_data = bf000002
ir_rf_3 = 0bf000002
ir_eu_4 = 0bf000002
 eu_branch.read() = 1
 pc_im_v   = 0
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 2
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 000000002
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
   read op  buffer[0] = bf000002 im read operation  = 0 data = bf000002
reset_ = 1
enable = 0
eu_branch = 0
 pc_im_v   = 0
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = bf000002
npc_2 = 00002
npc_3 = 00002
npc_4 = 00000
pc_im_v = 0 im_RnW = 1 pc_im_address = 0  im_1 = bf000002
im_data = bf000002
ir_rf_3 = 0bf000002
ir_eu_4 = 0bf000002
 eu_branch.read() = 1
 pc_im_v   = 0
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 2
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 000000002
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
   read op  buffer[0] = bf000002 im read operation  = 0 data = bf000002
reset_ = 1
enable = 0
eu_branch = 0
 pc_im_v   = 0
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = bf000002
npc_2 = 00002
npc_3 = 00002
npc_4 = 00000
pc_im_v = 0 im_RnW = 1 pc_im_address = 0  im_1 = bf000002
im_data = bf000002
ir_rf_3 = 0bf000002
ir_eu_4 = 0bf000002
 eu_branch.read() = 1
 pc_im_v   = 0
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 2
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 000000002
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
   read op  buffer[0] = bf000002 im read operation  = 0 data = bf000002
reset_ = 1
enable = 0
eu_branch = 0
 pc_im_v   = 0
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = bf000002
npc_2 = 00002
npc_3 = 00002
npc_4 = 00000
pc_im_v = 0 im_RnW = 1 pc_im_address = 0  im_1 = bf000002
im_data = bf000002
ir_rf_3 = 0bf000002
ir_eu_4 = 0bf000002
 eu_branch.read() = 1
 pc_im_v   = 0
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 2
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 000000002
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
   read op  buffer[0] = bf000002 im read operation  = 0 data = bf000002
reset_ = 1
enable = 0
eu_branch = 0
 pc_im_v   = 0
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = bf000002
npc_2 = 00002
npc_3 = 00002
npc_4 = 00000
pc_im_v = 0 im_RnW = 1 pc_im_address = 0  im_1 = bf000002
im_data = bf000002
ir_rf_3 = 0bf000002
ir_eu_4 = 0bf000002
 eu_branch.read() = 1
 pc_im_v   = 0
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 2
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 000000002
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
@200 ns Starting test
   read op  buffer[0] = bf000002 im read operation  = 0 data = bf000002
reset_ = 1
enable = 0
eu_branch = 0
 pc_im_v   = 0
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = bf000002
npc_2 = 00002
npc_3 = 00002
npc_4 = 00000
pc_im_v = 0 im_RnW = 1 pc_im_address = 0  im_1 = bf000002
im_data = bf000002
ir_rf_3 = 0bf000002
ir_eu_4 = 0bf000002
 eu_branch.read() = 1
 pc_im_v   = 0
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 2
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 000000002
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
@210 ns Asserting reset_
   read op  buffer[0] = bf000002 im read operation  = 0 data = bf000002
not pcx = 0
reset_ = 0
enable = 0
eu_branch = 0
 pc_im_v   = 0
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = bf000002
npc_2 = 00002
npc_3 = 00002
npc_4 = 00000
pc_im_v = 0 im_RnW = 1 pc_im_address = 0  im_1 = bf000002
im_data = bf000002
ir_rf_3 = 0bf000002
ir_eu_4 = 0bf000002
 eu_branch.read() = 1
 pc_im_v   = 0
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 2
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 000000002
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
   read op  buffer[0] = bf000002 im read operation  = 0 data = bf000002
not pcx = 0
reset_ = 0
enable = 0
eu_branch = 0
 pc_im_v   = 0
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = bf000002
npc_2 = 00002
npc_3 = 00002
npc_4 = 00000
pc_im_v = 0 im_RnW = 1 pc_im_address = 0  im_1 = bf000002
im_data = bf000002
ir_rf_3 = 0bf000002
ir_eu_4 = 0bf000002
 eu_branch.read() = 1
 pc_im_v   = 0
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 2
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 000000002
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
   read op  buffer[0] = bf000002 im read operation  = 0 data = bf000002
not pcx = 0
reset_ = 0
enable = 0
eu_branch = 0
 pc_im_v   = 0
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = bf000002
npc_2 = 00002
npc_3 = 00002
npc_4 = 00000
pc_im_v = 0 im_RnW = 1 pc_im_address = 0  im_1 = bf000002
im_data = bf000002
ir_rf_3 = 0bf000002
ir_eu_4 = 0bf000002
 eu_branch.read() = 1
 pc_im_v   = 0
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 2
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 000000002
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
   read op  buffer[0] = bf000002 im read operation  = 0 data = bf000002
not pcx = 0
reset_ = 0
enable = 0
eu_branch = 0
 pc_im_v   = 0
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = bf000002
npc_2 = 00002
npc_3 = 00002
npc_4 = 00000
pc_im_v = 0 im_RnW = 1 pc_im_address = 0  im_1 = bf000002
im_data = bf000002
ir_rf_3 = 0bf000002
ir_eu_4 = 0bf000002
 eu_branch.read() = 1
 pc_im_v   = 0
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 2
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 000000002
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
@250 ns De-Asserting reset_
rf::****************************************
rf::v = 0
rf::instructionReg = bf000002
rf::reset_ = 1
rf::rd_addr_a = 00
rf::rden_a    = 1
rf::rd_addr_b = 02
rf::rden_b    = 1
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 000000000
rf::eu_rf_wren    = 0
rf::swapbit_wr_data_a = 0
rf::swapbit_wr_addr_a = 0
rf::swapbit_wr_data_b = 0
rf::swapbit_wr_addr_b = 0
rf::swapbit_wren.writ = 0
rf::eu_rf_wren 	  = 0
rf::swap_wren 		  = 0
rf::swapbit_wren 	  = 0
rf::testbit_wren 	  = 0
rf::setbit_wren 	  = 0
rf::ldimm_ab_16_wren = 0
rf::rf_mux_in_wren_a = 0
rf::rf_mux_in_wren_b = 0
rf::enable = 1
rf::operandA = 0
rf::operandB = 0
rf::im_rf_ir.read()  = bf000002
rf::im_rf_instructionDecoder->getInstructionReg()  = bf000002
rf:: isInstFormatOpLas = 0
rf:: isInstFormatOpBit = 0
rf:: isInstFormatOpLdIm= 1
rf:: isInstFormatOpBr  = 0
rf:: getLdImmOperand16Field= 2
rf:: signExtend16(im_rf_instructionDecoder->getLdImmOperand16Field ()) = 2
rf:: rf_dest_data  = 0
rf::im_rf_ir = bf000002
rf::eu_rf_ir = 0bf000002
rf::op_imm_a = 0
rf::op_imm_b = 2
rf:: getOperandAImm8Field  = 0
rf:: getOperandBImm8Field  = 2
rf::signExtend8 (op_imm_a) = 0
rf::signExtend8 (op_imm_b) = 2
rf::signExtend16(op_imm_b) = 2
rf::rd_data_rf_a = 0
rf::rd_data_rf_b = 0
rf::rd_data_imm_a = 0
rf::rd_data_imm_b = 2
rf::rd_data_imm_mux_sel_a = 1
rf::rd_data_imm_mux_sel_b = 1
rf::rd_data_imm_mux_a = 0
rf::rd_data_imm_mux_b = 2
rf::rd_data_bypass_mux_a = 0
rf::rd_data_bypass_mux_b = 2
rf::rf_eu_wr_addr = 0
rf::enable = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_a     = 00
rf::eu_rf_wr_addr_equal_rd_addr_a = 1
rf::eu_rf_wren.read() = 0
rf::eu_rf_wren_int = 0
rf::rfRdAddrEqEuRfWrAddr_a = 0
rf::bypass_a = 0
rf::eu_rf_wr_addr = 00
rf::rd_addr_b     = 02
rf::eu_rf_wr_addr_equal_rd_addr_b = 0
rf::eu_rf_wren.read() = 0
rf::eu_rf_wren_int = 0
rf::rfRdAddrEqEuRfWrAddr_b = 0
rf::bypass_b = 0
rf::eu_data_a = 0
rf::rd_data_a = 000000000
rf::rd_data_b = 000000002
rf::rf_eu_v = 0
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 000000000
rf::eu_rf_wren    = 0
rf::rf_stall = 0
rf::   rf[0] = 0
rf::   rf[1] = 0
rf::   rf[2] = 0
rf::   rf[3] = 0
rf::   rf[4] = 0
rf::   rf[5] = 0
rf::   rf[6] = 0
rf::   rf[7] = 0
rf::   rf[8] = 0
rf::   rf[9] = 0
rf::   rf[a] = 0
rf::   rf[b] = 0
rf::   rf[c] = 0
rf::   rf[d] = 0
rf::   rf[e] = 0
rf::   rf[f] = 0
rf::   rf[10] = 0
rf::   rf[11] = 0
rf::   rf[12] = 0
rf::   rf[13] = 0
rf::   rf[14] = 0
rf::   rf[15] = 0
rf::   rf[16] = 0
rf::   rf[17] = 0
rf::   rf[18] = 0
rf::   rf[19] = 0
rf::   rf[1a] = 0
rf::   rf[1b] = 0
rf::   rf[1c] = 0
rf::   rf[1d] = 0
rf::   rf[1e] = 0
rf::   rf[1f] = 0
executionUnit::****************************************
executionUnit:: rf_eu_v=0
executionUnit::enable =1
executionUnit:: instReg=bf000002 isInstFmtLas=0 instFmt=2
executionUnit:: rf_eu_ir = 0bf000002
executionUnit:: las op = NA las op = f
executionUnit:: src_a = 000000000
executionUnit:: src_b = 000000002
executionUnit:: eu_rf_wr_data_las = 0
executionUnit:: eu_rf_wr_data_bit = 0
executionUnit:: id->dest = 0
executionUnit:: eu_rf_wr_data = 000000000
executionUnit:: eu_rf_wr_addr = 00
executionUnit:: eu_rf_wren             = 0
   read op  buffer[0] = bf000002 im read operation  = 0 data = bf000002
 eu_branch = 0 pcx = 1 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = bf000002
npc_2 = 00002
npc_3 = 00002
npc_4 = 00000
pc_im_v = 1 im_RnW = 1 pc_im_address = 0  im_1 = bf000002
im_data = bf000002
ir_rf_3 = 0bf000002
ir_eu_4 = 0bf000002
 eu_branch.read() = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 2
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 000000002
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
rf::****************************************
rf::v = 1
rf::instructionReg = bf000002
rf::reset_ = 1
rf::rd_addr_a = 00
rf::rden_a    = 1
rf::rd_addr_b = 02
rf::rden_b    = 1
rf:0 read operation rd_addr_a = 00
rf:all read operation rd_addr_b = 02
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 000000000
rf::eu_rf_wren    = 0
rf::swapbit_wr_data_a = 0
rf::swapbit_wr_addr_a = 0
rf::swapbit_wr_data_b = 0
rf::swapbit_wr_addr_b = 0
rf::swapbit_wren.writ = 0
rf::eu_rf_wren 	  = 0
rf::swap_wren 		  = 0
rf::swapbit_wren 	  = 0
rf::testbit_wren 	  = 0
rf::setbit_wren 	  = 0
rf::ldimm_ab_16_wren = 0
rf::rf_mux_in_wren_a = 0
rf::rf_mux_in_wren_b = 0
rf::enable = 1
rf::operandA = 0
rf::operandB = 0
rf::Info im_rf_instructionDecoder->isInstFormatOpLdIm ()
rf::Message: FIX add string table from asm later #  2
rf::im_rf_ir.read()  = bf000002
rf::im_rf_instructionDecoder->getInstructionReg()  = bf000002
rf:: isInstFormatOpLas = 0
rf:: isInstFormatOpBit = 0
rf:: isInstFormatOpLdIm= 1
rf:: isInstFormatOpBr  = 0
rf:: getLdImmOperand16Field= 2
rf:: signExtend16(im_rf_instructionDecoder->getLdImmOperand16Field ()) = 2
rf:: rf_dest_data  = 0
rf::im_rf_ir = bf000002
rf::eu_rf_ir = 0bf000002
rf::op_imm_a = 0
rf::op_imm_b = 2
rf:: getOperandAImm8Field  = 0
rf:: getOperandBImm8Field  = 2
rf::signExtend8 (op_imm_a) = 0
rf::signExtend8 (op_imm_b) = 2
rf::signExtend16(op_imm_b) = 2
rf::rd_data_rf_a = 0
rf::rd_data_rf_b = 0
rf::rd_data_imm_a = 0
rf::rd_data_imm_b = 2
rf::rd_data_imm_mux_sel_a = 1
rf::rd_data_imm_mux_sel_b = 1
rf::rd_data_imm_mux_a = 0
rf::rd_data_imm_mux_b = 2
rf::rd_data_bypass_mux_a = 0
rf::rd_data_bypass_mux_b = 2
rf::rf_eu_wr_addr = 0
rf::enable = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_a     = 00
rf::eu_rf_wr_addr_equal_rd_addr_a = 1
rf::eu_rf_wren.read() = 0
rf::eu_rf_wren_int = 0
rf::rfRdAddrEqEuRfWrAddr_a = 0
rf::bypass_a = 0
rf::eu_rf_wr_addr = 00
rf::rd_addr_b     = 02
rf::eu_rf_wr_addr_equal_rd_addr_b = 0
rf::eu_rf_wren.read() = 0
rf::eu_rf_wren_int = 0
rf::rfRdAddrEqEuRfWrAddr_b = 0
rf::bypass_b = 0
rf::eu_data_a = 0
rf::rd_data_a = 000000000
rf::rd_data_b = 000000002
rf::rf_eu_v = 0
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 000000000
rf::eu_rf_wren    = 0
rf::rf_stall = 0
rf::   rf[0] = 0
rf::   rf[1] = 0
rf::   rf[2] = 0
rf::   rf[3] = 0
rf::   rf[4] = 0
rf::   rf[5] = 0
rf::   rf[6] = 0
rf::   rf[7] = 0
rf::   rf[8] = 0
rf::   rf[9] = 0
rf::   rf[a] = 0
rf::   rf[b] = 0
rf::   rf[c] = 0
rf::   rf[d] = 0
rf::   rf[e] = 0
rf::   rf[f] = 0
rf::   rf[10] = 0
rf::   rf[11] = 0
rf::   rf[12] = 0
rf::   rf[13] = 0
rf::   rf[14] = 0
rf::   rf[15] = 0
rf::   rf[16] = 0
rf::   rf[17] = 0
rf::   rf[18] = 0
rf::   rf[19] = 0
rf::   rf[1a] = 0
rf::   rf[1b] = 0
rf::   rf[1c] = 0
rf::   rf[1d] = 0
rf::   rf[1e] = 0
rf::   rf[1f] = 0
   read op  buffer[1] = 80000000 im read operation  = 1 data = bf000002
 eu_branch = 0 pcx = 2 pc_inc = 2
reset_ = 1
enable = 1
eu_branch = 0
 pc_im_v   = 1
 im_rf_v   = 1
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 1
im.data = bf000002
npc_2 = 00002
npc_3 = 00002
npc_4 = 00000
pc_im_v = 1 im_RnW = 1 pc_im_address = 1  im_1 = bf000002
im_data = bf000002
ir_rf_3 = 0bf000002
ir_eu_4 = 0bf000002
 eu_branch.read() = 1
 pc_im_v   = 1
 im_rf_v   = 1
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 2
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 000000002
 im_rf_v   = 1
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
rf::****************************************
rf::v = 1
rf::instructionReg = 80000000
rf::reset_ = 1
rf::rd_addr_a = 00
rf::rden_a    = 1
rf::rd_addr_b = 00
rf::rden_b    = 1
rf:0 read operation rd_addr_a = 00
rf:0 read operation rd_addr_b = 00
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 000000000
rf::eu_rf_wren    = 0
rf::swapbit_wr_data_a = 0
rf::swapbit_wr_addr_a = 0
rf::swapbit_wr_data_b = 0
rf::swapbit_wr_addr_b = 0
rf::swapbit_wren.writ = 0
rf::eu_rf_wren 	  = 0
rf::swap_wren 		  = 0
rf::swapbit_wren 	  = 0
rf::testbit_wren 	  = 0
rf::setbit_wren 	  = 0
rf::ldimm_ab_16_wren = 0
rf::rf_mux_in_wren_a = 0
rf::rf_mux_in_wren_b = 0
rf::enable = 1
rf::operandA = 0
rf::operandB = 0
rf::Info im_rf_instructionDecoder->isInstFormatOpLdIm ()
rf::Info: ELoadLow before rf_dest_data =  0 ldimm field = 0 ir =80000000
rf::Info: after rf_dest_data =  0 ldimm field = 0 ir =80000000
rf::ldimm high write operation ldimm_ab_16_wr_addr = 0 ldimm_ab_16_wr_data = 0
rf::im_rf_ir.read()  = 80000000
rf::im_rf_instructionDecoder->getInstructionReg()  = 80000000
rf:: isInstFormatOpLas = 0
rf:: isInstFormatOpBit = 0
rf:: isInstFormatOpLdIm= 1
rf:: isInstFormatOpBr  = 0
rf:: getLdImmOperand16Field= 0
rf:: signExtend16(im_rf_instructionDecoder->getLdImmOperand16Field ()) = 0
rf:: rf_dest_data  = 0
rf::im_rf_ir = 80000000
rf::eu_rf_ir = 0bf000002
rf::op_imm_a = 0
rf::op_imm_b = 0
rf:: getOperandAImm8Field  = 0
rf:: getOperandBImm8Field  = 0
rf::signExtend8 (op_imm_a) = 0
rf::signExtend8 (op_imm_b) = 0
rf::signExtend16(op_imm_b) = 0
rf::rd_data_rf_a = 0
rf::rd_data_rf_b = 0
rf::rd_data_imm_a = 0
rf::rd_data_imm_b = 0
rf::rd_data_imm_mux_sel_a = 0
rf::rd_data_imm_mux_sel_b = 0
rf::rd_data_imm_mux_a = 0
rf::rd_data_imm_mux_b = 0
rf::rd_data_bypass_mux_a = 0
rf::rd_data_bypass_mux_b = 0
rf::rf_eu_wr_addr = 0
rf::enable = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_a     = 00
rf::eu_rf_wr_addr_equal_rd_addr_a = 1
rf::eu_rf_wren.read() = 0
rf::eu_rf_wren_int = 0
rf::rfRdAddrEqEuRfWrAddr_a = 0
rf::bypass_a = 0
rf::eu_rf_wr_addr = 00
rf::rd_addr_b     = 00
rf::eu_rf_wr_addr_equal_rd_addr_b = 1
rf::eu_rf_wren.read() = 0
rf::eu_rf_wren_int = 0
rf::rfRdAddrEqEuRfWrAddr_b = 0
rf::bypass_b = 0
rf::eu_data_a = 0
rf::rd_data_a = 000000000
rf::rd_data_b = 000000002
rf::rf_eu_v = 1
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 000000000
rf::eu_rf_wren    = 0
rf::rf_stall = 0
rf::   rf[0] = 0
rf::   rf[1] = 0
rf::   rf[2] = 0
rf::   rf[3] = 0
rf::   rf[4] = 0
rf::   rf[5] = 0
rf::   rf[6] = 0
rf::   rf[7] = 0
rf::   rf[8] = 0
rf::   rf[9] = 0
rf::   rf[a] = 0
rf::   rf[b] = 0
rf::   rf[c] = 0
rf::   rf[d] = 0
rf::   rf[e] = 0
rf::   rf[f] = 0
rf::   rf[10] = 0
rf::   rf[11] = 0
rf::   rf[12] = 0
rf::   rf[13] = 0
rf::   rf[14] = 0
rf::   rf[15] = 0
rf::   rf[16] = 0
rf::   rf[17] = 0
rf::   rf[18] = 0
rf::   rf[19] = 0
rf::   rf[1a] = 0
rf::   rf[1b] = 0
rf::   rf[1c] = 0
rf::   rf[1d] = 0
rf::   rf[1e] = 0
rf::   rf[1f] = 0
executionUnit::****************************************
executionUnit:: rf_eu_v=1
executionUnit::enable =1
executionUnit:: instReg=bf000002 isInstFmtLas=0 instFmt=2
executionUnit:: rf_eu_ir = 0bf000002
executionUnit:: las op = NA las op = f
executionUnit:: src_a = 000000000
executionUnit:: src_b = 000000002
executionUnit:: eu_rf_wr_data_las = 0
executionUnit:: eu_rf_wr_data_bit = 0
executionUnit:: id->dest = 0
executionUnit:: eu_rf_wr_data = 000000000
executionUnit:: eu_rf_wr_addr = 00
executionUnit:: eu_rf_wren             = 0
   read op  buffer[2] = 80010001 im read operation  = 2 data = 80000000
 eu_branch = 0 pcx = 3 pc_inc = 3
reset_ = 1
enable = 1
eu_branch = 0
 pc_im_v   = 1
 im_rf_v   = 1
 rf_eu_v   = 1
 eu_rf_wren= 0
pc_im_address = 2
im.data = 80000000
npc_2 = 00002
npc_3 = 00002
npc_4 = 00000
pc_im_v = 1 im_RnW = 1 pc_im_address = 2  im_1 = 80000000
im_data = 80000000
ir_rf_3 = 0bf000002
ir_eu_4 = 0bf000002
 eu_branch.read() = 1
 pc_im_v   = 1
 im_rf_v   = 1
 rf_eu_v   = 1
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 000000002
 im_rf_v   = 1
 rf_eu_v = 1
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
rf::****************************************
rf::v = 1
rf::instructionReg = 80010001
rf::reset_ = 1
rf::rd_addr_a = 00
rf::rden_a    = 1
rf::rd_addr_b = 01
rf::rden_b    = 1
rf:0 read operation rd_addr_a = 00
rf:all read operation rd_addr_b = 01
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 000000000
rf::eu_rf_wren    = 0
rf::swapbit_wr_data_a = 0
rf::swapbit_wr_addr_a = 0
rf::swapbit_wr_data_b = 0
rf::swapbit_wr_addr_b = 0
rf::swapbit_wren.writ = 0
rf::eu_rf_wren 	  = 0
rf::swap_wren 		  = 0
rf::swapbit_wren 	  = 0
rf::testbit_wren 	  = 0
rf::setbit_wren 	  = 0
rf::ldimm_ab_16_wren = 1
rf::rf_mux_in_wren_a = 0
rf::rf_mux_in_wren_b = 0
rf::enable = 1
rf::operandA = 0
rf::operandB = 0
rf::Info im_rf_instructionDecoder->isInstFormatOpLdIm ()
rf::Info: ELoadLow before rf_dest_data =  0 ldimm field = 1 ir =80010001
rf::Info: after rf_dest_data =  1 ldimm field = 1 ir =80010001
rf::ldimm high write operation ldimm_ab_16_wr_addr = 1 ldimm_ab_16_wr_data = 1
rf::im_rf_ir.read()  = 80010001
rf::im_rf_instructionDecoder->getInstructionReg()  = 80010001
rf:: isInstFormatOpLas = 0
rf:: isInstFormatOpBit = 0
rf:: isInstFormatOpLdIm= 1
rf:: isInstFormatOpBr  = 0
rf:: getLdImmOperand16Field= 1
rf:: signExtend16(im_rf_instructionDecoder->getLdImmOperand16Field ()) = 1
rf:: rf_dest_data  = 1
rf::im_rf_ir = 80010001
rf::eu_rf_ir = 0bf000002
rf::op_imm_a = 0
rf::op_imm_b = 1
rf:: getOperandAImm8Field  = 0
rf:: getOperandBImm8Field  = 1
rf::signExtend8 (op_imm_a) = 0
rf::signExtend8 (op_imm_b) = 1
rf::signExtend16(op_imm_b) = 1
rf::rd_data_rf_a = 0
rf::rd_data_rf_b = 0
rf::rd_data_imm_a = 0
rf::rd_data_imm_b = 1
rf::rd_data_imm_mux_sel_a = 0
rf::rd_data_imm_mux_sel_b = 0
rf::rd_data_imm_mux_a = 0
rf::rd_data_imm_mux_b = 0
rf::rd_data_bypass_mux_a = 0
rf::rd_data_bypass_mux_b = 0
rf::rf_eu_wr_addr = 1
rf::enable = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_a     = 00
rf::eu_rf_wr_addr_equal_rd_addr_a = 1
rf::eu_rf_wren.read() = 0
rf::eu_rf_wren_int = 0
rf::rfRdAddrEqEuRfWrAddr_a = 0
rf::bypass_a = 0
rf::eu_rf_wr_addr = 00
rf::rd_addr_b     = 01
rf::eu_rf_wr_addr_equal_rd_addr_b = 0
rf::eu_rf_wren.read() = 0
rf::eu_rf_wren_int = 0
rf::rfRdAddrEqEuRfWrAddr_b = 0
rf::bypass_b = 0
rf::eu_data_a = 0
rf::rd_data_a = 000000000
rf::rd_data_b = 000000000
rf::rf_eu_v = 0
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 000000000
rf::eu_rf_wren    = 0
rf::rf_stall = 0
rf::   rf[0] = 0
rf::   rf[1] = 0
rf::   rf[2] = 0
rf::   rf[3] = 0
rf::   rf[4] = 0
rf::   rf[5] = 0
rf::   rf[6] = 0
rf::   rf[7] = 0
rf::   rf[8] = 0
rf::   rf[9] = 0
rf::   rf[a] = 0
rf::   rf[b] = 0
rf::   rf[c] = 0
rf::   rf[d] = 0
rf::   rf[e] = 0
rf::   rf[f] = 0
rf::   rf[10] = 0
rf::   rf[11] = 0
rf::   rf[12] = 0
rf::   rf[13] = 0
rf::   rf[14] = 0
rf::   rf[15] = 0
rf::   rf[16] = 0
rf::   rf[17] = 0
rf::   rf[18] = 0
rf::   rf[19] = 0
rf::   rf[1a] = 0
rf::   rf[1b] = 0
rf::   rf[1c] = 0
rf::   rf[1d] = 0
rf::   rf[1e] = 0
rf::   rf[1f] = 0
executionUnit::****************************************
executionUnit:: rf_eu_v=0
executionUnit::enable =1
executionUnit:: instReg=80000000 isInstFmtLas=0 instFmt=2
executionUnit:: rf_eu_ir = 080000000
executionUnit:: las op = NA las op = 0
executionUnit:: src_a = 000000000
executionUnit:: src_b = 000000000
executionUnit:: eu_rf_wr_data_las = 0
executionUnit:: eu_rf_wr_data_bit = 0
executionUnit:: id->dest = 0
executionUnit:: eu_rf_wr_data = 000000000
executionUnit:: eu_rf_wr_addr = 00
executionUnit:: eu_rf_wren             = 0
   read op  buffer[3] = 80020002 im read operation  = 3 data = 80010001
rf::write operation wr_addr_a = 1
 eu_branch = 0 pcx = 4 pc_inc = 4
reset_ = 1
enable = 1
eu_branch = 0
 pc_im_v   = 1
 im_rf_v   = 1
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 3
im.data = 80010001
npc_2 = 00000
npc_3 = 00002
npc_4 = 00000
pc_im_v = 1 im_RnW = 1 pc_im_address = 3  im_1 = 80010001
im_data = 80010001
ir_rf_3 = 080000000
ir_eu_4 = 0bf000002
 eu_branch.read() = 1
 pc_im_v   = 1
 im_rf_v   = 1
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 1
 rf_dest_addr = 1
 rf_rd_data_a = 000000000
 rf_rd_data_b = 000000000
 im_rf_v   = 1
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
rf::****************************************
rf::v = 1
rf::instructionReg = 80020002
rf::reset_ = 1
rf::rd_addr_a = 00
rf::rden_a    = 1
rf::rd_addr_b = 02
rf::rden_b    = 1
rf:0 read operation rd_addr_a = 00
rf:all read operation rd_addr_b = 02
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 000000000
rf::eu_rf_wren    = 0
rf::swapbit_wr_data_a = 0
rf::swapbit_wr_addr_a = 0
rf::swapbit_wr_data_b = 0
rf::swapbit_wr_addr_b = 0
rf::swapbit_wren.writ = 0
rf::eu_rf_wren 	  = 0
rf::swap_wren 		  = 0
rf::swapbit_wren 	  = 0
rf::testbit_wren 	  = 0
rf::setbit_wren 	  = 0
rf::ldimm_ab_16_wren = 1
rf::rf_mux_in_wren_a = 0
rf::rf_mux_in_wren_b = 0
rf::enable = 1
rf::operandA = 0
rf::operandB = 0
rf::Info im_rf_instructionDecoder->isInstFormatOpLdIm ()
rf::Info: ELoadLow before rf_dest_data =  1 ldimm field = 2 ir =80020002
rf::Info: after rf_dest_data =  2 ldimm field = 2 ir =80020002
rf::ldimm high write operation ldimm_ab_16_wr_addr = 2 ldimm_ab_16_wr_data = 2
rf::im_rf_ir.read()  = 80020002
rf::im_rf_instructionDecoder->getInstructionReg()  = 80020002
rf:: isInstFormatOpLas = 0
rf:: isInstFormatOpBit = 0
rf:: isInstFormatOpLdIm= 1
rf:: isInstFormatOpBr  = 0
rf:: getLdImmOperand16Field= 2
rf:: signExtend16(im_rf_instructionDecoder->getLdImmOperand16Field ()) = 2
rf:: rf_dest_data  = 2
rf::im_rf_ir = 80020002
rf::eu_rf_ir = 080000000
rf::op_imm_a = 0
rf::op_imm_b = 2
rf:: getOperandAImm8Field  = 0
rf:: getOperandBImm8Field  = 2
rf::signExtend8 (op_imm_a) = 0
rf::signExtend8 (op_imm_b) = 2
rf::signExtend16(op_imm_b) = 2
rf::rd_data_rf_a = 0
rf::rd_data_rf_b = 0
rf::rd_data_imm_a = 0
rf::rd_data_imm_b = 2
rf::rd_data_imm_mux_sel_a = 0
rf::rd_data_imm_mux_sel_b = 0
rf::rd_data_imm_mux_a = 0
rf::rd_data_imm_mux_b = 0
rf::rd_data_bypass_mux_a = 0
rf::rd_data_bypass_mux_b = 0
rf::rf_eu_wr_addr = 2
rf::enable = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_a     = 00
rf::eu_rf_wr_addr_equal_rd_addr_a = 1
rf::eu_rf_wren.read() = 0
rf::eu_rf_wren_int = 0
rf::rfRdAddrEqEuRfWrAddr_a = 0
rf::bypass_a = 0
rf::eu_rf_wr_addr = 00
rf::rd_addr_b     = 02
rf::eu_rf_wr_addr_equal_rd_addr_b = 0
rf::eu_rf_wren.read() = 0
rf::eu_rf_wren_int = 0
rf::rfRdAddrEqEuRfWrAddr_b = 0
rf::bypass_b = 0
rf::eu_data_a = 0
rf::rd_data_a = 000000000
rf::rd_data_b = 000000000
rf::rf_eu_v = 0
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 000000000
rf::eu_rf_wren    = 0
rf::rf_stall = 0
rf::   rf[0] = 0
rf::   rf[1] = 1
rf::   rf[2] = 0
rf::   rf[3] = 0
rf::   rf[4] = 0
rf::   rf[5] = 0
rf::   rf[6] = 0
rf::   rf[7] = 0
rf::   rf[8] = 0
rf::   rf[9] = 0
rf::   rf[a] = 0
rf::   rf[b] = 0
rf::   rf[c] = 0
rf::   rf[d] = 0
rf::   rf[e] = 0
rf::   rf[f] = 0
rf::   rf[10] = 0
rf::   rf[11] = 0
rf::   rf[12] = 0
rf::   rf[13] = 0
rf::   rf[14] = 0
rf::   rf[15] = 0
rf::   rf[16] = 0
rf::   rf[17] = 0
rf::   rf[18] = 0
rf::   rf[19] = 0
rf::   rf[1a] = 0
rf::   rf[1b] = 0
rf::   rf[1c] = 0
rf::   rf[1d] = 0
rf::   rf[1e] = 0
rf::   rf[1f] = 0
executionUnit::****************************************
executionUnit:: rf_eu_v=0
executionUnit::enable =1
executionUnit:: instReg=80010001 isInstFmtLas=0 instFmt=2
executionUnit:: rf_eu_ir = 080010001
executionUnit:: las op = NA las op = 0
executionUnit:: src_a = 000000000
executionUnit:: src_b = 000000000
executionUnit:: eu_rf_wr_data_las = 0
executionUnit:: eu_rf_wr_data_bit = 0
executionUnit:: id->dest = 1
executionUnit:: eu_rf_wr_data = 000000000
executionUnit:: eu_rf_wr_addr = 00
executionUnit:: eu_rf_wren             = 0
   read op  buffer[4] = 80030003 im read operation  = 4 data = 80020002
rf::write operation wr_addr_a = 2
 eu_branch = 0 pcx = 5 pc_inc = 5
reset_ = 1
enable = 1
eu_branch = 0
 pc_im_v   = 1
 im_rf_v   = 1
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 4
im.data = 80020002
npc_2 = 00001
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 1 pc_im_address = 4  im_1 = 80020002
im_data = 80020002
ir_rf_3 = 080010001
ir_eu_4 = 080000000
 eu_branch.read() = 1
 pc_im_v   = 1
 im_rf_v   = 1
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 2
 rf_dest_addr = 2
 rf_rd_data_a = 000000000
 rf_rd_data_b = 000000000
 im_rf_v   = 1
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
rf::****************************************
rf::v = 1
rf::instructionReg = 80030003
rf::reset_ = 1
rf::rd_addr_a = 00
rf::rden_a    = 1
rf::rd_addr_b = 03
rf::rden_b    = 1
rf:0 read operation rd_addr_a = 00
rf:all read operation rd_addr_b = 03
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 000000000
rf::eu_rf_wren    = 0
rf::swapbit_wr_data_a = 0
rf::swapbit_wr_addr_a = 0
rf::swapbit_wr_data_b = 0
rf::swapbit_wr_addr_b = 0
rf::swapbit_wren.writ = 0
rf::eu_rf_wren 	  = 0
rf::swap_wren 		  = 0
rf::swapbit_wren 	  = 0
rf::testbit_wren 	  = 0
rf::setbit_wren 	  = 0
rf::ldimm_ab_16_wren = 1
rf::rf_mux_in_wren_a = 0
rf::rf_mux_in_wren_b = 0
rf::enable = 1
rf::operandA = 0
rf::operandB = 0
rf::Info im_rf_instructionDecoder->isInstFormatOpLdIm ()
rf::Info: ELoadLow before rf_dest_data =  2 ldimm field = 3 ir =80030003
rf::Info: after rf_dest_data =  3 ldimm field = 3 ir =80030003
rf::ldimm high write operation ldimm_ab_16_wr_addr = 3 ldimm_ab_16_wr_data = 3
rf::im_rf_ir.read()  = 80030003
rf::im_rf_instructionDecoder->getInstructionReg()  = 80030003
rf:: isInstFormatOpLas = 0
rf:: isInstFormatOpBit = 0
rf:: isInstFormatOpLdIm= 1
rf:: isInstFormatOpBr  = 0
rf:: getLdImmOperand16Field= 3
rf:: signExtend16(im_rf_instructionDecoder->getLdImmOperand16Field ()) = 3
rf:: rf_dest_data  = 3
rf::im_rf_ir = 80030003
rf::eu_rf_ir = 080010001
rf::op_imm_a = 0
rf::op_imm_b = 3
rf:: getOperandAImm8Field  = 0
rf:: getOperandBImm8Field  = 3
rf::signExtend8 (op_imm_a) = 0
rf::signExtend8 (op_imm_b) = 3
rf::signExtend16(op_imm_b) = 3
rf::rd_data_rf_a = 0
rf::rd_data_rf_b = 0
rf::rd_data_imm_a = 0
rf::rd_data_imm_b = 3
rf::rd_data_imm_mux_sel_a = 0
rf::rd_data_imm_mux_sel_b = 0
rf::rd_data_imm_mux_a = 0
rf::rd_data_imm_mux_b = 0
rf::rd_data_bypass_mux_a = 0
rf::rd_data_bypass_mux_b = 0
rf::rf_eu_wr_addr = 3
rf::enable = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_a     = 00
rf::eu_rf_wr_addr_equal_rd_addr_a = 1
rf::eu_rf_wren.read() = 0
rf::eu_rf_wren_int = 0
rf::rfRdAddrEqEuRfWrAddr_a = 0
rf::bypass_a = 0
rf::eu_rf_wr_addr = 00
rf::rd_addr_b     = 03
rf::eu_rf_wr_addr_equal_rd_addr_b = 0
rf::eu_rf_wren.read() = 0
rf::eu_rf_wren_int = 0
rf::rfRdAddrEqEuRfWrAddr_b = 0
rf::bypass_b = 0
rf::eu_data_a = 0
rf::rd_data_a = 000000000
rf::rd_data_b = 000000000
rf::rf_eu_v = 0
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 000000000
rf::eu_rf_wren    = 0
rf::rf_stall = 0
rf::   rf[0] = 0
rf::   rf[1] = 1
rf::   rf[2] = 2
rf::   rf[3] = 0
rf::   rf[4] = 0
rf::   rf[5] = 0
rf::   rf[6] = 0
rf::   rf[7] = 0
rf::   rf[8] = 0
rf::   rf[9] = 0
rf::   rf[a] = 0
rf::   rf[b] = 0
rf::   rf[c] = 0
rf::   rf[d] = 0
rf::   rf[e] = 0
rf::   rf[f] = 0
rf::   rf[10] = 0
rf::   rf[11] = 0
rf::   rf[12] = 0
rf::   rf[13] = 0
rf::   rf[14] = 0
rf::   rf[15] = 0
rf::   rf[16] = 0
rf::   rf[17] = 0
rf::   rf[18] = 0
rf::   rf[19] = 0
rf::   rf[1a] = 0
rf::   rf[1b] = 0
rf::   rf[1c] = 0
rf::   rf[1d] = 0
rf::   rf[1e] = 0
rf::   rf[1f] = 0
executionUnit::****************************************
executionUnit:: rf_eu_v=0
executionUnit::enable =1
executionUnit:: instReg=80020002 isInstFmtLas=0 instFmt=2
executionUnit:: rf_eu_ir = 080020002
executionUnit:: las op = NA las op = 0
executionUnit:: src_a = 000000000
executionUnit:: src_b = 000000000
executionUnit:: eu_rf_wr_data_las = 0
executionUnit:: eu_rf_wr_data_bit = 0
executionUnit:: id->dest = 2
executionUnit:: eu_rf_wr_data = 000000000
executionUnit:: eu_rf_wr_addr = 00
executionUnit:: eu_rf_wren             = 0
   read op  buffer[5] = 80040004 im read operation  = 5 data = 80030003
rf::write operation wr_addr_a = 3
 eu_branch = 0 pcx = 6 pc_inc = 6
reset_ = 1
enable = 1
eu_branch = 0
 pc_im_v   = 1
 im_rf_v   = 1
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 5
im.data = 80030003
npc_2 = 00002
npc_3 = 00001
npc_4 = 00000
pc_im_v = 1 im_RnW = 1 pc_im_address = 5  im_1 = 80030003
im_data = 80030003
ir_rf_3 = 080020002
ir_eu_4 = 080010001
 eu_branch.read() = 1
 pc_im_v   = 1
 im_rf_v   = 1
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 3
 rf_dest_addr = 3
 rf_rd_data_a = 000000000
 rf_rd_data_b = 000000000
 im_rf_v   = 1
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
rf::****************************************
rf::v = 1
rf::instructionReg = 80040004
rf::reset_ = 1
rf::rd_addr_a = 00
rf::rden_a    = 1
rf::rd_addr_b = 04
rf::rden_b    = 1
rf:0 read operation rd_addr_a = 00
rf:all read operation rd_addr_b = 04
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 000000000
rf::eu_rf_wren    = 0
rf::swapbit_wr_data_a = 0
rf::swapbit_wr_addr_a = 0
rf::swapbit_wr_data_b = 0
rf::swapbit_wr_addr_b = 0
rf::swapbit_wren.writ = 0
rf::eu_rf_wren 	  = 0
rf::swap_wren 		  = 0
rf::swapbit_wren 	  = 0
rf::testbit_wren 	  = 0
rf::setbit_wren 	  = 0
rf::ldimm_ab_16_wren = 1
rf::rf_mux_in_wren_a = 0
rf::rf_mux_in_wren_b = 0
rf::enable = 1
rf::operandA = 0
rf::operandB = 0
rf::Info im_rf_instructionDecoder->isInstFormatOpLdIm ()
rf::Info: ELoadLow before rf_dest_data =  3 ldimm field = 4 ir =80040004
rf::Info: after rf_dest_data =  4 ldimm field = 4 ir =80040004
rf::ldimm high write operation ldimm_ab_16_wr_addr = 4 ldimm_ab_16_wr_data = 4
rf::im_rf_ir.read()  = 80040004
rf::im_rf_instructionDecoder->getInstructionReg()  = 80040004
rf:: isInstFormatOpLas = 0
rf:: isInstFormatOpBit = 0
rf:: isInstFormatOpLdIm= 1
rf:: isInstFormatOpBr  = 0
rf:: getLdImmOperand16Field= 4
rf:: signExtend16(im_rf_instructionDecoder->getLdImmOperand16Field ()) = 4
rf:: rf_dest_data  = 4
rf::im_rf_ir = 80040004
rf::eu_rf_ir = 080020002
rf::op_imm_a = 0
rf::op_imm_b = 4
rf:: getOperandAImm8Field  = 0
rf:: getOperandBImm8Field  = 4
rf::signExtend8 (op_imm_a) = 0
rf::signExtend8 (op_imm_b) = 4
rf::signExtend16(op_imm_b) = 4
rf::rd_data_rf_a = 0
rf::rd_data_rf_b = 0
rf::rd_data_imm_a = 0
rf::rd_data_imm_b = 4
rf::rd_data_imm_mux_sel_a = 0
rf::rd_data_imm_mux_sel_b = 0
rf::rd_data_imm_mux_a = 0
rf::rd_data_imm_mux_b = 0
rf::rd_data_bypass_mux_a = 0
rf::rd_data_bypass_mux_b = 0
rf::rf_eu_wr_addr = 4
rf::enable = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_a     = 00
rf::eu_rf_wr_addr_equal_rd_addr_a = 1
rf::eu_rf_wren.read() = 0
rf::eu_rf_wren_int = 0
rf::rfRdAddrEqEuRfWrAddr_a = 0
rf::bypass_a = 0
rf::eu_rf_wr_addr = 00
rf::rd_addr_b     = 04
rf::eu_rf_wr_addr_equal_rd_addr_b = 0
rf::eu_rf_wren.read() = 0
rf::eu_rf_wren_int = 0
rf::rfRdAddrEqEuRfWrAddr_b = 0
rf::bypass_b = 0
rf::eu_data_a = 0
rf::rd_data_a = 000000000
rf::rd_data_b = 000000000
rf::rf_eu_v = 0
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 000000000
rf::eu_rf_wren    = 0
rf::rf_stall = 0
rf::   rf[0] = 0
rf::   rf[1] = 1
rf::   rf[2] = 2
rf::   rf[3] = 3
rf::   rf[4] = 0
rf::   rf[5] = 0
rf::   rf[6] = 0
rf::   rf[7] = 0
rf::   rf[8] = 0
rf::   rf[9] = 0
rf::   rf[a] = 0
rf::   rf[b] = 0
rf::   rf[c] = 0
rf::   rf[d] = 0
rf::   rf[e] = 0
rf::   rf[f] = 0
rf::   rf[10] = 0
rf::   rf[11] = 0
rf::   rf[12] = 0
rf::   rf[13] = 0
rf::   rf[14] = 0
rf::   rf[15] = 0
rf::   rf[16] = 0
rf::   rf[17] = 0
rf::   rf[18] = 0
rf::   rf[19] = 0
rf::   rf[1a] = 0
rf::   rf[1b] = 0
rf::   rf[1c] = 0
rf::   rf[1d] = 0
rf::   rf[1e] = 0
rf::   rf[1f] = 0
executionUnit::****************************************
executionUnit:: rf_eu_v=0
executionUnit::enable =1
executionUnit:: instReg=80030003 isInstFmtLas=0 instFmt=2
executionUnit:: rf_eu_ir = 080030003
executionUnit:: las op = NA las op = 0
executionUnit:: src_a = 000000000
executionUnit:: src_b = 000000000
executionUnit:: eu_rf_wr_data_las = 0
executionUnit:: eu_rf_wr_data_bit = 0
executionUnit:: id->dest = 3
executionUnit:: eu_rf_wr_data = 000000000
executionUnit:: eu_rf_wr_addr = 00
executionUnit:: eu_rf_wren             = 0
   read op  buffer[6] = 80050005 im read operation  = 6 data = 80040004
rf::write operation wr_addr_a = 4
 eu_branch = 0 pcx = 7 pc_inc = 7
reset_ = 1
enable = 1
eu_branch = 0
 pc_im_v   = 1
 im_rf_v   = 1
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 6
im.data = 80040004
npc_2 = 00003
npc_3 = 00002
npc_4 = 00000
pc_im_v = 1 im_RnW = 1 pc_im_address = 6  im_1 = 80040004
im_data = 80040004
ir_rf_3 = 080030003
ir_eu_4 = 080020002
 eu_branch.read() = 1
 pc_im_v   = 1
 im_rf_v   = 1
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 4
 rf_dest_addr = 4
 rf_rd_data_a = 000000000
 rf_rd_data_b = 000000000
 im_rf_v   = 1
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
rf::****************************************
rf::v = 1
rf::instructionReg = 80050005
rf::reset_ = 1
rf::rd_addr_a = 00
rf::rden_a    = 1
rf::rd_addr_b = 05
rf::rden_b    = 1
rf:0 read operation rd_addr_a = 00
rf:all read operation rd_addr_b = 05
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 000000000
rf::eu_rf_wren    = 0
rf::swapbit_wr_data_a = 0
rf::swapbit_wr_addr_a = 0
rf::swapbit_wr_data_b = 0
rf::swapbit_wr_addr_b = 0
rf::swapbit_wren.writ = 0
rf::eu_rf_wren 	  = 0
rf::swap_wren 		  = 0
rf::swapbit_wren 	  = 0
rf::testbit_wren 	  = 0
rf::setbit_wren 	  = 0
rf::ldimm_ab_16_wren = 1
rf::rf_mux_in_wren_a = 0
rf::rf_mux_in_wren_b = 0
rf::enable = 1
rf::operandA = 0
rf::operandB = 0
rf::Info im_rf_instructionDecoder->isInstFormatOpLdIm ()
rf::Info: ELoadLow before rf_dest_data =  4 ldimm field = 5 ir =80050005
rf::Info: after rf_dest_data =  5 ldimm field = 5 ir =80050005
rf::ldimm high write operation ldimm_ab_16_wr_addr = 5 ldimm_ab_16_wr_data = 5
rf::im_rf_ir.read()  = 80050005
rf::im_rf_instructionDecoder->getInstructionReg()  = 80050005
rf:: isInstFormatOpLas = 0
rf:: isInstFormatOpBit = 0
rf:: isInstFormatOpLdIm= 1
rf:: isInstFormatOpBr  = 0
rf:: getLdImmOperand16Field= 5
rf:: signExtend16(im_rf_instructionDecoder->getLdImmOperand16Field ()) = 5
rf:: rf_dest_data  = 5
rf::im_rf_ir = 80050005
rf::eu_rf_ir = 080030003
rf::op_imm_a = 0
rf::op_imm_b = 5
rf:: getOperandAImm8Field  = 0
rf:: getOperandBImm8Field  = 5
rf::signExtend8 (op_imm_a) = 0
rf::signExtend8 (op_imm_b) = 5
rf::signExtend16(op_imm_b) = 5
rf::rd_data_rf_a = 0
rf::rd_data_rf_b = 0
rf::rd_data_imm_a = 0
rf::rd_data_imm_b = 5
rf::rd_data_imm_mux_sel_a = 0
rf::rd_data_imm_mux_sel_b = 0
rf::rd_data_imm_mux_a = 0
rf::rd_data_imm_mux_b = 0
rf::rd_data_bypass_mux_a = 0
rf::rd_data_bypass_mux_b = 0
rf::rf_eu_wr_addr = 5
rf::enable = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_a     = 00
rf::eu_rf_wr_addr_equal_rd_addr_a = 1
rf::eu_rf_wren.read() = 0
rf::eu_rf_wren_int = 0
rf::rfRdAddrEqEuRfWrAddr_a = 0
rf::bypass_a = 0
rf::eu_rf_wr_addr = 00
rf::rd_addr_b     = 05
rf::eu_rf_wr_addr_equal_rd_addr_b = 0
rf::eu_rf_wren.read() = 0
rf::eu_rf_wren_int = 0
rf::rfRdAddrEqEuRfWrAddr_b = 0
rf::bypass_b = 0
rf::eu_data_a = 0
rf::rd_data_a = 000000000
rf::rd_data_b = 000000000
rf::rf_eu_v = 0
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 000000000
rf::eu_rf_wren    = 0
rf::rf_stall = 0
rf::   rf[0] = 0
rf::   rf[1] = 1
rf::   rf[2] = 2
rf::   rf[3] = 3
rf::   rf[4] = 4
rf::   rf[5] = 0
rf::   rf[6] = 0
rf::   rf[7] = 0
rf::   rf[8] = 0
rf::   rf[9] = 0
rf::   rf[a] = 0
rf::   rf[b] = 0
rf::   rf[c] = 0
rf::   rf[d] = 0
rf::   rf[e] = 0
rf::   rf[f] = 0
rf::   rf[10] = 0
rf::   rf[11] = 0
rf::   rf[12] = 0
rf::   rf[13] = 0
rf::   rf[14] = 0
rf::   rf[15] = 0
rf::   rf[16] = 0
rf::   rf[17] = 0
rf::   rf[18] = 0
rf::   rf[19] = 0
rf::   rf[1a] = 0
rf::   rf[1b] = 0
rf::   rf[1c] = 0
rf::   rf[1d] = 0
rf::   rf[1e] = 0
rf::   rf[1f] = 0
executionUnit::****************************************
executionUnit:: rf_eu_v=0
executionUnit::enable =1
executionUnit:: instReg=80040004 isInstFmtLas=0 instFmt=2
executionUnit:: rf_eu_ir = 080040004
executionUnit:: las op = NA las op = 0
executionUnit:: src_a = 000000000
executionUnit:: src_b = 000000000
executionUnit:: eu_rf_wr_data_las = 0
executionUnit:: eu_rf_wr_data_bit = 0
executionUnit:: id->dest = 4
executionUnit:: eu_rf_wr_data = 000000000
executionUnit:: eu_rf_wr_addr = 00
executionUnit:: eu_rf_wren             = 0
   read op  buffer[7] = 80060006 im read operation  = 7 data = 80050005
rf::write operation wr_addr_a = 5
 eu_branch = 0 pcx = 8 pc_inc = 8
reset_ = 1
enable = 1
eu_branch = 0
 pc_im_v   = 1
 im_rf_v   = 1
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 7
im.data = 80050005
npc_2 = 00004
npc_3 = 00003
npc_4 = 00000
pc_im_v = 1 im_RnW = 1 pc_im_address = 7  im_1 = 80050005
im_data = 80050005
ir_rf_3 = 080040004
ir_eu_4 = 080030003
 eu_branch.read() = 1
 pc_im_v   = 1
 im_rf_v   = 1
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 5
 rf_dest_addr = 5
 rf_rd_data_a = 000000000
 rf_rd_data_b = 000000000
 im_rf_v   = 1
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
rf::****************************************
rf::v = 1
rf::instructionReg = 80060006
rf::reset_ = 1
rf::rd_addr_a = 00
rf::rden_a    = 1
rf::rd_addr_b = 06
rf::rden_b    = 1
rf:0 read operation rd_addr_a = 00
rf:all read operation rd_addr_b = 06
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 000000000
rf::eu_rf_wren    = 0
rf::swapbit_wr_data_a = 0
rf::swapbit_wr_addr_a = 0
rf::swapbit_wr_data_b = 0
rf::swapbit_wr_addr_b = 0
rf::swapbit_wren.writ = 0
rf::eu_rf_wren 	  = 0
rf::swap_wren 		  = 0
rf::swapbit_wren 	  = 0
rf::testbit_wren 	  = 0
rf::setbit_wren 	  = 0
rf::ldimm_ab_16_wren = 1
rf::rf_mux_in_wren_a = 0
rf::rf_mux_in_wren_b = 0
rf::enable = 1
rf::operandA = 0
rf::operandB = 0
rf::Info im_rf_instructionDecoder->isInstFormatOpLdIm ()
rf::Info: ELoadLow before rf_dest_data =  5 ldimm field = 6 ir =80060006
rf::Info: after rf_dest_data =  6 ldimm field = 6 ir =80060006
rf::ldimm high write operation ldimm_ab_16_wr_addr = 6 ldimm_ab_16_wr_data = 6
rf::im_rf_ir.read()  = 80060006
rf::im_rf_instructionDecoder->getInstructionReg()  = 80060006
rf:: isInstFormatOpLas = 0
rf:: isInstFormatOpBit = 0
rf:: isInstFormatOpLdIm= 1
rf:: isInstFormatOpBr  = 0
rf:: getLdImmOperand16Field= 6
rf:: signExtend16(im_rf_instructionDecoder->getLdImmOperand16Field ()) = 6
rf:: rf_dest_data  = 6
rf::im_rf_ir = 80060006
rf::eu_rf_ir = 080040004
rf::op_imm_a = 0
rf::op_imm_b = 6
rf:: getOperandAImm8Field  = 0
rf:: getOperandBImm8Field  = 6
rf::signExtend8 (op_imm_a) = 0
rf::signExtend8 (op_imm_b) = 6
rf::signExtend16(op_imm_b) = 6
rf::rd_data_rf_a = 0
rf::rd_data_rf_b = 0
rf::rd_data_imm_a = 0
rf::rd_data_imm_b = 6
rf::rd_data_imm_mux_sel_a = 0
rf::rd_data_imm_mux_sel_b = 0
rf::rd_data_imm_mux_a = 0
rf::rd_data_imm_mux_b = 0
rf::rd_data_bypass_mux_a = 0
rf::rd_data_bypass_mux_b = 0
rf::rf_eu_wr_addr = 6
rf::enable = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_a     = 00
rf::eu_rf_wr_addr_equal_rd_addr_a = 1
rf::eu_rf_wren.read() = 0
rf::eu_rf_wren_int = 0
rf::rfRdAddrEqEuRfWrAddr_a = 0
rf::bypass_a = 0
rf::eu_rf_wr_addr = 00
rf::rd_addr_b     = 06
rf::eu_rf_wr_addr_equal_rd_addr_b = 0
rf::eu_rf_wren.read() = 0
rf::eu_rf_wren_int = 0
rf::rfRdAddrEqEuRfWrAddr_b = 0
rf::bypass_b = 0
rf::eu_data_a = 0
rf::rd_data_a = 000000000
rf::rd_data_b = 000000000
rf::rf_eu_v = 0
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 000000000
rf::eu_rf_wren    = 0
rf::rf_stall = 0
rf::   rf[0] = 0
rf::   rf[1] = 1
rf::   rf[2] = 2
rf::   rf[3] = 3
rf::   rf[4] = 4
rf::   rf[5] = 5
rf::   rf[6] = 0
rf::   rf[7] = 0
rf::   rf[8] = 0
rf::   rf[9] = 0
rf::   rf[a] = 0
rf::   rf[b] = 0
rf::   rf[c] = 0
rf::   rf[d] = 0
rf::   rf[e] = 0
rf::   rf[f] = 0
rf::   rf[10] = 0
rf::   rf[11] = 0
rf::   rf[12] = 0
rf::   rf[13] = 0
rf::   rf[14] = 0
rf::   rf[15] = 0
rf::   rf[16] = 0
rf::   rf[17] = 0
rf::   rf[18] = 0
rf::   rf[19] = 0
rf::   rf[1a] = 0
rf::   rf[1b] = 0
rf::   rf[1c] = 0
rf::   rf[1d] = 0
rf::   rf[1e] = 0
rf::   rf[1f] = 0
executionUnit::****************************************
executionUnit:: rf_eu_v=0
executionUnit::enable =1
executionUnit:: instReg=80050005 isInstFmtLas=0 instFmt=2
executionUnit:: rf_eu_ir = 080050005
executionUnit:: las op = NA las op = 0
executionUnit:: src_a = 000000000
executionUnit:: src_b = 000000000
executionUnit:: eu_rf_wr_data_las = 0
executionUnit:: eu_rf_wr_data_bit = 0
executionUnit:: id->dest = 5
executionUnit:: eu_rf_wr_data = 000000000
executionUnit:: eu_rf_wr_addr = 00
executionUnit:: eu_rf_wren             = 0
   read op  buffer[8] = 80070007 im read operation  = 8 data = 80060006
rf::write operation wr_addr_a = 6
 eu_branch = 0 pcx = 9 pc_inc = 9
reset_ = 1
enable = 1
eu_branch = 0
 pc_im_v   = 1
 im_rf_v   = 1
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 8
im.data = 80060006
npc_2 = 00005
npc_3 = 00004
npc_4 = 00000
pc_im_v = 1 im_RnW = 1 pc_im_address = 8  im_1 = 80060006
im_data = 80060006
ir_rf_3 = 080050005
ir_eu_4 = 080040004
 eu_branch.read() = 1
 pc_im_v   = 1
 im_rf_v   = 1
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 6
 rf_dest_addr = 6
 rf_rd_data_a = 000000000
 rf_rd_data_b = 000000000
 im_rf_v   = 1
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
rf::****************************************
rf::v = 1
rf::instructionReg = 80070007
rf::reset_ = 1
rf::rd_addr_a = 00
rf::rden_a    = 1
rf::rd_addr_b = 07
rf::rden_b    = 1
rf:0 read operation rd_addr_a = 00
rf:all read operation rd_addr_b = 07
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 000000000
rf::eu_rf_wren    = 0
rf::swapbit_wr_data_a = 0
rf::swapbit_wr_addr_a = 0
rf::swapbit_wr_data_b = 0
rf::swapbit_wr_addr_b = 0
rf::swapbit_wren.writ = 0
rf::eu_rf_wren 	  = 0
rf::swap_wren 		  = 0
rf::swapbit_wren 	  = 0
rf::testbit_wren 	  = 0
rf::setbit_wren 	  = 0
rf::ldimm_ab_16_wren = 1
rf::rf_mux_in_wren_a = 0
rf::rf_mux_in_wren_b = 0
rf::enable = 1
rf::operandA = 0
rf::operandB = 0
rf::Info im_rf_instructionDecoder->isInstFormatOpLdIm ()
rf::Info: ELoadLow before rf_dest_data =  6 ldimm field = 7 ir =80070007
rf::Info: after rf_dest_data =  7 ldimm field = 7 ir =80070007
rf::ldimm high write operation ldimm_ab_16_wr_addr = 7 ldimm_ab_16_wr_data = 7
rf::im_rf_ir.read()  = 80070007
rf::im_rf_instructionDecoder->getInstructionReg()  = 80070007
rf:: isInstFormatOpLas = 0
rf:: isInstFormatOpBit = 0
rf:: isInstFormatOpLdIm= 1
rf:: isInstFormatOpBr  = 0
rf:: getLdImmOperand16Field= 7
rf:: signExtend16(im_rf_instructionDecoder->getLdImmOperand16Field ()) = 7
rf:: rf_dest_data  = 7
rf::im_rf_ir = 80070007
rf::eu_rf_ir = 080050005
rf::op_imm_a = 0
rf::op_imm_b = 7
rf:: getOperandAImm8Field  = 0
rf:: getOperandBImm8Field  = 7
rf::signExtend8 (op_imm_a) = 0
rf::signExtend8 (op_imm_b) = 7
rf::signExtend16(op_imm_b) = 7
rf::rd_data_rf_a = 0
rf::rd_data_rf_b = 0
rf::rd_data_imm_a = 0
rf::rd_data_imm_b = 7
rf::rd_data_imm_mux_sel_a = 0
rf::rd_data_imm_mux_sel_b = 0
rf::rd_data_imm_mux_a = 0
rf::rd_data_imm_mux_b = 0
rf::rd_data_bypass_mux_a = 0
rf::rd_data_bypass_mux_b = 0
rf::rf_eu_wr_addr = 7
rf::enable = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_a     = 00
rf::eu_rf_wr_addr_equal_rd_addr_a = 1
rf::eu_rf_wren.read() = 0
rf::eu_rf_wren_int = 0
rf::rfRdAddrEqEuRfWrAddr_a = 0
rf::bypass_a = 0
rf::eu_rf_wr_addr = 00
rf::rd_addr_b     = 07
rf::eu_rf_wr_addr_equal_rd_addr_b = 0
rf::eu_rf_wren.read() = 0
rf::eu_rf_wren_int = 0
rf::rfRdAddrEqEuRfWrAddr_b = 0
rf::bypass_b = 0
rf::eu_data_a = 0
rf::rd_data_a = 000000000
rf::rd_data_b = 000000000
rf::rf_eu_v = 0
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 000000000
rf::eu_rf_wren    = 0
rf::rf_stall = 0
rf::   rf[0] = 0
rf::   rf[1] = 1
rf::   rf[2] = 2
rf::   rf[3] = 3
rf::   rf[4] = 4
rf::   rf[5] = 5
rf::   rf[6] = 6
rf::   rf[7] = 0
rf::   rf[8] = 0
rf::   rf[9] = 0
rf::   rf[a] = 0
rf::   rf[b] = 0
rf::   rf[c] = 0
rf::   rf[d] = 0
rf::   rf[e] = 0
rf::   rf[f] = 0
rf::   rf[10] = 0
rf::   rf[11] = 0
rf::   rf[12] = 0
rf::   rf[13] = 0
rf::   rf[14] = 0
rf::   rf[15] = 0
rf::   rf[16] = 0
rf::   rf[17] = 0
rf::   rf[18] = 0
rf::   rf[19] = 0
rf::   rf[1a] = 0
rf::   rf[1b] = 0
rf::   rf[1c] = 0
rf::   rf[1d] = 0
rf::   rf[1e] = 0
rf::   rf[1f] = 0
executionUnit::****************************************
executionUnit:: rf_eu_v=0
executionUnit::enable =1
executionUnit:: instReg=80060006 isInstFmtLas=0 instFmt=2
executionUnit:: rf_eu_ir = 080060006
executionUnit:: las op = NA las op = 0
executionUnit:: src_a = 000000000
executionUnit:: src_b = 000000000
executionUnit:: eu_rf_wr_data_las = 0
executionUnit:: eu_rf_wr_data_bit = 0
executionUnit:: id->dest = 6
executionUnit:: eu_rf_wr_data = 000000000
executionUnit:: eu_rf_wr_addr = 00
executionUnit:: eu_rf_wren             = 0
   read op  buffer[9] = 80080008 im read operation  = 9 data = 80070007
rf::write operation wr_addr_a = 7
 eu_branch = 0 pcx = a pc_inc = a
reset_ = 1
enable = 1
eu_branch = 0
 pc_im_v   = 1
 im_rf_v   = 1
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 9
im.data = 80070007
npc_2 = 00006
npc_3 = 00005
npc_4 = 00000
pc_im_v = 1 im_RnW = 1 pc_im_address = 9  im_1 = 80070007
im_data = 80070007
ir_rf_3 = 080060006
ir_eu_4 = 080050005
 eu_branch.read() = 1
 pc_im_v   = 1
 im_rf_v   = 1
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 7
 rf_dest_addr = 7
 rf_rd_data_a = 000000000
 rf_rd_data_b = 000000000
 im_rf_v   = 1
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
rf::****************************************
rf::v = 1
rf::instructionReg = 80080008
rf::reset_ = 1
rf::rd_addr_a = 00
rf::rden_a    = 1
rf::rd_addr_b = 08
rf::rden_b    = 1
rf:0 read operation rd_addr_a = 00
rf:all read operation rd_addr_b = 08
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 000000000
rf::eu_rf_wren    = 0
rf::swapbit_wr_data_a = 0
rf::swapbit_wr_addr_a = 0
rf::swapbit_wr_data_b = 0
rf::swapbit_wr_addr_b = 0
rf::swapbit_wren.writ = 0
rf::eu_rf_wren 	  = 0
rf::swap_wren 		  = 0
rf::swapbit_wren 	  = 0
rf::testbit_wren 	  = 0
rf::setbit_wren 	  = 0
rf::ldimm_ab_16_wren = 1
rf::rf_mux_in_wren_a = 0
rf::rf_mux_in_wren_b = 0
rf::enable = 1
rf::operandA = 0
rf::operandB = 0
rf::Info im_rf_instructionDecoder->isInstFormatOpLdIm ()
rf::Info: ELoadLow before rf_dest_data =  7 ldimm field = 8 ir =80080008
rf::Info: after rf_dest_data =  8 ldimm field = 8 ir =80080008
rf::ldimm high write operation ldimm_ab_16_wr_addr = 8 ldimm_ab_16_wr_data = 8
rf::im_rf_ir.read()  = 80080008
rf::im_rf_instructionDecoder->getInstructionReg()  = 80080008
rf:: isInstFormatOpLas = 0
rf:: isInstFormatOpBit = 0
rf:: isInstFormatOpLdIm= 1
rf:: isInstFormatOpBr  = 0
rf:: getLdImmOperand16Field= 8
rf:: signExtend16(im_rf_instructionDecoder->getLdImmOperand16Field ()) = 8
rf:: rf_dest_data  = 8
rf::im_rf_ir = 80080008
rf::eu_rf_ir = 080060006
rf::op_imm_a = 0
rf::op_imm_b = 8
rf:: getOperandAImm8Field  = 0
rf:: getOperandBImm8Field  = 8
rf::signExtend8 (op_imm_a) = 0
rf::signExtend8 (op_imm_b) = 8
rf::signExtend16(op_imm_b) = 8
rf::rd_data_rf_a = 0
rf::rd_data_rf_b = 0
rf::rd_data_imm_a = 0
rf::rd_data_imm_b = 8
rf::rd_data_imm_mux_sel_a = 0
rf::rd_data_imm_mux_sel_b = 0
rf::rd_data_imm_mux_a = 0
rf::rd_data_imm_mux_b = 0
rf::rd_data_bypass_mux_a = 0
rf::rd_data_bypass_mux_b = 0
rf::rf_eu_wr_addr = 8
rf::enable = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_a     = 00
rf::eu_rf_wr_addr_equal_rd_addr_a = 1
rf::eu_rf_wren.read() = 0
rf::eu_rf_wren_int = 0
rf::rfRdAddrEqEuRfWrAddr_a = 0
rf::bypass_a = 0
rf::eu_rf_wr_addr = 00
rf::rd_addr_b     = 08
rf::eu_rf_wr_addr_equal_rd_addr_b = 0
rf::eu_rf_wren.read() = 0
rf::eu_rf_wren_int = 0
rf::rfRdAddrEqEuRfWrAddr_b = 0
rf::bypass_b = 0
rf::eu_data_a = 0
rf::rd_data_a = 000000000
rf::rd_data_b = 000000000
rf::rf_eu_v = 0
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 000000000
rf::eu_rf_wren    = 0
rf::rf_stall = 0
rf::   rf[0] = 0
rf::   rf[1] = 1
rf::   rf[2] = 2
rf::   rf[3] = 3
rf::   rf[4] = 4
rf::   rf[5] = 5
rf::   rf[6] = 6
rf::   rf[7] = 7
rf::   rf[8] = 0
rf::   rf[9] = 0
rf::   rf[a] = 0
rf::   rf[b] = 0
rf::   rf[c] = 0
rf::   rf[d] = 0
rf::   rf[e] = 0
rf::   rf[f] = 0
rf::   rf[10] = 0
rf::   rf[11] = 0
rf::   rf[12] = 0
rf::   rf[13] = 0
rf::   rf[14] = 0
rf::   rf[15] = 0
rf::   rf[16] = 0
rf::   rf[17] = 0
rf::   rf[18] = 0
rf::   rf[19] = 0
rf::   rf[1a] = 0
rf::   rf[1b] = 0
rf::   rf[1c] = 0
rf::   rf[1d] = 0
rf::   rf[1e] = 0
rf::   rf[1f] = 0
executionUnit::****************************************
executionUnit:: rf_eu_v=0
executionUnit::enable =1
executionUnit:: instReg=80070007 isInstFmtLas=0 instFmt=2
executionUnit:: rf_eu_ir = 080070007
executionUnit:: las op = NA las op = 0
executionUnit:: src_a = 000000000
executionUnit:: src_b = 000000000
executionUnit:: eu_rf_wr_data_las = 0
executionUnit:: eu_rf_wr_data_bit = 0
executionUnit:: id->dest = 7
executionUnit:: eu_rf_wr_data = 000000000
executionUnit:: eu_rf_wr_addr = 00
executionUnit:: eu_rf_wren             = 0
   read op  buffer[a] = 80090009 im read operation  = a data = 80080008
rf::write operation wr_addr_a = 8
 eu_branch = 0 pcx = b pc_inc = b
reset_ = 1
enable = 1
eu_branch = 0
 pc_im_v   = 1
 im_rf_v   = 1
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = a
im.data = 80080008
npc_2 = 00007
npc_3 = 00006
npc_4 = 00000
pc_im_v = 1 im_RnW = 1 pc_im_address = a  im_1 = 80080008
im_data = 80080008
ir_rf_3 = 080070007
ir_eu_4 = 080060006
 eu_branch.read() = 1
 pc_im_v   = 1
 im_rf_v   = 1
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 8
 rf_dest_addr = 8
 rf_rd_data_a = 000000000
 rf_rd_data_b = 000000000
 im_rf_v   = 1
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
rf::****************************************
rf::v = 1
rf::instructionReg = 80090009
rf::reset_ = 1
rf::rd_addr_a = 00
rf::rden_a    = 1
rf::rd_addr_b = 09
rf::rden_b    = 1
rf:0 read operation rd_addr_a = 00
rf:all read operation rd_addr_b = 09
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 000000000
rf::eu_rf_wren    = 0
rf::swapbit_wr_data_a = 0
rf::swapbit_wr_addr_a = 0
rf::swapbit_wr_data_b = 0
rf::swapbit_wr_addr_b = 0
rf::swapbit_wren.writ = 0
rf::eu_rf_wren 	  = 0
rf::swap_wren 		  = 0
rf::swapbit_wren 	  = 0
rf::testbit_wren 	  = 0
rf::setbit_wren 	  = 0
rf::ldimm_ab_16_wren = 1
rf::rf_mux_in_wren_a = 0
rf::rf_mux_in_wren_b = 0
rf::enable = 1
rf::operandA = 0
rf::operandB = 0
rf::Info im_rf_instructionDecoder->isInstFormatOpLdIm ()
rf::Info: ELoadLow before rf_dest_data =  8 ldimm field = 9 ir =80090009
rf::Info: after rf_dest_data =  9 ldimm field = 9 ir =80090009
rf::ldimm high write operation ldimm_ab_16_wr_addr = 9 ldimm_ab_16_wr_data = 9
rf::im_rf_ir.read()  = 80090009
rf::im_rf_instructionDecoder->getInstructionReg()  = 80090009
rf:: isInstFormatOpLas = 0
rf:: isInstFormatOpBit = 0
rf:: isInstFormatOpLdIm= 1
rf:: isInstFormatOpBr  = 0
rf:: getLdImmOperand16Field= 9
rf:: signExtend16(im_rf_instructionDecoder->getLdImmOperand16Field ()) = 9
rf:: rf_dest_data  = 9
rf::im_rf_ir = 80090009
rf::eu_rf_ir = 080070007
rf::op_imm_a = 0
rf::op_imm_b = 9
rf:: getOperandAImm8Field  = 0
rf:: getOperandBImm8Field  = 9
rf::signExtend8 (op_imm_a) = 0
rf::signExtend8 (op_imm_b) = 9
rf::signExtend16(op_imm_b) = 9
rf::rd_data_rf_a = 0
rf::rd_data_rf_b = 0
rf::rd_data_imm_a = 0
rf::rd_data_imm_b = 9
rf::rd_data_imm_mux_sel_a = 0
rf::rd_data_imm_mux_sel_b = 0
rf::rd_data_imm_mux_a = 0
rf::rd_data_imm_mux_b = 0
rf::rd_data_bypass_mux_a = 0
rf::rd_data_bypass_mux_b = 0
rf::rf_eu_wr_addr = 9
rf::enable = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_a     = 00
rf::eu_rf_wr_addr_equal_rd_addr_a = 1
rf::eu_rf_wren.read() = 0
rf::eu_rf_wren_int = 0
rf::rfRdAddrEqEuRfWrAddr_a = 0
rf::bypass_a = 0
rf::eu_rf_wr_addr = 00
rf::rd_addr_b     = 09
rf::eu_rf_wr_addr_equal_rd_addr_b = 0
rf::eu_rf_wren.read() = 0
rf::eu_rf_wren_int = 0
rf::rfRdAddrEqEuRfWrAddr_b = 0
rf::bypass_b = 0
rf::eu_data_a = 0
rf::rd_data_a = 000000000
rf::rd_data_b = 000000000
rf::rf_eu_v = 0
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 000000000
rf::eu_rf_wren    = 0
rf::rf_stall = 0
rf::   rf[0] = 0
rf::   rf[1] = 1
rf::   rf[2] = 2
rf::   rf[3] = 3
rf::   rf[4] = 4
rf::   rf[5] = 5
rf::   rf[6] = 6
rf::   rf[7] = 7
rf::   rf[8] = 8
rf::   rf[9] = 0
rf::   rf[a] = 0
rf::   rf[b] = 0
rf::   rf[c] = 0
rf::   rf[d] = 0
rf::   rf[e] = 0
rf::   rf[f] = 0
rf::   rf[10] = 0
rf::   rf[11] = 0
rf::   rf[12] = 0
rf::   rf[13] = 0
rf::   rf[14] = 0
rf::   rf[15] = 0
rf::   rf[16] = 0
rf::   rf[17] = 0
rf::   rf[18] = 0
rf::   rf[19] = 0
rf::   rf[1a] = 0
rf::   rf[1b] = 0
rf::   rf[1c] = 0
rf::   rf[1d] = 0
rf::   rf[1e] = 0
rf::   rf[1f] = 0
executionUnit::****************************************
executionUnit:: rf_eu_v=0
executionUnit::enable =1
executionUnit:: instReg=80080008 isInstFmtLas=0 instFmt=2
executionUnit:: rf_eu_ir = 080080008
executionUnit:: las op = NA las op = 0
executionUnit:: src_a = 000000000
executionUnit:: src_b = 000000000
executionUnit:: eu_rf_wr_data_las = 0
executionUnit:: eu_rf_wr_data_bit = 0
executionUnit:: id->dest = 8
executionUnit:: eu_rf_wr_data = 000000000
executionUnit:: eu_rf_wr_addr = 00
executionUnit:: eu_rf_wren             = 0
   read op  buffer[b] = 800a000a im read operation  = b data = 80090009
rf::write operation wr_addr_a = 9
 eu_branch = 0 pcx = c pc_inc = c
reset_ = 1
enable = 1
eu_branch = 0
 pc_im_v   = 1
 im_rf_v   = 1
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = b
im.data = 80090009
npc_2 = 00008
npc_3 = 00007
npc_4 = 00000
pc_im_v = 1 im_RnW = 1 pc_im_address = b  im_1 = 80090009
im_data = 80090009
ir_rf_3 = 080080008
ir_eu_4 = 080070007
 eu_branch.read() = 1
 pc_im_v   = 1
 im_rf_v   = 1
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 9
 rf_dest_addr = 9
 rf_rd_data_a = 000000000
 rf_rd_data_b = 000000000
 im_rf_v   = 1
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
rf::****************************************
rf::v = 1
rf::instructionReg = 800a000a
rf::reset_ = 1
rf::rd_addr_a = 00
rf::rden_a    = 1
rf::rd_addr_b = 0a
rf::rden_b    = 1
rf:0 read operation rd_addr_a = 00
rf:all read operation rd_addr_b = 0a
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 000000000
rf::eu_rf_wren    = 0
rf::swapbit_wr_data_a = 0
rf::swapbit_wr_addr_a = 0
rf::swapbit_wr_data_b = 0
rf::swapbit_wr_addr_b = 0
rf::swapbit_wren.writ = 0
rf::eu_rf_wren 	  = 0
rf::swap_wren 		  = 0
rf::swapbit_wren 	  = 0
rf::testbit_wren 	  = 0
rf::setbit_wren 	  = 0
rf::ldimm_ab_16_wren = 1
rf::rf_mux_in_wren_a = 0
rf::rf_mux_in_wren_b = 0
rf::enable = 1
rf::operandA = 0
rf::operandB = 0
rf::Info im_rf_instructionDecoder->isInstFormatOpLdIm ()
rf::Info: ELoadLow before rf_dest_data =  9 ldimm field = a ir =800a000a
rf::Info: after rf_dest_data =  a ldimm field = a ir =800a000a
rf::ldimm high write operation ldimm_ab_16_wr_addr = a ldimm_ab_16_wr_data = a
rf::im_rf_ir.read()  = 800a000a
rf::im_rf_instructionDecoder->getInstructionReg()  = 800a000a
rf:: isInstFormatOpLas = 0
rf:: isInstFormatOpBit = 0
rf:: isInstFormatOpLdIm= 1
rf:: isInstFormatOpBr  = 0
rf:: getLdImmOperand16Field= a
rf:: signExtend16(im_rf_instructionDecoder->getLdImmOperand16Field ()) = a
rf:: rf_dest_data  = a
rf::im_rf_ir = 800a000a
rf::eu_rf_ir = 080080008
rf::op_imm_a = 0
rf::op_imm_b = a
rf:: getOperandAImm8Field  = 0
rf:: getOperandBImm8Field  = a
rf::signExtend8 (op_imm_a) = 0
rf::signExtend8 (op_imm_b) = a
rf::signExtend16(op_imm_b) = a
rf::rd_data_rf_a = 0
rf::rd_data_rf_b = 0
rf::rd_data_imm_a = 0
rf::rd_data_imm_b = a
rf::rd_data_imm_mux_sel_a = 0
rf::rd_data_imm_mux_sel_b = 0
rf::rd_data_imm_mux_a = 0
rf::rd_data_imm_mux_b = 0
rf::rd_data_bypass_mux_a = 0
rf::rd_data_bypass_mux_b = 0
rf::rf_eu_wr_addr = a
rf::enable = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_a     = 00
rf::eu_rf_wr_addr_equal_rd_addr_a = 1
rf::eu_rf_wren.read() = 0
rf::eu_rf_wren_int = 0
rf::rfRdAddrEqEuRfWrAddr_a = 0
rf::bypass_a = 0
rf::eu_rf_wr_addr = 00
rf::rd_addr_b     = 0a
rf::eu_rf_wr_addr_equal_rd_addr_b = 0
rf::eu_rf_wren.read() = 0
rf::eu_rf_wren_int = 0
rf::rfRdAddrEqEuRfWrAddr_b = 0
rf::bypass_b = 0
rf::eu_data_a = 0
rf::rd_data_a = 000000000
rf::rd_data_b = 000000000
rf::rf_eu_v = 0
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 000000000
rf::eu_rf_wren    = 0
rf::rf_stall = 0
rf::   rf[0] = 0
rf::   rf[1] = 1
rf::   rf[2] = 2
rf::   rf[3] = 3
rf::   rf[4] = 4
rf::   rf[5] = 5
rf::   rf[6] = 6
rf::   rf[7] = 7
rf::   rf[8] = 8
rf::   rf[9] = 9
rf::   rf[a] = 0
rf::   rf[b] = 0
rf::   rf[c] = 0
rf::   rf[d] = 0
rf::   rf[e] = 0
rf::   rf[f] = 0
rf::   rf[10] = 0
rf::   rf[11] = 0
rf::   rf[12] = 0
rf::   rf[13] = 0
rf::   rf[14] = 0
rf::   rf[15] = 0
rf::   rf[16] = 0
rf::   rf[17] = 0
rf::   rf[18] = 0
rf::   rf[19] = 0
rf::   rf[1a] = 0
rf::   rf[1b] = 0
rf::   rf[1c] = 0
rf::   rf[1d] = 0
rf::   rf[1e] = 0
rf::   rf[1f] = 0
executionUnit::****************************************
executionUnit:: rf_eu_v=0
executionUnit::enable =1
executionUnit:: instReg=80090009 isInstFmtLas=0 instFmt=2
executionUnit:: rf_eu_ir = 080090009
executionUnit:: las op = NA las op = 0
executionUnit:: src_a = 000000000
executionUnit:: src_b = 000000000
executionUnit:: eu_rf_wr_data_las = 0
executionUnit:: eu_rf_wr_data_bit = 0
executionUnit:: id->dest = 9
executionUnit:: eu_rf_wr_data = 000000000
executionUnit:: eu_rf_wr_addr = 00
executionUnit:: eu_rf_wren             = 0
   read op  buffer[c] = 800b000b im read operation  = c data = 800a000a
rf::write operation wr_addr_a = a
 eu_branch = 0 pcx = d pc_inc = d
reset_ = 1
enable = 1
eu_branch = 0
 pc_im_v   = 1
 im_rf_v   = 1
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = c
im.data = 800a000a
npc_2 = 00009
npc_3 = 00008
npc_4 = 00000
pc_im_v = 1 im_RnW = 1 pc_im_address = c  im_1 = 800a000a
im_data = 800a000a
ir_rf_3 = 080090009
ir_eu_4 = 080080008
 eu_branch.read() = 1
 pc_im_v   = 1
 im_rf_v   = 1
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = a
 rf_dest_addr = a
 rf_rd_data_a = 000000000
 rf_rd_data_b = 000000000
 im_rf_v   = 1
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
rf::****************************************
rf::v = 1
rf::instructionReg = 800b000b
rf::reset_ = 1
rf::rd_addr_a = 00
rf::rden_a    = 1
rf::rd_addr_b = 0b
rf::rden_b    = 1
rf:0 read operation rd_addr_a = 00
rf:all read operation rd_addr_b = 0b
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 000000000
rf::eu_rf_wren    = 0
rf::swapbit_wr_data_a = 0
rf::swapbit_wr_addr_a = 0
rf::swapbit_wr_data_b = 0
rf::swapbit_wr_addr_b = 0
rf::swapbit_wren.writ = 0
rf::eu_rf_wren 	  = 0
rf::swap_wren 		  = 0
rf::swapbit_wren 	  = 0
rf::testbit_wren 	  = 0
rf::setbit_wren 	  = 0
rf::ldimm_ab_16_wren = 1
rf::rf_mux_in_wren_a = 0
rf::rf_mux_in_wren_b = 0
rf::enable = 1
rf::operandA = 0
rf::operandB = 0
rf::Info im_rf_instructionDecoder->isInstFormatOpLdIm ()
rf::Info: ELoadLow before rf_dest_data =  a ldimm field = b ir =800b000b
rf::Info: after rf_dest_data =  b ldimm field = b ir =800b000b
rf::ldimm high write operation ldimm_ab_16_wr_addr = b ldimm_ab_16_wr_data = b
rf::im_rf_ir.read()  = 800b000b
rf::im_rf_instructionDecoder->getInstructionReg()  = 800b000b
rf:: isInstFormatOpLas = 0
rf:: isInstFormatOpBit = 0
rf:: isInstFormatOpLdIm= 1
rf:: isInstFormatOpBr  = 0
rf:: getLdImmOperand16Field= b
rf:: signExtend16(im_rf_instructionDecoder->getLdImmOperand16Field ()) = b
rf:: rf_dest_data  = b
rf::im_rf_ir = 800b000b
rf::eu_rf_ir = 080090009
rf::op_imm_a = 0
rf::op_imm_b = b
rf:: getOperandAImm8Field  = 0
rf:: getOperandBImm8Field  = b
rf::signExtend8 (op_imm_a) = 0
rf::signExtend8 (op_imm_b) = b
rf::signExtend16(op_imm_b) = b
rf::rd_data_rf_a = 0
rf::rd_data_rf_b = 0
rf::rd_data_imm_a = 0
rf::rd_data_imm_b = b
rf::rd_data_imm_mux_sel_a = 0
rf::rd_data_imm_mux_sel_b = 0
rf::rd_data_imm_mux_a = 0
rf::rd_data_imm_mux_b = 0
rf::rd_data_bypass_mux_a = 0
rf::rd_data_bypass_mux_b = 0
rf::rf_eu_wr_addr = b
rf::enable = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_a     = 00
rf::eu_rf_wr_addr_equal_rd_addr_a = 1
rf::eu_rf_wren.read() = 0
rf::eu_rf_wren_int = 0
rf::rfRdAddrEqEuRfWrAddr_a = 0
rf::bypass_a = 0
rf::eu_rf_wr_addr = 00
rf::rd_addr_b     = 0b
rf::eu_rf_wr_addr_equal_rd_addr_b = 0
rf::eu_rf_wren.read() = 0
rf::eu_rf_wren_int = 0
rf::rfRdAddrEqEuRfWrAddr_b = 0
rf::bypass_b = 0
rf::eu_data_a = 0
rf::rd_data_a = 000000000
rf::rd_data_b = 000000000
rf::rf_eu_v = 0
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 000000000
rf::eu_rf_wren    = 0
rf::rf_stall = 0
rf::   rf[0] = 0
rf::   rf[1] = 1
rf::   rf[2] = 2
rf::   rf[3] = 3
rf::   rf[4] = 4
rf::   rf[5] = 5
rf::   rf[6] = 6
rf::   rf[7] = 7
rf::   rf[8] = 8
rf::   rf[9] = 9
rf::   rf[a] = a
rf::   rf[b] = 0
rf::   rf[c] = 0
rf::   rf[d] = 0
rf::   rf[e] = 0
rf::   rf[f] = 0
rf::   rf[10] = 0
rf::   rf[11] = 0
rf::   rf[12] = 0
rf::   rf[13] = 0
rf::   rf[14] = 0
rf::   rf[15] = 0
rf::   rf[16] = 0
rf::   rf[17] = 0
rf::   rf[18] = 0
rf::   rf[19] = 0
rf::   rf[1a] = 0
rf::   rf[1b] = 0
rf::   rf[1c] = 0
rf::   rf[1d] = 0
rf::   rf[1e] = 0
rf::   rf[1f] = 0
executionUnit::****************************************
executionUnit:: rf_eu_v=0
executionUnit::enable =1
executionUnit:: instReg=800a000a isInstFmtLas=0 instFmt=2
executionUnit:: rf_eu_ir = 0800a000a
executionUnit:: las op = NA las op = 0
executionUnit:: src_a = 000000000
executionUnit:: src_b = 000000000
executionUnit:: eu_rf_wr_data_las = 0
executionUnit:: eu_rf_wr_data_bit = 0
executionUnit:: id->dest = a
executionUnit:: eu_rf_wr_data = 000000000
executionUnit:: eu_rf_wr_addr = 00
executionUnit:: eu_rf_wren             = 0
   read op  buffer[d] = 800c000c im read operation  = d data = 800b000b
rf::write operation wr_addr_a = b
 eu_branch = 0 pcx = e pc_inc = e
reset_ = 1
enable = 1
eu_branch = 0
 pc_im_v   = 1
 im_rf_v   = 1
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = d
im.data = 800b000b
npc_2 = 0000a
npc_3 = 00009
npc_4 = 00000
pc_im_v = 1 im_RnW = 1 pc_im_address = d  im_1 = 800b000b
im_data = 800b000b
ir_rf_3 = 0800a000a
ir_eu_4 = 080090009
 eu_branch.read() = 1
 pc_im_v   = 1
 im_rf_v   = 1
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = b
 rf_dest_addr = b
 rf_rd_data_a = 000000000
 rf_rd_data_b = 000000000
 im_rf_v   = 1
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
rf::****************************************
rf::v = 1
rf::instructionReg = 800c000c
rf::reset_ = 1
rf::rd_addr_a = 00
rf::rden_a    = 1
rf::rd_addr_b = 0c
rf::rden_b    = 1
rf:0 read operation rd_addr_a = 00
rf:all read operation rd_addr_b = 0c
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 000000000
rf::eu_rf_wren    = 0
rf::swapbit_wr_data_a = 0
rf::swapbit_wr_addr_a = 0
rf::swapbit_wr_data_b = 0
rf::swapbit_wr_addr_b = 0
rf::swapbit_wren.writ = 0
rf::eu_rf_wren 	  = 0
rf::swap_wren 		  = 0
rf::swapbit_wren 	  = 0
rf::testbit_wren 	  = 0
rf::setbit_wren 	  = 0
rf::ldimm_ab_16_wren = 1
rf::rf_mux_in_wren_a = 0
rf::rf_mux_in_wren_b = 0
rf::enable = 1
rf::operandA = 0
rf::operandB = 0
rf::Info im_rf_instructionDecoder->isInstFormatOpLdIm ()
rf::Info: ELoadLow before rf_dest_data =  b ldimm field = c ir =800c000c
rf::Info: after rf_dest_data =  c ldimm field = c ir =800c000c
rf::ldimm high write operation ldimm_ab_16_wr_addr = c ldimm_ab_16_wr_data = c
rf::im_rf_ir.read()  = 800c000c
rf::im_rf_instructionDecoder->getInstructionReg()  = 800c000c
rf:: isInstFormatOpLas = 0
rf:: isInstFormatOpBit = 0
rf:: isInstFormatOpLdIm= 1
rf:: isInstFormatOpBr  = 0
rf:: getLdImmOperand16Field= c
rf:: signExtend16(im_rf_instructionDecoder->getLdImmOperand16Field ()) = c
rf:: rf_dest_data  = c
rf::im_rf_ir = 800c000c
rf::eu_rf_ir = 0800a000a
rf::op_imm_a = 0
rf::op_imm_b = c
rf:: getOperandAImm8Field  = 0
rf:: getOperandBImm8Field  = c
rf::signExtend8 (op_imm_a) = 0
rf::signExtend8 (op_imm_b) = c
rf::signExtend16(op_imm_b) = c
rf::rd_data_rf_a = 0
rf::rd_data_rf_b = 0
rf::rd_data_imm_a = 0
rf::rd_data_imm_b = c
rf::rd_data_imm_mux_sel_a = 0
rf::rd_data_imm_mux_sel_b = 0
rf::rd_data_imm_mux_a = 0
rf::rd_data_imm_mux_b = 0
rf::rd_data_bypass_mux_a = 0
rf::rd_data_bypass_mux_b = 0
rf::rf_eu_wr_addr = c
rf::enable = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_a     = 00
rf::eu_rf_wr_addr_equal_rd_addr_a = 1
rf::eu_rf_wren.read() = 0
rf::eu_rf_wren_int = 0
rf::rfRdAddrEqEuRfWrAddr_a = 0
rf::bypass_a = 0
rf::eu_rf_wr_addr = 00
rf::rd_addr_b     = 0c
rf::eu_rf_wr_addr_equal_rd_addr_b = 0
rf::eu_rf_wren.read() = 0
rf::eu_rf_wren_int = 0
rf::rfRdAddrEqEuRfWrAddr_b = 0
rf::bypass_b = 0
rf::eu_data_a = 0
rf::rd_data_a = 000000000
rf::rd_data_b = 000000000
rf::rf_eu_v = 0
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 000000000
rf::eu_rf_wren    = 0
rf::rf_stall = 0
rf::   rf[0] = 0
rf::   rf[1] = 1
rf::   rf[2] = 2
rf::   rf[3] = 3
rf::   rf[4] = 4
rf::   rf[5] = 5
rf::   rf[6] = 6
rf::   rf[7] = 7
rf::   rf[8] = 8
rf::   rf[9] = 9
rf::   rf[a] = a
rf::   rf[b] = b
rf::   rf[c] = 0
rf::   rf[d] = 0
rf::   rf[e] = 0
rf::   rf[f] = 0
rf::   rf[10] = 0
rf::   rf[11] = 0
rf::   rf[12] = 0
rf::   rf[13] = 0
rf::   rf[14] = 0
rf::   rf[15] = 0
rf::   rf[16] = 0
rf::   rf[17] = 0
rf::   rf[18] = 0
rf::   rf[19] = 0
rf::   rf[1a] = 0
rf::   rf[1b] = 0
rf::   rf[1c] = 0
rf::   rf[1d] = 0
rf::   rf[1e] = 0
rf::   rf[1f] = 0
executionUnit::****************************************
executionUnit:: rf_eu_v=0
executionUnit::enable =1
executionUnit:: instReg=800b000b isInstFmtLas=0 instFmt=2
executionUnit:: rf_eu_ir = 0800b000b
executionUnit:: las op = NA las op = 0
executionUnit:: src_a = 000000000
executionUnit:: src_b = 000000000
executionUnit:: eu_rf_wr_data_las = 0
executionUnit:: eu_rf_wr_data_bit = 0
executionUnit:: id->dest = b
executionUnit:: eu_rf_wr_data = 000000000
executionUnit:: eu_rf_wr_addr = 00
executionUnit:: eu_rf_wren             = 0
   read op  buffer[e] = 800d000d im read operation  = e data = 800c000c
rf::write operation wr_addr_a = c
 eu_branch = 0 pcx = f pc_inc = f
reset_ = 1
enable = 1
eu_branch = 0
 pc_im_v   = 1
 im_rf_v   = 1
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = e
im.data = 800c000c
npc_2 = 0000b
npc_3 = 0000a
npc_4 = 00000
pc_im_v = 1 im_RnW = 1 pc_im_address = e  im_1 = 800c000c
im_data = 800c000c
ir_rf_3 = 0800b000b
ir_eu_4 = 0800a000a
 eu_branch.read() = 1
 pc_im_v   = 1
 im_rf_v   = 1
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = c
 rf_dest_addr = c
 rf_rd_data_a = 000000000
 rf_rd_data_b = 000000000
 im_rf_v   = 1
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
rf::****************************************
rf::v = 1
rf::instructionReg = 800d000d
rf::reset_ = 1
rf::rd_addr_a = 00
rf::rden_a    = 1
rf::rd_addr_b = 0d
rf::rden_b    = 1
rf:0 read operation rd_addr_a = 00
rf:all read operation rd_addr_b = 0d
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 000000000
rf::eu_rf_wren    = 0
rf::swapbit_wr_data_a = 0
rf::swapbit_wr_addr_a = 0
rf::swapbit_wr_data_b = 0
rf::swapbit_wr_addr_b = 0
rf::swapbit_wren.writ = 0
rf::eu_rf_wren 	  = 0
rf::swap_wren 		  = 0
rf::swapbit_wren 	  = 0
rf::testbit_wren 	  = 0
rf::setbit_wren 	  = 0
rf::ldimm_ab_16_wren = 1
rf::rf_mux_in_wren_a = 0
rf::rf_mux_in_wren_b = 0
rf::enable = 1
rf::operandA = 0
rf::operandB = 0
rf::Info im_rf_instructionDecoder->isInstFormatOpLdIm ()
rf::Info: ELoadLow before rf_dest_data =  c ldimm field = d ir =800d000d
rf::Info: after rf_dest_data =  d ldimm field = d ir =800d000d
rf::ldimm high write operation ldimm_ab_16_wr_addr = d ldimm_ab_16_wr_data = d
rf::im_rf_ir.read()  = 800d000d
rf::im_rf_instructionDecoder->getInstructionReg()  = 800d000d
rf:: isInstFormatOpLas = 0
rf:: isInstFormatOpBit = 0
rf:: isInstFormatOpLdIm= 1
rf:: isInstFormatOpBr  = 0
rf:: getLdImmOperand16Field= d
rf:: signExtend16(im_rf_instructionDecoder->getLdImmOperand16Field ()) = d
rf:: rf_dest_data  = d
rf::im_rf_ir = 800d000d
rf::eu_rf_ir = 0800b000b
rf::op_imm_a = 0
rf::op_imm_b = d
rf:: getOperandAImm8Field  = 0
rf:: getOperandBImm8Field  = d
rf::signExtend8 (op_imm_a) = 0
rf::signExtend8 (op_imm_b) = d
rf::signExtend16(op_imm_b) = d
rf::rd_data_rf_a = 0
rf::rd_data_rf_b = 0
rf::rd_data_imm_a = 0
rf::rd_data_imm_b = d
rf::rd_data_imm_mux_sel_a = 0
rf::rd_data_imm_mux_sel_b = 0
rf::rd_data_imm_mux_a = 0
rf::rd_data_imm_mux_b = 0
rf::rd_data_bypass_mux_a = 0
rf::rd_data_bypass_mux_b = 0
rf::rf_eu_wr_addr = d
rf::enable = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_a     = 00
rf::eu_rf_wr_addr_equal_rd_addr_a = 1
rf::eu_rf_wren.read() = 0
rf::eu_rf_wren_int = 0
rf::rfRdAddrEqEuRfWrAddr_a = 0
rf::bypass_a = 0
rf::eu_rf_wr_addr = 00
rf::rd_addr_b     = 0d
rf::eu_rf_wr_addr_equal_rd_addr_b = 0
rf::eu_rf_wren.read() = 0
rf::eu_rf_wren_int = 0
rf::rfRdAddrEqEuRfWrAddr_b = 0
rf::bypass_b = 0
rf::eu_data_a = 0
rf::rd_data_a = 000000000
rf::rd_data_b = 000000000
rf::rf_eu_v = 0
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 000000000
rf::eu_rf_wren    = 0
rf::rf_stall = 0
rf::   rf[0] = 0
rf::   rf[1] = 1
rf::   rf[2] = 2
rf::   rf[3] = 3
rf::   rf[4] = 4
rf::   rf[5] = 5
rf::   rf[6] = 6
rf::   rf[7] = 7
rf::   rf[8] = 8
rf::   rf[9] = 9
rf::   rf[a] = a
rf::   rf[b] = b
rf::   rf[c] = c
rf::   rf[d] = 0
rf::   rf[e] = 0
rf::   rf[f] = 0
rf::   rf[10] = 0
rf::   rf[11] = 0
rf::   rf[12] = 0
rf::   rf[13] = 0
rf::   rf[14] = 0
rf::   rf[15] = 0
rf::   rf[16] = 0
rf::   rf[17] = 0
rf::   rf[18] = 0
rf::   rf[19] = 0
rf::   rf[1a] = 0
rf::   rf[1b] = 0
rf::   rf[1c] = 0
rf::   rf[1d] = 0
rf::   rf[1e] = 0
rf::   rf[1f] = 0
executionUnit::****************************************
executionUnit:: rf_eu_v=0
executionUnit::enable =1
executionUnit:: instReg=800c000c isInstFmtLas=0 instFmt=2
executionUnit:: rf_eu_ir = 0800c000c
executionUnit:: las op = NA las op = 0
executionUnit:: src_a = 000000000
executionUnit:: src_b = 000000000
executionUnit:: eu_rf_wr_data_las = 0
executionUnit:: eu_rf_wr_data_bit = 0
executionUnit:: id->dest = c
executionUnit:: eu_rf_wr_data = 000000000
executionUnit:: eu_rf_wr_addr = 00
executionUnit:: eu_rf_wren             = 0
   read op  buffer[f] = 800e000e im read operation  = f data = 800d000d
rf::write operation wr_addr_a = d
 eu_branch = 0 pcx = 10 pc_inc = 10
reset_ = 1
enable = 1
eu_branch = 0
 pc_im_v   = 1
 im_rf_v   = 1
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = f
im.data = 800d000d
npc_2 = 0000c
npc_3 = 0000b
npc_4 = 00000
pc_im_v = 1 im_RnW = 1 pc_im_address = f  im_1 = 800d000d
im_data = 800d000d
ir_rf_3 = 0800c000c
ir_eu_4 = 0800b000b
 eu_branch.read() = 1
 pc_im_v   = 1
 im_rf_v   = 1
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = d
 rf_dest_addr = d
 rf_rd_data_a = 000000000
 rf_rd_data_b = 000000000
 im_rf_v   = 1
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
rf::****************************************
rf::v = 1
rf::instructionReg = 800e000e
rf::reset_ = 1
rf::rd_addr_a = 00
rf::rden_a    = 1
rf::rd_addr_b = 0e
rf::rden_b    = 1
rf:0 read operation rd_addr_a = 00
rf:all read operation rd_addr_b = 0e
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 000000000
rf::eu_rf_wren    = 0
rf::swapbit_wr_data_a = 0
rf::swapbit_wr_addr_a = 0
rf::swapbit_wr_data_b = 0
rf::swapbit_wr_addr_b = 0
rf::swapbit_wren.writ = 0
rf::eu_rf_wren 	  = 0
rf::swap_wren 		  = 0
rf::swapbit_wren 	  = 0
rf::testbit_wren 	  = 0
rf::setbit_wren 	  = 0
rf::ldimm_ab_16_wren = 1
rf::rf_mux_in_wren_a = 0
rf::rf_mux_in_wren_b = 0
rf::enable = 1
rf::operandA = 0
rf::operandB = 0
rf::Info im_rf_instructionDecoder->isInstFormatOpLdIm ()
rf::Info: ELoadLow before rf_dest_data =  d ldimm field = e ir =800e000e
rf::Info: after rf_dest_data =  e ldimm field = e ir =800e000e
rf::ldimm high write operation ldimm_ab_16_wr_addr = e ldimm_ab_16_wr_data = e
rf::im_rf_ir.read()  = 800e000e
rf::im_rf_instructionDecoder->getInstructionReg()  = 800e000e
rf:: isInstFormatOpLas = 0
rf:: isInstFormatOpBit = 0
rf:: isInstFormatOpLdIm= 1
rf:: isInstFormatOpBr  = 0
rf:: getLdImmOperand16Field= e
rf:: signExtend16(im_rf_instructionDecoder->getLdImmOperand16Field ()) = e
rf:: rf_dest_data  = e
rf::im_rf_ir = 800e000e
rf::eu_rf_ir = 0800c000c
rf::op_imm_a = 0
rf::op_imm_b = e
rf:: getOperandAImm8Field  = 0
rf:: getOperandBImm8Field  = e
rf::signExtend8 (op_imm_a) = 0
rf::signExtend8 (op_imm_b) = e
rf::signExtend16(op_imm_b) = e
rf::rd_data_rf_a = 0
rf::rd_data_rf_b = 0
rf::rd_data_imm_a = 0
rf::rd_data_imm_b = e
rf::rd_data_imm_mux_sel_a = 0
rf::rd_data_imm_mux_sel_b = 0
rf::rd_data_imm_mux_a = 0
rf::rd_data_imm_mux_b = 0
rf::rd_data_bypass_mux_a = 0
rf::rd_data_bypass_mux_b = 0
rf::rf_eu_wr_addr = e
rf::enable = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_a     = 00
rf::eu_rf_wr_addr_equal_rd_addr_a = 1
rf::eu_rf_wren.read() = 0
rf::eu_rf_wren_int = 0
rf::rfRdAddrEqEuRfWrAddr_a = 0
rf::bypass_a = 0
rf::eu_rf_wr_addr = 00
rf::rd_addr_b     = 0e
rf::eu_rf_wr_addr_equal_rd_addr_b = 0
rf::eu_rf_wren.read() = 0
rf::eu_rf_wren_int = 0
rf::rfRdAddrEqEuRfWrAddr_b = 0
rf::bypass_b = 0
rf::eu_data_a = 0
rf::rd_data_a = 000000000
rf::rd_data_b = 000000000
rf::rf_eu_v = 0
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 000000000
rf::eu_rf_wren    = 0
rf::rf_stall = 0
rf::   rf[0] = 0
rf::   rf[1] = 1
rf::   rf[2] = 2
rf::   rf[3] = 3
rf::   rf[4] = 4
rf::   rf[5] = 5
rf::   rf[6] = 6
rf::   rf[7] = 7
rf::   rf[8] = 8
rf::   rf[9] = 9
rf::   rf[a] = a
rf::   rf[b] = b
rf::   rf[c] = c
rf::   rf[d] = d
rf::   rf[e] = 0
rf::   rf[f] = 0
rf::   rf[10] = 0
rf::   rf[11] = 0
rf::   rf[12] = 0
rf::   rf[13] = 0
rf::   rf[14] = 0
rf::   rf[15] = 0
rf::   rf[16] = 0
rf::   rf[17] = 0
rf::   rf[18] = 0
rf::   rf[19] = 0
rf::   rf[1a] = 0
rf::   rf[1b] = 0
rf::   rf[1c] = 0
rf::   rf[1d] = 0
rf::   rf[1e] = 0
rf::   rf[1f] = 0
executionUnit::****************************************
executionUnit:: rf_eu_v=0
executionUnit::enable =1
executionUnit:: instReg=800d000d isInstFmtLas=0 instFmt=2
executionUnit:: rf_eu_ir = 0800d000d
executionUnit:: las op = NA las op = 0
executionUnit:: src_a = 000000000
executionUnit:: src_b = 000000000
executionUnit:: eu_rf_wr_data_las = 0
executionUnit:: eu_rf_wr_data_bit = 0
executionUnit:: id->dest = d
executionUnit:: eu_rf_wr_data = 000000000
executionUnit:: eu_rf_wr_addr = 00
executionUnit:: eu_rf_wren             = 0
   read op  buffer[10] = 800f000f im read operation  = 10 data = 800e000e
rf::write operation wr_addr_a = e
 eu_branch = 0 pcx = 11 pc_inc = 11
reset_ = 1
enable = 1
eu_branch = 0
 pc_im_v   = 1
 im_rf_v   = 1
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 10
im.data = 800e000e
npc_2 = 0000d
npc_3 = 0000c
npc_4 = 00000
pc_im_v = 1 im_RnW = 1 pc_im_address = 10  im_1 = 800e000e
im_data = 800e000e
ir_rf_3 = 0800d000d
ir_eu_4 = 0800c000c
 eu_branch.read() = 1
 pc_im_v   = 1
 im_rf_v   = 1
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = e
 rf_dest_addr = e
 rf_rd_data_a = 000000000
 rf_rd_data_b = 000000000
 im_rf_v   = 1
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
rf::****************************************
rf::v = 1
rf::instructionReg = 800f000f
rf::reset_ = 1
rf::rd_addr_a = 00
rf::rden_a    = 1
rf::rd_addr_b = 0f
rf::rden_b    = 1
rf:0 read operation rd_addr_a = 00
rf:all read operation rd_addr_b = 0f
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 000000000
rf::eu_rf_wren    = 0
rf::swapbit_wr_data_a = 0
rf::swapbit_wr_addr_a = 0
rf::swapbit_wr_data_b = 0
rf::swapbit_wr_addr_b = 0
rf::swapbit_wren.writ = 0
rf::eu_rf_wren 	  = 0
rf::swap_wren 		  = 0
rf::swapbit_wren 	  = 0
rf::testbit_wren 	  = 0
rf::setbit_wren 	  = 0
rf::ldimm_ab_16_wren = 1
rf::rf_mux_in_wren_a = 0
rf::rf_mux_in_wren_b = 0
rf::enable = 1
rf::operandA = 0
rf::operandB = 0
rf::Info im_rf_instructionDecoder->isInstFormatOpLdIm ()
rf::Info: ELoadLow before rf_dest_data =  e ldimm field = f ir =800f000f
rf::Info: after rf_dest_data =  f ldimm field = f ir =800f000f
rf::ldimm high write operation ldimm_ab_16_wr_addr = f ldimm_ab_16_wr_data = f
rf::im_rf_ir.read()  = 800f000f
rf::im_rf_instructionDecoder->getInstructionReg()  = 800f000f
rf:: isInstFormatOpLas = 0
rf:: isInstFormatOpBit = 0
rf:: isInstFormatOpLdIm= 1
rf:: isInstFormatOpBr  = 0
rf:: getLdImmOperand16Field= f
rf:: signExtend16(im_rf_instructionDecoder->getLdImmOperand16Field ()) = f
rf:: rf_dest_data  = f
rf::im_rf_ir = 800f000f
rf::eu_rf_ir = 0800d000d
rf::op_imm_a = 0
rf::op_imm_b = f
rf:: getOperandAImm8Field  = 0
rf:: getOperandBImm8Field  = f
rf::signExtend8 (op_imm_a) = 0
rf::signExtend8 (op_imm_b) = f
rf::signExtend16(op_imm_b) = f
rf::rd_data_rf_a = 0
rf::rd_data_rf_b = 0
rf::rd_data_imm_a = 0
rf::rd_data_imm_b = f
rf::rd_data_imm_mux_sel_a = 0
rf::rd_data_imm_mux_sel_b = 0
rf::rd_data_imm_mux_a = 0
rf::rd_data_imm_mux_b = 0
rf::rd_data_bypass_mux_a = 0
rf::rd_data_bypass_mux_b = 0
rf::rf_eu_wr_addr = f
rf::enable = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_a     = 00
rf::eu_rf_wr_addr_equal_rd_addr_a = 1
rf::eu_rf_wren.read() = 0
rf::eu_rf_wren_int = 0
rf::rfRdAddrEqEuRfWrAddr_a = 0
rf::bypass_a = 0
rf::eu_rf_wr_addr = 00
rf::rd_addr_b     = 0f
rf::eu_rf_wr_addr_equal_rd_addr_b = 0
rf::eu_rf_wren.read() = 0
rf::eu_rf_wren_int = 0
rf::rfRdAddrEqEuRfWrAddr_b = 0
rf::bypass_b = 0
rf::eu_data_a = 0
rf::rd_data_a = 000000000
rf::rd_data_b = 000000000
rf::rf_eu_v = 0
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 000000000
rf::eu_rf_wren    = 0
rf::rf_stall = 0
rf::   rf[0] = 0
rf::   rf[1] = 1
rf::   rf[2] = 2
rf::   rf[3] = 3
rf::   rf[4] = 4
rf::   rf[5] = 5
rf::   rf[6] = 6
rf::   rf[7] = 7
rf::   rf[8] = 8
rf::   rf[9] = 9
rf::   rf[a] = a
rf::   rf[b] = b
rf::   rf[c] = c
rf::   rf[d] = d
rf::   rf[e] = e
rf::   rf[f] = 0
rf::   rf[10] = 0
rf::   rf[11] = 0
rf::   rf[12] = 0
rf::   rf[13] = 0
rf::   rf[14] = 0
rf::   rf[15] = 0
rf::   rf[16] = 0
rf::   rf[17] = 0
rf::   rf[18] = 0
rf::   rf[19] = 0
rf::   rf[1a] = 0
rf::   rf[1b] = 0
rf::   rf[1c] = 0
rf::   rf[1d] = 0
rf::   rf[1e] = 0
rf::   rf[1f] = 0
executionUnit::****************************************
executionUnit:: rf_eu_v=0
executionUnit::enable =1
executionUnit:: instReg=800e000e isInstFmtLas=0 instFmt=2
executionUnit:: rf_eu_ir = 0800e000e
executionUnit:: las op = NA las op = 0
executionUnit:: src_a = 000000000
executionUnit:: src_b = 000000000
executionUnit:: eu_rf_wr_data_las = 0
executionUnit:: eu_rf_wr_data_bit = 0
executionUnit:: id->dest = e
executionUnit:: eu_rf_wr_data = 000000000
executionUnit:: eu_rf_wr_addr = 00
executionUnit:: eu_rf_wren             = 0
   read op  buffer[11] = 80100010 im read operation  = 11 data = 800f000f
rf::write operation wr_addr_a = f
 eu_branch = 0 pcx = 12 pc_inc = 12
reset_ = 1
enable = 1
eu_branch = 0
 pc_im_v   = 1
 im_rf_v   = 1
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 11
im.data = 800f000f
npc_2 = 0000e
npc_3 = 0000d
npc_4 = 00000
pc_im_v = 1 im_RnW = 1 pc_im_address = 11  im_1 = 800f000f
im_data = 800f000f
ir_rf_3 = 0800e000e
ir_eu_4 = 0800d000d
 eu_branch.read() = 1
 pc_im_v   = 1
 im_rf_v   = 1
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = f
 rf_dest_addr = f
 rf_rd_data_a = 000000000
 rf_rd_data_b = 000000000
 im_rf_v   = 1
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
rf::****************************************
rf::v = 1
rf::instructionReg = 80100010
rf::reset_ = 1
rf::rd_addr_a = 00
rf::rden_a    = 1
rf::rd_addr_b = 10
rf::rden_b    = 1
rf:0 read operation rd_addr_a = 00
rf:all read operation rd_addr_b = 10
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 000000000
rf::eu_rf_wren    = 0
rf::swapbit_wr_data_a = 0
rf::swapbit_wr_addr_a = 0
rf::swapbit_wr_data_b = 0
rf::swapbit_wr_addr_b = 0
rf::swapbit_wren.writ = 0
rf::eu_rf_wren 	  = 0
rf::swap_wren 		  = 0
rf::swapbit_wren 	  = 0
rf::testbit_wren 	  = 0
rf::setbit_wren 	  = 0
rf::ldimm_ab_16_wren = 1
rf::rf_mux_in_wren_a = 0
rf::rf_mux_in_wren_b = 0
rf::enable = 1
rf::operandA = 0
rf::operandB = 0
rf::Info im_rf_instructionDecoder->isInstFormatOpLdIm ()
rf::Info: ELoadLow before rf_dest_data =  f ldimm field = 10 ir =80100010
rf::Info: after rf_dest_data =  10 ldimm field = 10 ir =80100010
rf::ldimm high write operation ldimm_ab_16_wr_addr = 10 ldimm_ab_16_wr_data = 10
rf::im_rf_ir.read()  = 80100010
rf::im_rf_instructionDecoder->getInstructionReg()  = 80100010
rf:: isInstFormatOpLas = 0
rf:: isInstFormatOpBit = 0
rf:: isInstFormatOpLdIm= 1
rf:: isInstFormatOpBr  = 0
rf:: getLdImmOperand16Field= 10
rf:: signExtend16(im_rf_instructionDecoder->getLdImmOperand16Field ()) = 10
rf:: rf_dest_data  = 10
rf::im_rf_ir = 80100010
rf::eu_rf_ir = 0800e000e
rf::op_imm_a = 0
rf::op_imm_b = 10
rf:: getOperandAImm8Field  = 0
rf:: getOperandBImm8Field  = 10
rf::signExtend8 (op_imm_a) = 0
rf::signExtend8 (op_imm_b) = 10
rf::signExtend16(op_imm_b) = 10
rf::rd_data_rf_a = 0
rf::rd_data_rf_b = 0
rf::rd_data_imm_a = 0
rf::rd_data_imm_b = 10
rf::rd_data_imm_mux_sel_a = 0
rf::rd_data_imm_mux_sel_b = 0
rf::rd_data_imm_mux_a = 0
rf::rd_data_imm_mux_b = 0
rf::rd_data_bypass_mux_a = 0
rf::rd_data_bypass_mux_b = 0
rf::rf_eu_wr_addr = 10
rf::enable = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_a     = 00
rf::eu_rf_wr_addr_equal_rd_addr_a = 1
rf::eu_rf_wren.read() = 0
rf::eu_rf_wren_int = 0
rf::rfRdAddrEqEuRfWrAddr_a = 0
rf::bypass_a = 0
rf::eu_rf_wr_addr = 00
rf::rd_addr_b     = 10
rf::eu_rf_wr_addr_equal_rd_addr_b = 0
rf::eu_rf_wren.read() = 0
rf::eu_rf_wren_int = 0
rf::rfRdAddrEqEuRfWrAddr_b = 0
rf::bypass_b = 0
rf::eu_data_a = 0
rf::rd_data_a = 000000000
rf::rd_data_b = 000000000
rf::rf_eu_v = 0
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 000000000
rf::eu_rf_wren    = 0
rf::rf_stall = 0
rf::   rf[0] = 0
rf::   rf[1] = 1
rf::   rf[2] = 2
rf::   rf[3] = 3
rf::   rf[4] = 4
rf::   rf[5] = 5
rf::   rf[6] = 6
rf::   rf[7] = 7
rf::   rf[8] = 8
rf::   rf[9] = 9
rf::   rf[a] = a
rf::   rf[b] = b
rf::   rf[c] = c
rf::   rf[d] = d
rf::   rf[e] = e
rf::   rf[f] = f
rf::   rf[10] = 0
rf::   rf[11] = 0
rf::   rf[12] = 0
rf::   rf[13] = 0
rf::   rf[14] = 0
rf::   rf[15] = 0
rf::   rf[16] = 0
rf::   rf[17] = 0
rf::   rf[18] = 0
rf::   rf[19] = 0
rf::   rf[1a] = 0
rf::   rf[1b] = 0
rf::   rf[1c] = 0
rf::   rf[1d] = 0
rf::   rf[1e] = 0
rf::   rf[1f] = 0
executionUnit::****************************************
executionUnit:: rf_eu_v=0
executionUnit::enable =1
executionUnit:: instReg=800f000f isInstFmtLas=0 instFmt=2
executionUnit:: rf_eu_ir = 0800f000f
executionUnit:: las op = NA las op = 0
executionUnit:: src_a = 000000000
executionUnit:: src_b = 000000000
executionUnit:: eu_rf_wr_data_las = 0
executionUnit:: eu_rf_wr_data_bit = 0
executionUnit:: id->dest = f
executionUnit:: eu_rf_wr_data = 000000000
executionUnit:: eu_rf_wr_addr = 00
executionUnit:: eu_rf_wren             = 0
   read op  buffer[12] = 80110011 im read operation  = 12 data = 80100010
rf::write operation wr_addr_a = 10
 eu_branch = 0 pcx = 13 pc_inc = 13
reset_ = 1
enable = 1
eu_branch = 0
 pc_im_v   = 1
 im_rf_v   = 1
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 12
im.data = 80100010
npc_2 = 0000f
npc_3 = 0000e
npc_4 = 00000
pc_im_v = 1 im_RnW = 1 pc_im_address = 12  im_1 = 80100010
im_data = 80100010
ir_rf_3 = 0800f000f
ir_eu_4 = 0800e000e
 eu_branch.read() = 1
 pc_im_v   = 1
 im_rf_v   = 1
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 10
 rf_dest_addr = 10
 rf_rd_data_a = 000000000
 rf_rd_data_b = 000000000
 im_rf_v   = 1
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
rf::****************************************
rf::v = 1
rf::instructionReg = 80110011
rf::reset_ = 1
rf::rd_addr_a = 00
rf::rden_a    = 1
rf::rd_addr_b = 11
rf::rden_b    = 1
rf:0 read operation rd_addr_a = 00
rf:all read operation rd_addr_b = 11
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 000000000
rf::eu_rf_wren    = 0
rf::swapbit_wr_data_a = 0
rf::swapbit_wr_addr_a = 0
rf::swapbit_wr_data_b = 0
rf::swapbit_wr_addr_b = 0
rf::swapbit_wren.writ = 0
rf::eu_rf_wren 	  = 0
rf::swap_wren 		  = 0
rf::swapbit_wren 	  = 0
rf::testbit_wren 	  = 0
rf::setbit_wren 	  = 0
rf::ldimm_ab_16_wren = 1
rf::rf_mux_in_wren_a = 0
rf::rf_mux_in_wren_b = 0
rf::enable = 1
rf::operandA = 0
rf::operandB = 0
rf::Info im_rf_instructionDecoder->isInstFormatOpLdIm ()
rf::Info: ELoadLow before rf_dest_data =  10 ldimm field = 11 ir =80110011
rf::Info: after rf_dest_data =  11 ldimm field = 11 ir =80110011
rf::ldimm high write operation ldimm_ab_16_wr_addr = 11 ldimm_ab_16_wr_data = 11
rf::im_rf_ir.read()  = 80110011
rf::im_rf_instructionDecoder->getInstructionReg()  = 80110011
rf:: isInstFormatOpLas = 0
rf:: isInstFormatOpBit = 0
rf:: isInstFormatOpLdIm= 1
rf:: isInstFormatOpBr  = 0
rf:: getLdImmOperand16Field= 11
rf:: signExtend16(im_rf_instructionDecoder->getLdImmOperand16Field ()) = 11
rf:: rf_dest_data  = 11
rf::im_rf_ir = 80110011
rf::eu_rf_ir = 0800f000f
rf::op_imm_a = 0
rf::op_imm_b = 11
rf:: getOperandAImm8Field  = 0
rf:: getOperandBImm8Field  = 11
rf::signExtend8 (op_imm_a) = 0
rf::signExtend8 (op_imm_b) = 11
rf::signExtend16(op_imm_b) = 11
rf::rd_data_rf_a = 0
rf::rd_data_rf_b = 0
rf::rd_data_imm_a = 0
rf::rd_data_imm_b = 11
rf::rd_data_imm_mux_sel_a = 0
rf::rd_data_imm_mux_sel_b = 0
rf::rd_data_imm_mux_a = 0
rf::rd_data_imm_mux_b = 0
rf::rd_data_bypass_mux_a = 0
rf::rd_data_bypass_mux_b = 0
rf::rf_eu_wr_addr = 11
rf::enable = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_a     = 00
rf::eu_rf_wr_addr_equal_rd_addr_a = 1
rf::eu_rf_wren.read() = 0
rf::eu_rf_wren_int = 0
rf::rfRdAddrEqEuRfWrAddr_a = 0
rf::bypass_a = 0
rf::eu_rf_wr_addr = 00
rf::rd_addr_b     = 11
rf::eu_rf_wr_addr_equal_rd_addr_b = 0
rf::eu_rf_wren.read() = 0
rf::eu_rf_wren_int = 0
rf::rfRdAddrEqEuRfWrAddr_b = 0
rf::bypass_b = 0
rf::eu_data_a = 0
rf::rd_data_a = 000000000
rf::rd_data_b = 000000000
rf::rf_eu_v = 0
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 000000000
rf::eu_rf_wren    = 0
rf::rf_stall = 0
rf::   rf[0] = 0
rf::   rf[1] = 1
rf::   rf[2] = 2
rf::   rf[3] = 3
rf::   rf[4] = 4
rf::   rf[5] = 5
rf::   rf[6] = 6
rf::   rf[7] = 7
rf::   rf[8] = 8
rf::   rf[9] = 9
rf::   rf[a] = a
rf::   rf[b] = b
rf::   rf[c] = c
rf::   rf[d] = d
rf::   rf[e] = e
rf::   rf[f] = f
rf::   rf[10] = 10
rf::   rf[11] = 0
rf::   rf[12] = 0
rf::   rf[13] = 0
rf::   rf[14] = 0
rf::   rf[15] = 0
rf::   rf[16] = 0
rf::   rf[17] = 0
rf::   rf[18] = 0
rf::   rf[19] = 0
rf::   rf[1a] = 0
rf::   rf[1b] = 0
rf::   rf[1c] = 0
rf::   rf[1d] = 0
rf::   rf[1e] = 0
rf::   rf[1f] = 0
executionUnit::****************************************
executionUnit:: rf_eu_v=0
executionUnit::enable =1
executionUnit:: instReg=80100010 isInstFmtLas=0 instFmt=2
executionUnit:: rf_eu_ir = 080100010
executionUnit:: las op = NA las op = 0
executionUnit:: src_a = 000000000
executionUnit:: src_b = 000000000
executionUnit:: eu_rf_wr_data_las = 0
executionUnit:: eu_rf_wr_data_bit = 0
executionUnit:: id->dest = 10
executionUnit:: eu_rf_wr_data = 000000000
executionUnit:: eu_rf_wr_addr = 00
executionUnit:: eu_rf_wren             = 0
   read op  buffer[13] = 80120012 im read operation  = 13 data = 80110011
rf::write operation wr_addr_a = 11
 eu_branch = 0 pcx = 14 pc_inc = 14
reset_ = 1
enable = 1
eu_branch = 0
 pc_im_v   = 1
 im_rf_v   = 1
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 13
im.data = 80110011
npc_2 = 00010
npc_3 = 0000f
npc_4 = 00000
pc_im_v = 1 im_RnW = 1 pc_im_address = 13  im_1 = 80110011
im_data = 80110011
ir_rf_3 = 080100010
ir_eu_4 = 0800f000f
 eu_branch.read() = 1
 pc_im_v   = 1
 im_rf_v   = 1
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 11
 rf_dest_addr = 11
 rf_rd_data_a = 000000000
 rf_rd_data_b = 000000000
 im_rf_v   = 1
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
rf::****************************************
rf::v = 1
rf::instructionReg = 80120012
rf::reset_ = 1
rf::rd_addr_a = 00
rf::rden_a    = 1
rf::rd_addr_b = 12
rf::rden_b    = 1
rf:0 read operation rd_addr_a = 00
rf:all read operation rd_addr_b = 12
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 000000000
rf::eu_rf_wren    = 0
rf::swapbit_wr_data_a = 0
rf::swapbit_wr_addr_a = 0
rf::swapbit_wr_data_b = 0
rf::swapbit_wr_addr_b = 0
rf::swapbit_wren.writ = 0
rf::eu_rf_wren 	  = 0
rf::swap_wren 		  = 0
rf::swapbit_wren 	  = 0
rf::testbit_wren 	  = 0
rf::setbit_wren 	  = 0
rf::ldimm_ab_16_wren = 1
rf::rf_mux_in_wren_a = 0
rf::rf_mux_in_wren_b = 0
rf::enable = 1
rf::operandA = 0
rf::operandB = 0
rf::Info im_rf_instructionDecoder->isInstFormatOpLdIm ()
rf::Info: ELoadLow before rf_dest_data =  11 ldimm field = 12 ir =80120012
rf::Info: after rf_dest_data =  12 ldimm field = 12 ir =80120012
rf::ldimm high write operation ldimm_ab_16_wr_addr = 12 ldimm_ab_16_wr_data = 12
rf::im_rf_ir.read()  = 80120012
rf::im_rf_instructionDecoder->getInstructionReg()  = 80120012
rf:: isInstFormatOpLas = 0
rf:: isInstFormatOpBit = 0
rf:: isInstFormatOpLdIm= 1
rf:: isInstFormatOpBr  = 0
rf:: getLdImmOperand16Field= 12
rf:: signExtend16(im_rf_instructionDecoder->getLdImmOperand16Field ()) = 12
rf:: rf_dest_data  = 12
rf::im_rf_ir = 80120012
rf::eu_rf_ir = 080100010
rf::op_imm_a = 0
rf::op_imm_b = 12
rf:: getOperandAImm8Field  = 0
rf:: getOperandBImm8Field  = 12
rf::signExtend8 (op_imm_a) = 0
rf::signExtend8 (op_imm_b) = 12
rf::signExtend16(op_imm_b) = 12
rf::rd_data_rf_a = 0
rf::rd_data_rf_b = 0
rf::rd_data_imm_a = 0
rf::rd_data_imm_b = 12
rf::rd_data_imm_mux_sel_a = 0
rf::rd_data_imm_mux_sel_b = 0
rf::rd_data_imm_mux_a = 0
rf::rd_data_imm_mux_b = 0
rf::rd_data_bypass_mux_a = 0
rf::rd_data_bypass_mux_b = 0
rf::rf_eu_wr_addr = 12
rf::enable = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_a     = 00
rf::eu_rf_wr_addr_equal_rd_addr_a = 1
rf::eu_rf_wren.read() = 0
rf::eu_rf_wren_int = 0
rf::rfRdAddrEqEuRfWrAddr_a = 0
rf::bypass_a = 0
rf::eu_rf_wr_addr = 00
rf::rd_addr_b     = 12
rf::eu_rf_wr_addr_equal_rd_addr_b = 0
rf::eu_rf_wren.read() = 0
rf::eu_rf_wren_int = 0
rf::rfRdAddrEqEuRfWrAddr_b = 0
rf::bypass_b = 0
rf::eu_data_a = 0
rf::rd_data_a = 000000000
rf::rd_data_b = 000000000
rf::rf_eu_v = 0
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 000000000
rf::eu_rf_wren    = 0
rf::rf_stall = 0
rf::   rf[0] = 0
rf::   rf[1] = 1
rf::   rf[2] = 2
rf::   rf[3] = 3
rf::   rf[4] = 4
rf::   rf[5] = 5
rf::   rf[6] = 6
rf::   rf[7] = 7
rf::   rf[8] = 8
rf::   rf[9] = 9
rf::   rf[a] = a
rf::   rf[b] = b
rf::   rf[c] = c
rf::   rf[d] = d
rf::   rf[e] = e
rf::   rf[f] = f
rf::   rf[10] = 10
rf::   rf[11] = 11
rf::   rf[12] = 0
rf::   rf[13] = 0
rf::   rf[14] = 0
rf::   rf[15] = 0
rf::   rf[16] = 0
rf::   rf[17] = 0
rf::   rf[18] = 0
rf::   rf[19] = 0
rf::   rf[1a] = 0
rf::   rf[1b] = 0
rf::   rf[1c] = 0
rf::   rf[1d] = 0
rf::   rf[1e] = 0
rf::   rf[1f] = 0
executionUnit::****************************************
executionUnit:: rf_eu_v=0
executionUnit::enable =1
executionUnit:: instReg=80110011 isInstFmtLas=0 instFmt=2
executionUnit:: rf_eu_ir = 080110011
executionUnit:: las op = NA las op = 0
executionUnit:: src_a = 000000000
executionUnit:: src_b = 000000000
executionUnit:: eu_rf_wr_data_las = 0
executionUnit:: eu_rf_wr_data_bit = 0
executionUnit:: id->dest = 11
executionUnit:: eu_rf_wr_data = 000000000
executionUnit:: eu_rf_wr_addr = 00
executionUnit:: eu_rf_wren             = 0
   read op  buffer[14] = 80130013 im read operation  = 14 data = 80120012
rf::write operation wr_addr_a = 12
 eu_branch = 0 pcx = 15 pc_inc = 15
reset_ = 1
enable = 1
eu_branch = 0
 pc_im_v   = 1
 im_rf_v   = 1
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 14
im.data = 80120012
npc_2 = 00011
npc_3 = 00010
npc_4 = 00000
pc_im_v = 1 im_RnW = 1 pc_im_address = 14  im_1 = 80120012
im_data = 80120012
ir_rf_3 = 080110011
ir_eu_4 = 080100010
 eu_branch.read() = 1
 pc_im_v   = 1
 im_rf_v   = 1
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 12
 rf_dest_addr = 12
 rf_rd_data_a = 000000000
 rf_rd_data_b = 000000000
 im_rf_v   = 1
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
rf::****************************************
rf::v = 1
rf::instructionReg = 80130013
rf::reset_ = 1
rf::rd_addr_a = 00
rf::rden_a    = 1
rf::rd_addr_b = 13
rf::rden_b    = 1
rf:0 read operation rd_addr_a = 00
rf:all read operation rd_addr_b = 13
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 000000000
rf::eu_rf_wren    = 0
rf::swapbit_wr_data_a = 0
rf::swapbit_wr_addr_a = 0
rf::swapbit_wr_data_b = 0
rf::swapbit_wr_addr_b = 0
rf::swapbit_wren.writ = 0
rf::eu_rf_wren 	  = 0
rf::swap_wren 		  = 0
rf::swapbit_wren 	  = 0
rf::testbit_wren 	  = 0
rf::setbit_wren 	  = 0
rf::ldimm_ab_16_wren = 1
rf::rf_mux_in_wren_a = 0
rf::rf_mux_in_wren_b = 0
rf::enable = 1
rf::operandA = 0
rf::operandB = 0
rf::Info im_rf_instructionDecoder->isInstFormatOpLdIm ()
rf::Info: ELoadLow before rf_dest_data =  12 ldimm field = 13 ir =80130013
rf::Info: after rf_dest_data =  13 ldimm field = 13 ir =80130013
rf::ldimm high write operation ldimm_ab_16_wr_addr = 13 ldimm_ab_16_wr_data = 13
rf::im_rf_ir.read()  = 80130013
rf::im_rf_instructionDecoder->getInstructionReg()  = 80130013
rf:: isInstFormatOpLas = 0
rf:: isInstFormatOpBit = 0
rf:: isInstFormatOpLdIm= 1
rf:: isInstFormatOpBr  = 0
rf:: getLdImmOperand16Field= 13
rf:: signExtend16(im_rf_instructionDecoder->getLdImmOperand16Field ()) = 13
rf:: rf_dest_data  = 13
rf::im_rf_ir = 80130013
rf::eu_rf_ir = 080110011
rf::op_imm_a = 0
rf::op_imm_b = 13
rf:: getOperandAImm8Field  = 0
rf:: getOperandBImm8Field  = 13
rf::signExtend8 (op_imm_a) = 0
rf::signExtend8 (op_imm_b) = 13
rf::signExtend16(op_imm_b) = 13
rf::rd_data_rf_a = 0
rf::rd_data_rf_b = 0
rf::rd_data_imm_a = 0
rf::rd_data_imm_b = 13
rf::rd_data_imm_mux_sel_a = 0
rf::rd_data_imm_mux_sel_b = 0
rf::rd_data_imm_mux_a = 0
rf::rd_data_imm_mux_b = 0
rf::rd_data_bypass_mux_a = 0
rf::rd_data_bypass_mux_b = 0
rf::rf_eu_wr_addr = 13
rf::enable = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_a     = 00
rf::eu_rf_wr_addr_equal_rd_addr_a = 1
rf::eu_rf_wren.read() = 0
rf::eu_rf_wren_int = 0
rf::rfRdAddrEqEuRfWrAddr_a = 0
rf::bypass_a = 0
rf::eu_rf_wr_addr = 00
rf::rd_addr_b     = 13
rf::eu_rf_wr_addr_equal_rd_addr_b = 0
rf::eu_rf_wren.read() = 0
rf::eu_rf_wren_int = 0
rf::rfRdAddrEqEuRfWrAddr_b = 0
rf::bypass_b = 0
rf::eu_data_a = 0
rf::rd_data_a = 000000000
rf::rd_data_b = 000000000
rf::rf_eu_v = 0
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 000000000
rf::eu_rf_wren    = 0
rf::rf_stall = 0
rf::   rf[0] = 0
rf::   rf[1] = 1
rf::   rf[2] = 2
rf::   rf[3] = 3
rf::   rf[4] = 4
rf::   rf[5] = 5
rf::   rf[6] = 6
rf::   rf[7] = 7
rf::   rf[8] = 8
rf::   rf[9] = 9
rf::   rf[a] = a
rf::   rf[b] = b
rf::   rf[c] = c
rf::   rf[d] = d
rf::   rf[e] = e
rf::   rf[f] = f
rf::   rf[10] = 10
rf::   rf[11] = 11
rf::   rf[12] = 12
rf::   rf[13] = 0
rf::   rf[14] = 0
rf::   rf[15] = 0
rf::   rf[16] = 0
rf::   rf[17] = 0
rf::   rf[18] = 0
rf::   rf[19] = 0
rf::   rf[1a] = 0
rf::   rf[1b] = 0
rf::   rf[1c] = 0
rf::   rf[1d] = 0
rf::   rf[1e] = 0
rf::   rf[1f] = 0
executionUnit::****************************************
executionUnit:: rf_eu_v=0
executionUnit::enable =1
executionUnit:: instReg=80120012 isInstFmtLas=0 instFmt=2
executionUnit:: rf_eu_ir = 080120012
executionUnit:: las op = NA las op = 0
executionUnit:: src_a = 000000000
executionUnit:: src_b = 000000000
executionUnit:: eu_rf_wr_data_las = 0
executionUnit:: eu_rf_wr_data_bit = 0
executionUnit:: id->dest = 12
executionUnit:: eu_rf_wr_data = 000000000
executionUnit:: eu_rf_wr_addr = 00
executionUnit:: eu_rf_wren             = 0
   read op  buffer[15] = 80140014 im read operation  = 15 data = 80130013
rf::write operation wr_addr_a = 13
 eu_branch = 0 pcx = 16 pc_inc = 16
reset_ = 1
enable = 1
eu_branch = 0
 pc_im_v   = 1
 im_rf_v   = 1
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 15
im.data = 80130013
npc_2 = 00012
npc_3 = 00011
npc_4 = 00000
pc_im_v = 1 im_RnW = 1 pc_im_address = 15  im_1 = 80130013
im_data = 80130013
ir_rf_3 = 080120012
ir_eu_4 = 080110011
 eu_branch.read() = 1
 pc_im_v   = 1
 im_rf_v   = 1
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 13
 rf_dest_addr = 13
 rf_rd_data_a = 000000000
 rf_rd_data_b = 000000000
 im_rf_v   = 1
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
rf::****************************************
rf::v = 1
rf::instructionReg = 80140014
rf::reset_ = 1
rf::rd_addr_a = 00
rf::rden_a    = 1
rf::rd_addr_b = 14
rf::rden_b    = 1
rf:0 read operation rd_addr_a = 00
rf:all read operation rd_addr_b = 14
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 000000000
rf::eu_rf_wren    = 0
rf::swapbit_wr_data_a = 0
rf::swapbit_wr_addr_a = 0
rf::swapbit_wr_data_b = 0
rf::swapbit_wr_addr_b = 0
rf::swapbit_wren.writ = 0
rf::eu_rf_wren 	  = 0
rf::swap_wren 		  = 0
rf::swapbit_wren 	  = 0
rf::testbit_wren 	  = 0
rf::setbit_wren 	  = 0
rf::ldimm_ab_16_wren = 1
rf::rf_mux_in_wren_a = 0
rf::rf_mux_in_wren_b = 0
rf::enable = 1
rf::operandA = 0
rf::operandB = 0
rf::Info im_rf_instructionDecoder->isInstFormatOpLdIm ()
rf::Info: ELoadLow before rf_dest_data =  13 ldimm field = 14 ir =80140014
rf::Info: after rf_dest_data =  14 ldimm field = 14 ir =80140014
rf::ldimm high write operation ldimm_ab_16_wr_addr = 14 ldimm_ab_16_wr_data = 14
rf::im_rf_ir.read()  = 80140014
rf::im_rf_instructionDecoder->getInstructionReg()  = 80140014
rf:: isInstFormatOpLas = 0
rf:: isInstFormatOpBit = 0
rf:: isInstFormatOpLdIm= 1
rf:: isInstFormatOpBr  = 0
rf:: getLdImmOperand16Field= 14
rf:: signExtend16(im_rf_instructionDecoder->getLdImmOperand16Field ()) = 14
rf:: rf_dest_data  = 14
rf::im_rf_ir = 80140014
rf::eu_rf_ir = 080120012
rf::op_imm_a = 0
rf::op_imm_b = 14
rf:: getOperandAImm8Field  = 0
rf:: getOperandBImm8Field  = 14
rf::signExtend8 (op_imm_a) = 0
rf::signExtend8 (op_imm_b) = 14
rf::signExtend16(op_imm_b) = 14
rf::rd_data_rf_a = 0
rf::rd_data_rf_b = 0
rf::rd_data_imm_a = 0
rf::rd_data_imm_b = 14
rf::rd_data_imm_mux_sel_a = 0
rf::rd_data_imm_mux_sel_b = 0
rf::rd_data_imm_mux_a = 0
rf::rd_data_imm_mux_b = 0
rf::rd_data_bypass_mux_a = 0
rf::rd_data_bypass_mux_b = 0
rf::rf_eu_wr_addr = 14
rf::enable = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_a     = 00
rf::eu_rf_wr_addr_equal_rd_addr_a = 1
rf::eu_rf_wren.read() = 0
rf::eu_rf_wren_int = 0
rf::rfRdAddrEqEuRfWrAddr_a = 0
rf::bypass_a = 0
rf::eu_rf_wr_addr = 00
rf::rd_addr_b     = 14
rf::eu_rf_wr_addr_equal_rd_addr_b = 0
rf::eu_rf_wren.read() = 0
rf::eu_rf_wren_int = 0
rf::rfRdAddrEqEuRfWrAddr_b = 0
rf::bypass_b = 0
rf::eu_data_a = 0
rf::rd_data_a = 000000000
rf::rd_data_b = 000000000
rf::rf_eu_v = 0
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 000000000
rf::eu_rf_wren    = 0
rf::rf_stall = 0
rf::   rf[0] = 0
rf::   rf[1] = 1
rf::   rf[2] = 2
rf::   rf[3] = 3
rf::   rf[4] = 4
rf::   rf[5] = 5
rf::   rf[6] = 6
rf::   rf[7] = 7
rf::   rf[8] = 8
rf::   rf[9] = 9
rf::   rf[a] = a
rf::   rf[b] = b
rf::   rf[c] = c
rf::   rf[d] = d
rf::   rf[e] = e
rf::   rf[f] = f
rf::   rf[10] = 10
rf::   rf[11] = 11
rf::   rf[12] = 12
rf::   rf[13] = 13
rf::   rf[14] = 0
rf::   rf[15] = 0
rf::   rf[16] = 0
rf::   rf[17] = 0
rf::   rf[18] = 0
rf::   rf[19] = 0
rf::   rf[1a] = 0
rf::   rf[1b] = 0
rf::   rf[1c] = 0
rf::   rf[1d] = 0
rf::   rf[1e] = 0
rf::   rf[1f] = 0
executionUnit::****************************************
executionUnit:: rf_eu_v=0
executionUnit::enable =1
executionUnit:: instReg=80130013 isInstFmtLas=0 instFmt=2
executionUnit:: rf_eu_ir = 080130013
executionUnit:: las op = NA las op = 0
executionUnit:: src_a = 000000000
executionUnit:: src_b = 000000000
executionUnit:: eu_rf_wr_data_las = 0
executionUnit:: eu_rf_wr_data_bit = 0
executionUnit:: id->dest = 13
executionUnit:: eu_rf_wr_data = 000000000
executionUnit:: eu_rf_wr_addr = 00
executionUnit:: eu_rf_wren             = 0
   read op  buffer[16] = 80150015 im read operation  = 16 data = 80140014
rf::write operation wr_addr_a = 14
 eu_branch = 0 pcx = 17 pc_inc = 17
reset_ = 1
enable = 1
eu_branch = 0
 pc_im_v   = 1
 im_rf_v   = 1
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 16
im.data = 80140014
npc_2 = 00013
npc_3 = 00012
npc_4 = 00000
pc_im_v = 1 im_RnW = 1 pc_im_address = 16  im_1 = 80140014
im_data = 80140014
ir_rf_3 = 080130013
ir_eu_4 = 080120012
 eu_branch.read() = 1
 pc_im_v   = 1
 im_rf_v   = 1
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 14
 rf_dest_addr = 14
 rf_rd_data_a = 000000000
 rf_rd_data_b = 000000000
 im_rf_v   = 1
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
rf::****************************************
rf::v = 1
rf::instructionReg = 80150015
rf::reset_ = 1
rf::rd_addr_a = 00
rf::rden_a    = 1
rf::rd_addr_b = 15
rf::rden_b    = 1
rf:0 read operation rd_addr_a = 00
rf:all read operation rd_addr_b = 15
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 000000000
rf::eu_rf_wren    = 0
rf::swapbit_wr_data_a = 0
rf::swapbit_wr_addr_a = 0
rf::swapbit_wr_data_b = 0
rf::swapbit_wr_addr_b = 0
rf::swapbit_wren.writ = 0
rf::eu_rf_wren 	  = 0
rf::swap_wren 		  = 0
rf::swapbit_wren 	  = 0
rf::testbit_wren 	  = 0
rf::setbit_wren 	  = 0
rf::ldimm_ab_16_wren = 1
rf::rf_mux_in_wren_a = 0
rf::rf_mux_in_wren_b = 0
rf::enable = 1
rf::operandA = 0
rf::operandB = 0
rf::Info im_rf_instructionDecoder->isInstFormatOpLdIm ()
rf::Info: ELoadLow before rf_dest_data =  14 ldimm field = 15 ir =80150015
rf::Info: after rf_dest_data =  15 ldimm field = 15 ir =80150015
rf::ldimm high write operation ldimm_ab_16_wr_addr = 15 ldimm_ab_16_wr_data = 15
rf::im_rf_ir.read()  = 80150015
rf::im_rf_instructionDecoder->getInstructionReg()  = 80150015
rf:: isInstFormatOpLas = 0
rf:: isInstFormatOpBit = 0
rf:: isInstFormatOpLdIm= 1
rf:: isInstFormatOpBr  = 0
rf:: getLdImmOperand16Field= 15
rf:: signExtend16(im_rf_instructionDecoder->getLdImmOperand16Field ()) = 15
rf:: rf_dest_data  = 15
rf::im_rf_ir = 80150015
rf::eu_rf_ir = 080130013
rf::op_imm_a = 0
rf::op_imm_b = 15
rf:: getOperandAImm8Field  = 0
rf:: getOperandBImm8Field  = 15
rf::signExtend8 (op_imm_a) = 0
rf::signExtend8 (op_imm_b) = 15
rf::signExtend16(op_imm_b) = 15
rf::rd_data_rf_a = 0
rf::rd_data_rf_b = 0
rf::rd_data_imm_a = 0
rf::rd_data_imm_b = 15
rf::rd_data_imm_mux_sel_a = 0
rf::rd_data_imm_mux_sel_b = 0
rf::rd_data_imm_mux_a = 0
rf::rd_data_imm_mux_b = 0
rf::rd_data_bypass_mux_a = 0
rf::rd_data_bypass_mux_b = 0
rf::rf_eu_wr_addr = 15
rf::enable = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_a     = 00
rf::eu_rf_wr_addr_equal_rd_addr_a = 1
rf::eu_rf_wren.read() = 0
rf::eu_rf_wren_int = 0
rf::rfRdAddrEqEuRfWrAddr_a = 0
rf::bypass_a = 0
rf::eu_rf_wr_addr = 00
rf::rd_addr_b     = 15
rf::eu_rf_wr_addr_equal_rd_addr_b = 0
rf::eu_rf_wren.read() = 0
rf::eu_rf_wren_int = 0
rf::rfRdAddrEqEuRfWrAddr_b = 0
rf::bypass_b = 0
rf::eu_data_a = 0
rf::rd_data_a = 000000000
rf::rd_data_b = 000000000
rf::rf_eu_v = 0
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 000000000
rf::eu_rf_wren    = 0
rf::rf_stall = 0
rf::   rf[0] = 0
rf::   rf[1] = 1
rf::   rf[2] = 2
rf::   rf[3] = 3
rf::   rf[4] = 4
rf::   rf[5] = 5
rf::   rf[6] = 6
rf::   rf[7] = 7
rf::   rf[8] = 8
rf::   rf[9] = 9
rf::   rf[a] = a
rf::   rf[b] = b
rf::   rf[c] = c
rf::   rf[d] = d
rf::   rf[e] = e
rf::   rf[f] = f
rf::   rf[10] = 10
rf::   rf[11] = 11
rf::   rf[12] = 12
rf::   rf[13] = 13
rf::   rf[14] = 14
rf::   rf[15] = 0
rf::   rf[16] = 0
rf::   rf[17] = 0
rf::   rf[18] = 0
rf::   rf[19] = 0
rf::   rf[1a] = 0
rf::   rf[1b] = 0
rf::   rf[1c] = 0
rf::   rf[1d] = 0
rf::   rf[1e] = 0
rf::   rf[1f] = 0
executionUnit::****************************************
executionUnit:: rf_eu_v=0
executionUnit::enable =1
executionUnit:: instReg=80140014 isInstFmtLas=0 instFmt=2
executionUnit:: rf_eu_ir = 080140014
executionUnit:: las op = NA las op = 0
executionUnit:: src_a = 000000000
executionUnit:: src_b = 000000000
executionUnit:: eu_rf_wr_data_las = 0
executionUnit:: eu_rf_wr_data_bit = 0
executionUnit:: id->dest = 14
executionUnit:: eu_rf_wr_data = 000000000
executionUnit:: eu_rf_wr_addr = 00
executionUnit:: eu_rf_wren             = 0
   read op  buffer[17] = 80160016 im read operation  = 17 data = 80150015
rf::write operation wr_addr_a = 15
 eu_branch = 0 pcx = 18 pc_inc = 18
reset_ = 1
enable = 1
eu_branch = 0
 pc_im_v   = 1
 im_rf_v   = 1
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 17
im.data = 80150015
npc_2 = 00014
npc_3 = 00013
npc_4 = 00000
pc_im_v = 1 im_RnW = 1 pc_im_address = 17  im_1 = 80150015
im_data = 80150015
ir_rf_3 = 080140014
ir_eu_4 = 080130013
 eu_branch.read() = 1
 pc_im_v   = 1
 im_rf_v   = 1
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 15
 rf_dest_addr = 15
 rf_rd_data_a = 000000000
 rf_rd_data_b = 000000000
 im_rf_v   = 1
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
rf::****************************************
rf::v = 1
rf::instructionReg = 80160016
rf::reset_ = 1
rf::rd_addr_a = 00
rf::rden_a    = 1
rf::rd_addr_b = 16
rf::rden_b    = 1
rf:0 read operation rd_addr_a = 00
rf:all read operation rd_addr_b = 16
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 000000000
rf::eu_rf_wren    = 0
rf::swapbit_wr_data_a = 0
rf::swapbit_wr_addr_a = 0
rf::swapbit_wr_data_b = 0
rf::swapbit_wr_addr_b = 0
rf::swapbit_wren.writ = 0
rf::eu_rf_wren 	  = 0
rf::swap_wren 		  = 0
rf::swapbit_wren 	  = 0
rf::testbit_wren 	  = 0
rf::setbit_wren 	  = 0
rf::ldimm_ab_16_wren = 1
rf::rf_mux_in_wren_a = 0
rf::rf_mux_in_wren_b = 0
rf::enable = 1
rf::operandA = 0
rf::operandB = 0
rf::Info im_rf_instructionDecoder->isInstFormatOpLdIm ()
rf::Info: ELoadLow before rf_dest_data =  15 ldimm field = 16 ir =80160016
rf::Info: after rf_dest_data =  16 ldimm field = 16 ir =80160016
rf::ldimm high write operation ldimm_ab_16_wr_addr = 16 ldimm_ab_16_wr_data = 16
rf::im_rf_ir.read()  = 80160016
rf::im_rf_instructionDecoder->getInstructionReg()  = 80160016
rf:: isInstFormatOpLas = 0
rf:: isInstFormatOpBit = 0
rf:: isInstFormatOpLdIm= 1
rf:: isInstFormatOpBr  = 0
rf:: getLdImmOperand16Field= 16
rf:: signExtend16(im_rf_instructionDecoder->getLdImmOperand16Field ()) = 16
rf:: rf_dest_data  = 16
rf::im_rf_ir = 80160016
rf::eu_rf_ir = 080140014
rf::op_imm_a = 0
rf::op_imm_b = 16
rf:: getOperandAImm8Field  = 0
rf:: getOperandBImm8Field  = 16
rf::signExtend8 (op_imm_a) = 0
rf::signExtend8 (op_imm_b) = 16
rf::signExtend16(op_imm_b) = 16
rf::rd_data_rf_a = 0
rf::rd_data_rf_b = 0
rf::rd_data_imm_a = 0
rf::rd_data_imm_b = 16
rf::rd_data_imm_mux_sel_a = 0
rf::rd_data_imm_mux_sel_b = 0
rf::rd_data_imm_mux_a = 0
rf::rd_data_imm_mux_b = 0
rf::rd_data_bypass_mux_a = 0
rf::rd_data_bypass_mux_b = 0
rf::rf_eu_wr_addr = 16
rf::enable = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_a     = 00
rf::eu_rf_wr_addr_equal_rd_addr_a = 1
rf::eu_rf_wren.read() = 0
rf::eu_rf_wren_int = 0
rf::rfRdAddrEqEuRfWrAddr_a = 0
rf::bypass_a = 0
rf::eu_rf_wr_addr = 00
rf::rd_addr_b     = 16
rf::eu_rf_wr_addr_equal_rd_addr_b = 0
rf::eu_rf_wren.read() = 0
rf::eu_rf_wren_int = 0
rf::rfRdAddrEqEuRfWrAddr_b = 0
rf::bypass_b = 0
rf::eu_data_a = 0
rf::rd_data_a = 000000000
rf::rd_data_b = 000000000
rf::rf_eu_v = 0
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 000000000
rf::eu_rf_wren    = 0
rf::rf_stall = 0
rf::   rf[0] = 0
rf::   rf[1] = 1
rf::   rf[2] = 2
rf::   rf[3] = 3
rf::   rf[4] = 4
rf::   rf[5] = 5
rf::   rf[6] = 6
rf::   rf[7] = 7
rf::   rf[8] = 8
rf::   rf[9] = 9
rf::   rf[a] = a
rf::   rf[b] = b
rf::   rf[c] = c
rf::   rf[d] = d
rf::   rf[e] = e
rf::   rf[f] = f
rf::   rf[10] = 10
rf::   rf[11] = 11
rf::   rf[12] = 12
rf::   rf[13] = 13
rf::   rf[14] = 14
rf::   rf[15] = 15
rf::   rf[16] = 0
rf::   rf[17] = 0
rf::   rf[18] = 0
rf::   rf[19] = 0
rf::   rf[1a] = 0
rf::   rf[1b] = 0
rf::   rf[1c] = 0
rf::   rf[1d] = 0
rf::   rf[1e] = 0
rf::   rf[1f] = 0
executionUnit::****************************************
executionUnit:: rf_eu_v=0
executionUnit::enable =1
executionUnit:: instReg=80150015 isInstFmtLas=0 instFmt=2
executionUnit:: rf_eu_ir = 080150015
executionUnit:: las op = NA las op = 0
executionUnit:: src_a = 000000000
executionUnit:: src_b = 000000000
executionUnit:: eu_rf_wr_data_las = 0
executionUnit:: eu_rf_wr_data_bit = 0
executionUnit:: id->dest = 15
executionUnit:: eu_rf_wr_data = 000000000
executionUnit:: eu_rf_wr_addr = 00
executionUnit:: eu_rf_wren             = 0
   read op  buffer[18] = 80170017 im read operation  = 18 data = 80160016
rf::write operation wr_addr_a = 16
 eu_branch = 0 pcx = 19 pc_inc = 19
reset_ = 1
enable = 1
eu_branch = 0
 pc_im_v   = 1
 im_rf_v   = 1
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 18
im.data = 80160016
npc_2 = 00015
npc_3 = 00014
npc_4 = 00000
pc_im_v = 1 im_RnW = 1 pc_im_address = 18  im_1 = 80160016
im_data = 80160016
ir_rf_3 = 080150015
ir_eu_4 = 080140014
 eu_branch.read() = 1
 pc_im_v   = 1
 im_rf_v   = 1
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 16
 rf_dest_addr = 16
 rf_rd_data_a = 000000000
 rf_rd_data_b = 000000000
 im_rf_v   = 1
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
rf::****************************************
rf::v = 1
rf::instructionReg = 80170017
rf::reset_ = 1
rf::rd_addr_a = 00
rf::rden_a    = 1
rf::rd_addr_b = 17
rf::rden_b    = 1
rf:0 read operation rd_addr_a = 00
rf:all read operation rd_addr_b = 17
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 000000000
rf::eu_rf_wren    = 0
rf::swapbit_wr_data_a = 0
rf::swapbit_wr_addr_a = 0
rf::swapbit_wr_data_b = 0
rf::swapbit_wr_addr_b = 0
rf::swapbit_wren.writ = 0
rf::eu_rf_wren 	  = 0
rf::swap_wren 		  = 0
rf::swapbit_wren 	  = 0
rf::testbit_wren 	  = 0
rf::setbit_wren 	  = 0
rf::ldimm_ab_16_wren = 1
rf::rf_mux_in_wren_a = 0
rf::rf_mux_in_wren_b = 0
rf::enable = 1
rf::operandA = 0
rf::operandB = 0
rf::Info im_rf_instructionDecoder->isInstFormatOpLdIm ()
rf::Info: ELoadLow before rf_dest_data =  16 ldimm field = 17 ir =80170017
rf::Info: after rf_dest_data =  17 ldimm field = 17 ir =80170017
rf::ldimm high write operation ldimm_ab_16_wr_addr = 17 ldimm_ab_16_wr_data = 17
rf::im_rf_ir.read()  = 80170017
rf::im_rf_instructionDecoder->getInstructionReg()  = 80170017
rf:: isInstFormatOpLas = 0
rf:: isInstFormatOpBit = 0
rf:: isInstFormatOpLdIm= 1
rf:: isInstFormatOpBr  = 0
rf:: getLdImmOperand16Field= 17
rf:: signExtend16(im_rf_instructionDecoder->getLdImmOperand16Field ()) = 17
rf:: rf_dest_data  = 17
rf::im_rf_ir = 80170017
rf::eu_rf_ir = 080150015
rf::op_imm_a = 0
rf::op_imm_b = 17
rf:: getOperandAImm8Field  = 0
rf:: getOperandBImm8Field  = 17
rf::signExtend8 (op_imm_a) = 0
rf::signExtend8 (op_imm_b) = 17
rf::signExtend16(op_imm_b) = 17
rf::rd_data_rf_a = 0
rf::rd_data_rf_b = 0
rf::rd_data_imm_a = 0
rf::rd_data_imm_b = 17
rf::rd_data_imm_mux_sel_a = 0
rf::rd_data_imm_mux_sel_b = 0
rf::rd_data_imm_mux_a = 0
rf::rd_data_imm_mux_b = 0
rf::rd_data_bypass_mux_a = 0
rf::rd_data_bypass_mux_b = 0
rf::rf_eu_wr_addr = 17
rf::enable = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_a     = 00
rf::eu_rf_wr_addr_equal_rd_addr_a = 1
rf::eu_rf_wren.read() = 0
rf::eu_rf_wren_int = 0
rf::rfRdAddrEqEuRfWrAddr_a = 0
rf::bypass_a = 0
rf::eu_rf_wr_addr = 00
rf::rd_addr_b     = 17
rf::eu_rf_wr_addr_equal_rd_addr_b = 0
rf::eu_rf_wren.read() = 0
rf::eu_rf_wren_int = 0
rf::rfRdAddrEqEuRfWrAddr_b = 0
rf::bypass_b = 0
rf::eu_data_a = 0
rf::rd_data_a = 000000000
rf::rd_data_b = 000000000
rf::rf_eu_v = 0
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 000000000
rf::eu_rf_wren    = 0
rf::rf_stall = 0
rf::   rf[0] = 0
rf::   rf[1] = 1
rf::   rf[2] = 2
rf::   rf[3] = 3
rf::   rf[4] = 4
rf::   rf[5] = 5
rf::   rf[6] = 6
rf::   rf[7] = 7
rf::   rf[8] = 8
rf::   rf[9] = 9
rf::   rf[a] = a
rf::   rf[b] = b
rf::   rf[c] = c
rf::   rf[d] = d
rf::   rf[e] = e
rf::   rf[f] = f
rf::   rf[10] = 10
rf::   rf[11] = 11
rf::   rf[12] = 12
rf::   rf[13] = 13
rf::   rf[14] = 14
rf::   rf[15] = 15
rf::   rf[16] = 16
rf::   rf[17] = 0
rf::   rf[18] = 0
rf::   rf[19] = 0
rf::   rf[1a] = 0
rf::   rf[1b] = 0
rf::   rf[1c] = 0
rf::   rf[1d] = 0
rf::   rf[1e] = 0
rf::   rf[1f] = 0
executionUnit::****************************************
executionUnit:: rf_eu_v=0
executionUnit::enable =1
executionUnit:: instReg=80160016 isInstFmtLas=0 instFmt=2
executionUnit:: rf_eu_ir = 080160016
executionUnit:: las op = NA las op = 0
executionUnit:: src_a = 000000000
executionUnit:: src_b = 000000000
executionUnit:: eu_rf_wr_data_las = 0
executionUnit:: eu_rf_wr_data_bit = 0
executionUnit:: id->dest = 16
executionUnit:: eu_rf_wr_data = 000000000
executionUnit:: eu_rf_wr_addr = 00
executionUnit:: eu_rf_wren             = 0
   read op  buffer[19] = 80180018 im read operation  = 19 data = 80170017
rf::write operation wr_addr_a = 17
 eu_branch = 0 pcx = 1a pc_inc = 1a
reset_ = 1
enable = 1
eu_branch = 0
 pc_im_v   = 1
 im_rf_v   = 1
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 19
im.data = 80170017
npc_2 = 00016
npc_3 = 00015
npc_4 = 00000
pc_im_v = 1 im_RnW = 1 pc_im_address = 19  im_1 = 80170017
im_data = 80170017
ir_rf_3 = 080160016
ir_eu_4 = 080150015
 eu_branch.read() = 1
 pc_im_v   = 1
 im_rf_v   = 1
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 17
 rf_dest_addr = 17
 rf_rd_data_a = 000000000
 rf_rd_data_b = 000000000
 im_rf_v   = 1
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
rf::****************************************
rf::v = 1
rf::instructionReg = 80180018
rf::reset_ = 1
rf::rd_addr_a = 00
rf::rden_a    = 1
rf::rd_addr_b = 18
rf::rden_b    = 1
rf:0 read operation rd_addr_a = 00
rf:all read operation rd_addr_b = 18
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 000000000
rf::eu_rf_wren    = 0
rf::swapbit_wr_data_a = 0
rf::swapbit_wr_addr_a = 0
rf::swapbit_wr_data_b = 0
rf::swapbit_wr_addr_b = 0
rf::swapbit_wren.writ = 0
rf::eu_rf_wren 	  = 0
rf::swap_wren 		  = 0
rf::swapbit_wren 	  = 0
rf::testbit_wren 	  = 0
rf::setbit_wren 	  = 0
rf::ldimm_ab_16_wren = 1
rf::rf_mux_in_wren_a = 0
rf::rf_mux_in_wren_b = 0
rf::enable = 1
rf::operandA = 0
rf::operandB = 0
rf::Info im_rf_instructionDecoder->isInstFormatOpLdIm ()
rf::Info: ELoadLow before rf_dest_data =  17 ldimm field = 18 ir =80180018
rf::Info: after rf_dest_data =  18 ldimm field = 18 ir =80180018
rf::ldimm high write operation ldimm_ab_16_wr_addr = 18 ldimm_ab_16_wr_data = 18
rf::im_rf_ir.read()  = 80180018
rf::im_rf_instructionDecoder->getInstructionReg()  = 80180018
rf:: isInstFormatOpLas = 0
rf:: isInstFormatOpBit = 0
rf:: isInstFormatOpLdIm= 1
rf:: isInstFormatOpBr  = 0
rf:: getLdImmOperand16Field= 18
rf:: signExtend16(im_rf_instructionDecoder->getLdImmOperand16Field ()) = 18
rf:: rf_dest_data  = 18
rf::im_rf_ir = 80180018
rf::eu_rf_ir = 080160016
rf::op_imm_a = 0
rf::op_imm_b = 18
rf:: getOperandAImm8Field  = 0
rf:: getOperandBImm8Field  = 18
rf::signExtend8 (op_imm_a) = 0
rf::signExtend8 (op_imm_b) = 18
rf::signExtend16(op_imm_b) = 18
rf::rd_data_rf_a = 0
rf::rd_data_rf_b = 0
rf::rd_data_imm_a = 0
rf::rd_data_imm_b = 18
rf::rd_data_imm_mux_sel_a = 0
rf::rd_data_imm_mux_sel_b = 0
rf::rd_data_imm_mux_a = 0
rf::rd_data_imm_mux_b = 0
rf::rd_data_bypass_mux_a = 0
rf::rd_data_bypass_mux_b = 0
rf::rf_eu_wr_addr = 18
rf::enable = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_a     = 00
rf::eu_rf_wr_addr_equal_rd_addr_a = 1
rf::eu_rf_wren.read() = 0
rf::eu_rf_wren_int = 0
rf::rfRdAddrEqEuRfWrAddr_a = 0
rf::bypass_a = 0
rf::eu_rf_wr_addr = 00
rf::rd_addr_b     = 18
rf::eu_rf_wr_addr_equal_rd_addr_b = 0
rf::eu_rf_wren.read() = 0
rf::eu_rf_wren_int = 0
rf::rfRdAddrEqEuRfWrAddr_b = 0
rf::bypass_b = 0
rf::eu_data_a = 0
rf::rd_data_a = 000000000
rf::rd_data_b = 000000000
rf::rf_eu_v = 0
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 000000000
rf::eu_rf_wren    = 0
rf::rf_stall = 0
rf::   rf[0] = 0
rf::   rf[1] = 1
rf::   rf[2] = 2
rf::   rf[3] = 3
rf::   rf[4] = 4
rf::   rf[5] = 5
rf::   rf[6] = 6
rf::   rf[7] = 7
rf::   rf[8] = 8
rf::   rf[9] = 9
rf::   rf[a] = a
rf::   rf[b] = b
rf::   rf[c] = c
rf::   rf[d] = d
rf::   rf[e] = e
rf::   rf[f] = f
rf::   rf[10] = 10
rf::   rf[11] = 11
rf::   rf[12] = 12
rf::   rf[13] = 13
rf::   rf[14] = 14
rf::   rf[15] = 15
rf::   rf[16] = 16
rf::   rf[17] = 17
rf::   rf[18] = 0
rf::   rf[19] = 0
rf::   rf[1a] = 0
rf::   rf[1b] = 0
rf::   rf[1c] = 0
rf::   rf[1d] = 0
rf::   rf[1e] = 0
rf::   rf[1f] = 0
executionUnit::****************************************
executionUnit:: rf_eu_v=0
executionUnit::enable =1
executionUnit:: instReg=80170017 isInstFmtLas=0 instFmt=2
executionUnit:: rf_eu_ir = 080170017
executionUnit:: las op = NA las op = 0
executionUnit:: src_a = 000000000
executionUnit:: src_b = 000000000
executionUnit:: eu_rf_wr_data_las = 0
executionUnit:: eu_rf_wr_data_bit = 0
executionUnit:: id->dest = 17
executionUnit:: eu_rf_wr_data = 000000000
executionUnit:: eu_rf_wr_addr = 00
executionUnit:: eu_rf_wren             = 0
   read op  buffer[1a] = 80190019 im read operation  = 1a data = 80180018
rf::write operation wr_addr_a = 18
 eu_branch = 0 pcx = 1b pc_inc = 1b
reset_ = 1
enable = 1
eu_branch = 0
 pc_im_v   = 1
 im_rf_v   = 1
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 1a
im.data = 80180018
npc_2 = 00017
npc_3 = 00016
npc_4 = 00000
pc_im_v = 1 im_RnW = 1 pc_im_address = 1a  im_1 = 80180018
im_data = 80180018
ir_rf_3 = 080170017
ir_eu_4 = 080160016
 eu_branch.read() = 1
 pc_im_v   = 1
 im_rf_v   = 1
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 18
 rf_dest_addr = 18
 rf_rd_data_a = 000000000
 rf_rd_data_b = 000000000
 im_rf_v   = 1
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
rf::****************************************
rf::v = 1
rf::instructionReg = 80190019
rf::reset_ = 1
rf::rd_addr_a = 00
rf::rden_a    = 1
rf::rd_addr_b = 19
rf::rden_b    = 1
rf:0 read operation rd_addr_a = 00
rf:all read operation rd_addr_b = 19
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 000000000
rf::eu_rf_wren    = 0
rf::swapbit_wr_data_a = 0
rf::swapbit_wr_addr_a = 0
rf::swapbit_wr_data_b = 0
rf::swapbit_wr_addr_b = 0
rf::swapbit_wren.writ = 0
rf::eu_rf_wren 	  = 0
rf::swap_wren 		  = 0
rf::swapbit_wren 	  = 0
rf::testbit_wren 	  = 0
rf::setbit_wren 	  = 0
rf::ldimm_ab_16_wren = 1
rf::rf_mux_in_wren_a = 0
rf::rf_mux_in_wren_b = 0
rf::enable = 1
rf::operandA = 0
rf::operandB = 0
rf::Info im_rf_instructionDecoder->isInstFormatOpLdIm ()
rf::Info: ELoadLow before rf_dest_data =  18 ldimm field = 19 ir =80190019
rf::Info: after rf_dest_data =  19 ldimm field = 19 ir =80190019
rf::ldimm high write operation ldimm_ab_16_wr_addr = 19 ldimm_ab_16_wr_data = 19
rf::im_rf_ir.read()  = 80190019
rf::im_rf_instructionDecoder->getInstructionReg()  = 80190019
rf:: isInstFormatOpLas = 0
rf:: isInstFormatOpBit = 0
rf:: isInstFormatOpLdIm= 1
rf:: isInstFormatOpBr  = 0
rf:: getLdImmOperand16Field= 19
rf:: signExtend16(im_rf_instructionDecoder->getLdImmOperand16Field ()) = 19
rf:: rf_dest_data  = 19
rf::im_rf_ir = 80190019
rf::eu_rf_ir = 080170017
rf::op_imm_a = 0
rf::op_imm_b = 19
rf:: getOperandAImm8Field  = 0
rf:: getOperandBImm8Field  = 19
rf::signExtend8 (op_imm_a) = 0
rf::signExtend8 (op_imm_b) = 19
rf::signExtend16(op_imm_b) = 19
rf::rd_data_rf_a = 0
rf::rd_data_rf_b = 0
rf::rd_data_imm_a = 0
rf::rd_data_imm_b = 19
rf::rd_data_imm_mux_sel_a = 0
rf::rd_data_imm_mux_sel_b = 0
rf::rd_data_imm_mux_a = 0
rf::rd_data_imm_mux_b = 0
rf::rd_data_bypass_mux_a = 0
rf::rd_data_bypass_mux_b = 0
rf::rf_eu_wr_addr = 19
rf::enable = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_a     = 00
rf::eu_rf_wr_addr_equal_rd_addr_a = 1
rf::eu_rf_wren.read() = 0
rf::eu_rf_wren_int = 0
rf::rfRdAddrEqEuRfWrAddr_a = 0
rf::bypass_a = 0
rf::eu_rf_wr_addr = 00
rf::rd_addr_b     = 19
rf::eu_rf_wr_addr_equal_rd_addr_b = 0
rf::eu_rf_wren.read() = 0
rf::eu_rf_wren_int = 0
rf::rfRdAddrEqEuRfWrAddr_b = 0
rf::bypass_b = 0
rf::eu_data_a = 0
rf::rd_data_a = 000000000
rf::rd_data_b = 000000000
rf::rf_eu_v = 0
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 000000000
rf::eu_rf_wren    = 0
rf::rf_stall = 0
rf::   rf[0] = 0
rf::   rf[1] = 1
rf::   rf[2] = 2
rf::   rf[3] = 3
rf::   rf[4] = 4
rf::   rf[5] = 5
rf::   rf[6] = 6
rf::   rf[7] = 7
rf::   rf[8] = 8
rf::   rf[9] = 9
rf::   rf[a] = a
rf::   rf[b] = b
rf::   rf[c] = c
rf::   rf[d] = d
rf::   rf[e] = e
rf::   rf[f] = f
rf::   rf[10] = 10
rf::   rf[11] = 11
rf::   rf[12] = 12
rf::   rf[13] = 13
rf::   rf[14] = 14
rf::   rf[15] = 15
rf::   rf[16] = 16
rf::   rf[17] = 17
rf::   rf[18] = 18
rf::   rf[19] = 0
rf::   rf[1a] = 0
rf::   rf[1b] = 0
rf::   rf[1c] = 0
rf::   rf[1d] = 0
rf::   rf[1e] = 0
rf::   rf[1f] = 0
executionUnit::****************************************
executionUnit:: rf_eu_v=0
executionUnit::enable =1
executionUnit:: instReg=80180018 isInstFmtLas=0 instFmt=2
executionUnit:: rf_eu_ir = 080180018
executionUnit:: las op = NA las op = 0
executionUnit:: src_a = 000000000
executionUnit:: src_b = 000000000
executionUnit:: eu_rf_wr_data_las = 0
executionUnit:: eu_rf_wr_data_bit = 0
executionUnit:: id->dest = 18
executionUnit:: eu_rf_wr_data = 000000000
executionUnit:: eu_rf_wr_addr = 00
executionUnit:: eu_rf_wren             = 0
   read op  buffer[1b] = 801a001a im read operation  = 1b data = 80190019
rf::write operation wr_addr_a = 19
 eu_branch = 0 pcx = 1c pc_inc = 1c
reset_ = 1
enable = 1
eu_branch = 0
 pc_im_v   = 1
 im_rf_v   = 1
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 1b
im.data = 80190019
npc_2 = 00018
npc_3 = 00017
npc_4 = 00000
pc_im_v = 1 im_RnW = 1 pc_im_address = 1b  im_1 = 80190019
im_data = 80190019
ir_rf_3 = 080180018
ir_eu_4 = 080170017
 eu_branch.read() = 1
 pc_im_v   = 1
 im_rf_v   = 1
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 19
 rf_dest_addr = 19
 rf_rd_data_a = 000000000
 rf_rd_data_b = 000000000
 im_rf_v   = 1
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
rf::****************************************
rf::v = 1
rf::instructionReg = 801a001a
rf::reset_ = 1
rf::rd_addr_a = 00
rf::rden_a    = 1
rf::rd_addr_b = 1a
rf::rden_b    = 1
rf:0 read operation rd_addr_a = 00
rf:all read operation rd_addr_b = 1a
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 000000000
rf::eu_rf_wren    = 0
rf::swapbit_wr_data_a = 0
rf::swapbit_wr_addr_a = 0
rf::swapbit_wr_data_b = 0
rf::swapbit_wr_addr_b = 0
rf::swapbit_wren.writ = 0
rf::eu_rf_wren 	  = 0
rf::swap_wren 		  = 0
rf::swapbit_wren 	  = 0
rf::testbit_wren 	  = 0
rf::setbit_wren 	  = 0
rf::ldimm_ab_16_wren = 1
rf::rf_mux_in_wren_a = 0
rf::rf_mux_in_wren_b = 0
rf::enable = 1
rf::operandA = 0
rf::operandB = 0
rf::Info im_rf_instructionDecoder->isInstFormatOpLdIm ()
rf::Info: ELoadLow before rf_dest_data =  19 ldimm field = 1a ir =801a001a
rf::Info: after rf_dest_data =  1a ldimm field = 1a ir =801a001a
rf::ldimm high write operation ldimm_ab_16_wr_addr = 1a ldimm_ab_16_wr_data = 1a
rf::im_rf_ir.read()  = 801a001a
rf::im_rf_instructionDecoder->getInstructionReg()  = 801a001a
rf:: isInstFormatOpLas = 0
rf:: isInstFormatOpBit = 0
rf:: isInstFormatOpLdIm= 1
rf:: isInstFormatOpBr  = 0
rf:: getLdImmOperand16Field= 1a
rf:: signExtend16(im_rf_instructionDecoder->getLdImmOperand16Field ()) = 1a
rf:: rf_dest_data  = 1a
rf::im_rf_ir = 801a001a
rf::eu_rf_ir = 080180018
rf::op_imm_a = 0
rf::op_imm_b = 1a
rf:: getOperandAImm8Field  = 0
rf:: getOperandBImm8Field  = 1a
rf::signExtend8 (op_imm_a) = 0
rf::signExtend8 (op_imm_b) = 1a
rf::signExtend16(op_imm_b) = 1a
rf::rd_data_rf_a = 0
rf::rd_data_rf_b = 0
rf::rd_data_imm_a = 0
rf::rd_data_imm_b = 1a
rf::rd_data_imm_mux_sel_a = 0
rf::rd_data_imm_mux_sel_b = 0
rf::rd_data_imm_mux_a = 0
rf::rd_data_imm_mux_b = 0
rf::rd_data_bypass_mux_a = 0
rf::rd_data_bypass_mux_b = 0
rf::rf_eu_wr_addr = 1a
rf::enable = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_a     = 00
rf::eu_rf_wr_addr_equal_rd_addr_a = 1
rf::eu_rf_wren.read() = 0
rf::eu_rf_wren_int = 0
rf::rfRdAddrEqEuRfWrAddr_a = 0
rf::bypass_a = 0
rf::eu_rf_wr_addr = 00
rf::rd_addr_b     = 1a
rf::eu_rf_wr_addr_equal_rd_addr_b = 0
rf::eu_rf_wren.read() = 0
rf::eu_rf_wren_int = 0
rf::rfRdAddrEqEuRfWrAddr_b = 0
rf::bypass_b = 0
rf::eu_data_a = 0
rf::rd_data_a = 000000000
rf::rd_data_b = 000000000
rf::rf_eu_v = 0
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 000000000
rf::eu_rf_wren    = 0
rf::rf_stall = 0
rf::   rf[0] = 0
rf::   rf[1] = 1
rf::   rf[2] = 2
rf::   rf[3] = 3
rf::   rf[4] = 4
rf::   rf[5] = 5
rf::   rf[6] = 6
rf::   rf[7] = 7
rf::   rf[8] = 8
rf::   rf[9] = 9
rf::   rf[a] = a
rf::   rf[b] = b
rf::   rf[c] = c
rf::   rf[d] = d
rf::   rf[e] = e
rf::   rf[f] = f
rf::   rf[10] = 10
rf::   rf[11] = 11
rf::   rf[12] = 12
rf::   rf[13] = 13
rf::   rf[14] = 14
rf::   rf[15] = 15
rf::   rf[16] = 16
rf::   rf[17] = 17
rf::   rf[18] = 18
rf::   rf[19] = 19
rf::   rf[1a] = 0
rf::   rf[1b] = 0
rf::   rf[1c] = 0
rf::   rf[1d] = 0
rf::   rf[1e] = 0
rf::   rf[1f] = 0
executionUnit::****************************************
executionUnit:: rf_eu_v=0
executionUnit::enable =1
executionUnit:: instReg=80190019 isInstFmtLas=0 instFmt=2
executionUnit:: rf_eu_ir = 080190019
executionUnit:: las op = NA las op = 0
executionUnit:: src_a = 000000000
executionUnit:: src_b = 000000000
executionUnit:: eu_rf_wr_data_las = 0
executionUnit:: eu_rf_wr_data_bit = 0
executionUnit:: id->dest = 19
executionUnit:: eu_rf_wr_data = 000000000
executionUnit:: eu_rf_wr_addr = 00
executionUnit:: eu_rf_wren             = 0
   read op  buffer[1c] = 801b001b im read operation  = 1c data = 801a001a
rf::write operation wr_addr_a = 1a
 eu_branch = 0 pcx = 1d pc_inc = 1d
reset_ = 1
enable = 1
eu_branch = 0
 pc_im_v   = 1
 im_rf_v   = 1
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 1c
im.data = 801a001a
npc_2 = 00019
npc_3 = 00018
npc_4 = 00000
pc_im_v = 1 im_RnW = 1 pc_im_address = 1c  im_1 = 801a001a
im_data = 801a001a
ir_rf_3 = 080190019
ir_eu_4 = 080180018
 eu_branch.read() = 1
 pc_im_v   = 1
 im_rf_v   = 1
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 1a
 rf_dest_addr = 1a
 rf_rd_data_a = 000000000
 rf_rd_data_b = 000000000
 im_rf_v   = 1
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
rf::****************************************
rf::v = 1
rf::instructionReg = 801b001b
rf::reset_ = 1
rf::rd_addr_a = 00
rf::rden_a    = 1
rf::rd_addr_b = 1b
rf::rden_b    = 1
rf:0 read operation rd_addr_a = 00
rf:all read operation rd_addr_b = 1b
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 000000000
rf::eu_rf_wren    = 0
rf::swapbit_wr_data_a = 0
rf::swapbit_wr_addr_a = 0
rf::swapbit_wr_data_b = 0
rf::swapbit_wr_addr_b = 0
rf::swapbit_wren.writ = 0
rf::eu_rf_wren 	  = 0
rf::swap_wren 		  = 0
rf::swapbit_wren 	  = 0
rf::testbit_wren 	  = 0
rf::setbit_wren 	  = 0
rf::ldimm_ab_16_wren = 1
rf::rf_mux_in_wren_a = 0
rf::rf_mux_in_wren_b = 0
rf::enable = 1
rf::operandA = 0
rf::operandB = 0
rf::Info im_rf_instructionDecoder->isInstFormatOpLdIm ()
rf::Info: ELoadLow before rf_dest_data =  1a ldimm field = 1b ir =801b001b
rf::Info: after rf_dest_data =  1b ldimm field = 1b ir =801b001b
rf::ldimm high write operation ldimm_ab_16_wr_addr = 1b ldimm_ab_16_wr_data = 1b
rf::im_rf_ir.read()  = 801b001b
rf::im_rf_instructionDecoder->getInstructionReg()  = 801b001b
rf:: isInstFormatOpLas = 0
rf:: isInstFormatOpBit = 0
rf:: isInstFormatOpLdIm= 1
rf:: isInstFormatOpBr  = 0
rf:: getLdImmOperand16Field= 1b
rf:: signExtend16(im_rf_instructionDecoder->getLdImmOperand16Field ()) = 1b
rf:: rf_dest_data  = 1b
rf::im_rf_ir = 801b001b
rf::eu_rf_ir = 080190019
rf::op_imm_a = 0
rf::op_imm_b = 1b
rf:: getOperandAImm8Field  = 0
rf:: getOperandBImm8Field  = 1b
rf::signExtend8 (op_imm_a) = 0
rf::signExtend8 (op_imm_b) = 1b
rf::signExtend16(op_imm_b) = 1b
rf::rd_data_rf_a = 0
rf::rd_data_rf_b = 0
rf::rd_data_imm_a = 0
rf::rd_data_imm_b = 1b
rf::rd_data_imm_mux_sel_a = 0
rf::rd_data_imm_mux_sel_b = 0
rf::rd_data_imm_mux_a = 0
rf::rd_data_imm_mux_b = 0
rf::rd_data_bypass_mux_a = 0
rf::rd_data_bypass_mux_b = 0
rf::rf_eu_wr_addr = 1b
rf::enable = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_a     = 00
rf::eu_rf_wr_addr_equal_rd_addr_a = 1
rf::eu_rf_wren.read() = 0
rf::eu_rf_wren_int = 0
rf::rfRdAddrEqEuRfWrAddr_a = 0
rf::bypass_a = 0
rf::eu_rf_wr_addr = 00
rf::rd_addr_b     = 1b
rf::eu_rf_wr_addr_equal_rd_addr_b = 0
rf::eu_rf_wren.read() = 0
rf::eu_rf_wren_int = 0
rf::rfRdAddrEqEuRfWrAddr_b = 0
rf::bypass_b = 0
rf::eu_data_a = 0
rf::rd_data_a = 000000000
rf::rd_data_b = 000000000
rf::rf_eu_v = 0
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 000000000
rf::eu_rf_wren    = 0
rf::rf_stall = 0
rf::   rf[0] = 0
rf::   rf[1] = 1
rf::   rf[2] = 2
rf::   rf[3] = 3
rf::   rf[4] = 4
rf::   rf[5] = 5
rf::   rf[6] = 6
rf::   rf[7] = 7
rf::   rf[8] = 8
rf::   rf[9] = 9
rf::   rf[a] = a
rf::   rf[b] = b
rf::   rf[c] = c
rf::   rf[d] = d
rf::   rf[e] = e
rf::   rf[f] = f
rf::   rf[10] = 10
rf::   rf[11] = 11
rf::   rf[12] = 12
rf::   rf[13] = 13
rf::   rf[14] = 14
rf::   rf[15] = 15
rf::   rf[16] = 16
rf::   rf[17] = 17
rf::   rf[18] = 18
rf::   rf[19] = 19
rf::   rf[1a] = 1a
rf::   rf[1b] = 0
rf::   rf[1c] = 0
rf::   rf[1d] = 0
rf::   rf[1e] = 0
rf::   rf[1f] = 0
executionUnit::****************************************
executionUnit:: rf_eu_v=0
executionUnit::enable =1
executionUnit:: instReg=801a001a isInstFmtLas=0 instFmt=2
executionUnit:: rf_eu_ir = 0801a001a
executionUnit:: las op = NA las op = 0
executionUnit:: src_a = 000000000
executionUnit:: src_b = 000000000
executionUnit:: eu_rf_wr_data_las = 0
executionUnit:: eu_rf_wr_data_bit = 0
executionUnit:: id->dest = 1a
executionUnit:: eu_rf_wr_data = 000000000
executionUnit:: eu_rf_wr_addr = 00
executionUnit:: eu_rf_wren             = 0
   read op  buffer[1d] = 801c001c im read operation  = 1d data = 801b001b
rf::write operation wr_addr_a = 1b
 eu_branch = 0 pcx = 1e pc_inc = 1e
reset_ = 1
enable = 1
eu_branch = 0
 pc_im_v   = 1
 im_rf_v   = 1
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 1d
im.data = 801b001b
npc_2 = 0001a
npc_3 = 00019
npc_4 = 00000
pc_im_v = 1 im_RnW = 1 pc_im_address = 1d  im_1 = 801b001b
im_data = 801b001b
ir_rf_3 = 0801a001a
ir_eu_4 = 080190019
 eu_branch.read() = 1
 pc_im_v   = 1
 im_rf_v   = 1
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 1b
 rf_dest_addr = 1b
 rf_rd_data_a = 000000000
 rf_rd_data_b = 000000000
 im_rf_v   = 1
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
rf::****************************************
rf::v = 1
rf::instructionReg = 801c001c
rf::reset_ = 1
rf::rd_addr_a = 00
rf::rden_a    = 1
rf::rd_addr_b = 1c
rf::rden_b    = 1
rf:0 read operation rd_addr_a = 00
rf:all read operation rd_addr_b = 1c
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 000000000
rf::eu_rf_wren    = 0
rf::swapbit_wr_data_a = 0
rf::swapbit_wr_addr_a = 0
rf::swapbit_wr_data_b = 0
rf::swapbit_wr_addr_b = 0
rf::swapbit_wren.writ = 0
rf::eu_rf_wren 	  = 0
rf::swap_wren 		  = 0
rf::swapbit_wren 	  = 0
rf::testbit_wren 	  = 0
rf::setbit_wren 	  = 0
rf::ldimm_ab_16_wren = 1
rf::rf_mux_in_wren_a = 0
rf::rf_mux_in_wren_b = 0
rf::enable = 1
rf::operandA = 0
rf::operandB = 0
rf::Info im_rf_instructionDecoder->isInstFormatOpLdIm ()
rf::Info: ELoadLow before rf_dest_data =  1b ldimm field = 1c ir =801c001c
rf::Info: after rf_dest_data =  1c ldimm field = 1c ir =801c001c
rf::ldimm high write operation ldimm_ab_16_wr_addr = 1c ldimm_ab_16_wr_data = 1c
rf::im_rf_ir.read()  = 801c001c
rf::im_rf_instructionDecoder->getInstructionReg()  = 801c001c
rf:: isInstFormatOpLas = 0
rf:: isInstFormatOpBit = 0
rf:: isInstFormatOpLdIm= 1
rf:: isInstFormatOpBr  = 0
rf:: getLdImmOperand16Field= 1c
rf:: signExtend16(im_rf_instructionDecoder->getLdImmOperand16Field ()) = 1c
rf:: rf_dest_data  = 1c
rf::im_rf_ir = 801c001c
rf::eu_rf_ir = 0801a001a
rf::op_imm_a = 0
rf::op_imm_b = 1c
rf:: getOperandAImm8Field  = 0
rf:: getOperandBImm8Field  = 1c
rf::signExtend8 (op_imm_a) = 0
rf::signExtend8 (op_imm_b) = 1c
rf::signExtend16(op_imm_b) = 1c
rf::rd_data_rf_a = 0
rf::rd_data_rf_b = 0
rf::rd_data_imm_a = 0
rf::rd_data_imm_b = 1c
rf::rd_data_imm_mux_sel_a = 0
rf::rd_data_imm_mux_sel_b = 0
rf::rd_data_imm_mux_a = 0
rf::rd_data_imm_mux_b = 0
rf::rd_data_bypass_mux_a = 0
rf::rd_data_bypass_mux_b = 0
rf::rf_eu_wr_addr = 1c
rf::enable = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_a     = 00
rf::eu_rf_wr_addr_equal_rd_addr_a = 1
rf::eu_rf_wren.read() = 0
rf::eu_rf_wren_int = 0
rf::rfRdAddrEqEuRfWrAddr_a = 0
rf::bypass_a = 0
rf::eu_rf_wr_addr = 00
rf::rd_addr_b     = 1c
rf::eu_rf_wr_addr_equal_rd_addr_b = 0
rf::eu_rf_wren.read() = 0
rf::eu_rf_wren_int = 0
rf::rfRdAddrEqEuRfWrAddr_b = 0
rf::bypass_b = 0
rf::eu_data_a = 0
rf::rd_data_a = 000000000
rf::rd_data_b = 000000000
rf::rf_eu_v = 0
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 000000000
rf::eu_rf_wren    = 0
rf::rf_stall = 0
rf::   rf[0] = 0
rf::   rf[1] = 1
rf::   rf[2] = 2
rf::   rf[3] = 3
rf::   rf[4] = 4
rf::   rf[5] = 5
rf::   rf[6] = 6
rf::   rf[7] = 7
rf::   rf[8] = 8
rf::   rf[9] = 9
rf::   rf[a] = a
rf::   rf[b] = b
rf::   rf[c] = c
rf::   rf[d] = d
rf::   rf[e] = e
rf::   rf[f] = f
rf::   rf[10] = 10
rf::   rf[11] = 11
rf::   rf[12] = 12
rf::   rf[13] = 13
rf::   rf[14] = 14
rf::   rf[15] = 15
rf::   rf[16] = 16
rf::   rf[17] = 17
rf::   rf[18] = 18
rf::   rf[19] = 19
rf::   rf[1a] = 1a
rf::   rf[1b] = 1b
rf::   rf[1c] = 0
rf::   rf[1d] = 0
rf::   rf[1e] = 0
rf::   rf[1f] = 0
executionUnit::****************************************
executionUnit:: rf_eu_v=0
executionUnit::enable =1
executionUnit:: instReg=801b001b isInstFmtLas=0 instFmt=2
executionUnit:: rf_eu_ir = 0801b001b
executionUnit:: las op = NA las op = 0
executionUnit:: src_a = 000000000
executionUnit:: src_b = 000000000
executionUnit:: eu_rf_wr_data_las = 0
executionUnit:: eu_rf_wr_data_bit = 0
executionUnit:: id->dest = 1b
executionUnit:: eu_rf_wr_data = 000000000
executionUnit:: eu_rf_wr_addr = 00
executionUnit:: eu_rf_wren             = 0
   read op  buffer[1e] = 801d001d im read operation  = 1e data = 801c001c
rf::write operation wr_addr_a = 1c
 eu_branch = 0 pcx = 1f pc_inc = 1f
reset_ = 1
enable = 1
eu_branch = 0
 pc_im_v   = 1
 im_rf_v   = 1
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 1e
im.data = 801c001c
npc_2 = 0001b
npc_3 = 0001a
npc_4 = 00000
pc_im_v = 1 im_RnW = 1 pc_im_address = 1e  im_1 = 801c001c
im_data = 801c001c
ir_rf_3 = 0801b001b
ir_eu_4 = 0801a001a
 eu_branch.read() = 1
 pc_im_v   = 1
 im_rf_v   = 1
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 1c
 rf_dest_addr = 1c
 rf_rd_data_a = 000000000
 rf_rd_data_b = 000000000
 im_rf_v   = 1
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
rf::****************************************
rf::v = 1
rf::instructionReg = 801d001d
rf::reset_ = 1
rf::rd_addr_a = 00
rf::rden_a    = 1
rf::rd_addr_b = 1d
rf::rden_b    = 1
rf:0 read operation rd_addr_a = 00
rf:all read operation rd_addr_b = 1d
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 000000000
rf::eu_rf_wren    = 0
rf::swapbit_wr_data_a = 0
rf::swapbit_wr_addr_a = 0
rf::swapbit_wr_data_b = 0
rf::swapbit_wr_addr_b = 0
rf::swapbit_wren.writ = 0
rf::eu_rf_wren 	  = 0
rf::swap_wren 		  = 0
rf::swapbit_wren 	  = 0
rf::testbit_wren 	  = 0
rf::setbit_wren 	  = 0
rf::ldimm_ab_16_wren = 1
rf::rf_mux_in_wren_a = 0
rf::rf_mux_in_wren_b = 0
rf::enable = 1
rf::operandA = 0
rf::operandB = 0
rf::Info im_rf_instructionDecoder->isInstFormatOpLdIm ()
rf::Info: ELoadLow before rf_dest_data =  1c ldimm field = 1d ir =801d001d
rf::Info: after rf_dest_data =  1d ldimm field = 1d ir =801d001d
rf::ldimm high write operation ldimm_ab_16_wr_addr = 1d ldimm_ab_16_wr_data = 1d
rf::im_rf_ir.read()  = 801d001d
rf::im_rf_instructionDecoder->getInstructionReg()  = 801d001d
rf:: isInstFormatOpLas = 0
rf:: isInstFormatOpBit = 0
rf:: isInstFormatOpLdIm= 1
rf:: isInstFormatOpBr  = 0
rf:: getLdImmOperand16Field= 1d
rf:: signExtend16(im_rf_instructionDecoder->getLdImmOperand16Field ()) = 1d
rf:: rf_dest_data  = 1d
rf::im_rf_ir = 801d001d
rf::eu_rf_ir = 0801b001b
rf::op_imm_a = 0
rf::op_imm_b = 1d
rf:: getOperandAImm8Field  = 0
rf:: getOperandBImm8Field  = 1d
rf::signExtend8 (op_imm_a) = 0
rf::signExtend8 (op_imm_b) = 1d
rf::signExtend16(op_imm_b) = 1d
rf::rd_data_rf_a = 0
rf::rd_data_rf_b = 0
rf::rd_data_imm_a = 0
rf::rd_data_imm_b = 1d
rf::rd_data_imm_mux_sel_a = 0
rf::rd_data_imm_mux_sel_b = 0
rf::rd_data_imm_mux_a = 0
rf::rd_data_imm_mux_b = 0
rf::rd_data_bypass_mux_a = 0
rf::rd_data_bypass_mux_b = 0
rf::rf_eu_wr_addr = 1d
rf::enable = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_a     = 00
rf::eu_rf_wr_addr_equal_rd_addr_a = 1
rf::eu_rf_wren.read() = 0
rf::eu_rf_wren_int = 0
rf::rfRdAddrEqEuRfWrAddr_a = 0
rf::bypass_a = 0
rf::eu_rf_wr_addr = 00
rf::rd_addr_b     = 1d
rf::eu_rf_wr_addr_equal_rd_addr_b = 0
rf::eu_rf_wren.read() = 0
rf::eu_rf_wren_int = 0
rf::rfRdAddrEqEuRfWrAddr_b = 0
rf::bypass_b = 0
rf::eu_data_a = 0
rf::rd_data_a = 000000000
rf::rd_data_b = 000000000
rf::rf_eu_v = 0
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 000000000
rf::eu_rf_wren    = 0
rf::rf_stall = 0
rf::   rf[0] = 0
rf::   rf[1] = 1
rf::   rf[2] = 2
rf::   rf[3] = 3
rf::   rf[4] = 4
rf::   rf[5] = 5
rf::   rf[6] = 6
rf::   rf[7] = 7
rf::   rf[8] = 8
rf::   rf[9] = 9
rf::   rf[a] = a
rf::   rf[b] = b
rf::   rf[c] = c
rf::   rf[d] = d
rf::   rf[e] = e
rf::   rf[f] = f
rf::   rf[10] = 10
rf::   rf[11] = 11
rf::   rf[12] = 12
rf::   rf[13] = 13
rf::   rf[14] = 14
rf::   rf[15] = 15
rf::   rf[16] = 16
rf::   rf[17] = 17
rf::   rf[18] = 18
rf::   rf[19] = 19
rf::   rf[1a] = 1a
rf::   rf[1b] = 1b
rf::   rf[1c] = 1c
rf::   rf[1d] = 0
rf::   rf[1e] = 0
rf::   rf[1f] = 0
executionUnit::****************************************
executionUnit:: rf_eu_v=0
executionUnit::enable =1
executionUnit:: instReg=801c001c isInstFmtLas=0 instFmt=2
executionUnit:: rf_eu_ir = 0801c001c
executionUnit:: las op = NA las op = 0
executionUnit:: src_a = 000000000
executionUnit:: src_b = 000000000
executionUnit:: eu_rf_wr_data_las = 0
executionUnit:: eu_rf_wr_data_bit = 0
executionUnit:: id->dest = 1c
executionUnit:: eu_rf_wr_data = 000000000
executionUnit:: eu_rf_wr_addr = 00
executionUnit:: eu_rf_wren             = 0
   read op  buffer[1f] = 801e001e im read operation  = 1f data = 801d001d
rf::write operation wr_addr_a = 1d
 eu_branch = 0 pcx = 20 pc_inc = 20
reset_ = 1
enable = 1
eu_branch = 0
 pc_im_v   = 1
 im_rf_v   = 1
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 1f
im.data = 801d001d
npc_2 = 0001c
npc_3 = 0001b
npc_4 = 00000
pc_im_v = 1 im_RnW = 1 pc_im_address = 1f  im_1 = 801d001d
im_data = 801d001d
ir_rf_3 = 0801c001c
ir_eu_4 = 0801b001b
 eu_branch.read() = 1
 pc_im_v   = 1
 im_rf_v   = 1
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 1d
 rf_dest_addr = 1d
 rf_rd_data_a = 000000000
 rf_rd_data_b = 000000000
 im_rf_v   = 1
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
rf::****************************************
rf::v = 1
rf::instructionReg = 801e001e
rf::reset_ = 1
rf::rd_addr_a = 00
rf::rden_a    = 1
rf::rd_addr_b = 1e
rf::rden_b    = 1
rf:0 read operation rd_addr_a = 00
rf:all read operation rd_addr_b = 1e
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 000000000
rf::eu_rf_wren    = 0
rf::swapbit_wr_data_a = 0
rf::swapbit_wr_addr_a = 0
rf::swapbit_wr_data_b = 0
rf::swapbit_wr_addr_b = 0
rf::swapbit_wren.writ = 0
rf::eu_rf_wren 	  = 0
rf::swap_wren 		  = 0
rf::swapbit_wren 	  = 0
rf::testbit_wren 	  = 0
rf::setbit_wren 	  = 0
rf::ldimm_ab_16_wren = 1
rf::rf_mux_in_wren_a = 0
rf::rf_mux_in_wren_b = 0
rf::enable = 1
rf::operandA = 0
rf::operandB = 0
rf::Info im_rf_instructionDecoder->isInstFormatOpLdIm ()
rf::Info: ELoadLow before rf_dest_data =  1d ldimm field = 1e ir =801e001e
rf::Info: after rf_dest_data =  1e ldimm field = 1e ir =801e001e
rf::ldimm high write operation ldimm_ab_16_wr_addr = 1e ldimm_ab_16_wr_data = 1e
rf::im_rf_ir.read()  = 801e001e
rf::im_rf_instructionDecoder->getInstructionReg()  = 801e001e
rf:: isInstFormatOpLas = 0
rf:: isInstFormatOpBit = 0
rf:: isInstFormatOpLdIm= 1
rf:: isInstFormatOpBr  = 0
rf:: getLdImmOperand16Field= 1e
rf:: signExtend16(im_rf_instructionDecoder->getLdImmOperand16Field ()) = 1e
rf:: rf_dest_data  = 1e
rf::im_rf_ir = 801e001e
rf::eu_rf_ir = 0801c001c
rf::op_imm_a = 0
rf::op_imm_b = 1e
rf:: getOperandAImm8Field  = 0
rf:: getOperandBImm8Field  = 1e
rf::signExtend8 (op_imm_a) = 0
rf::signExtend8 (op_imm_b) = 1e
rf::signExtend16(op_imm_b) = 1e
rf::rd_data_rf_a = 0
rf::rd_data_rf_b = 0
rf::rd_data_imm_a = 0
rf::rd_data_imm_b = 1e
rf::rd_data_imm_mux_sel_a = 0
rf::rd_data_imm_mux_sel_b = 0
rf::rd_data_imm_mux_a = 0
rf::rd_data_imm_mux_b = 0
rf::rd_data_bypass_mux_a = 0
rf::rd_data_bypass_mux_b = 0
rf::rf_eu_wr_addr = 1e
rf::enable = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_a     = 00
rf::eu_rf_wr_addr_equal_rd_addr_a = 1
rf::eu_rf_wren.read() = 0
rf::eu_rf_wren_int = 0
rf::rfRdAddrEqEuRfWrAddr_a = 0
rf::bypass_a = 0
rf::eu_rf_wr_addr = 00
rf::rd_addr_b     = 1e
rf::eu_rf_wr_addr_equal_rd_addr_b = 0
rf::eu_rf_wren.read() = 0
rf::eu_rf_wren_int = 0
rf::rfRdAddrEqEuRfWrAddr_b = 0
rf::bypass_b = 0
rf::eu_data_a = 0
rf::rd_data_a = 000000000
rf::rd_data_b = 000000000
rf::rf_eu_v = 0
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 000000000
rf::eu_rf_wren    = 0
rf::rf_stall = 0
rf::   rf[0] = 0
rf::   rf[1] = 1
rf::   rf[2] = 2
rf::   rf[3] = 3
rf::   rf[4] = 4
rf::   rf[5] = 5
rf::   rf[6] = 6
rf::   rf[7] = 7
rf::   rf[8] = 8
rf::   rf[9] = 9
rf::   rf[a] = a
rf::   rf[b] = b
rf::   rf[c] = c
rf::   rf[d] = d
rf::   rf[e] = e
rf::   rf[f] = f
rf::   rf[10] = 10
rf::   rf[11] = 11
rf::   rf[12] = 12
rf::   rf[13] = 13
rf::   rf[14] = 14
rf::   rf[15] = 15
rf::   rf[16] = 16
rf::   rf[17] = 17
rf::   rf[18] = 18
rf::   rf[19] = 19
rf::   rf[1a] = 1a
rf::   rf[1b] = 1b
rf::   rf[1c] = 1c
rf::   rf[1d] = 1d
rf::   rf[1e] = 0
rf::   rf[1f] = 0
executionUnit::****************************************
executionUnit:: rf_eu_v=0
executionUnit::enable =1
executionUnit:: instReg=801d001d isInstFmtLas=0 instFmt=2
executionUnit:: rf_eu_ir = 0801d001d
executionUnit:: las op = NA las op = 0
executionUnit:: src_a = 000000000
executionUnit:: src_b = 000000000
executionUnit:: eu_rf_wr_data_las = 0
executionUnit:: eu_rf_wr_data_bit = 0
executionUnit:: id->dest = 1d
executionUnit:: eu_rf_wr_data = 000000000
executionUnit:: eu_rf_wr_addr = 00
executionUnit:: eu_rf_wren             = 0
   read op  buffer[20] = 801f001f im read operation  = 20 data = 801e001e
rf::write operation wr_addr_a = 1e
 eu_branch = 0 pcx = 21 pc_inc = 21
reset_ = 1
enable = 1
eu_branch = 0
 pc_im_v   = 1
 im_rf_v   = 1
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 20
im.data = 801e001e
npc_2 = 0001d
npc_3 = 0001c
npc_4 = 00000
pc_im_v = 1 im_RnW = 1 pc_im_address = 20  im_1 = 801e001e
im_data = 801e001e
ir_rf_3 = 0801d001d
ir_eu_4 = 0801c001c
 eu_branch.read() = 1
 pc_im_v   = 1
 im_rf_v   = 1
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 1e
 rf_dest_addr = 1e
 rf_rd_data_a = 000000000
 rf_rd_data_b = 000000000
 im_rf_v   = 1
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
rf::****************************************
rf::v = 1
rf::instructionReg = 801f001f
rf::reset_ = 1
rf::rd_addr_a = 00
rf::rden_a    = 1
rf::rd_addr_b = 1f
rf::rden_b    = 1
rf:0 read operation rd_addr_a = 00
rf:all read operation rd_addr_b = 1f
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 000000000
rf::eu_rf_wren    = 0
rf::swapbit_wr_data_a = 0
rf::swapbit_wr_addr_a = 0
rf::swapbit_wr_data_b = 0
rf::swapbit_wr_addr_b = 0
rf::swapbit_wren.writ = 0
rf::eu_rf_wren 	  = 0
rf::swap_wren 		  = 0
rf::swapbit_wren 	  = 0
rf::testbit_wren 	  = 0
rf::setbit_wren 	  = 0
rf::ldimm_ab_16_wren = 1
rf::rf_mux_in_wren_a = 0
rf::rf_mux_in_wren_b = 0
rf::enable = 1
rf::operandA = 0
rf::operandB = 0
rf::Info im_rf_instructionDecoder->isInstFormatOpLdIm ()
rf::Info: ELoadLow before rf_dest_data =  1e ldimm field = 1f ir =801f001f
rf::Info: after rf_dest_data =  1f ldimm field = 1f ir =801f001f
rf::ldimm high write operation ldimm_ab_16_wr_addr = 1f ldimm_ab_16_wr_data = 1f
rf::im_rf_ir.read()  = 801f001f
rf::im_rf_instructionDecoder->getInstructionReg()  = 801f001f
rf:: isInstFormatOpLas = 0
rf:: isInstFormatOpBit = 0
rf:: isInstFormatOpLdIm= 1
rf:: isInstFormatOpBr  = 0
rf:: getLdImmOperand16Field= 1f
rf:: signExtend16(im_rf_instructionDecoder->getLdImmOperand16Field ()) = 1f
rf:: rf_dest_data  = 1f
rf::im_rf_ir = 801f001f
rf::eu_rf_ir = 0801d001d
rf::op_imm_a = 0
rf::op_imm_b = 1f
rf:: getOperandAImm8Field  = 0
rf:: getOperandBImm8Field  = 1f
rf::signExtend8 (op_imm_a) = 0
rf::signExtend8 (op_imm_b) = 1f
rf::signExtend16(op_imm_b) = 1f
rf::rd_data_rf_a = 0
rf::rd_data_rf_b = 0
rf::rd_data_imm_a = 0
rf::rd_data_imm_b = 1f
rf::rd_data_imm_mux_sel_a = 0
rf::rd_data_imm_mux_sel_b = 0
rf::rd_data_imm_mux_a = 0
rf::rd_data_imm_mux_b = 0
rf::rd_data_bypass_mux_a = 0
rf::rd_data_bypass_mux_b = 0
rf::rf_eu_wr_addr = 1f
rf::enable = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_a     = 00
rf::eu_rf_wr_addr_equal_rd_addr_a = 1
rf::eu_rf_wren.read() = 0
rf::eu_rf_wren_int = 0
rf::rfRdAddrEqEuRfWrAddr_a = 0
rf::bypass_a = 0
rf::eu_rf_wr_addr = 00
rf::rd_addr_b     = 1f
rf::eu_rf_wr_addr_equal_rd_addr_b = 0
rf::eu_rf_wren.read() = 0
rf::eu_rf_wren_int = 0
rf::rfRdAddrEqEuRfWrAddr_b = 0
rf::bypass_b = 0
rf::eu_data_a = 0
rf::rd_data_a = 000000000
rf::rd_data_b = 000000000
rf::rf_eu_v = 0
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 000000000
rf::eu_rf_wren    = 0
rf::rf_stall = 0
rf::   rf[0] = 0
rf::   rf[1] = 1
rf::   rf[2] = 2
rf::   rf[3] = 3
rf::   rf[4] = 4
rf::   rf[5] = 5
rf::   rf[6] = 6
rf::   rf[7] = 7
rf::   rf[8] = 8
rf::   rf[9] = 9
rf::   rf[a] = a
rf::   rf[b] = b
rf::   rf[c] = c
rf::   rf[d] = d
rf::   rf[e] = e
rf::   rf[f] = f
rf::   rf[10] = 10
rf::   rf[11] = 11
rf::   rf[12] = 12
rf::   rf[13] = 13
rf::   rf[14] = 14
rf::   rf[15] = 15
rf::   rf[16] = 16
rf::   rf[17] = 17
rf::   rf[18] = 18
rf::   rf[19] = 19
rf::   rf[1a] = 1a
rf::   rf[1b] = 1b
rf::   rf[1c] = 1c
rf::   rf[1d] = 1d
rf::   rf[1e] = 1e
rf::   rf[1f] = 0
executionUnit::****************************************
executionUnit:: rf_eu_v=0
executionUnit::enable =1
executionUnit:: instReg=801e001e isInstFmtLas=0 instFmt=2
executionUnit:: rf_eu_ir = 0801e001e
executionUnit:: las op = NA las op = 0
executionUnit:: src_a = 000000000
executionUnit:: src_b = 000000000
executionUnit:: eu_rf_wr_data_las = 0
executionUnit:: eu_rf_wr_data_bit = 0
executionUnit:: id->dest = 1e
executionUnit:: eu_rf_wr_data = 000000000
executionUnit:: eu_rf_wr_addr = 00
executionUnit:: eu_rf_wren             = 0
   read op  buffer[21] = 1 im read operation  = 21 data = 801f001f
rf::write operation wr_addr_a = 1f
 eu_branch = 0 pcx = 22 pc_inc = 22
reset_ = 1
enable = 1
eu_branch = 0
 pc_im_v   = 1
 im_rf_v   = 1
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 21
im.data = 801f001f
npc_2 = 0001e
npc_3 = 0001d
npc_4 = 00000
pc_im_v = 1 im_RnW = 1 pc_im_address = 21  im_1 = 801f001f
im_data = 801f001f
ir_rf_3 = 0801e001e
ir_eu_4 = 0801d001d
 eu_branch.read() = 1
 pc_im_v   = 1
 im_rf_v   = 1
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 1f
 rf_dest_addr = 1f
 rf_rd_data_a = 000000000
 rf_rd_data_b = 000000000
 im_rf_v   = 1
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
rf::****************************************
rf::v = 1
rf::instructionReg = 1
rf::reset_ = 1
rf::rd_addr_a = 00
rf::rden_a    = 1
rf::rd_addr_b = 01
rf::rden_b    = 1
rf:0 read operation rd_addr_a = 00
rf:all read operation rd_addr_b = 01
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 000000000
rf::eu_rf_wren    = 0
rf::swapbit_wr_data_a = 0
rf::swapbit_wr_addr_a = 0
rf::swapbit_wr_data_b = 0
rf::swapbit_wr_addr_b = 0
rf::swapbit_wren.writ = 0
rf::eu_rf_wren 	  = 0
rf::swap_wren 		  = 0
rf::swapbit_wren 	  = 0
rf::testbit_wren 	  = 0
rf::setbit_wren 	  = 0
rf::ldimm_ab_16_wren = 1
rf::rf_mux_in_wren_a = 0
rf::rf_mux_in_wren_b = 0
rf::enable = 1
rf::operandA = 0
rf::operandB = 0
rf::im_rf_ir.read()  = 1
rf::im_rf_instructionDecoder->getInstructionReg()  = 1
rf:: isInstFormatOpLas = 1
rf:: isInstFormatOpBit = 0
rf:: isInstFormatOpLdIm= 0
rf:: isInstFormatOpBr  = 0
rf:: getLdImmOperand16Field= 1
rf:: signExtend16(im_rf_instructionDecoder->getLdImmOperand16Field ()) = 1
rf:: rf_dest_data  = 1f
rf::im_rf_ir = 1
rf::eu_rf_ir = 0801e001e
rf::op_imm_a = 0
rf::op_imm_b = 1
rf:: getOperandAImm8Field  = 0
rf:: getOperandBImm8Field  = 1
rf::signExtend8 (op_imm_a) = 0
rf::signExtend8 (op_imm_b) = 1
rf::signExtend16(op_imm_b) = 1
rf::rd_data_rf_a = 0
rf::rd_data_rf_b = 1
rf::rd_data_imm_a = 0
rf::rd_data_imm_b = 1
rf::rd_data_imm_mux_sel_a = 0
rf::rd_data_imm_mux_sel_b = 0
rf::rd_data_imm_mux_a = 0
rf::rd_data_imm_mux_b = 1
rf::rd_data_bypass_mux_a = 0
rf::rd_data_bypass_mux_b = 1
rf::rf_eu_wr_addr = 0
rf::enable = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_a     = 00
rf::eu_rf_wr_addr_equal_rd_addr_a = 1
rf::eu_rf_wren.read() = 0
rf::eu_rf_wren_int = 0
rf::rfRdAddrEqEuRfWrAddr_a = 0
rf::bypass_a = 0
rf::eu_rf_wr_addr = 00
rf::rd_addr_b     = 01
rf::eu_rf_wr_addr_equal_rd_addr_b = 0
rf::eu_rf_wren.read() = 0
rf::eu_rf_wren_int = 0
rf::rfRdAddrEqEuRfWrAddr_b = 0
rf::bypass_b = 0
rf::eu_data_a = 0
rf::rd_data_a = 000000000
rf::rd_data_b = 000000000
rf::rf_eu_v = 0
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 000000000
rf::eu_rf_wren    = 0
rf::rf_stall = 0
rf::   rf[0] = 0
rf::   rf[1] = 1
rf::   rf[2] = 2
rf::   rf[3] = 3
rf::   rf[4] = 4
rf::   rf[5] = 5
rf::   rf[6] = 6
rf::   rf[7] = 7
rf::   rf[8] = 8
rf::   rf[9] = 9
rf::   rf[a] = a
rf::   rf[b] = b
rf::   rf[c] = c
rf::   rf[d] = d
rf::   rf[e] = e
rf::   rf[f] = f
rf::   rf[10] = 10
rf::   rf[11] = 11
rf::   rf[12] = 12
rf::   rf[13] = 13
rf::   rf[14] = 14
rf::   rf[15] = 15
rf::   rf[16] = 16
rf::   rf[17] = 17
rf::   rf[18] = 18
rf::   rf[19] = 19
rf::   rf[1a] = 1a
rf::   rf[1b] = 1b
rf::   rf[1c] = 1c
rf::   rf[1d] = 1d
rf::   rf[1e] = 1e
rf::   rf[1f] = 1f
executionUnit::****************************************
executionUnit:: rf_eu_v=0
executionUnit::enable =1
executionUnit:: instReg=801f001f isInstFmtLas=0 instFmt=2
executionUnit:: rf_eu_ir = 0801f001f
executionUnit:: las op = NA las op = 0
executionUnit:: src_a = 000000000
executionUnit:: src_b = 000000000
executionUnit:: eu_rf_wr_data_las = 0
executionUnit:: eu_rf_wr_data_bit = 0
executionUnit:: id->dest = 1f
executionUnit:: eu_rf_wr_data = 000000000
executionUnit:: eu_rf_wr_addr = 00
executionUnit:: eu_rf_wren             = 0
   read op  buffer[22] = 2 im read operation  = 22 data = 1
rf::write operation wr_addr_a = 1f
 eu_branch = 0 pcx = 23 pc_inc = 23
reset_ = 1
enable = 1
eu_branch = 0
 pc_im_v   = 1
 im_rf_v   = 1
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 22
im.data = 1
npc_2 = 0001f
npc_3 = 0001e
npc_4 = 00000
pc_im_v = 1 im_RnW = 1 pc_im_address = 22  im_1 = 1
im_data = 1
ir_rf_3 = 0801f001f
ir_eu_4 = 0801e001e
 eu_branch.read() = 1
 pc_im_v   = 1
 im_rf_v   = 1
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 1
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 000000000
 im_rf_v   = 1
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
rf::****************************************
rf::v = 1
rf::instructionReg = 2
rf::reset_ = 1
rf::rd_addr_a = 00
rf::rden_a    = 1
rf::rd_addr_b = 02
rf::rden_b    = 1
rf:0 read operation rd_addr_a = 00
rf:all read operation rd_addr_b = 02
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 000000000
rf::eu_rf_wren    = 0
rf::swapbit_wr_data_a = 0
rf::swapbit_wr_addr_a = 0
rf::swapbit_wr_data_b = 0
rf::swapbit_wr_addr_b = 0
rf::swapbit_wren.writ = 0
rf::eu_rf_wren 	  = 0
rf::swap_wren 		  = 0
rf::swapbit_wren 	  = 0
rf::testbit_wren 	  = 0
rf::setbit_wren 	  = 0
rf::ldimm_ab_16_wren = 0
rf::rf_mux_in_wren_a = 0
rf::rf_mux_in_wren_b = 0
rf::enable = 1
rf::operandA = 0
rf::operandB = 0
rf::im_rf_ir.read()  = 2
rf::im_rf_instructionDecoder->getInstructionReg()  = 2
rf:: isInstFormatOpLas = 1
rf:: isInstFormatOpBit = 0
rf:: isInstFormatOpLdIm= 0
rf:: isInstFormatOpBr  = 0
rf:: getLdImmOperand16Field= 2
rf:: signExtend16(im_rf_instructionDecoder->getLdImmOperand16Field ()) = 2
rf:: rf_dest_data  = 1f
rf::im_rf_ir = 2
rf::eu_rf_ir = 0801f001f
rf::op_imm_a = 0
rf::op_imm_b = 2
rf:: getOperandAImm8Field  = 0
rf:: getOperandBImm8Field  = 2
rf::signExtend8 (op_imm_a) = 0
rf::signExtend8 (op_imm_b) = 2
rf::signExtend16(op_imm_b) = 2
rf::rd_data_rf_a = 0
rf::rd_data_rf_b = 2
rf::rd_data_imm_a = 0
rf::rd_data_imm_b = 2
rf::rd_data_imm_mux_sel_a = 0
rf::rd_data_imm_mux_sel_b = 0
rf::rd_data_imm_mux_a = 0
rf::rd_data_imm_mux_b = 2
rf::rd_data_bypass_mux_a = 0
rf::rd_data_bypass_mux_b = 2
rf::rf_eu_wr_addr = 0
rf::enable = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_a     = 00
rf::eu_rf_wr_addr_equal_rd_addr_a = 1
rf::eu_rf_wren.read() = 0
rf::eu_rf_wren_int = 0
rf::rfRdAddrEqEuRfWrAddr_a = 0
rf::bypass_a = 0
rf::eu_rf_wr_addr = 00
rf::rd_addr_b     = 02
rf::eu_rf_wr_addr_equal_rd_addr_b = 0
rf::eu_rf_wren.read() = 0
rf::eu_rf_wren_int = 0
rf::rfRdAddrEqEuRfWrAddr_b = 0
rf::bypass_b = 0
rf::eu_data_a = 0
rf::rd_data_a = 000000000
rf::rd_data_b = 000000001
rf::rf_eu_v = 1
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 000000000
rf::eu_rf_wren    = 0
rf::rf_stall = 0
rf::   rf[0] = 0
rf::   rf[1] = 1
rf::   rf[2] = 2
rf::   rf[3] = 3
rf::   rf[4] = 4
rf::   rf[5] = 5
rf::   rf[6] = 6
rf::   rf[7] = 7
rf::   rf[8] = 8
rf::   rf[9] = 9
rf::   rf[a] = a
rf::   rf[b] = b
rf::   rf[c] = c
rf::   rf[d] = d
rf::   rf[e] = e
rf::   rf[f] = f
rf::   rf[10] = 10
rf::   rf[11] = 11
rf::   rf[12] = 12
rf::   rf[13] = 13
rf::   rf[14] = 14
rf::   rf[15] = 15
rf::   rf[16] = 16
rf::   rf[17] = 17
rf::   rf[18] = 18
rf::   rf[19] = 19
rf::   rf[1a] = 1a
rf::   rf[1b] = 1b
rf::   rf[1c] = 1c
rf::   rf[1d] = 1d
rf::   rf[1e] = 1e
rf::   rf[1f] = 1f
executionUnit::****************************************
executionUnit:: rf_eu_v=1
executionUnit::enable =1
executionUnit:: instReg=1 isInstFmtLas=1 instFmt=0
executionUnit:: rf_eu_ir = 000000001
executionUnit:: las op = ELasAdd	 las op = 0
executionUnit:: src_a = 000000000
executionUnit:: src_b = 000000001
executionUnit:: eu_rf_wr_data_las = 0
executionUnit:: eu_rf_wr_data_bit = 0
executionUnit:: id->dest = 0
executionUnit:: eu_rf_wr_data = 000000000
executionUnit:: eu_rf_wr_addr = 00
executionUnit:: eu_rf_wren             = 0
rf::****************************************
rf::v = 1
rf::instructionReg = 2
rf::reset_ = 1
rf::rd_addr_a = 00
rf::rden_a    = 1
rf::rd_addr_b = 02
rf::rden_b    = 1
rf:0 read operation rd_addr_a = 00
rf:all read operation rd_addr_b = 02
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 000000001
rf::eu_rf_wren    = 1
rf::swapbit_wr_data_a = 0
rf::swapbit_wr_addr_a = 0
rf::swapbit_wr_data_b = 0
rf::swapbit_wr_addr_b = 0
rf::swapbit_wren.writ = 0
rf::eu_rf_wren 	  = 1
rf::swap_wren 		  = 0
rf::swapbit_wren 	  = 0
rf::testbit_wren 	  = 0
rf::setbit_wren 	  = 0
rf::ldimm_ab_16_wren = 0
rf::rf_mux_in_wren_a = 0
rf::rf_mux_in_wren_b = 0
rf::enable = 1
rf::operandA = 0
rf::operandB = 0
rf::im_rf_ir.read()  = 2
rf::im_rf_instructionDecoder->getInstructionReg()  = 2
rf:: isInstFormatOpLas = 1
rf:: isInstFormatOpBit = 0
rf:: isInstFormatOpLdIm= 0
rf:: isInstFormatOpBr  = 0
rf:: getLdImmOperand16Field= 2
rf:: signExtend16(im_rf_instructionDecoder->getLdImmOperand16Field ()) = 2
rf:: rf_dest_data  = 1f
rf::im_rf_ir = 2
rf::eu_rf_ir = 0801f001f
rf::op_imm_a = 0
rf::op_imm_b = 2
rf:: getOperandAImm8Field  = 0
rf:: getOperandBImm8Field  = 2
rf::signExtend8 (op_imm_a) = 0
rf::signExtend8 (op_imm_b) = 2
rf::signExtend16(op_imm_b) = 2
rf::rd_data_rf_a = 0
rf::rd_data_rf_b = 2
rf::rd_data_imm_a = 0
rf::rd_data_imm_b = 2
rf::rd_data_imm_mux_sel_a = 0
rf::rd_data_imm_mux_sel_b = 0
rf::rd_data_imm_mux_a = 0
rf::rd_data_imm_mux_b = 2
rf::rd_data_bypass_mux_a = 1
rf::rd_data_bypass_mux_b = 2
rf::rf_eu_wr_addr = 0
rf::enable = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_a     = 00
rf::eu_rf_wr_addr_equal_rd_addr_a = 1
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_a = 1
rf::bypass_a = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_b     = 02
rf::eu_rf_wr_addr_equal_rd_addr_b = 0
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_b = 0
rf::bypass_b = 0
rf::eu_data_a = 1
rf::rd_data_a = 000000000
rf::rd_data_b = 000000001
rf::rf_eu_v = 1
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 000000001
rf::eu_rf_wren    = 1
rf::rf_stall = 0
rf::   rf[0] = 0
rf::   rf[1] = 1
rf::   rf[2] = 2
rf::   rf[3] = 3
rf::   rf[4] = 4
rf::   rf[5] = 5
rf::   rf[6] = 6
rf::   rf[7] = 7
rf::   rf[8] = 8
rf::   rf[9] = 9
rf::   rf[a] = a
rf::   rf[b] = b
rf::   rf[c] = c
rf::   rf[d] = d
rf::   rf[e] = e
rf::   rf[f] = f
rf::   rf[10] = 10
rf::   rf[11] = 11
rf::   rf[12] = 12
rf::   rf[13] = 13
rf::   rf[14] = 14
rf::   rf[15] = 15
rf::   rf[16] = 16
rf::   rf[17] = 17
rf::   rf[18] = 18
rf::   rf[19] = 19
rf::   rf[1a] = 1a
rf::   rf[1b] = 1b
rf::   rf[1c] = 1c
rf::   rf[1d] = 1d
rf::   rf[1e] = 1e
rf::   rf[1f] = 1f
   read op  buffer[23] = 3 im read operation  = 23 data = 2
 eu_branch = 0 pcx = 24 pc_inc = 24
reset_ = 1
enable = 1
eu_branch = 0
 pc_im_v   = 1
 im_rf_v   = 1
 rf_eu_v   = 1
 eu_rf_wren= 1
pc_im_address = 23
im.data = 2
npc_2 = 00001
npc_3 = 0001f
npc_4 = 00000
pc_im_v = 1 im_RnW = 1 pc_im_address = 23  im_1 = 2
im_data = 2
ir_rf_3 = 000000001
ir_eu_4 = 0801f001f
 eu_branch.read() = 1
 pc_im_v   = 1
 im_rf_v   = 1
 rf_eu_v   = 1
 rf_rd_addr_a = 0
 rf_rd_addr_b = 2
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 000000001
 im_rf_v   = 1
 rf_eu_v = 1
 eu_rf_wren = 1
 eu_rf_wr_data  = 000000001
 eu_rf_wr_addr  = 00
rf::****************************************
rf::v = 1
rf::instructionReg = 3
rf::reset_ = 1
rf::rd_addr_a = 00
rf::rden_a    = 1
rf::rd_addr_b = 03
rf::rden_b    = 1
rf:0 read operation rd_addr_a = 00
rf:all read operation rd_addr_b = 03
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 000000001
rf::eu_rf_wren    = 1
rf::swapbit_wr_data_a = 0
rf::swapbit_wr_addr_a = 0
rf::swapbit_wr_data_b = 0
rf::swapbit_wr_addr_b = 0
rf::swapbit_wren.writ = 0
rf::eu_rf_wren 	  = 1
rf::swap_wren 		  = 0
rf::swapbit_wren 	  = 0
rf::testbit_wren 	  = 0
rf::setbit_wren 	  = 0
rf::ldimm_ab_16_wren = 0
rf::rf_mux_in_wren_a = 0
rf::rf_mux_in_wren_b = 0
rf::enable = 1
rf::operandA = 0
rf::operandB = 0
rf::im_rf_ir.read()  = 3
rf::im_rf_instructionDecoder->getInstructionReg()  = 3
rf:: isInstFormatOpLas = 1
rf:: isInstFormatOpBit = 0
rf:: isInstFormatOpLdIm= 0
rf:: isInstFormatOpBr  = 0
rf:: getLdImmOperand16Field= 3
rf:: signExtend16(im_rf_instructionDecoder->getLdImmOperand16Field ()) = 3
rf:: rf_dest_data  = 1f
rf::im_rf_ir = 3
rf::eu_rf_ir = 000000001
rf::op_imm_a = 0
rf::op_imm_b = 3
rf:: getOperandAImm8Field  = 0
rf:: getOperandBImm8Field  = 3
rf::signExtend8 (op_imm_a) = 0
rf::signExtend8 (op_imm_b) = 3
rf::signExtend16(op_imm_b) = 3
rf::rd_data_rf_a = 0
rf::rd_data_rf_b = 3
rf::rd_data_imm_a = 0
rf::rd_data_imm_b = 3
rf::rd_data_imm_mux_sel_a = 0
rf::rd_data_imm_mux_sel_b = 0
rf::rd_data_imm_mux_a = 0
rf::rd_data_imm_mux_b = 3
rf::rd_data_bypass_mux_a = 1
rf::rd_data_bypass_mux_b = 3
rf::rf_eu_wr_addr = 0
rf::enable = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_a     = 00
rf::eu_rf_wr_addr_equal_rd_addr_a = 1
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_a = 1
rf::bypass_a = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_b     = 03
rf::eu_rf_wr_addr_equal_rd_addr_b = 0
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_b = 0
rf::bypass_b = 0
rf::eu_data_a = 1
rf::rd_data_a = 000000001
rf::rd_data_b = 000000002
rf::rf_eu_v = 1
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 000000001
rf::eu_rf_wren    = 1
rf::rf_stall = 0
rf::   rf[0] = 0
rf::   rf[1] = 1
rf::   rf[2] = 2
rf::   rf[3] = 3
rf::   rf[4] = 4
rf::   rf[5] = 5
rf::   rf[6] = 6
rf::   rf[7] = 7
rf::   rf[8] = 8
rf::   rf[9] = 9
rf::   rf[a] = a
rf::   rf[b] = b
rf::   rf[c] = c
rf::   rf[d] = d
rf::   rf[e] = e
rf::   rf[f] = f
rf::   rf[10] = 10
rf::   rf[11] = 11
rf::   rf[12] = 12
rf::   rf[13] = 13
rf::   rf[14] = 14
rf::   rf[15] = 15
rf::   rf[16] = 16
rf::   rf[17] = 17
rf::   rf[18] = 18
rf::   rf[19] = 19
rf::   rf[1a] = 1a
rf::   rf[1b] = 1b
rf::   rf[1c] = 1c
rf::   rf[1d] = 1d
rf::   rf[1e] = 1e
rf::   rf[1f] = 1f
executionUnit::****************************************
executionUnit:: rf_eu_v=1
executionUnit::enable =1
executionUnit:: instReg=2 isInstFmtLas=1 instFmt=0
executionUnit:: rf_eu_ir = 000000002
executionUnit:: las op = ELasAdd	 las op = 0
executionUnit:: src_a = 000000001
executionUnit:: src_b = 000000002
executionUnit:: eu_rf_wr_data_las = 0
executionUnit:: eu_rf_wr_data_bit = 0
executionUnit:: id->dest = 0
executionUnit:: eu_rf_wr_data = 000000001
executionUnit:: eu_rf_wr_addr = 00
executionUnit:: eu_rf_wren             = 1
rf::****************************************
rf::v = 1
rf::instructionReg = 3
rf::reset_ = 1
rf::rd_addr_a = 00
rf::rden_a    = 1
rf::rd_addr_b = 03
rf::rden_b    = 1
rf:0 read operation rd_addr_a = 00
rf:all read operation rd_addr_b = 03
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 000000003
rf::eu_rf_wren    = 1
rf::swapbit_wr_data_a = 0
rf::swapbit_wr_addr_a = 0
rf::swapbit_wr_data_b = 0
rf::swapbit_wr_addr_b = 0
rf::swapbit_wren.writ = 0
rf::eu_rf_wren 	  = 1
rf::swap_wren 		  = 0
rf::swapbit_wren 	  = 0
rf::testbit_wren 	  = 0
rf::setbit_wren 	  = 0
rf::ldimm_ab_16_wren = 0
rf::rf_mux_in_wren_a = 0
rf::rf_mux_in_wren_b = 0
rf::enable = 1
rf::operandA = 0
rf::operandB = 0
rf::im_rf_ir.read()  = 3
rf::im_rf_instructionDecoder->getInstructionReg()  = 3
rf:: isInstFormatOpLas = 1
rf:: isInstFormatOpBit = 0
rf:: isInstFormatOpLdIm= 0
rf:: isInstFormatOpBr  = 0
rf:: getLdImmOperand16Field= 3
rf:: signExtend16(im_rf_instructionDecoder->getLdImmOperand16Field ()) = 3
rf:: rf_dest_data  = 1f
rf::im_rf_ir = 3
rf::eu_rf_ir = 000000001
rf::op_imm_a = 0
rf::op_imm_b = 3
rf:: getOperandAImm8Field  = 0
rf:: getOperandBImm8Field  = 3
rf::signExtend8 (op_imm_a) = 0
rf::signExtend8 (op_imm_b) = 3
rf::signExtend16(op_imm_b) = 3
rf::rd_data_rf_a = 0
rf::rd_data_rf_b = 3
rf::rd_data_imm_a = 0
rf::rd_data_imm_b = 3
rf::rd_data_imm_mux_sel_a = 0
rf::rd_data_imm_mux_sel_b = 0
rf::rd_data_imm_mux_a = 0
rf::rd_data_imm_mux_b = 3
rf::rd_data_bypass_mux_a = 3
rf::rd_data_bypass_mux_b = 3
rf::rf_eu_wr_addr = 0
rf::enable = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_a     = 00
rf::eu_rf_wr_addr_equal_rd_addr_a = 1
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_a = 1
rf::bypass_a = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_b     = 03
rf::eu_rf_wr_addr_equal_rd_addr_b = 0
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_b = 0
rf::bypass_b = 0
rf::eu_data_a = 3
rf::rd_data_a = 000000001
rf::rd_data_b = 000000002
rf::rf_eu_v = 1
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 000000003
rf::eu_rf_wren    = 1
rf::rf_stall = 0
rf::   rf[0] = 0
rf::   rf[1] = 1
rf::   rf[2] = 2
rf::   rf[3] = 3
rf::   rf[4] = 4
rf::   rf[5] = 5
rf::   rf[6] = 6
rf::   rf[7] = 7
rf::   rf[8] = 8
rf::   rf[9] = 9
rf::   rf[a] = a
rf::   rf[b] = b
rf::   rf[c] = c
rf::   rf[d] = d
rf::   rf[e] = e
rf::   rf[f] = f
rf::   rf[10] = 10
rf::   rf[11] = 11
rf::   rf[12] = 12
rf::   rf[13] = 13
rf::   rf[14] = 14
rf::   rf[15] = 15
rf::   rf[16] = 16
rf::   rf[17] = 17
rf::   rf[18] = 18
rf::   rf[19] = 19
rf::   rf[1a] = 1a
rf::   rf[1b] = 1b
rf::   rf[1c] = 1c
rf::   rf[1d] = 1d
rf::   rf[1e] = 1e
rf::   rf[1f] = 1f
   read op  buffer[24] = 4 im read operation  = 24 data = 3
 eu_branch = 0 pcx = 25 pc_inc = 25
reset_ = 1
enable = 1
eu_branch = 0
 pc_im_v   = 1
 im_rf_v   = 1
 rf_eu_v   = 1
 eu_rf_wren= 1
pc_im_address = 24
im.data = 3
npc_2 = 00002
npc_3 = 00001
npc_4 = 00000
pc_im_v = 1 im_RnW = 1 pc_im_address = 24  im_1 = 3
im_data = 3
ir_rf_3 = 000000002
ir_eu_4 = 000000001
 eu_branch.read() = 1
 pc_im_v   = 1
 im_rf_v   = 1
 rf_eu_v   = 1
 rf_rd_addr_a = 0
 rf_rd_addr_b = 3
 rf_dest_addr = 0
 rf_rd_data_a = 000000001
 rf_rd_data_b = 000000002
 im_rf_v   = 1
 rf_eu_v = 1
 eu_rf_wren = 1
 eu_rf_wr_data  = 000000003
 eu_rf_wr_addr  = 00
rf::****************************************
rf::v = 1
rf::instructionReg = 4
rf::reset_ = 1
rf::rd_addr_a = 00
rf::rden_a    = 1
rf::rd_addr_b = 04
rf::rden_b    = 1
rf:0 read operation rd_addr_a = 00
rf:all read operation rd_addr_b = 04
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 000000003
rf::eu_rf_wren    = 1
rf::swapbit_wr_data_a = 0
rf::swapbit_wr_addr_a = 0
rf::swapbit_wr_data_b = 0
rf::swapbit_wr_addr_b = 0
rf::swapbit_wren.writ = 0
rf::eu_rf_wren 	  = 1
rf::swap_wren 		  = 0
rf::swapbit_wren 	  = 0
rf::testbit_wren 	  = 0
rf::setbit_wren 	  = 0
rf::ldimm_ab_16_wren = 0
rf::rf_mux_in_wren_a = 0
rf::rf_mux_in_wren_b = 0
rf::enable = 1
rf::operandA = 0
rf::operandB = 0
rf::im_rf_ir.read()  = 4
rf::im_rf_instructionDecoder->getInstructionReg()  = 4
rf:: isInstFormatOpLas = 1
rf:: isInstFormatOpBit = 0
rf:: isInstFormatOpLdIm= 0
rf:: isInstFormatOpBr  = 0
rf:: getLdImmOperand16Field= 4
rf:: signExtend16(im_rf_instructionDecoder->getLdImmOperand16Field ()) = 4
rf:: rf_dest_data  = 1f
rf::im_rf_ir = 4
rf::eu_rf_ir = 000000002
rf::op_imm_a = 0
rf::op_imm_b = 4
rf:: getOperandAImm8Field  = 0
rf:: getOperandBImm8Field  = 4
rf::signExtend8 (op_imm_a) = 0
rf::signExtend8 (op_imm_b) = 4
rf::signExtend16(op_imm_b) = 4
rf::rd_data_rf_a = 0
rf::rd_data_rf_b = 4
rf::rd_data_imm_a = 0
rf::rd_data_imm_b = 4
rf::rd_data_imm_mux_sel_a = 0
rf::rd_data_imm_mux_sel_b = 0
rf::rd_data_imm_mux_a = 0
rf::rd_data_imm_mux_b = 4
rf::rd_data_bypass_mux_a = 3
rf::rd_data_bypass_mux_b = 4
rf::rf_eu_wr_addr = 0
rf::enable = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_a     = 00
rf::eu_rf_wr_addr_equal_rd_addr_a = 1
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_a = 1
rf::bypass_a = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_b     = 04
rf::eu_rf_wr_addr_equal_rd_addr_b = 0
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_b = 0
rf::bypass_b = 0
rf::eu_data_a = 3
rf::rd_data_a = 000000003
rf::rd_data_b = 000000003
rf::rf_eu_v = 1
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 000000003
rf::eu_rf_wren    = 1
rf::rf_stall = 0
rf::   rf[0] = 0
rf::   rf[1] = 1
rf::   rf[2] = 2
rf::   rf[3] = 3
rf::   rf[4] = 4
rf::   rf[5] = 5
rf::   rf[6] = 6
rf::   rf[7] = 7
rf::   rf[8] = 8
rf::   rf[9] = 9
rf::   rf[a] = a
rf::   rf[b] = b
rf::   rf[c] = c
rf::   rf[d] = d
rf::   rf[e] = e
rf::   rf[f] = f
rf::   rf[10] = 10
rf::   rf[11] = 11
rf::   rf[12] = 12
rf::   rf[13] = 13
rf::   rf[14] = 14
rf::   rf[15] = 15
rf::   rf[16] = 16
rf::   rf[17] = 17
rf::   rf[18] = 18
rf::   rf[19] = 19
rf::   rf[1a] = 1a
rf::   rf[1b] = 1b
rf::   rf[1c] = 1c
rf::   rf[1d] = 1d
rf::   rf[1e] = 1e
rf::   rf[1f] = 1f
executionUnit::****************************************
executionUnit:: rf_eu_v=1
executionUnit::enable =1
executionUnit:: instReg=3 isInstFmtLas=1 instFmt=0
executionUnit:: rf_eu_ir = 000000003
executionUnit:: las op = ELasAdd	 las op = 0
executionUnit:: src_a = 000000003
executionUnit:: src_b = 000000003
executionUnit:: eu_rf_wr_data_las = 0
executionUnit:: eu_rf_wr_data_bit = 0
executionUnit:: id->dest = 0
executionUnit:: eu_rf_wr_data = 000000003
executionUnit:: eu_rf_wr_addr = 00
executionUnit:: eu_rf_wren             = 1
rf::****************************************
rf::v = 1
rf::instructionReg = 4
rf::reset_ = 1
rf::rd_addr_a = 00
rf::rden_a    = 1
rf::rd_addr_b = 04
rf::rden_b    = 1
rf:0 read operation rd_addr_a = 00
rf:all read operation rd_addr_b = 04
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 000000006
rf::eu_rf_wren    = 1
rf::swapbit_wr_data_a = 0
rf::swapbit_wr_addr_a = 0
rf::swapbit_wr_data_b = 0
rf::swapbit_wr_addr_b = 0
rf::swapbit_wren.writ = 0
rf::eu_rf_wren 	  = 1
rf::swap_wren 		  = 0
rf::swapbit_wren 	  = 0
rf::testbit_wren 	  = 0
rf::setbit_wren 	  = 0
rf::ldimm_ab_16_wren = 0
rf::rf_mux_in_wren_a = 0
rf::rf_mux_in_wren_b = 0
rf::enable = 1
rf::operandA = 0
rf::operandB = 0
rf::im_rf_ir.read()  = 4
rf::im_rf_instructionDecoder->getInstructionReg()  = 4
rf:: isInstFormatOpLas = 1
rf:: isInstFormatOpBit = 0
rf:: isInstFormatOpLdIm= 0
rf:: isInstFormatOpBr  = 0
rf:: getLdImmOperand16Field= 4
rf:: signExtend16(im_rf_instructionDecoder->getLdImmOperand16Field ()) = 4
rf:: rf_dest_data  = 1f
rf::im_rf_ir = 4
rf::eu_rf_ir = 000000002
rf::op_imm_a = 0
rf::op_imm_b = 4
rf:: getOperandAImm8Field  = 0
rf:: getOperandBImm8Field  = 4
rf::signExtend8 (op_imm_a) = 0
rf::signExtend8 (op_imm_b) = 4
rf::signExtend16(op_imm_b) = 4
rf::rd_data_rf_a = 0
rf::rd_data_rf_b = 4
rf::rd_data_imm_a = 0
rf::rd_data_imm_b = 4
rf::rd_data_imm_mux_sel_a = 0
rf::rd_data_imm_mux_sel_b = 0
rf::rd_data_imm_mux_a = 0
rf::rd_data_imm_mux_b = 4
rf::rd_data_bypass_mux_a = 6
rf::rd_data_bypass_mux_b = 4
rf::rf_eu_wr_addr = 0
rf::enable = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_a     = 00
rf::eu_rf_wr_addr_equal_rd_addr_a = 1
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_a = 1
rf::bypass_a = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_b     = 04
rf::eu_rf_wr_addr_equal_rd_addr_b = 0
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_b = 0
rf::bypass_b = 0
rf::eu_data_a = 6
rf::rd_data_a = 000000003
rf::rd_data_b = 000000003
rf::rf_eu_v = 1
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 000000006
rf::eu_rf_wren    = 1
rf::rf_stall = 0
rf::   rf[0] = 0
rf::   rf[1] = 1
rf::   rf[2] = 2
rf::   rf[3] = 3
rf::   rf[4] = 4
rf::   rf[5] = 5
rf::   rf[6] = 6
rf::   rf[7] = 7
rf::   rf[8] = 8
rf::   rf[9] = 9
rf::   rf[a] = a
rf::   rf[b] = b
rf::   rf[c] = c
rf::   rf[d] = d
rf::   rf[e] = e
rf::   rf[f] = f
rf::   rf[10] = 10
rf::   rf[11] = 11
rf::   rf[12] = 12
rf::   rf[13] = 13
rf::   rf[14] = 14
rf::   rf[15] = 15
rf::   rf[16] = 16
rf::   rf[17] = 17
rf::   rf[18] = 18
rf::   rf[19] = 19
rf::   rf[1a] = 1a
rf::   rf[1b] = 1b
rf::   rf[1c] = 1c
rf::   rf[1d] = 1d
rf::   rf[1e] = 1e
rf::   rf[1f] = 1f
   read op  buffer[25] = 5 im read operation  = 25 data = 4
 eu_branch = 0 pcx = 26 pc_inc = 26
reset_ = 1
enable = 1
eu_branch = 0
 pc_im_v   = 1
 im_rf_v   = 1
 rf_eu_v   = 1
 eu_rf_wren= 1
pc_im_address = 25
im.data = 4
npc_2 = 00003
npc_3 = 00002
npc_4 = 00000
pc_im_v = 1 im_RnW = 1 pc_im_address = 25  im_1 = 4
im_data = 4
ir_rf_3 = 000000003
ir_eu_4 = 000000002
 eu_branch.read() = 1
 pc_im_v   = 1
 im_rf_v   = 1
 rf_eu_v   = 1
 rf_rd_addr_a = 0
 rf_rd_addr_b = 4
 rf_dest_addr = 0
 rf_rd_data_a = 000000003
 rf_rd_data_b = 000000003
 im_rf_v   = 1
 rf_eu_v = 1
 eu_rf_wren = 1
 eu_rf_wr_data  = 000000006
 eu_rf_wr_addr  = 00
rf::****************************************
rf::v = 1
rf::instructionReg = 5
rf::reset_ = 1
rf::rd_addr_a = 00
rf::rden_a    = 1
rf::rd_addr_b = 05
rf::rden_b    = 1
rf:0 read operation rd_addr_a = 00
rf:all read operation rd_addr_b = 05
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 000000006
rf::eu_rf_wren    = 1
rf::swapbit_wr_data_a = 0
rf::swapbit_wr_addr_a = 0
rf::swapbit_wr_data_b = 0
rf::swapbit_wr_addr_b = 0
rf::swapbit_wren.writ = 0
rf::eu_rf_wren 	  = 1
rf::swap_wren 		  = 0
rf::swapbit_wren 	  = 0
rf::testbit_wren 	  = 0
rf::setbit_wren 	  = 0
rf::ldimm_ab_16_wren = 0
rf::rf_mux_in_wren_a = 0
rf::rf_mux_in_wren_b = 0
rf::enable = 1
rf::operandA = 0
rf::operandB = 0
rf::im_rf_ir.read()  = 5
rf::im_rf_instructionDecoder->getInstructionReg()  = 5
rf:: isInstFormatOpLas = 1
rf:: isInstFormatOpBit = 0
rf:: isInstFormatOpLdIm= 0
rf:: isInstFormatOpBr  = 0
rf:: getLdImmOperand16Field= 5
rf:: signExtend16(im_rf_instructionDecoder->getLdImmOperand16Field ()) = 5
rf:: rf_dest_data  = 1f
rf::im_rf_ir = 5
rf::eu_rf_ir = 000000003
rf::op_imm_a = 0
rf::op_imm_b = 5
rf:: getOperandAImm8Field  = 0
rf:: getOperandBImm8Field  = 5
rf::signExtend8 (op_imm_a) = 0
rf::signExtend8 (op_imm_b) = 5
rf::signExtend16(op_imm_b) = 5
rf::rd_data_rf_a = 0
rf::rd_data_rf_b = 5
rf::rd_data_imm_a = 0
rf::rd_data_imm_b = 5
rf::rd_data_imm_mux_sel_a = 0
rf::rd_data_imm_mux_sel_b = 0
rf::rd_data_imm_mux_a = 0
rf::rd_data_imm_mux_b = 5
rf::rd_data_bypass_mux_a = 6
rf::rd_data_bypass_mux_b = 5
rf::rf_eu_wr_addr = 0
rf::enable = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_a     = 00
rf::eu_rf_wr_addr_equal_rd_addr_a = 1
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_a = 1
rf::bypass_a = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_b     = 05
rf::eu_rf_wr_addr_equal_rd_addr_b = 0
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_b = 0
rf::bypass_b = 0
rf::eu_data_a = 6
rf::rd_data_a = 000000006
rf::rd_data_b = 000000004
rf::rf_eu_v = 1
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 000000006
rf::eu_rf_wren    = 1
rf::rf_stall = 0
rf::   rf[0] = 0
rf::   rf[1] = 1
rf::   rf[2] = 2
rf::   rf[3] = 3
rf::   rf[4] = 4
rf::   rf[5] = 5
rf::   rf[6] = 6
rf::   rf[7] = 7
rf::   rf[8] = 8
rf::   rf[9] = 9
rf::   rf[a] = a
rf::   rf[b] = b
rf::   rf[c] = c
rf::   rf[d] = d
rf::   rf[e] = e
rf::   rf[f] = f
rf::   rf[10] = 10
rf::   rf[11] = 11
rf::   rf[12] = 12
rf::   rf[13] = 13
rf::   rf[14] = 14
rf::   rf[15] = 15
rf::   rf[16] = 16
rf::   rf[17] = 17
rf::   rf[18] = 18
rf::   rf[19] = 19
rf::   rf[1a] = 1a
rf::   rf[1b] = 1b
rf::   rf[1c] = 1c
rf::   rf[1d] = 1d
rf::   rf[1e] = 1e
rf::   rf[1f] = 1f
executionUnit::****************************************
executionUnit:: rf_eu_v=1
executionUnit::enable =1
executionUnit:: instReg=4 isInstFmtLas=1 instFmt=0
executionUnit:: rf_eu_ir = 000000004
executionUnit:: las op = ELasAdd	 las op = 0
executionUnit:: src_a = 000000006
executionUnit:: src_b = 000000004
executionUnit:: eu_rf_wr_data_las = 0
executionUnit:: eu_rf_wr_data_bit = 0
executionUnit:: id->dest = 0
executionUnit:: eu_rf_wr_data = 000000006
executionUnit:: eu_rf_wr_addr = 00
executionUnit:: eu_rf_wren             = 1
rf::****************************************
rf::v = 1
rf::instructionReg = 5
rf::reset_ = 1
rf::rd_addr_a = 00
rf::rden_a    = 1
rf::rd_addr_b = 05
rf::rden_b    = 1
rf:0 read operation rd_addr_a = 00
rf:all read operation rd_addr_b = 05
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 00000000a
rf::eu_rf_wren    = 1
rf::swapbit_wr_data_a = 0
rf::swapbit_wr_addr_a = 0
rf::swapbit_wr_data_b = 0
rf::swapbit_wr_addr_b = 0
rf::swapbit_wren.writ = 0
rf::eu_rf_wren 	  = 1
rf::swap_wren 		  = 0
rf::swapbit_wren 	  = 0
rf::testbit_wren 	  = 0
rf::setbit_wren 	  = 0
rf::ldimm_ab_16_wren = 0
rf::rf_mux_in_wren_a = 0
rf::rf_mux_in_wren_b = 0
rf::enable = 1
rf::operandA = 0
rf::operandB = 0
rf::im_rf_ir.read()  = 5
rf::im_rf_instructionDecoder->getInstructionReg()  = 5
rf:: isInstFormatOpLas = 1
rf:: isInstFormatOpBit = 0
rf:: isInstFormatOpLdIm= 0
rf:: isInstFormatOpBr  = 0
rf:: getLdImmOperand16Field= 5
rf:: signExtend16(im_rf_instructionDecoder->getLdImmOperand16Field ()) = 5
rf:: rf_dest_data  = 1f
rf::im_rf_ir = 5
rf::eu_rf_ir = 000000003
rf::op_imm_a = 0
rf::op_imm_b = 5
rf:: getOperandAImm8Field  = 0
rf:: getOperandBImm8Field  = 5
rf::signExtend8 (op_imm_a) = 0
rf::signExtend8 (op_imm_b) = 5
rf::signExtend16(op_imm_b) = 5
rf::rd_data_rf_a = 0
rf::rd_data_rf_b = 5
rf::rd_data_imm_a = 0
rf::rd_data_imm_b = 5
rf::rd_data_imm_mux_sel_a = 0
rf::rd_data_imm_mux_sel_b = 0
rf::rd_data_imm_mux_a = 0
rf::rd_data_imm_mux_b = 5
rf::rd_data_bypass_mux_a = a
rf::rd_data_bypass_mux_b = 5
rf::rf_eu_wr_addr = 0
rf::enable = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_a     = 00
rf::eu_rf_wr_addr_equal_rd_addr_a = 1
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_a = 1
rf::bypass_a = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_b     = 05
rf::eu_rf_wr_addr_equal_rd_addr_b = 0
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_b = 0
rf::bypass_b = 0
rf::eu_data_a = a
rf::rd_data_a = 000000006
rf::rd_data_b = 000000004
rf::rf_eu_v = 1
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 00000000a
rf::eu_rf_wren    = 1
rf::rf_stall = 0
rf::   rf[0] = 0
rf::   rf[1] = 1
rf::   rf[2] = 2
rf::   rf[3] = 3
rf::   rf[4] = 4
rf::   rf[5] = 5
rf::   rf[6] = 6
rf::   rf[7] = 7
rf::   rf[8] = 8
rf::   rf[9] = 9
rf::   rf[a] = a
rf::   rf[b] = b
rf::   rf[c] = c
rf::   rf[d] = d
rf::   rf[e] = e
rf::   rf[f] = f
rf::   rf[10] = 10
rf::   rf[11] = 11
rf::   rf[12] = 12
rf::   rf[13] = 13
rf::   rf[14] = 14
rf::   rf[15] = 15
rf::   rf[16] = 16
rf::   rf[17] = 17
rf::   rf[18] = 18
rf::   rf[19] = 19
rf::   rf[1a] = 1a
rf::   rf[1b] = 1b
rf::   rf[1c] = 1c
rf::   rf[1d] = 1d
rf::   rf[1e] = 1e
rf::   rf[1f] = 1f
   read op  buffer[26] = 6 im read operation  = 26 data = 5
 eu_branch = 0 pcx = 27 pc_inc = 27
reset_ = 1
enable = 1
eu_branch = 0
 pc_im_v   = 1
 im_rf_v   = 1
 rf_eu_v   = 1
 eu_rf_wren= 1
pc_im_address = 26
im.data = 5
npc_2 = 00004
npc_3 = 00003
npc_4 = 00000
pc_im_v = 1 im_RnW = 1 pc_im_address = 26  im_1 = 5
im_data = 5
ir_rf_3 = 000000004
ir_eu_4 = 000000003
 eu_branch.read() = 1
 pc_im_v   = 1
 im_rf_v   = 1
 rf_eu_v   = 1
 rf_rd_addr_a = 0
 rf_rd_addr_b = 5
 rf_dest_addr = 0
 rf_rd_data_a = 000000006
 rf_rd_data_b = 000000004
 im_rf_v   = 1
 rf_eu_v = 1
 eu_rf_wren = 1
 eu_rf_wr_data  = 00000000a
 eu_rf_wr_addr  = 00
rf::****************************************
rf::v = 1
rf::instructionReg = 6
rf::reset_ = 1
rf::rd_addr_a = 00
rf::rden_a    = 1
rf::rd_addr_b = 06
rf::rden_b    = 1
rf:0 read operation rd_addr_a = 00
rf:all read operation rd_addr_b = 06
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 00000000a
rf::eu_rf_wren    = 1
rf::swapbit_wr_data_a = 0
rf::swapbit_wr_addr_a = 0
rf::swapbit_wr_data_b = 0
rf::swapbit_wr_addr_b = 0
rf::swapbit_wren.writ = 0
rf::eu_rf_wren 	  = 1
rf::swap_wren 		  = 0
rf::swapbit_wren 	  = 0
rf::testbit_wren 	  = 0
rf::setbit_wren 	  = 0
rf::ldimm_ab_16_wren = 0
rf::rf_mux_in_wren_a = 0
rf::rf_mux_in_wren_b = 0
rf::enable = 1
rf::operandA = 0
rf::operandB = 0
rf::im_rf_ir.read()  = 6
rf::im_rf_instructionDecoder->getInstructionReg()  = 6
rf:: isInstFormatOpLas = 1
rf:: isInstFormatOpBit = 0
rf:: isInstFormatOpLdIm= 0
rf:: isInstFormatOpBr  = 0
rf:: getLdImmOperand16Field= 6
rf:: signExtend16(im_rf_instructionDecoder->getLdImmOperand16Field ()) = 6
rf:: rf_dest_data  = 1f
rf::im_rf_ir = 6
rf::eu_rf_ir = 000000004
rf::op_imm_a = 0
rf::op_imm_b = 6
rf:: getOperandAImm8Field  = 0
rf:: getOperandBImm8Field  = 6
rf::signExtend8 (op_imm_a) = 0
rf::signExtend8 (op_imm_b) = 6
rf::signExtend16(op_imm_b) = 6
rf::rd_data_rf_a = 0
rf::rd_data_rf_b = 6
rf::rd_data_imm_a = 0
rf::rd_data_imm_b = 6
rf::rd_data_imm_mux_sel_a = 0
rf::rd_data_imm_mux_sel_b = 0
rf::rd_data_imm_mux_a = 0
rf::rd_data_imm_mux_b = 6
rf::rd_data_bypass_mux_a = a
rf::rd_data_bypass_mux_b = 6
rf::rf_eu_wr_addr = 0
rf::enable = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_a     = 00
rf::eu_rf_wr_addr_equal_rd_addr_a = 1
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_a = 1
rf::bypass_a = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_b     = 06
rf::eu_rf_wr_addr_equal_rd_addr_b = 0
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_b = 0
rf::bypass_b = 0
rf::eu_data_a = a
rf::rd_data_a = 00000000a
rf::rd_data_b = 000000005
rf::rf_eu_v = 1
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 00000000a
rf::eu_rf_wren    = 1
rf::rf_stall = 0
rf::   rf[0] = 0
rf::   rf[1] = 1
rf::   rf[2] = 2
rf::   rf[3] = 3
rf::   rf[4] = 4
rf::   rf[5] = 5
rf::   rf[6] = 6
rf::   rf[7] = 7
rf::   rf[8] = 8
rf::   rf[9] = 9
rf::   rf[a] = a
rf::   rf[b] = b
rf::   rf[c] = c
rf::   rf[d] = d
rf::   rf[e] = e
rf::   rf[f] = f
rf::   rf[10] = 10
rf::   rf[11] = 11
rf::   rf[12] = 12
rf::   rf[13] = 13
rf::   rf[14] = 14
rf::   rf[15] = 15
rf::   rf[16] = 16
rf::   rf[17] = 17
rf::   rf[18] = 18
rf::   rf[19] = 19
rf::   rf[1a] = 1a
rf::   rf[1b] = 1b
rf::   rf[1c] = 1c
rf::   rf[1d] = 1d
rf::   rf[1e] = 1e
rf::   rf[1f] = 1f
executionUnit::****************************************
executionUnit:: rf_eu_v=1
executionUnit::enable =1
executionUnit:: instReg=5 isInstFmtLas=1 instFmt=0
executionUnit:: rf_eu_ir = 000000005
executionUnit:: las op = ELasAdd	 las op = 0
executionUnit:: src_a = 00000000a
executionUnit:: src_b = 000000005
executionUnit:: eu_rf_wr_data_las = 0
executionUnit:: eu_rf_wr_data_bit = 0
executionUnit:: id->dest = 0
executionUnit:: eu_rf_wr_data = 00000000a
executionUnit:: eu_rf_wr_addr = 00
executionUnit:: eu_rf_wren             = 1
rf::****************************************
rf::v = 1
rf::instructionReg = 6
rf::reset_ = 1
rf::rd_addr_a = 00
rf::rden_a    = 1
rf::rd_addr_b = 06
rf::rden_b    = 1
rf:0 read operation rd_addr_a = 00
rf:all read operation rd_addr_b = 06
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 00000000f
rf::eu_rf_wren    = 1
rf::swapbit_wr_data_a = 0
rf::swapbit_wr_addr_a = 0
rf::swapbit_wr_data_b = 0
rf::swapbit_wr_addr_b = 0
rf::swapbit_wren.writ = 0
rf::eu_rf_wren 	  = 1
rf::swap_wren 		  = 0
rf::swapbit_wren 	  = 0
rf::testbit_wren 	  = 0
rf::setbit_wren 	  = 0
rf::ldimm_ab_16_wren = 0
rf::rf_mux_in_wren_a = 0
rf::rf_mux_in_wren_b = 0
rf::enable = 1
rf::operandA = 0
rf::operandB = 0
rf::im_rf_ir.read()  = 6
rf::im_rf_instructionDecoder->getInstructionReg()  = 6
rf:: isInstFormatOpLas = 1
rf:: isInstFormatOpBit = 0
rf:: isInstFormatOpLdIm= 0
rf:: isInstFormatOpBr  = 0
rf:: getLdImmOperand16Field= 6
rf:: signExtend16(im_rf_instructionDecoder->getLdImmOperand16Field ()) = 6
rf:: rf_dest_data  = 1f
rf::im_rf_ir = 6
rf::eu_rf_ir = 000000004
rf::op_imm_a = 0
rf::op_imm_b = 6
rf:: getOperandAImm8Field  = 0
rf:: getOperandBImm8Field  = 6
rf::signExtend8 (op_imm_a) = 0
rf::signExtend8 (op_imm_b) = 6
rf::signExtend16(op_imm_b) = 6
rf::rd_data_rf_a = 0
rf::rd_data_rf_b = 6
rf::rd_data_imm_a = 0
rf::rd_data_imm_b = 6
rf::rd_data_imm_mux_sel_a = 0
rf::rd_data_imm_mux_sel_b = 0
rf::rd_data_imm_mux_a = 0
rf::rd_data_imm_mux_b = 6
rf::rd_data_bypass_mux_a = f
rf::rd_data_bypass_mux_b = 6
rf::rf_eu_wr_addr = 0
rf::enable = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_a     = 00
rf::eu_rf_wr_addr_equal_rd_addr_a = 1
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_a = 1
rf::bypass_a = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_b     = 06
rf::eu_rf_wr_addr_equal_rd_addr_b = 0
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_b = 0
rf::bypass_b = 0
rf::eu_data_a = f
rf::rd_data_a = 00000000a
rf::rd_data_b = 000000005
rf::rf_eu_v = 1
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 00000000f
rf::eu_rf_wren    = 1
rf::rf_stall = 0
rf::   rf[0] = 0
rf::   rf[1] = 1
rf::   rf[2] = 2
rf::   rf[3] = 3
rf::   rf[4] = 4
rf::   rf[5] = 5
rf::   rf[6] = 6
rf::   rf[7] = 7
rf::   rf[8] = 8
rf::   rf[9] = 9
rf::   rf[a] = a
rf::   rf[b] = b
rf::   rf[c] = c
rf::   rf[d] = d
rf::   rf[e] = e
rf::   rf[f] = f
rf::   rf[10] = 10
rf::   rf[11] = 11
rf::   rf[12] = 12
rf::   rf[13] = 13
rf::   rf[14] = 14
rf::   rf[15] = 15
rf::   rf[16] = 16
rf::   rf[17] = 17
rf::   rf[18] = 18
rf::   rf[19] = 19
rf::   rf[1a] = 1a
rf::   rf[1b] = 1b
rf::   rf[1c] = 1c
rf::   rf[1d] = 1d
rf::   rf[1e] = 1e
rf::   rf[1f] = 1f
   read op  buffer[27] = 7 im read operation  = 27 data = 6
 eu_branch = 0 pcx = 28 pc_inc = 28
reset_ = 1
enable = 1
eu_branch = 0
 pc_im_v   = 1
 im_rf_v   = 1
 rf_eu_v   = 1
 eu_rf_wren= 1
pc_im_address = 27
im.data = 6
npc_2 = 00005
npc_3 = 00004
npc_4 = 00000
pc_im_v = 1 im_RnW = 1 pc_im_address = 27  im_1 = 6
im_data = 6
ir_rf_3 = 000000005
ir_eu_4 = 000000004
 eu_branch.read() = 1
 pc_im_v   = 1
 im_rf_v   = 1
 rf_eu_v   = 1
 rf_rd_addr_a = 0
 rf_rd_addr_b = 6
 rf_dest_addr = 0
 rf_rd_data_a = 00000000a
 rf_rd_data_b = 000000005
 im_rf_v   = 1
 rf_eu_v = 1
 eu_rf_wren = 1
 eu_rf_wr_data  = 00000000f
 eu_rf_wr_addr  = 00
rf::****************************************
rf::v = 1
rf::instructionReg = 7
rf::reset_ = 1
rf::rd_addr_a = 00
rf::rden_a    = 1
rf::rd_addr_b = 07
rf::rden_b    = 1
rf:0 read operation rd_addr_a = 00
rf:all read operation rd_addr_b = 07
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 00000000f
rf::eu_rf_wren    = 1
rf::swapbit_wr_data_a = 0
rf::swapbit_wr_addr_a = 0
rf::swapbit_wr_data_b = 0
rf::swapbit_wr_addr_b = 0
rf::swapbit_wren.writ = 0
rf::eu_rf_wren 	  = 1
rf::swap_wren 		  = 0
rf::swapbit_wren 	  = 0
rf::testbit_wren 	  = 0
rf::setbit_wren 	  = 0
rf::ldimm_ab_16_wren = 0
rf::rf_mux_in_wren_a = 0
rf::rf_mux_in_wren_b = 0
rf::enable = 1
rf::operandA = 0
rf::operandB = 0
rf::im_rf_ir.read()  = 7
rf::im_rf_instructionDecoder->getInstructionReg()  = 7
rf:: isInstFormatOpLas = 1
rf:: isInstFormatOpBit = 0
rf:: isInstFormatOpLdIm= 0
rf:: isInstFormatOpBr  = 0
rf:: getLdImmOperand16Field= 7
rf:: signExtend16(im_rf_instructionDecoder->getLdImmOperand16Field ()) = 7
rf:: rf_dest_data  = 1f
rf::im_rf_ir = 7
rf::eu_rf_ir = 000000005
rf::op_imm_a = 0
rf::op_imm_b = 7
rf:: getOperandAImm8Field  = 0
rf:: getOperandBImm8Field  = 7
rf::signExtend8 (op_imm_a) = 0
rf::signExtend8 (op_imm_b) = 7
rf::signExtend16(op_imm_b) = 7
rf::rd_data_rf_a = 0
rf::rd_data_rf_b = 7
rf::rd_data_imm_a = 0
rf::rd_data_imm_b = 7
rf::rd_data_imm_mux_sel_a = 0
rf::rd_data_imm_mux_sel_b = 0
rf::rd_data_imm_mux_a = 0
rf::rd_data_imm_mux_b = 7
rf::rd_data_bypass_mux_a = f
rf::rd_data_bypass_mux_b = 7
rf::rf_eu_wr_addr = 0
rf::enable = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_a     = 00
rf::eu_rf_wr_addr_equal_rd_addr_a = 1
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_a = 1
rf::bypass_a = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_b     = 07
rf::eu_rf_wr_addr_equal_rd_addr_b = 0
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_b = 0
rf::bypass_b = 0
rf::eu_data_a = f
rf::rd_data_a = 00000000f
rf::rd_data_b = 000000006
rf::rf_eu_v = 1
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 00000000f
rf::eu_rf_wren    = 1
rf::rf_stall = 0
rf::   rf[0] = 0
rf::   rf[1] = 1
rf::   rf[2] = 2
rf::   rf[3] = 3
rf::   rf[4] = 4
rf::   rf[5] = 5
rf::   rf[6] = 6
rf::   rf[7] = 7
rf::   rf[8] = 8
rf::   rf[9] = 9
rf::   rf[a] = a
rf::   rf[b] = b
rf::   rf[c] = c
rf::   rf[d] = d
rf::   rf[e] = e
rf::   rf[f] = f
rf::   rf[10] = 10
rf::   rf[11] = 11
rf::   rf[12] = 12
rf::   rf[13] = 13
rf::   rf[14] = 14
rf::   rf[15] = 15
rf::   rf[16] = 16
rf::   rf[17] = 17
rf::   rf[18] = 18
rf::   rf[19] = 19
rf::   rf[1a] = 1a
rf::   rf[1b] = 1b
rf::   rf[1c] = 1c
rf::   rf[1d] = 1d
rf::   rf[1e] = 1e
rf::   rf[1f] = 1f
executionUnit::****************************************
executionUnit:: rf_eu_v=1
executionUnit::enable =1
executionUnit:: instReg=6 isInstFmtLas=1 instFmt=0
executionUnit:: rf_eu_ir = 000000006
executionUnit:: las op = ELasAdd	 las op = 0
executionUnit:: src_a = 00000000f
executionUnit:: src_b = 000000006
executionUnit:: eu_rf_wr_data_las = 0
executionUnit:: eu_rf_wr_data_bit = 0
executionUnit:: id->dest = 0
executionUnit:: eu_rf_wr_data = 00000000f
executionUnit:: eu_rf_wr_addr = 00
executionUnit:: eu_rf_wren             = 1
rf::****************************************
rf::v = 1
rf::instructionReg = 7
rf::reset_ = 1
rf::rd_addr_a = 00
rf::rden_a    = 1
rf::rd_addr_b = 07
rf::rden_b    = 1
rf:0 read operation rd_addr_a = 00
rf:all read operation rd_addr_b = 07
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 000000015
rf::eu_rf_wren    = 1
rf::swapbit_wr_data_a = 0
rf::swapbit_wr_addr_a = 0
rf::swapbit_wr_data_b = 0
rf::swapbit_wr_addr_b = 0
rf::swapbit_wren.writ = 0
rf::eu_rf_wren 	  = 1
rf::swap_wren 		  = 0
rf::swapbit_wren 	  = 0
rf::testbit_wren 	  = 0
rf::setbit_wren 	  = 0
rf::ldimm_ab_16_wren = 0
rf::rf_mux_in_wren_a = 0
rf::rf_mux_in_wren_b = 0
rf::enable = 1
rf::operandA = 0
rf::operandB = 0
rf::im_rf_ir.read()  = 7
rf::im_rf_instructionDecoder->getInstructionReg()  = 7
rf:: isInstFormatOpLas = 1
rf:: isInstFormatOpBit = 0
rf:: isInstFormatOpLdIm= 0
rf:: isInstFormatOpBr  = 0
rf:: getLdImmOperand16Field= 7
rf:: signExtend16(im_rf_instructionDecoder->getLdImmOperand16Field ()) = 7
rf:: rf_dest_data  = 1f
rf::im_rf_ir = 7
rf::eu_rf_ir = 000000005
rf::op_imm_a = 0
rf::op_imm_b = 7
rf:: getOperandAImm8Field  = 0
rf:: getOperandBImm8Field  = 7
rf::signExtend8 (op_imm_a) = 0
rf::signExtend8 (op_imm_b) = 7
rf::signExtend16(op_imm_b) = 7
rf::rd_data_rf_a = 0
rf::rd_data_rf_b = 7
rf::rd_data_imm_a = 0
rf::rd_data_imm_b = 7
rf::rd_data_imm_mux_sel_a = 0
rf::rd_data_imm_mux_sel_b = 0
rf::rd_data_imm_mux_a = 0
rf::rd_data_imm_mux_b = 7
rf::rd_data_bypass_mux_a = 15
rf::rd_data_bypass_mux_b = 7
rf::rf_eu_wr_addr = 0
rf::enable = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_a     = 00
rf::eu_rf_wr_addr_equal_rd_addr_a = 1
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_a = 1
rf::bypass_a = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_b     = 07
rf::eu_rf_wr_addr_equal_rd_addr_b = 0
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_b = 0
rf::bypass_b = 0
rf::eu_data_a = 15
rf::rd_data_a = 00000000f
rf::rd_data_b = 000000006
rf::rf_eu_v = 1
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 000000015
rf::eu_rf_wren    = 1
rf::rf_stall = 0
rf::   rf[0] = 0
rf::   rf[1] = 1
rf::   rf[2] = 2
rf::   rf[3] = 3
rf::   rf[4] = 4
rf::   rf[5] = 5
rf::   rf[6] = 6
rf::   rf[7] = 7
rf::   rf[8] = 8
rf::   rf[9] = 9
rf::   rf[a] = a
rf::   rf[b] = b
rf::   rf[c] = c
rf::   rf[d] = d
rf::   rf[e] = e
rf::   rf[f] = f
rf::   rf[10] = 10
rf::   rf[11] = 11
rf::   rf[12] = 12
rf::   rf[13] = 13
rf::   rf[14] = 14
rf::   rf[15] = 15
rf::   rf[16] = 16
rf::   rf[17] = 17
rf::   rf[18] = 18
rf::   rf[19] = 19
rf::   rf[1a] = 1a
rf::   rf[1b] = 1b
rf::   rf[1c] = 1c
rf::   rf[1d] = 1d
rf::   rf[1e] = 1e
rf::   rf[1f] = 1f
   read op  buffer[28] = 8 im read operation  = 28 data = 7
 eu_branch = 0 pcx = 29 pc_inc = 29
reset_ = 1
enable = 1
eu_branch = 0
 pc_im_v   = 1
 im_rf_v   = 1
 rf_eu_v   = 1
 eu_rf_wren= 1
pc_im_address = 28
im.data = 7
npc_2 = 00006
npc_3 = 00005
npc_4 = 00000
pc_im_v = 1 im_RnW = 1 pc_im_address = 28  im_1 = 7
im_data = 7
ir_rf_3 = 000000006
ir_eu_4 = 000000005
 eu_branch.read() = 1
 pc_im_v   = 1
 im_rf_v   = 1
 rf_eu_v   = 1
 rf_rd_addr_a = 0
 rf_rd_addr_b = 7
 rf_dest_addr = 0
 rf_rd_data_a = 00000000f
 rf_rd_data_b = 000000006
 im_rf_v   = 1
 rf_eu_v = 1
 eu_rf_wren = 1
 eu_rf_wr_data  = 000000015
 eu_rf_wr_addr  = 00
rf::****************************************
rf::v = 1
rf::instructionReg = 8
rf::reset_ = 1
rf::rd_addr_a = 00
rf::rden_a    = 1
rf::rd_addr_b = 08
rf::rden_b    = 1
rf:0 read operation rd_addr_a = 00
rf:all read operation rd_addr_b = 08
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 000000015
rf::eu_rf_wren    = 1
rf::swapbit_wr_data_a = 0
rf::swapbit_wr_addr_a = 0
rf::swapbit_wr_data_b = 0
rf::swapbit_wr_addr_b = 0
rf::swapbit_wren.writ = 0
rf::eu_rf_wren 	  = 1
rf::swap_wren 		  = 0
rf::swapbit_wren 	  = 0
rf::testbit_wren 	  = 0
rf::setbit_wren 	  = 0
rf::ldimm_ab_16_wren = 0
rf::rf_mux_in_wren_a = 0
rf::rf_mux_in_wren_b = 0
rf::enable = 1
rf::operandA = 0
rf::operandB = 0
rf::im_rf_ir.read()  = 8
rf::im_rf_instructionDecoder->getInstructionReg()  = 8
rf:: isInstFormatOpLas = 1
rf:: isInstFormatOpBit = 0
rf:: isInstFormatOpLdIm= 0
rf:: isInstFormatOpBr  = 0
rf:: getLdImmOperand16Field= 8
rf:: signExtend16(im_rf_instructionDecoder->getLdImmOperand16Field ()) = 8
rf:: rf_dest_data  = 1f
rf::im_rf_ir = 8
rf::eu_rf_ir = 000000006
rf::op_imm_a = 0
rf::op_imm_b = 8
rf:: getOperandAImm8Field  = 0
rf:: getOperandBImm8Field  = 8
rf::signExtend8 (op_imm_a) = 0
rf::signExtend8 (op_imm_b) = 8
rf::signExtend16(op_imm_b) = 8
rf::rd_data_rf_a = 0
rf::rd_data_rf_b = 8
rf::rd_data_imm_a = 0
rf::rd_data_imm_b = 8
rf::rd_data_imm_mux_sel_a = 0
rf::rd_data_imm_mux_sel_b = 0
rf::rd_data_imm_mux_a = 0
rf::rd_data_imm_mux_b = 8
rf::rd_data_bypass_mux_a = 15
rf::rd_data_bypass_mux_b = 8
rf::rf_eu_wr_addr = 0
rf::enable = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_a     = 00
rf::eu_rf_wr_addr_equal_rd_addr_a = 1
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_a = 1
rf::bypass_a = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_b     = 08
rf::eu_rf_wr_addr_equal_rd_addr_b = 0
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_b = 0
rf::bypass_b = 0
rf::eu_data_a = 15
rf::rd_data_a = 000000015
rf::rd_data_b = 000000007
rf::rf_eu_v = 1
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 000000015
rf::eu_rf_wren    = 1
rf::rf_stall = 0
rf::   rf[0] = 0
rf::   rf[1] = 1
rf::   rf[2] = 2
rf::   rf[3] = 3
rf::   rf[4] = 4
rf::   rf[5] = 5
rf::   rf[6] = 6
rf::   rf[7] = 7
rf::   rf[8] = 8
rf::   rf[9] = 9
rf::   rf[a] = a
rf::   rf[b] = b
rf::   rf[c] = c
rf::   rf[d] = d
rf::   rf[e] = e
rf::   rf[f] = f
rf::   rf[10] = 10
rf::   rf[11] = 11
rf::   rf[12] = 12
rf::   rf[13] = 13
rf::   rf[14] = 14
rf::   rf[15] = 15
rf::   rf[16] = 16
rf::   rf[17] = 17
rf::   rf[18] = 18
rf::   rf[19] = 19
rf::   rf[1a] = 1a
rf::   rf[1b] = 1b
rf::   rf[1c] = 1c
rf::   rf[1d] = 1d
rf::   rf[1e] = 1e
rf::   rf[1f] = 1f
executionUnit::****************************************
executionUnit:: rf_eu_v=1
executionUnit::enable =1
executionUnit:: instReg=7 isInstFmtLas=1 instFmt=0
executionUnit:: rf_eu_ir = 000000007
executionUnit:: las op = ELasAdd	 las op = 0
executionUnit:: src_a = 000000015
executionUnit:: src_b = 000000007
executionUnit:: eu_rf_wr_data_las = 0
executionUnit:: eu_rf_wr_data_bit = 0
executionUnit:: id->dest = 0
executionUnit:: eu_rf_wr_data = 000000015
executionUnit:: eu_rf_wr_addr = 00
executionUnit:: eu_rf_wren             = 1
rf::****************************************
rf::v = 1
rf::instructionReg = 8
rf::reset_ = 1
rf::rd_addr_a = 00
rf::rden_a    = 1
rf::rd_addr_b = 08
rf::rden_b    = 1
rf:0 read operation rd_addr_a = 00
rf:all read operation rd_addr_b = 08
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 00000001c
rf::eu_rf_wren    = 1
rf::swapbit_wr_data_a = 0
rf::swapbit_wr_addr_a = 0
rf::swapbit_wr_data_b = 0
rf::swapbit_wr_addr_b = 0
rf::swapbit_wren.writ = 0
rf::eu_rf_wren 	  = 1
rf::swap_wren 		  = 0
rf::swapbit_wren 	  = 0
rf::testbit_wren 	  = 0
rf::setbit_wren 	  = 0
rf::ldimm_ab_16_wren = 0
rf::rf_mux_in_wren_a = 0
rf::rf_mux_in_wren_b = 0
rf::enable = 1
rf::operandA = 0
rf::operandB = 0
rf::im_rf_ir.read()  = 8
rf::im_rf_instructionDecoder->getInstructionReg()  = 8
rf:: isInstFormatOpLas = 1
rf:: isInstFormatOpBit = 0
rf:: isInstFormatOpLdIm= 0
rf:: isInstFormatOpBr  = 0
rf:: getLdImmOperand16Field= 8
rf:: signExtend16(im_rf_instructionDecoder->getLdImmOperand16Field ()) = 8
rf:: rf_dest_data  = 1f
rf::im_rf_ir = 8
rf::eu_rf_ir = 000000006
rf::op_imm_a = 0
rf::op_imm_b = 8
rf:: getOperandAImm8Field  = 0
rf:: getOperandBImm8Field  = 8
rf::signExtend8 (op_imm_a) = 0
rf::signExtend8 (op_imm_b) = 8
rf::signExtend16(op_imm_b) = 8
rf::rd_data_rf_a = 0
rf::rd_data_rf_b = 8
rf::rd_data_imm_a = 0
rf::rd_data_imm_b = 8
rf::rd_data_imm_mux_sel_a = 0
rf::rd_data_imm_mux_sel_b = 0
rf::rd_data_imm_mux_a = 0
rf::rd_data_imm_mux_b = 8
rf::rd_data_bypass_mux_a = 1c
rf::rd_data_bypass_mux_b = 8
rf::rf_eu_wr_addr = 0
rf::enable = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_a     = 00
rf::eu_rf_wr_addr_equal_rd_addr_a = 1
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_a = 1
rf::bypass_a = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_b     = 08
rf::eu_rf_wr_addr_equal_rd_addr_b = 0
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_b = 0
rf::bypass_b = 0
rf::eu_data_a = 1c
rf::rd_data_a = 000000015
rf::rd_data_b = 000000007
rf::rf_eu_v = 1
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 00000001c
rf::eu_rf_wren    = 1
rf::rf_stall = 0
rf::   rf[0] = 0
rf::   rf[1] = 1
rf::   rf[2] = 2
rf::   rf[3] = 3
rf::   rf[4] = 4
rf::   rf[5] = 5
rf::   rf[6] = 6
rf::   rf[7] = 7
rf::   rf[8] = 8
rf::   rf[9] = 9
rf::   rf[a] = a
rf::   rf[b] = b
rf::   rf[c] = c
rf::   rf[d] = d
rf::   rf[e] = e
rf::   rf[f] = f
rf::   rf[10] = 10
rf::   rf[11] = 11
rf::   rf[12] = 12
rf::   rf[13] = 13
rf::   rf[14] = 14
rf::   rf[15] = 15
rf::   rf[16] = 16
rf::   rf[17] = 17
rf::   rf[18] = 18
rf::   rf[19] = 19
rf::   rf[1a] = 1a
rf::   rf[1b] = 1b
rf::   rf[1c] = 1c
rf::   rf[1d] = 1d
rf::   rf[1e] = 1e
rf::   rf[1f] = 1f
   read op  buffer[29] = 9 im read operation  = 29 data = 8
 eu_branch = 0 pcx = 2a pc_inc = 2a
reset_ = 1
enable = 1
eu_branch = 0
 pc_im_v   = 1
 im_rf_v   = 1
 rf_eu_v   = 1
 eu_rf_wren= 1
pc_im_address = 29
im.data = 8
npc_2 = 00007
npc_3 = 00006
npc_4 = 00000
pc_im_v = 1 im_RnW = 1 pc_im_address = 29  im_1 = 8
im_data = 8
ir_rf_3 = 000000007
ir_eu_4 = 000000006
 eu_branch.read() = 1
 pc_im_v   = 1
 im_rf_v   = 1
 rf_eu_v   = 1
 rf_rd_addr_a = 0
 rf_rd_addr_b = 8
 rf_dest_addr = 0
 rf_rd_data_a = 000000015
 rf_rd_data_b = 000000007
 im_rf_v   = 1
 rf_eu_v = 1
 eu_rf_wren = 1
 eu_rf_wr_data  = 00000001c
 eu_rf_wr_addr  = 00
rf::****************************************
rf::v = 1
rf::instructionReg = 9
rf::reset_ = 1
rf::rd_addr_a = 00
rf::rden_a    = 1
rf::rd_addr_b = 09
rf::rden_b    = 1
rf:0 read operation rd_addr_a = 00
rf:all read operation rd_addr_b = 09
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 00000001c
rf::eu_rf_wren    = 1
rf::swapbit_wr_data_a = 0
rf::swapbit_wr_addr_a = 0
rf::swapbit_wr_data_b = 0
rf::swapbit_wr_addr_b = 0
rf::swapbit_wren.writ = 0
rf::eu_rf_wren 	  = 1
rf::swap_wren 		  = 0
rf::swapbit_wren 	  = 0
rf::testbit_wren 	  = 0
rf::setbit_wren 	  = 0
rf::ldimm_ab_16_wren = 0
rf::rf_mux_in_wren_a = 0
rf::rf_mux_in_wren_b = 0
rf::enable = 1
rf::operandA = 0
rf::operandB = 0
rf::im_rf_ir.read()  = 9
rf::im_rf_instructionDecoder->getInstructionReg()  = 9
rf:: isInstFormatOpLas = 1
rf:: isInstFormatOpBit = 0
rf:: isInstFormatOpLdIm= 0
rf:: isInstFormatOpBr  = 0
rf:: getLdImmOperand16Field= 9
rf:: signExtend16(im_rf_instructionDecoder->getLdImmOperand16Field ()) = 9
rf:: rf_dest_data  = 1f
rf::im_rf_ir = 9
rf::eu_rf_ir = 000000007
rf::op_imm_a = 0
rf::op_imm_b = 9
rf:: getOperandAImm8Field  = 0
rf:: getOperandBImm8Field  = 9
rf::signExtend8 (op_imm_a) = 0
rf::signExtend8 (op_imm_b) = 9
rf::signExtend16(op_imm_b) = 9
rf::rd_data_rf_a = 0
rf::rd_data_rf_b = 9
rf::rd_data_imm_a = 0
rf::rd_data_imm_b = 9
rf::rd_data_imm_mux_sel_a = 0
rf::rd_data_imm_mux_sel_b = 0
rf::rd_data_imm_mux_a = 0
rf::rd_data_imm_mux_b = 9
rf::rd_data_bypass_mux_a = 1c
rf::rd_data_bypass_mux_b = 9
rf::rf_eu_wr_addr = 0
rf::enable = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_a     = 00
rf::eu_rf_wr_addr_equal_rd_addr_a = 1
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_a = 1
rf::bypass_a = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_b     = 09
rf::eu_rf_wr_addr_equal_rd_addr_b = 0
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_b = 0
rf::bypass_b = 0
rf::eu_data_a = 1c
rf::rd_data_a = 00000001c
rf::rd_data_b = 000000008
rf::rf_eu_v = 1
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 00000001c
rf::eu_rf_wren    = 1
rf::rf_stall = 0
rf::   rf[0] = 0
rf::   rf[1] = 1
rf::   rf[2] = 2
rf::   rf[3] = 3
rf::   rf[4] = 4
rf::   rf[5] = 5
rf::   rf[6] = 6
rf::   rf[7] = 7
rf::   rf[8] = 8
rf::   rf[9] = 9
rf::   rf[a] = a
rf::   rf[b] = b
rf::   rf[c] = c
rf::   rf[d] = d
rf::   rf[e] = e
rf::   rf[f] = f
rf::   rf[10] = 10
rf::   rf[11] = 11
rf::   rf[12] = 12
rf::   rf[13] = 13
rf::   rf[14] = 14
rf::   rf[15] = 15
rf::   rf[16] = 16
rf::   rf[17] = 17
rf::   rf[18] = 18
rf::   rf[19] = 19
rf::   rf[1a] = 1a
rf::   rf[1b] = 1b
rf::   rf[1c] = 1c
rf::   rf[1d] = 1d
rf::   rf[1e] = 1e
rf::   rf[1f] = 1f
executionUnit::****************************************
executionUnit:: rf_eu_v=1
executionUnit::enable =1
executionUnit:: instReg=8 isInstFmtLas=1 instFmt=0
executionUnit:: rf_eu_ir = 000000008
executionUnit:: las op = ELasAdd	 las op = 0
executionUnit:: src_a = 00000001c
executionUnit:: src_b = 000000008
executionUnit:: eu_rf_wr_data_las = 0
executionUnit:: eu_rf_wr_data_bit = 0
executionUnit:: id->dest = 0
executionUnit:: eu_rf_wr_data = 00000001c
executionUnit:: eu_rf_wr_addr = 00
executionUnit:: eu_rf_wren             = 1
rf::****************************************
rf::v = 1
rf::instructionReg = 9
rf::reset_ = 1
rf::rd_addr_a = 00
rf::rden_a    = 1
rf::rd_addr_b = 09
rf::rden_b    = 1
rf:0 read operation rd_addr_a = 00
rf:all read operation rd_addr_b = 09
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 000000024
rf::eu_rf_wren    = 1
rf::swapbit_wr_data_a = 0
rf::swapbit_wr_addr_a = 0
rf::swapbit_wr_data_b = 0
rf::swapbit_wr_addr_b = 0
rf::swapbit_wren.writ = 0
rf::eu_rf_wren 	  = 1
rf::swap_wren 		  = 0
rf::swapbit_wren 	  = 0
rf::testbit_wren 	  = 0
rf::setbit_wren 	  = 0
rf::ldimm_ab_16_wren = 0
rf::rf_mux_in_wren_a = 0
rf::rf_mux_in_wren_b = 0
rf::enable = 1
rf::operandA = 0
rf::operandB = 0
rf::im_rf_ir.read()  = 9
rf::im_rf_instructionDecoder->getInstructionReg()  = 9
rf:: isInstFormatOpLas = 1
rf:: isInstFormatOpBit = 0
rf:: isInstFormatOpLdIm= 0
rf:: isInstFormatOpBr  = 0
rf:: getLdImmOperand16Field= 9
rf:: signExtend16(im_rf_instructionDecoder->getLdImmOperand16Field ()) = 9
rf:: rf_dest_data  = 1f
rf::im_rf_ir = 9
rf::eu_rf_ir = 000000007
rf::op_imm_a = 0
rf::op_imm_b = 9
rf:: getOperandAImm8Field  = 0
rf:: getOperandBImm8Field  = 9
rf::signExtend8 (op_imm_a) = 0
rf::signExtend8 (op_imm_b) = 9
rf::signExtend16(op_imm_b) = 9
rf::rd_data_rf_a = 0
rf::rd_data_rf_b = 9
rf::rd_data_imm_a = 0
rf::rd_data_imm_b = 9
rf::rd_data_imm_mux_sel_a = 0
rf::rd_data_imm_mux_sel_b = 0
rf::rd_data_imm_mux_a = 0
rf::rd_data_imm_mux_b = 9
rf::rd_data_bypass_mux_a = 24
rf::rd_data_bypass_mux_b = 9
rf::rf_eu_wr_addr = 0
rf::enable = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_a     = 00
rf::eu_rf_wr_addr_equal_rd_addr_a = 1
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_a = 1
rf::bypass_a = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_b     = 09
rf::eu_rf_wr_addr_equal_rd_addr_b = 0
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_b = 0
rf::bypass_b = 0
rf::eu_data_a = 24
rf::rd_data_a = 00000001c
rf::rd_data_b = 000000008
rf::rf_eu_v = 1
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 000000024
rf::eu_rf_wren    = 1
rf::rf_stall = 0
rf::   rf[0] = 0
rf::   rf[1] = 1
rf::   rf[2] = 2
rf::   rf[3] = 3
rf::   rf[4] = 4
rf::   rf[5] = 5
rf::   rf[6] = 6
rf::   rf[7] = 7
rf::   rf[8] = 8
rf::   rf[9] = 9
rf::   rf[a] = a
rf::   rf[b] = b
rf::   rf[c] = c
rf::   rf[d] = d
rf::   rf[e] = e
rf::   rf[f] = f
rf::   rf[10] = 10
rf::   rf[11] = 11
rf::   rf[12] = 12
rf::   rf[13] = 13
rf::   rf[14] = 14
rf::   rf[15] = 15
rf::   rf[16] = 16
rf::   rf[17] = 17
rf::   rf[18] = 18
rf::   rf[19] = 19
rf::   rf[1a] = 1a
rf::   rf[1b] = 1b
rf::   rf[1c] = 1c
rf::   rf[1d] = 1d
rf::   rf[1e] = 1e
rf::   rf[1f] = 1f
   read op  buffer[2a] = a im read operation  = 2a data = 9
 eu_branch = 0 pcx = 2b pc_inc = 2b
reset_ = 1
enable = 1
eu_branch = 0
 pc_im_v   = 1
 im_rf_v   = 1
 rf_eu_v   = 1
 eu_rf_wren= 1
pc_im_address = 2a
im.data = 9
npc_2 = 00008
npc_3 = 00007
npc_4 = 00000
pc_im_v = 1 im_RnW = 1 pc_im_address = 2a  im_1 = 9
im_data = 9
ir_rf_3 = 000000008
ir_eu_4 = 000000007
 eu_branch.read() = 1
 pc_im_v   = 1
 im_rf_v   = 1
 rf_eu_v   = 1
 rf_rd_addr_a = 0
 rf_rd_addr_b = 9
 rf_dest_addr = 0
 rf_rd_data_a = 00000001c
 rf_rd_data_b = 000000008
 im_rf_v   = 1
 rf_eu_v = 1
 eu_rf_wren = 1
 eu_rf_wr_data  = 000000024
 eu_rf_wr_addr  = 00
rf::****************************************
rf::v = 1
rf::instructionReg = a
rf::reset_ = 1
rf::rd_addr_a = 00
rf::rden_a    = 1
rf::rd_addr_b = 0a
rf::rden_b    = 1
rf:0 read operation rd_addr_a = 00
rf:all read operation rd_addr_b = 0a
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 000000024
rf::eu_rf_wren    = 1
rf::swapbit_wr_data_a = 0
rf::swapbit_wr_addr_a = 0
rf::swapbit_wr_data_b = 0
rf::swapbit_wr_addr_b = 0
rf::swapbit_wren.writ = 0
rf::eu_rf_wren 	  = 1
rf::swap_wren 		  = 0
rf::swapbit_wren 	  = 0
rf::testbit_wren 	  = 0
rf::setbit_wren 	  = 0
rf::ldimm_ab_16_wren = 0
rf::rf_mux_in_wren_a = 0
rf::rf_mux_in_wren_b = 0
rf::enable = 1
rf::operandA = 0
rf::operandB = 0
rf::im_rf_ir.read()  = a
rf::im_rf_instructionDecoder->getInstructionReg()  = a
rf:: isInstFormatOpLas = 1
rf:: isInstFormatOpBit = 0
rf:: isInstFormatOpLdIm= 0
rf:: isInstFormatOpBr  = 0
rf:: getLdImmOperand16Field= a
rf:: signExtend16(im_rf_instructionDecoder->getLdImmOperand16Field ()) = a
rf:: rf_dest_data  = 1f
rf::im_rf_ir = a
rf::eu_rf_ir = 000000008
rf::op_imm_a = 0
rf::op_imm_b = a
rf:: getOperandAImm8Field  = 0
rf:: getOperandBImm8Field  = a
rf::signExtend8 (op_imm_a) = 0
rf::signExtend8 (op_imm_b) = a
rf::signExtend16(op_imm_b) = a
rf::rd_data_rf_a = 0
rf::rd_data_rf_b = a
rf::rd_data_imm_a = 0
rf::rd_data_imm_b = a
rf::rd_data_imm_mux_sel_a = 0
rf::rd_data_imm_mux_sel_b = 0
rf::rd_data_imm_mux_a = 0
rf::rd_data_imm_mux_b = a
rf::rd_data_bypass_mux_a = 24
rf::rd_data_bypass_mux_b = a
rf::rf_eu_wr_addr = 0
rf::enable = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_a     = 00
rf::eu_rf_wr_addr_equal_rd_addr_a = 1
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_a = 1
rf::bypass_a = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_b     = 0a
rf::eu_rf_wr_addr_equal_rd_addr_b = 0
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_b = 0
rf::bypass_b = 0
rf::eu_data_a = 24
rf::rd_data_a = 000000024
rf::rd_data_b = 000000009
rf::rf_eu_v = 1
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 000000024
rf::eu_rf_wren    = 1
rf::rf_stall = 0
rf::   rf[0] = 0
rf::   rf[1] = 1
rf::   rf[2] = 2
rf::   rf[3] = 3
rf::   rf[4] = 4
rf::   rf[5] = 5
rf::   rf[6] = 6
rf::   rf[7] = 7
rf::   rf[8] = 8
rf::   rf[9] = 9
rf::   rf[a] = a
rf::   rf[b] = b
rf::   rf[c] = c
rf::   rf[d] = d
rf::   rf[e] = e
rf::   rf[f] = f
rf::   rf[10] = 10
rf::   rf[11] = 11
rf::   rf[12] = 12
rf::   rf[13] = 13
rf::   rf[14] = 14
rf::   rf[15] = 15
rf::   rf[16] = 16
rf::   rf[17] = 17
rf::   rf[18] = 18
rf::   rf[19] = 19
rf::   rf[1a] = 1a
rf::   rf[1b] = 1b
rf::   rf[1c] = 1c
rf::   rf[1d] = 1d
rf::   rf[1e] = 1e
rf::   rf[1f] = 1f
executionUnit::****************************************
executionUnit:: rf_eu_v=1
executionUnit::enable =1
executionUnit:: instReg=9 isInstFmtLas=1 instFmt=0
executionUnit:: rf_eu_ir = 000000009
executionUnit:: las op = ELasAdd	 las op = 0
executionUnit:: src_a = 000000024
executionUnit:: src_b = 000000009
executionUnit:: eu_rf_wr_data_las = 0
executionUnit:: eu_rf_wr_data_bit = 0
executionUnit:: id->dest = 0
executionUnit:: eu_rf_wr_data = 000000024
executionUnit:: eu_rf_wr_addr = 00
executionUnit:: eu_rf_wren             = 1
rf::****************************************
rf::v = 1
rf::instructionReg = a
rf::reset_ = 1
rf::rd_addr_a = 00
rf::rden_a    = 1
rf::rd_addr_b = 0a
rf::rden_b    = 1
rf:0 read operation rd_addr_a = 00
rf:all read operation rd_addr_b = 0a
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 00000002d
rf::eu_rf_wren    = 1
rf::swapbit_wr_data_a = 0
rf::swapbit_wr_addr_a = 0
rf::swapbit_wr_data_b = 0
rf::swapbit_wr_addr_b = 0
rf::swapbit_wren.writ = 0
rf::eu_rf_wren 	  = 1
rf::swap_wren 		  = 0
rf::swapbit_wren 	  = 0
rf::testbit_wren 	  = 0
rf::setbit_wren 	  = 0
rf::ldimm_ab_16_wren = 0
rf::rf_mux_in_wren_a = 0
rf::rf_mux_in_wren_b = 0
rf::enable = 1
rf::operandA = 0
rf::operandB = 0
rf::im_rf_ir.read()  = a
rf::im_rf_instructionDecoder->getInstructionReg()  = a
rf:: isInstFormatOpLas = 1
rf:: isInstFormatOpBit = 0
rf:: isInstFormatOpLdIm= 0
rf:: isInstFormatOpBr  = 0
rf:: getLdImmOperand16Field= a
rf:: signExtend16(im_rf_instructionDecoder->getLdImmOperand16Field ()) = a
rf:: rf_dest_data  = 1f
rf::im_rf_ir = a
rf::eu_rf_ir = 000000008
rf::op_imm_a = 0
rf::op_imm_b = a
rf:: getOperandAImm8Field  = 0
rf:: getOperandBImm8Field  = a
rf::signExtend8 (op_imm_a) = 0
rf::signExtend8 (op_imm_b) = a
rf::signExtend16(op_imm_b) = a
rf::rd_data_rf_a = 0
rf::rd_data_rf_b = a
rf::rd_data_imm_a = 0
rf::rd_data_imm_b = a
rf::rd_data_imm_mux_sel_a = 0
rf::rd_data_imm_mux_sel_b = 0
rf::rd_data_imm_mux_a = 0
rf::rd_data_imm_mux_b = a
rf::rd_data_bypass_mux_a = 2d
rf::rd_data_bypass_mux_b = a
rf::rf_eu_wr_addr = 0
rf::enable = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_a     = 00
rf::eu_rf_wr_addr_equal_rd_addr_a = 1
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_a = 1
rf::bypass_a = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_b     = 0a
rf::eu_rf_wr_addr_equal_rd_addr_b = 0
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_b = 0
rf::bypass_b = 0
rf::eu_data_a = 2d
rf::rd_data_a = 000000024
rf::rd_data_b = 000000009
rf::rf_eu_v = 1
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 00000002d
rf::eu_rf_wren    = 1
rf::rf_stall = 0
rf::   rf[0] = 0
rf::   rf[1] = 1
rf::   rf[2] = 2
rf::   rf[3] = 3
rf::   rf[4] = 4
rf::   rf[5] = 5
rf::   rf[6] = 6
rf::   rf[7] = 7
rf::   rf[8] = 8
rf::   rf[9] = 9
rf::   rf[a] = a
rf::   rf[b] = b
rf::   rf[c] = c
rf::   rf[d] = d
rf::   rf[e] = e
rf::   rf[f] = f
rf::   rf[10] = 10
rf::   rf[11] = 11
rf::   rf[12] = 12
rf::   rf[13] = 13
rf::   rf[14] = 14
rf::   rf[15] = 15
rf::   rf[16] = 16
rf::   rf[17] = 17
rf::   rf[18] = 18
rf::   rf[19] = 19
rf::   rf[1a] = 1a
rf::   rf[1b] = 1b
rf::   rf[1c] = 1c
rf::   rf[1d] = 1d
rf::   rf[1e] = 1e
rf::   rf[1f] = 1f
   read op  buffer[2b] = b im read operation  = 2b data = a
 eu_branch = 0 pcx = 2c pc_inc = 2c
reset_ = 1
enable = 1
eu_branch = 0
 pc_im_v   = 1
 im_rf_v   = 1
 rf_eu_v   = 1
 eu_rf_wren= 1
pc_im_address = 2b
im.data = a
npc_2 = 00009
npc_3 = 00008
npc_4 = 00000
pc_im_v = 1 im_RnW = 1 pc_im_address = 2b  im_1 = a
im_data = a
ir_rf_3 = 000000009
ir_eu_4 = 000000008
 eu_branch.read() = 1
 pc_im_v   = 1
 im_rf_v   = 1
 rf_eu_v   = 1
 rf_rd_addr_a = 0
 rf_rd_addr_b = a
 rf_dest_addr = 0
 rf_rd_data_a = 000000024
 rf_rd_data_b = 000000009
 im_rf_v   = 1
 rf_eu_v = 1
 eu_rf_wren = 1
 eu_rf_wr_data  = 00000002d
 eu_rf_wr_addr  = 00
rf::****************************************
rf::v = 1
rf::instructionReg = b
rf::reset_ = 1
rf::rd_addr_a = 00
rf::rden_a    = 1
rf::rd_addr_b = 0b
rf::rden_b    = 1
rf:0 read operation rd_addr_a = 00
rf:all read operation rd_addr_b = 0b
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 00000002d
rf::eu_rf_wren    = 1
rf::swapbit_wr_data_a = 0
rf::swapbit_wr_addr_a = 0
rf::swapbit_wr_data_b = 0
rf::swapbit_wr_addr_b = 0
rf::swapbit_wren.writ = 0
rf::eu_rf_wren 	  = 1
rf::swap_wren 		  = 0
rf::swapbit_wren 	  = 0
rf::testbit_wren 	  = 0
rf::setbit_wren 	  = 0
rf::ldimm_ab_16_wren = 0
rf::rf_mux_in_wren_a = 0
rf::rf_mux_in_wren_b = 0
rf::enable = 1
rf::operandA = 0
rf::operandB = 0
rf::im_rf_ir.read()  = b
rf::im_rf_instructionDecoder->getInstructionReg()  = b
rf:: isInstFormatOpLas = 1
rf:: isInstFormatOpBit = 0
rf:: isInstFormatOpLdIm= 0
rf:: isInstFormatOpBr  = 0
rf:: getLdImmOperand16Field= b
rf:: signExtend16(im_rf_instructionDecoder->getLdImmOperand16Field ()) = b
rf:: rf_dest_data  = 1f
rf::im_rf_ir = b
rf::eu_rf_ir = 000000009
rf::op_imm_a = 0
rf::op_imm_b = b
rf:: getOperandAImm8Field  = 0
rf:: getOperandBImm8Field  = b
rf::signExtend8 (op_imm_a) = 0
rf::signExtend8 (op_imm_b) = b
rf::signExtend16(op_imm_b) = b
rf::rd_data_rf_a = 0
rf::rd_data_rf_b = b
rf::rd_data_imm_a = 0
rf::rd_data_imm_b = b
rf::rd_data_imm_mux_sel_a = 0
rf::rd_data_imm_mux_sel_b = 0
rf::rd_data_imm_mux_a = 0
rf::rd_data_imm_mux_b = b
rf::rd_data_bypass_mux_a = 2d
rf::rd_data_bypass_mux_b = b
rf::rf_eu_wr_addr = 0
rf::enable = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_a     = 00
rf::eu_rf_wr_addr_equal_rd_addr_a = 1
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_a = 1
rf::bypass_a = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_b     = 0b
rf::eu_rf_wr_addr_equal_rd_addr_b = 0
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_b = 0
rf::bypass_b = 0
rf::eu_data_a = 2d
rf::rd_data_a = 00000002d
rf::rd_data_b = 00000000a
rf::rf_eu_v = 1
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 00000002d
rf::eu_rf_wren    = 1
rf::rf_stall = 0
rf::   rf[0] = 0
rf::   rf[1] = 1
rf::   rf[2] = 2
rf::   rf[3] = 3
rf::   rf[4] = 4
rf::   rf[5] = 5
rf::   rf[6] = 6
rf::   rf[7] = 7
rf::   rf[8] = 8
rf::   rf[9] = 9
rf::   rf[a] = a
rf::   rf[b] = b
rf::   rf[c] = c
rf::   rf[d] = d
rf::   rf[e] = e
rf::   rf[f] = f
rf::   rf[10] = 10
rf::   rf[11] = 11
rf::   rf[12] = 12
rf::   rf[13] = 13
rf::   rf[14] = 14
rf::   rf[15] = 15
rf::   rf[16] = 16
rf::   rf[17] = 17
rf::   rf[18] = 18
rf::   rf[19] = 19
rf::   rf[1a] = 1a
rf::   rf[1b] = 1b
rf::   rf[1c] = 1c
rf::   rf[1d] = 1d
rf::   rf[1e] = 1e
rf::   rf[1f] = 1f
executionUnit::****************************************
executionUnit:: rf_eu_v=1
executionUnit::enable =1
executionUnit:: instReg=a isInstFmtLas=1 instFmt=0
executionUnit:: rf_eu_ir = 00000000a
executionUnit:: las op = ELasAdd	 las op = 0
executionUnit:: src_a = 00000002d
executionUnit:: src_b = 00000000a
executionUnit:: eu_rf_wr_data_las = 0
executionUnit:: eu_rf_wr_data_bit = 0
executionUnit:: id->dest = 0
executionUnit:: eu_rf_wr_data = 00000002d
executionUnit:: eu_rf_wr_addr = 00
executionUnit:: eu_rf_wren             = 1
rf::****************************************
rf::v = 1
rf::instructionReg = b
rf::reset_ = 1
rf::rd_addr_a = 00
rf::rden_a    = 1
rf::rd_addr_b = 0b
rf::rden_b    = 1
rf:0 read operation rd_addr_a = 00
rf:all read operation rd_addr_b = 0b
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 000000037
rf::eu_rf_wren    = 1
rf::swapbit_wr_data_a = 0
rf::swapbit_wr_addr_a = 0
rf::swapbit_wr_data_b = 0
rf::swapbit_wr_addr_b = 0
rf::swapbit_wren.writ = 0
rf::eu_rf_wren 	  = 1
rf::swap_wren 		  = 0
rf::swapbit_wren 	  = 0
rf::testbit_wren 	  = 0
rf::setbit_wren 	  = 0
rf::ldimm_ab_16_wren = 0
rf::rf_mux_in_wren_a = 0
rf::rf_mux_in_wren_b = 0
rf::enable = 1
rf::operandA = 0
rf::operandB = 0
rf::im_rf_ir.read()  = b
rf::im_rf_instructionDecoder->getInstructionReg()  = b
rf:: isInstFormatOpLas = 1
rf:: isInstFormatOpBit = 0
rf:: isInstFormatOpLdIm= 0
rf:: isInstFormatOpBr  = 0
rf:: getLdImmOperand16Field= b
rf:: signExtend16(im_rf_instructionDecoder->getLdImmOperand16Field ()) = b
rf:: rf_dest_data  = 1f
rf::im_rf_ir = b
rf::eu_rf_ir = 000000009
rf::op_imm_a = 0
rf::op_imm_b = b
rf:: getOperandAImm8Field  = 0
rf:: getOperandBImm8Field  = b
rf::signExtend8 (op_imm_a) = 0
rf::signExtend8 (op_imm_b) = b
rf::signExtend16(op_imm_b) = b
rf::rd_data_rf_a = 0
rf::rd_data_rf_b = b
rf::rd_data_imm_a = 0
rf::rd_data_imm_b = b
rf::rd_data_imm_mux_sel_a = 0
rf::rd_data_imm_mux_sel_b = 0
rf::rd_data_imm_mux_a = 0
rf::rd_data_imm_mux_b = b
rf::rd_data_bypass_mux_a = 37
rf::rd_data_bypass_mux_b = b
rf::rf_eu_wr_addr = 0
rf::enable = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_a     = 00
rf::eu_rf_wr_addr_equal_rd_addr_a = 1
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_a = 1
rf::bypass_a = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_b     = 0b
rf::eu_rf_wr_addr_equal_rd_addr_b = 0
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_b = 0
rf::bypass_b = 0
rf::eu_data_a = 37
rf::rd_data_a = 00000002d
rf::rd_data_b = 00000000a
rf::rf_eu_v = 1
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 000000037
rf::eu_rf_wren    = 1
rf::rf_stall = 0
rf::   rf[0] = 0
rf::   rf[1] = 1
rf::   rf[2] = 2
rf::   rf[3] = 3
rf::   rf[4] = 4
rf::   rf[5] = 5
rf::   rf[6] = 6
rf::   rf[7] = 7
rf::   rf[8] = 8
rf::   rf[9] = 9
rf::   rf[a] = a
rf::   rf[b] = b
rf::   rf[c] = c
rf::   rf[d] = d
rf::   rf[e] = e
rf::   rf[f] = f
rf::   rf[10] = 10
rf::   rf[11] = 11
rf::   rf[12] = 12
rf::   rf[13] = 13
rf::   rf[14] = 14
rf::   rf[15] = 15
rf::   rf[16] = 16
rf::   rf[17] = 17
rf::   rf[18] = 18
rf::   rf[19] = 19
rf::   rf[1a] = 1a
rf::   rf[1b] = 1b
rf::   rf[1c] = 1c
rf::   rf[1d] = 1d
rf::   rf[1e] = 1e
rf::   rf[1f] = 1f
   read op  buffer[2c] = c im read operation  = 2c data = b
 eu_branch = 0 pcx = 2d pc_inc = 2d
reset_ = 1
enable = 1
eu_branch = 0
 pc_im_v   = 1
 im_rf_v   = 1
 rf_eu_v   = 1
 eu_rf_wren= 1
pc_im_address = 2c
im.data = b
npc_2 = 0000a
npc_3 = 00009
npc_4 = 00000
pc_im_v = 1 im_RnW = 1 pc_im_address = 2c  im_1 = b
im_data = b
ir_rf_3 = 00000000a
ir_eu_4 = 000000009
 eu_branch.read() = 1
 pc_im_v   = 1
 im_rf_v   = 1
 rf_eu_v   = 1
 rf_rd_addr_a = 0
 rf_rd_addr_b = b
 rf_dest_addr = 0
 rf_rd_data_a = 00000002d
 rf_rd_data_b = 00000000a
 im_rf_v   = 1
 rf_eu_v = 1
 eu_rf_wren = 1
 eu_rf_wr_data  = 000000037
 eu_rf_wr_addr  = 00
rf::****************************************
rf::v = 1
rf::instructionReg = c
rf::reset_ = 1
rf::rd_addr_a = 00
rf::rden_a    = 1
rf::rd_addr_b = 0c
rf::rden_b    = 1
rf:0 read operation rd_addr_a = 00
rf:all read operation rd_addr_b = 0c
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 000000037
rf::eu_rf_wren    = 1
rf::swapbit_wr_data_a = 0
rf::swapbit_wr_addr_a = 0
rf::swapbit_wr_data_b = 0
rf::swapbit_wr_addr_b = 0
rf::swapbit_wren.writ = 0
rf::eu_rf_wren 	  = 1
rf::swap_wren 		  = 0
rf::swapbit_wren 	  = 0
rf::testbit_wren 	  = 0
rf::setbit_wren 	  = 0
rf::ldimm_ab_16_wren = 0
rf::rf_mux_in_wren_a = 0
rf::rf_mux_in_wren_b = 0
rf::enable = 1
rf::operandA = 0
rf::operandB = 0
rf::im_rf_ir.read()  = c
rf::im_rf_instructionDecoder->getInstructionReg()  = c
rf:: isInstFormatOpLas = 1
rf:: isInstFormatOpBit = 0
rf:: isInstFormatOpLdIm= 0
rf:: isInstFormatOpBr  = 0
rf:: getLdImmOperand16Field= c
rf:: signExtend16(im_rf_instructionDecoder->getLdImmOperand16Field ()) = c
rf:: rf_dest_data  = 1f
rf::im_rf_ir = c
rf::eu_rf_ir = 00000000a
rf::op_imm_a = 0
rf::op_imm_b = c
rf:: getOperandAImm8Field  = 0
rf:: getOperandBImm8Field  = c
rf::signExtend8 (op_imm_a) = 0
rf::signExtend8 (op_imm_b) = c
rf::signExtend16(op_imm_b) = c
rf::rd_data_rf_a = 0
rf::rd_data_rf_b = c
rf::rd_data_imm_a = 0
rf::rd_data_imm_b = c
rf::rd_data_imm_mux_sel_a = 0
rf::rd_data_imm_mux_sel_b = 0
rf::rd_data_imm_mux_a = 0
rf::rd_data_imm_mux_b = c
rf::rd_data_bypass_mux_a = 37
rf::rd_data_bypass_mux_b = c
rf::rf_eu_wr_addr = 0
rf::enable = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_a     = 00
rf::eu_rf_wr_addr_equal_rd_addr_a = 1
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_a = 1
rf::bypass_a = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_b     = 0c
rf::eu_rf_wr_addr_equal_rd_addr_b = 0
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_b = 0
rf::bypass_b = 0
rf::eu_data_a = 37
rf::rd_data_a = 000000037
rf::rd_data_b = 00000000b
rf::rf_eu_v = 1
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 000000037
rf::eu_rf_wren    = 1
rf::rf_stall = 0
rf::   rf[0] = 0
rf::   rf[1] = 1
rf::   rf[2] = 2
rf::   rf[3] = 3
rf::   rf[4] = 4
rf::   rf[5] = 5
rf::   rf[6] = 6
rf::   rf[7] = 7
rf::   rf[8] = 8
rf::   rf[9] = 9
rf::   rf[a] = a
rf::   rf[b] = b
rf::   rf[c] = c
rf::   rf[d] = d
rf::   rf[e] = e
rf::   rf[f] = f
rf::   rf[10] = 10
rf::   rf[11] = 11
rf::   rf[12] = 12
rf::   rf[13] = 13
rf::   rf[14] = 14
rf::   rf[15] = 15
rf::   rf[16] = 16
rf::   rf[17] = 17
rf::   rf[18] = 18
rf::   rf[19] = 19
rf::   rf[1a] = 1a
rf::   rf[1b] = 1b
rf::   rf[1c] = 1c
rf::   rf[1d] = 1d
rf::   rf[1e] = 1e
rf::   rf[1f] = 1f
executionUnit::****************************************
executionUnit:: rf_eu_v=1
executionUnit::enable =1
executionUnit:: instReg=b isInstFmtLas=1 instFmt=0
executionUnit:: rf_eu_ir = 00000000b
executionUnit:: las op = ELasAdd	 las op = 0
executionUnit:: src_a = 000000037
executionUnit:: src_b = 00000000b
executionUnit:: eu_rf_wr_data_las = 0
executionUnit:: eu_rf_wr_data_bit = 0
executionUnit:: id->dest = 0
executionUnit:: eu_rf_wr_data = 000000037
executionUnit:: eu_rf_wr_addr = 00
executionUnit:: eu_rf_wren             = 1
rf::****************************************
rf::v = 1
rf::instructionReg = c
rf::reset_ = 1
rf::rd_addr_a = 00
rf::rden_a    = 1
rf::rd_addr_b = 0c
rf::rden_b    = 1
rf:0 read operation rd_addr_a = 00
rf:all read operation rd_addr_b = 0c
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 000000042
rf::eu_rf_wren    = 1
rf::swapbit_wr_data_a = 0
rf::swapbit_wr_addr_a = 0
rf::swapbit_wr_data_b = 0
rf::swapbit_wr_addr_b = 0
rf::swapbit_wren.writ = 0
rf::eu_rf_wren 	  = 1
rf::swap_wren 		  = 0
rf::swapbit_wren 	  = 0
rf::testbit_wren 	  = 0
rf::setbit_wren 	  = 0
rf::ldimm_ab_16_wren = 0
rf::rf_mux_in_wren_a = 0
rf::rf_mux_in_wren_b = 0
rf::enable = 1
rf::operandA = 0
rf::operandB = 0
rf::im_rf_ir.read()  = c
rf::im_rf_instructionDecoder->getInstructionReg()  = c
rf:: isInstFormatOpLas = 1
rf:: isInstFormatOpBit = 0
rf:: isInstFormatOpLdIm= 0
rf:: isInstFormatOpBr  = 0
rf:: getLdImmOperand16Field= c
rf:: signExtend16(im_rf_instructionDecoder->getLdImmOperand16Field ()) = c
rf:: rf_dest_data  = 1f
rf::im_rf_ir = c
rf::eu_rf_ir = 00000000a
rf::op_imm_a = 0
rf::op_imm_b = c
rf:: getOperandAImm8Field  = 0
rf:: getOperandBImm8Field  = c
rf::signExtend8 (op_imm_a) = 0
rf::signExtend8 (op_imm_b) = c
rf::signExtend16(op_imm_b) = c
rf::rd_data_rf_a = 0
rf::rd_data_rf_b = c
rf::rd_data_imm_a = 0
rf::rd_data_imm_b = c
rf::rd_data_imm_mux_sel_a = 0
rf::rd_data_imm_mux_sel_b = 0
rf::rd_data_imm_mux_a = 0
rf::rd_data_imm_mux_b = c
rf::rd_data_bypass_mux_a = 42
rf::rd_data_bypass_mux_b = c
rf::rf_eu_wr_addr = 0
rf::enable = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_a     = 00
rf::eu_rf_wr_addr_equal_rd_addr_a = 1
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_a = 1
rf::bypass_a = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_b     = 0c
rf::eu_rf_wr_addr_equal_rd_addr_b = 0
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_b = 0
rf::bypass_b = 0
rf::eu_data_a = 42
rf::rd_data_a = 000000037
rf::rd_data_b = 00000000b
rf::rf_eu_v = 1
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 000000042
rf::eu_rf_wren    = 1
rf::rf_stall = 0
rf::   rf[0] = 0
rf::   rf[1] = 1
rf::   rf[2] = 2
rf::   rf[3] = 3
rf::   rf[4] = 4
rf::   rf[5] = 5
rf::   rf[6] = 6
rf::   rf[7] = 7
rf::   rf[8] = 8
rf::   rf[9] = 9
rf::   rf[a] = a
rf::   rf[b] = b
rf::   rf[c] = c
rf::   rf[d] = d
rf::   rf[e] = e
rf::   rf[f] = f
rf::   rf[10] = 10
rf::   rf[11] = 11
rf::   rf[12] = 12
rf::   rf[13] = 13
rf::   rf[14] = 14
rf::   rf[15] = 15
rf::   rf[16] = 16
rf::   rf[17] = 17
rf::   rf[18] = 18
rf::   rf[19] = 19
rf::   rf[1a] = 1a
rf::   rf[1b] = 1b
rf::   rf[1c] = 1c
rf::   rf[1d] = 1d
rf::   rf[1e] = 1e
rf::   rf[1f] = 1f
   read op  buffer[2d] = d im read operation  = 2d data = c
 eu_branch = 0 pcx = 2e pc_inc = 2e
reset_ = 1
enable = 1
eu_branch = 0
 pc_im_v   = 1
 im_rf_v   = 1
 rf_eu_v   = 1
 eu_rf_wren= 1
pc_im_address = 2d
im.data = c
npc_2 = 0000b
npc_3 = 0000a
npc_4 = 00000
pc_im_v = 1 im_RnW = 1 pc_im_address = 2d  im_1 = c
im_data = c
ir_rf_3 = 00000000b
ir_eu_4 = 00000000a
 eu_branch.read() = 1
 pc_im_v   = 1
 im_rf_v   = 1
 rf_eu_v   = 1
 rf_rd_addr_a = 0
 rf_rd_addr_b = c
 rf_dest_addr = 0
 rf_rd_data_a = 000000037
 rf_rd_data_b = 00000000b
 im_rf_v   = 1
 rf_eu_v = 1
 eu_rf_wren = 1
 eu_rf_wr_data  = 000000042
 eu_rf_wr_addr  = 00
rf::****************************************
rf::v = 1
rf::instructionReg = d
rf::reset_ = 1
rf::rd_addr_a = 00
rf::rden_a    = 1
rf::rd_addr_b = 0d
rf::rden_b    = 1
rf:0 read operation rd_addr_a = 00
rf:all read operation rd_addr_b = 0d
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 000000042
rf::eu_rf_wren    = 1
rf::swapbit_wr_data_a = 0
rf::swapbit_wr_addr_a = 0
rf::swapbit_wr_data_b = 0
rf::swapbit_wr_addr_b = 0
rf::swapbit_wren.writ = 0
rf::eu_rf_wren 	  = 1
rf::swap_wren 		  = 0
rf::swapbit_wren 	  = 0
rf::testbit_wren 	  = 0
rf::setbit_wren 	  = 0
rf::ldimm_ab_16_wren = 0
rf::rf_mux_in_wren_a = 0
rf::rf_mux_in_wren_b = 0
rf::enable = 1
rf::operandA = 0
rf::operandB = 0
rf::im_rf_ir.read()  = d
rf::im_rf_instructionDecoder->getInstructionReg()  = d
rf:: isInstFormatOpLas = 1
rf:: isInstFormatOpBit = 0
rf:: isInstFormatOpLdIm= 0
rf:: isInstFormatOpBr  = 0
rf:: getLdImmOperand16Field= d
rf:: signExtend16(im_rf_instructionDecoder->getLdImmOperand16Field ()) = d
rf:: rf_dest_data  = 1f
rf::im_rf_ir = d
rf::eu_rf_ir = 00000000b
rf::op_imm_a = 0
rf::op_imm_b = d
rf:: getOperandAImm8Field  = 0
rf:: getOperandBImm8Field  = d
rf::signExtend8 (op_imm_a) = 0
rf::signExtend8 (op_imm_b) = d
rf::signExtend16(op_imm_b) = d
rf::rd_data_rf_a = 0
rf::rd_data_rf_b = d
rf::rd_data_imm_a = 0
rf::rd_data_imm_b = d
rf::rd_data_imm_mux_sel_a = 0
rf::rd_data_imm_mux_sel_b = 0
rf::rd_data_imm_mux_a = 0
rf::rd_data_imm_mux_b = d
rf::rd_data_bypass_mux_a = 42
rf::rd_data_bypass_mux_b = d
rf::rf_eu_wr_addr = 0
rf::enable = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_a     = 00
rf::eu_rf_wr_addr_equal_rd_addr_a = 1
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_a = 1
rf::bypass_a = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_b     = 0d
rf::eu_rf_wr_addr_equal_rd_addr_b = 0
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_b = 0
rf::bypass_b = 0
rf::eu_data_a = 42
rf::rd_data_a = 000000042
rf::rd_data_b = 00000000c
rf::rf_eu_v = 1
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 000000042
rf::eu_rf_wren    = 1
rf::rf_stall = 0
rf::   rf[0] = 0
rf::   rf[1] = 1
rf::   rf[2] = 2
rf::   rf[3] = 3
rf::   rf[4] = 4
rf::   rf[5] = 5
rf::   rf[6] = 6
rf::   rf[7] = 7
rf::   rf[8] = 8
rf::   rf[9] = 9
rf::   rf[a] = a
rf::   rf[b] = b
rf::   rf[c] = c
rf::   rf[d] = d
rf::   rf[e] = e
rf::   rf[f] = f
rf::   rf[10] = 10
rf::   rf[11] = 11
rf::   rf[12] = 12
rf::   rf[13] = 13
rf::   rf[14] = 14
rf::   rf[15] = 15
rf::   rf[16] = 16
rf::   rf[17] = 17
rf::   rf[18] = 18
rf::   rf[19] = 19
rf::   rf[1a] = 1a
rf::   rf[1b] = 1b
rf::   rf[1c] = 1c
rf::   rf[1d] = 1d
rf::   rf[1e] = 1e
rf::   rf[1f] = 1f
executionUnit::****************************************
executionUnit:: rf_eu_v=1
executionUnit::enable =1
executionUnit:: instReg=c isInstFmtLas=1 instFmt=0
executionUnit:: rf_eu_ir = 00000000c
executionUnit:: las op = ELasAdd	 las op = 0
executionUnit:: src_a = 000000042
executionUnit:: src_b = 00000000c
executionUnit:: eu_rf_wr_data_las = 0
executionUnit:: eu_rf_wr_data_bit = 0
executionUnit:: id->dest = 0
executionUnit:: eu_rf_wr_data = 000000042
executionUnit:: eu_rf_wr_addr = 00
executionUnit:: eu_rf_wren             = 1
rf::****************************************
rf::v = 1
rf::instructionReg = d
rf::reset_ = 1
rf::rd_addr_a = 00
rf::rden_a    = 1
rf::rd_addr_b = 0d
rf::rden_b    = 1
rf:0 read operation rd_addr_a = 00
rf:all read operation rd_addr_b = 0d
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 00000004e
rf::eu_rf_wren    = 1
rf::swapbit_wr_data_a = 0
rf::swapbit_wr_addr_a = 0
rf::swapbit_wr_data_b = 0
rf::swapbit_wr_addr_b = 0
rf::swapbit_wren.writ = 0
rf::eu_rf_wren 	  = 1
rf::swap_wren 		  = 0
rf::swapbit_wren 	  = 0
rf::testbit_wren 	  = 0
rf::setbit_wren 	  = 0
rf::ldimm_ab_16_wren = 0
rf::rf_mux_in_wren_a = 0
rf::rf_mux_in_wren_b = 0
rf::enable = 1
rf::operandA = 0
rf::operandB = 0
rf::im_rf_ir.read()  = d
rf::im_rf_instructionDecoder->getInstructionReg()  = d
rf:: isInstFormatOpLas = 1
rf:: isInstFormatOpBit = 0
rf:: isInstFormatOpLdIm= 0
rf:: isInstFormatOpBr  = 0
rf:: getLdImmOperand16Field= d
rf:: signExtend16(im_rf_instructionDecoder->getLdImmOperand16Field ()) = d
rf:: rf_dest_data  = 1f
rf::im_rf_ir = d
rf::eu_rf_ir = 00000000b
rf::op_imm_a = 0
rf::op_imm_b = d
rf:: getOperandAImm8Field  = 0
rf:: getOperandBImm8Field  = d
rf::signExtend8 (op_imm_a) = 0
rf::signExtend8 (op_imm_b) = d
rf::signExtend16(op_imm_b) = d
rf::rd_data_rf_a = 0
rf::rd_data_rf_b = d
rf::rd_data_imm_a = 0
rf::rd_data_imm_b = d
rf::rd_data_imm_mux_sel_a = 0
rf::rd_data_imm_mux_sel_b = 0
rf::rd_data_imm_mux_a = 0
rf::rd_data_imm_mux_b = d
rf::rd_data_bypass_mux_a = 4e
rf::rd_data_bypass_mux_b = d
rf::rf_eu_wr_addr = 0
rf::enable = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_a     = 00
rf::eu_rf_wr_addr_equal_rd_addr_a = 1
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_a = 1
rf::bypass_a = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_b     = 0d
rf::eu_rf_wr_addr_equal_rd_addr_b = 0
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_b = 0
rf::bypass_b = 0
rf::eu_data_a = 4e
rf::rd_data_a = 000000042
rf::rd_data_b = 00000000c
rf::rf_eu_v = 1
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 00000004e
rf::eu_rf_wren    = 1
rf::rf_stall = 0
rf::   rf[0] = 0
rf::   rf[1] = 1
rf::   rf[2] = 2
rf::   rf[3] = 3
rf::   rf[4] = 4
rf::   rf[5] = 5
rf::   rf[6] = 6
rf::   rf[7] = 7
rf::   rf[8] = 8
rf::   rf[9] = 9
rf::   rf[a] = a
rf::   rf[b] = b
rf::   rf[c] = c
rf::   rf[d] = d
rf::   rf[e] = e
rf::   rf[f] = f
rf::   rf[10] = 10
rf::   rf[11] = 11
rf::   rf[12] = 12
rf::   rf[13] = 13
rf::   rf[14] = 14
rf::   rf[15] = 15
rf::   rf[16] = 16
rf::   rf[17] = 17
rf::   rf[18] = 18
rf::   rf[19] = 19
rf::   rf[1a] = 1a
rf::   rf[1b] = 1b
rf::   rf[1c] = 1c
rf::   rf[1d] = 1d
rf::   rf[1e] = 1e
rf::   rf[1f] = 1f
   read op  buffer[2e] = e im read operation  = 2e data = d
 eu_branch = 0 pcx = 2f pc_inc = 2f
reset_ = 1
enable = 1
eu_branch = 0
 pc_im_v   = 1
 im_rf_v   = 1
 rf_eu_v   = 1
 eu_rf_wren= 1
pc_im_address = 2e
im.data = d
npc_2 = 0000c
npc_3 = 0000b
npc_4 = 00000
pc_im_v = 1 im_RnW = 1 pc_im_address = 2e  im_1 = d
im_data = d
ir_rf_3 = 00000000c
ir_eu_4 = 00000000b
 eu_branch.read() = 1
 pc_im_v   = 1
 im_rf_v   = 1
 rf_eu_v   = 1
 rf_rd_addr_a = 0
 rf_rd_addr_b = d
 rf_dest_addr = 0
 rf_rd_data_a = 000000042
 rf_rd_data_b = 00000000c
 im_rf_v   = 1
 rf_eu_v = 1
 eu_rf_wren = 1
 eu_rf_wr_data  = 00000004e
 eu_rf_wr_addr  = 00
rf::****************************************
rf::v = 1
rf::instructionReg = e
rf::reset_ = 1
rf::rd_addr_a = 00
rf::rden_a    = 1
rf::rd_addr_b = 0e
rf::rden_b    = 1
rf:0 read operation rd_addr_a = 00
rf:all read operation rd_addr_b = 0e
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 00000004e
rf::eu_rf_wren    = 1
rf::swapbit_wr_data_a = 0
rf::swapbit_wr_addr_a = 0
rf::swapbit_wr_data_b = 0
rf::swapbit_wr_addr_b = 0
rf::swapbit_wren.writ = 0
rf::eu_rf_wren 	  = 1
rf::swap_wren 		  = 0
rf::swapbit_wren 	  = 0
rf::testbit_wren 	  = 0
rf::setbit_wren 	  = 0
rf::ldimm_ab_16_wren = 0
rf::rf_mux_in_wren_a = 0
rf::rf_mux_in_wren_b = 0
rf::enable = 1
rf::operandA = 0
rf::operandB = 0
rf::im_rf_ir.read()  = e
rf::im_rf_instructionDecoder->getInstructionReg()  = e
rf:: isInstFormatOpLas = 1
rf:: isInstFormatOpBit = 0
rf:: isInstFormatOpLdIm= 0
rf:: isInstFormatOpBr  = 0
rf:: getLdImmOperand16Field= e
rf:: signExtend16(im_rf_instructionDecoder->getLdImmOperand16Field ()) = e
rf:: rf_dest_data  = 1f
rf::im_rf_ir = e
rf::eu_rf_ir = 00000000c
rf::op_imm_a = 0
rf::op_imm_b = e
rf:: getOperandAImm8Field  = 0
rf:: getOperandBImm8Field  = e
rf::signExtend8 (op_imm_a) = 0
rf::signExtend8 (op_imm_b) = e
rf::signExtend16(op_imm_b) = e
rf::rd_data_rf_a = 0
rf::rd_data_rf_b = e
rf::rd_data_imm_a = 0
rf::rd_data_imm_b = e
rf::rd_data_imm_mux_sel_a = 0
rf::rd_data_imm_mux_sel_b = 0
rf::rd_data_imm_mux_a = 0
rf::rd_data_imm_mux_b = e
rf::rd_data_bypass_mux_a = 4e
rf::rd_data_bypass_mux_b = e
rf::rf_eu_wr_addr = 0
rf::enable = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_a     = 00
rf::eu_rf_wr_addr_equal_rd_addr_a = 1
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_a = 1
rf::bypass_a = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_b     = 0e
rf::eu_rf_wr_addr_equal_rd_addr_b = 0
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_b = 0
rf::bypass_b = 0
rf::eu_data_a = 4e
rf::rd_data_a = 00000004e
rf::rd_data_b = 00000000d
rf::rf_eu_v = 1
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 00000004e
rf::eu_rf_wren    = 1
rf::rf_stall = 0
rf::   rf[0] = 0
rf::   rf[1] = 1
rf::   rf[2] = 2
rf::   rf[3] = 3
rf::   rf[4] = 4
rf::   rf[5] = 5
rf::   rf[6] = 6
rf::   rf[7] = 7
rf::   rf[8] = 8
rf::   rf[9] = 9
rf::   rf[a] = a
rf::   rf[b] = b
rf::   rf[c] = c
rf::   rf[d] = d
rf::   rf[e] = e
rf::   rf[f] = f
rf::   rf[10] = 10
rf::   rf[11] = 11
rf::   rf[12] = 12
rf::   rf[13] = 13
rf::   rf[14] = 14
rf::   rf[15] = 15
rf::   rf[16] = 16
rf::   rf[17] = 17
rf::   rf[18] = 18
rf::   rf[19] = 19
rf::   rf[1a] = 1a
rf::   rf[1b] = 1b
rf::   rf[1c] = 1c
rf::   rf[1d] = 1d
rf::   rf[1e] = 1e
rf::   rf[1f] = 1f
executionUnit::****************************************
executionUnit:: rf_eu_v=1
executionUnit::enable =1
executionUnit:: instReg=d isInstFmtLas=1 instFmt=0
executionUnit:: rf_eu_ir = 00000000d
executionUnit:: las op = ELasAdd	 las op = 0
executionUnit:: src_a = 00000004e
executionUnit:: src_b = 00000000d
executionUnit:: eu_rf_wr_data_las = 0
executionUnit:: eu_rf_wr_data_bit = 0
executionUnit:: id->dest = 0
executionUnit:: eu_rf_wr_data = 00000004e
executionUnit:: eu_rf_wr_addr = 00
executionUnit:: eu_rf_wren             = 1
rf::****************************************
rf::v = 1
rf::instructionReg = e
rf::reset_ = 1
rf::rd_addr_a = 00
rf::rden_a    = 1
rf::rd_addr_b = 0e
rf::rden_b    = 1
rf:0 read operation rd_addr_a = 00
rf:all read operation rd_addr_b = 0e
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 00000005b
rf::eu_rf_wren    = 1
rf::swapbit_wr_data_a = 0
rf::swapbit_wr_addr_a = 0
rf::swapbit_wr_data_b = 0
rf::swapbit_wr_addr_b = 0
rf::swapbit_wren.writ = 0
rf::eu_rf_wren 	  = 1
rf::swap_wren 		  = 0
rf::swapbit_wren 	  = 0
rf::testbit_wren 	  = 0
rf::setbit_wren 	  = 0
rf::ldimm_ab_16_wren = 0
rf::rf_mux_in_wren_a = 0
rf::rf_mux_in_wren_b = 0
rf::enable = 1
rf::operandA = 0
rf::operandB = 0
rf::im_rf_ir.read()  = e
rf::im_rf_instructionDecoder->getInstructionReg()  = e
rf:: isInstFormatOpLas = 1
rf:: isInstFormatOpBit = 0
rf:: isInstFormatOpLdIm= 0
rf:: isInstFormatOpBr  = 0
rf:: getLdImmOperand16Field= e
rf:: signExtend16(im_rf_instructionDecoder->getLdImmOperand16Field ()) = e
rf:: rf_dest_data  = 1f
rf::im_rf_ir = e
rf::eu_rf_ir = 00000000c
rf::op_imm_a = 0
rf::op_imm_b = e
rf:: getOperandAImm8Field  = 0
rf:: getOperandBImm8Field  = e
rf::signExtend8 (op_imm_a) = 0
rf::signExtend8 (op_imm_b) = e
rf::signExtend16(op_imm_b) = e
rf::rd_data_rf_a = 0
rf::rd_data_rf_b = e
rf::rd_data_imm_a = 0
rf::rd_data_imm_b = e
rf::rd_data_imm_mux_sel_a = 0
rf::rd_data_imm_mux_sel_b = 0
rf::rd_data_imm_mux_a = 0
rf::rd_data_imm_mux_b = e
rf::rd_data_bypass_mux_a = 5b
rf::rd_data_bypass_mux_b = e
rf::rf_eu_wr_addr = 0
rf::enable = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_a     = 00
rf::eu_rf_wr_addr_equal_rd_addr_a = 1
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_a = 1
rf::bypass_a = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_b     = 0e
rf::eu_rf_wr_addr_equal_rd_addr_b = 0
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_b = 0
rf::bypass_b = 0
rf::eu_data_a = 5b
rf::rd_data_a = 00000004e
rf::rd_data_b = 00000000d
rf::rf_eu_v = 1
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 00000005b
rf::eu_rf_wren    = 1
rf::rf_stall = 0
rf::   rf[0] = 0
rf::   rf[1] = 1
rf::   rf[2] = 2
rf::   rf[3] = 3
rf::   rf[4] = 4
rf::   rf[5] = 5
rf::   rf[6] = 6
rf::   rf[7] = 7
rf::   rf[8] = 8
rf::   rf[9] = 9
rf::   rf[a] = a
rf::   rf[b] = b
rf::   rf[c] = c
rf::   rf[d] = d
rf::   rf[e] = e
rf::   rf[f] = f
rf::   rf[10] = 10
rf::   rf[11] = 11
rf::   rf[12] = 12
rf::   rf[13] = 13
rf::   rf[14] = 14
rf::   rf[15] = 15
rf::   rf[16] = 16
rf::   rf[17] = 17
rf::   rf[18] = 18
rf::   rf[19] = 19
rf::   rf[1a] = 1a
rf::   rf[1b] = 1b
rf::   rf[1c] = 1c
rf::   rf[1d] = 1d
rf::   rf[1e] = 1e
rf::   rf[1f] = 1f
   read op  buffer[2f] = f im read operation  = 2f data = e
 eu_branch = 0 pcx = 30 pc_inc = 30
reset_ = 1
enable = 1
eu_branch = 0
 pc_im_v   = 1
 im_rf_v   = 1
 rf_eu_v   = 1
 eu_rf_wren= 1
pc_im_address = 2f
im.data = e
npc_2 = 0000d
npc_3 = 0000c
npc_4 = 00000
pc_im_v = 1 im_RnW = 1 pc_im_address = 2f  im_1 = e
im_data = e
ir_rf_3 = 00000000d
ir_eu_4 = 00000000c
 eu_branch.read() = 1
 pc_im_v   = 1
 im_rf_v   = 1
 rf_eu_v   = 1
 rf_rd_addr_a = 0
 rf_rd_addr_b = e
 rf_dest_addr = 0
 rf_rd_data_a = 00000004e
 rf_rd_data_b = 00000000d
 im_rf_v   = 1
 rf_eu_v = 1
 eu_rf_wren = 1
 eu_rf_wr_data  = 00000005b
 eu_rf_wr_addr  = 00
rf::****************************************
rf::v = 1
rf::instructionReg = f
rf::reset_ = 1
rf::rd_addr_a = 00
rf::rden_a    = 1
rf::rd_addr_b = 0f
rf::rden_b    = 1
rf:0 read operation rd_addr_a = 00
rf:all read operation rd_addr_b = 0f
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 00000005b
rf::eu_rf_wren    = 1
rf::swapbit_wr_data_a = 0
rf::swapbit_wr_addr_a = 0
rf::swapbit_wr_data_b = 0
rf::swapbit_wr_addr_b = 0
rf::swapbit_wren.writ = 0
rf::eu_rf_wren 	  = 1
rf::swap_wren 		  = 0
rf::swapbit_wren 	  = 0
rf::testbit_wren 	  = 0
rf::setbit_wren 	  = 0
rf::ldimm_ab_16_wren = 0
rf::rf_mux_in_wren_a = 0
rf::rf_mux_in_wren_b = 0
rf::enable = 1
rf::operandA = 0
rf::operandB = 0
rf::im_rf_ir.read()  = f
rf::im_rf_instructionDecoder->getInstructionReg()  = f
rf:: isInstFormatOpLas = 1
rf:: isInstFormatOpBit = 0
rf:: isInstFormatOpLdIm= 0
rf:: isInstFormatOpBr  = 0
rf:: getLdImmOperand16Field= f
rf:: signExtend16(im_rf_instructionDecoder->getLdImmOperand16Field ()) = f
rf:: rf_dest_data  = 1f
rf::im_rf_ir = f
rf::eu_rf_ir = 00000000d
rf::op_imm_a = 0
rf::op_imm_b = f
rf:: getOperandAImm8Field  = 0
rf:: getOperandBImm8Field  = f
rf::signExtend8 (op_imm_a) = 0
rf::signExtend8 (op_imm_b) = f
rf::signExtend16(op_imm_b) = f
rf::rd_data_rf_a = 0
rf::rd_data_rf_b = f
rf::rd_data_imm_a = 0
rf::rd_data_imm_b = f
rf::rd_data_imm_mux_sel_a = 0
rf::rd_data_imm_mux_sel_b = 0
rf::rd_data_imm_mux_a = 0
rf::rd_data_imm_mux_b = f
rf::rd_data_bypass_mux_a = 5b
rf::rd_data_bypass_mux_b = f
rf::rf_eu_wr_addr = 0
rf::enable = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_a     = 00
rf::eu_rf_wr_addr_equal_rd_addr_a = 1
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_a = 1
rf::bypass_a = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_b     = 0f
rf::eu_rf_wr_addr_equal_rd_addr_b = 0
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_b = 0
rf::bypass_b = 0
rf::eu_data_a = 5b
rf::rd_data_a = 00000005b
rf::rd_data_b = 00000000e
rf::rf_eu_v = 1
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 00000005b
rf::eu_rf_wren    = 1
rf::rf_stall = 0
rf::   rf[0] = 0
rf::   rf[1] = 1
rf::   rf[2] = 2
rf::   rf[3] = 3
rf::   rf[4] = 4
rf::   rf[5] = 5
rf::   rf[6] = 6
rf::   rf[7] = 7
rf::   rf[8] = 8
rf::   rf[9] = 9
rf::   rf[a] = a
rf::   rf[b] = b
rf::   rf[c] = c
rf::   rf[d] = d
rf::   rf[e] = e
rf::   rf[f] = f
rf::   rf[10] = 10
rf::   rf[11] = 11
rf::   rf[12] = 12
rf::   rf[13] = 13
rf::   rf[14] = 14
rf::   rf[15] = 15
rf::   rf[16] = 16
rf::   rf[17] = 17
rf::   rf[18] = 18
rf::   rf[19] = 19
rf::   rf[1a] = 1a
rf::   rf[1b] = 1b
rf::   rf[1c] = 1c
rf::   rf[1d] = 1d
rf::   rf[1e] = 1e
rf::   rf[1f] = 1f
executionUnit::****************************************
executionUnit:: rf_eu_v=1
executionUnit::enable =1
executionUnit:: instReg=e isInstFmtLas=1 instFmt=0
executionUnit:: rf_eu_ir = 00000000e
executionUnit:: las op = ELasAdd	 las op = 0
executionUnit:: src_a = 00000005b
executionUnit:: src_b = 00000000e
executionUnit:: eu_rf_wr_data_las = 0
executionUnit:: eu_rf_wr_data_bit = 0
executionUnit:: id->dest = 0
executionUnit:: eu_rf_wr_data = 00000005b
executionUnit:: eu_rf_wr_addr = 00
executionUnit:: eu_rf_wren             = 1
rf::****************************************
rf::v = 1
rf::instructionReg = f
rf::reset_ = 1
rf::rd_addr_a = 00
rf::rden_a    = 1
rf::rd_addr_b = 0f
rf::rden_b    = 1
rf:0 read operation rd_addr_a = 00
rf:all read operation rd_addr_b = 0f
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 000000069
rf::eu_rf_wren    = 1
rf::swapbit_wr_data_a = 0
rf::swapbit_wr_addr_a = 0
rf::swapbit_wr_data_b = 0
rf::swapbit_wr_addr_b = 0
rf::swapbit_wren.writ = 0
rf::eu_rf_wren 	  = 1
rf::swap_wren 		  = 0
rf::swapbit_wren 	  = 0
rf::testbit_wren 	  = 0
rf::setbit_wren 	  = 0
rf::ldimm_ab_16_wren = 0
rf::rf_mux_in_wren_a = 0
rf::rf_mux_in_wren_b = 0
rf::enable = 1
rf::operandA = 0
rf::operandB = 0
rf::im_rf_ir.read()  = f
rf::im_rf_instructionDecoder->getInstructionReg()  = f
rf:: isInstFormatOpLas = 1
rf:: isInstFormatOpBit = 0
rf:: isInstFormatOpLdIm= 0
rf:: isInstFormatOpBr  = 0
rf:: getLdImmOperand16Field= f
rf:: signExtend16(im_rf_instructionDecoder->getLdImmOperand16Field ()) = f
rf:: rf_dest_data  = 1f
rf::im_rf_ir = f
rf::eu_rf_ir = 00000000d
rf::op_imm_a = 0
rf::op_imm_b = f
rf:: getOperandAImm8Field  = 0
rf:: getOperandBImm8Field  = f
rf::signExtend8 (op_imm_a) = 0
rf::signExtend8 (op_imm_b) = f
rf::signExtend16(op_imm_b) = f
rf::rd_data_rf_a = 0
rf::rd_data_rf_b = f
rf::rd_data_imm_a = 0
rf::rd_data_imm_b = f
rf::rd_data_imm_mux_sel_a = 0
rf::rd_data_imm_mux_sel_b = 0
rf::rd_data_imm_mux_a = 0
rf::rd_data_imm_mux_b = f
rf::rd_data_bypass_mux_a = 69
rf::rd_data_bypass_mux_b = f
rf::rf_eu_wr_addr = 0
rf::enable = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_a     = 00
rf::eu_rf_wr_addr_equal_rd_addr_a = 1
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_a = 1
rf::bypass_a = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_b     = 0f
rf::eu_rf_wr_addr_equal_rd_addr_b = 0
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_b = 0
rf::bypass_b = 0
rf::eu_data_a = 69
rf::rd_data_a = 00000005b
rf::rd_data_b = 00000000e
rf::rf_eu_v = 1
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 000000069
rf::eu_rf_wren    = 1
rf::rf_stall = 0
rf::   rf[0] = 0
rf::   rf[1] = 1
rf::   rf[2] = 2
rf::   rf[3] = 3
rf::   rf[4] = 4
rf::   rf[5] = 5
rf::   rf[6] = 6
rf::   rf[7] = 7
rf::   rf[8] = 8
rf::   rf[9] = 9
rf::   rf[a] = a
rf::   rf[b] = b
rf::   rf[c] = c
rf::   rf[d] = d
rf::   rf[e] = e
rf::   rf[f] = f
rf::   rf[10] = 10
rf::   rf[11] = 11
rf::   rf[12] = 12
rf::   rf[13] = 13
rf::   rf[14] = 14
rf::   rf[15] = 15
rf::   rf[16] = 16
rf::   rf[17] = 17
rf::   rf[18] = 18
rf::   rf[19] = 19
rf::   rf[1a] = 1a
rf::   rf[1b] = 1b
rf::   rf[1c] = 1c
rf::   rf[1d] = 1d
rf::   rf[1e] = 1e
rf::   rf[1f] = 1f
   read op  buffer[30] = 10 im read operation  = 30 data = f
 eu_branch = 0 pcx = 31 pc_inc = 31
reset_ = 1
enable = 1
eu_branch = 0
 pc_im_v   = 1
 im_rf_v   = 1
 rf_eu_v   = 1
 eu_rf_wren= 1
pc_im_address = 30
im.data = f
npc_2 = 0000e
npc_3 = 0000d
npc_4 = 00000
pc_im_v = 1 im_RnW = 1 pc_im_address = 30  im_1 = f
im_data = f
ir_rf_3 = 00000000e
ir_eu_4 = 00000000d
 eu_branch.read() = 1
 pc_im_v   = 1
 im_rf_v   = 1
 rf_eu_v   = 1
 rf_rd_addr_a = 0
 rf_rd_addr_b = f
 rf_dest_addr = 0
 rf_rd_data_a = 00000005b
 rf_rd_data_b = 00000000e
 im_rf_v   = 1
 rf_eu_v = 1
 eu_rf_wren = 1
 eu_rf_wr_data  = 000000069
 eu_rf_wr_addr  = 00
rf::****************************************
rf::v = 1
rf::instructionReg = 10
rf::reset_ = 1
rf::rd_addr_a = 00
rf::rden_a    = 1
rf::rd_addr_b = 10
rf::rden_b    = 1
rf:0 read operation rd_addr_a = 00
rf:all read operation rd_addr_b = 10
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 000000069
rf::eu_rf_wren    = 1
rf::swapbit_wr_data_a = 0
rf::swapbit_wr_addr_a = 0
rf::swapbit_wr_data_b = 0
rf::swapbit_wr_addr_b = 0
rf::swapbit_wren.writ = 0
rf::eu_rf_wren 	  = 1
rf::swap_wren 		  = 0
rf::swapbit_wren 	  = 0
rf::testbit_wren 	  = 0
rf::setbit_wren 	  = 0
rf::ldimm_ab_16_wren = 0
rf::rf_mux_in_wren_a = 0
rf::rf_mux_in_wren_b = 0
rf::enable = 1
rf::operandA = 0
rf::operandB = 0
rf::im_rf_ir.read()  = 10
rf::im_rf_instructionDecoder->getInstructionReg()  = 10
rf:: isInstFormatOpLas = 1
rf:: isInstFormatOpBit = 0
rf:: isInstFormatOpLdIm= 0
rf:: isInstFormatOpBr  = 0
rf:: getLdImmOperand16Field= 10
rf:: signExtend16(im_rf_instructionDecoder->getLdImmOperand16Field ()) = 10
rf:: rf_dest_data  = 1f
rf::im_rf_ir = 10
rf::eu_rf_ir = 00000000e
rf::op_imm_a = 0
rf::op_imm_b = 10
rf:: getOperandAImm8Field  = 0
rf:: getOperandBImm8Field  = 10
rf::signExtend8 (op_imm_a) = 0
rf::signExtend8 (op_imm_b) = 10
rf::signExtend16(op_imm_b) = 10
rf::rd_data_rf_a = 0
rf::rd_data_rf_b = 10
rf::rd_data_imm_a = 0
rf::rd_data_imm_b = 10
rf::rd_data_imm_mux_sel_a = 0
rf::rd_data_imm_mux_sel_b = 0
rf::rd_data_imm_mux_a = 0
rf::rd_data_imm_mux_b = 10
rf::rd_data_bypass_mux_a = 69
rf::rd_data_bypass_mux_b = 10
rf::rf_eu_wr_addr = 0
rf::enable = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_a     = 00
rf::eu_rf_wr_addr_equal_rd_addr_a = 1
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_a = 1
rf::bypass_a = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_b     = 10
rf::eu_rf_wr_addr_equal_rd_addr_b = 0
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_b = 0
rf::bypass_b = 0
rf::eu_data_a = 69
rf::rd_data_a = 000000069
rf::rd_data_b = 00000000f
rf::rf_eu_v = 1
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 000000069
rf::eu_rf_wren    = 1
rf::rf_stall = 0
rf::   rf[0] = 0
rf::   rf[1] = 1
rf::   rf[2] = 2
rf::   rf[3] = 3
rf::   rf[4] = 4
rf::   rf[5] = 5
rf::   rf[6] = 6
rf::   rf[7] = 7
rf::   rf[8] = 8
rf::   rf[9] = 9
rf::   rf[a] = a
rf::   rf[b] = b
rf::   rf[c] = c
rf::   rf[d] = d
rf::   rf[e] = e
rf::   rf[f] = f
rf::   rf[10] = 10
rf::   rf[11] = 11
rf::   rf[12] = 12
rf::   rf[13] = 13
rf::   rf[14] = 14
rf::   rf[15] = 15
rf::   rf[16] = 16
rf::   rf[17] = 17
rf::   rf[18] = 18
rf::   rf[19] = 19
rf::   rf[1a] = 1a
rf::   rf[1b] = 1b
rf::   rf[1c] = 1c
rf::   rf[1d] = 1d
rf::   rf[1e] = 1e
rf::   rf[1f] = 1f
executionUnit::****************************************
executionUnit:: rf_eu_v=1
executionUnit::enable =1
executionUnit:: instReg=f isInstFmtLas=1 instFmt=0
executionUnit:: rf_eu_ir = 00000000f
executionUnit:: las op = ELasAdd	 las op = 0
executionUnit:: src_a = 000000069
executionUnit:: src_b = 00000000f
executionUnit:: eu_rf_wr_data_las = 0
executionUnit:: eu_rf_wr_data_bit = 0
executionUnit:: id->dest = 0
executionUnit:: eu_rf_wr_data = 000000069
executionUnit:: eu_rf_wr_addr = 00
executionUnit:: eu_rf_wren             = 1
rf::****************************************
rf::v = 1
rf::instructionReg = 10
rf::reset_ = 1
rf::rd_addr_a = 00
rf::rden_a    = 1
rf::rd_addr_b = 10
rf::rden_b    = 1
rf:0 read operation rd_addr_a = 00
rf:all read operation rd_addr_b = 10
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 000000078
rf::eu_rf_wren    = 1
rf::swapbit_wr_data_a = 0
rf::swapbit_wr_addr_a = 0
rf::swapbit_wr_data_b = 0
rf::swapbit_wr_addr_b = 0
rf::swapbit_wren.writ = 0
rf::eu_rf_wren 	  = 1
rf::swap_wren 		  = 0
rf::swapbit_wren 	  = 0
rf::testbit_wren 	  = 0
rf::setbit_wren 	  = 0
rf::ldimm_ab_16_wren = 0
rf::rf_mux_in_wren_a = 0
rf::rf_mux_in_wren_b = 0
rf::enable = 1
rf::operandA = 0
rf::operandB = 0
rf::im_rf_ir.read()  = 10
rf::im_rf_instructionDecoder->getInstructionReg()  = 10
rf:: isInstFormatOpLas = 1
rf:: isInstFormatOpBit = 0
rf:: isInstFormatOpLdIm= 0
rf:: isInstFormatOpBr  = 0
rf:: getLdImmOperand16Field= 10
rf:: signExtend16(im_rf_instructionDecoder->getLdImmOperand16Field ()) = 10
rf:: rf_dest_data  = 1f
rf::im_rf_ir = 10
rf::eu_rf_ir = 00000000e
rf::op_imm_a = 0
rf::op_imm_b = 10
rf:: getOperandAImm8Field  = 0
rf:: getOperandBImm8Field  = 10
rf::signExtend8 (op_imm_a) = 0
rf::signExtend8 (op_imm_b) = 10
rf::signExtend16(op_imm_b) = 10
rf::rd_data_rf_a = 0
rf::rd_data_rf_b = 10
rf::rd_data_imm_a = 0
rf::rd_data_imm_b = 10
rf::rd_data_imm_mux_sel_a = 0
rf::rd_data_imm_mux_sel_b = 0
rf::rd_data_imm_mux_a = 0
rf::rd_data_imm_mux_b = 10
rf::rd_data_bypass_mux_a = 78
rf::rd_data_bypass_mux_b = 10
rf::rf_eu_wr_addr = 0
rf::enable = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_a     = 00
rf::eu_rf_wr_addr_equal_rd_addr_a = 1
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_a = 1
rf::bypass_a = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_b     = 10
rf::eu_rf_wr_addr_equal_rd_addr_b = 0
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_b = 0
rf::bypass_b = 0
rf::eu_data_a = 78
rf::rd_data_a = 000000069
rf::rd_data_b = 00000000f
rf::rf_eu_v = 1
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 000000078
rf::eu_rf_wren    = 1
rf::rf_stall = 0
rf::   rf[0] = 0
rf::   rf[1] = 1
rf::   rf[2] = 2
rf::   rf[3] = 3
rf::   rf[4] = 4
rf::   rf[5] = 5
rf::   rf[6] = 6
rf::   rf[7] = 7
rf::   rf[8] = 8
rf::   rf[9] = 9
rf::   rf[a] = a
rf::   rf[b] = b
rf::   rf[c] = c
rf::   rf[d] = d
rf::   rf[e] = e
rf::   rf[f] = f
rf::   rf[10] = 10
rf::   rf[11] = 11
rf::   rf[12] = 12
rf::   rf[13] = 13
rf::   rf[14] = 14
rf::   rf[15] = 15
rf::   rf[16] = 16
rf::   rf[17] = 17
rf::   rf[18] = 18
rf::   rf[19] = 19
rf::   rf[1a] = 1a
rf::   rf[1b] = 1b
rf::   rf[1c] = 1c
rf::   rf[1d] = 1d
rf::   rf[1e] = 1e
rf::   rf[1f] = 1f
   read op  buffer[31] = 11 im read operation  = 31 data = 10
 eu_branch = 0 pcx = 32 pc_inc = 32
reset_ = 1
enable = 1
eu_branch = 0
 pc_im_v   = 1
 im_rf_v   = 1
 rf_eu_v   = 1
 eu_rf_wren= 1
pc_im_address = 31
im.data = 10
npc_2 = 0000f
npc_3 = 0000e
npc_4 = 00000
pc_im_v = 1 im_RnW = 1 pc_im_address = 31  im_1 = 10
im_data = 10
ir_rf_3 = 00000000f
ir_eu_4 = 00000000e
 eu_branch.read() = 1
 pc_im_v   = 1
 im_rf_v   = 1
 rf_eu_v   = 1
 rf_rd_addr_a = 0
 rf_rd_addr_b = 10
 rf_dest_addr = 0
 rf_rd_data_a = 000000069
 rf_rd_data_b = 00000000f
 im_rf_v   = 1
 rf_eu_v = 1
 eu_rf_wren = 1
 eu_rf_wr_data  = 000000078
 eu_rf_wr_addr  = 00
rf::****************************************
rf::v = 1
rf::instructionReg = 11
rf::reset_ = 1
rf::rd_addr_a = 00
rf::rden_a    = 1
rf::rd_addr_b = 11
rf::rden_b    = 1
rf:0 read operation rd_addr_a = 00
rf:all read operation rd_addr_b = 11
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 000000078
rf::eu_rf_wren    = 1
rf::swapbit_wr_data_a = 0
rf::swapbit_wr_addr_a = 0
rf::swapbit_wr_data_b = 0
rf::swapbit_wr_addr_b = 0
rf::swapbit_wren.writ = 0
rf::eu_rf_wren 	  = 1
rf::swap_wren 		  = 0
rf::swapbit_wren 	  = 0
rf::testbit_wren 	  = 0
rf::setbit_wren 	  = 0
rf::ldimm_ab_16_wren = 0
rf::rf_mux_in_wren_a = 0
rf::rf_mux_in_wren_b = 0
rf::enable = 1
rf::operandA = 0
rf::operandB = 0
rf::im_rf_ir.read()  = 11
rf::im_rf_instructionDecoder->getInstructionReg()  = 11
rf:: isInstFormatOpLas = 1
rf:: isInstFormatOpBit = 0
rf:: isInstFormatOpLdIm= 0
rf:: isInstFormatOpBr  = 0
rf:: getLdImmOperand16Field= 11
rf:: signExtend16(im_rf_instructionDecoder->getLdImmOperand16Field ()) = 11
rf:: rf_dest_data  = 1f
rf::im_rf_ir = 11
rf::eu_rf_ir = 00000000f
rf::op_imm_a = 0
rf::op_imm_b = 11
rf:: getOperandAImm8Field  = 0
rf:: getOperandBImm8Field  = 11
rf::signExtend8 (op_imm_a) = 0
rf::signExtend8 (op_imm_b) = 11
rf::signExtend16(op_imm_b) = 11
rf::rd_data_rf_a = 0
rf::rd_data_rf_b = 11
rf::rd_data_imm_a = 0
rf::rd_data_imm_b = 11
rf::rd_data_imm_mux_sel_a = 0
rf::rd_data_imm_mux_sel_b = 0
rf::rd_data_imm_mux_a = 0
rf::rd_data_imm_mux_b = 11
rf::rd_data_bypass_mux_a = 78
rf::rd_data_bypass_mux_b = 11
rf::rf_eu_wr_addr = 0
rf::enable = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_a     = 00
rf::eu_rf_wr_addr_equal_rd_addr_a = 1
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_a = 1
rf::bypass_a = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_b     = 11
rf::eu_rf_wr_addr_equal_rd_addr_b = 0
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_b = 0
rf::bypass_b = 0
rf::eu_data_a = 78
rf::rd_data_a = 000000078
rf::rd_data_b = 000000010
rf::rf_eu_v = 1
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 000000078
rf::eu_rf_wren    = 1
rf::rf_stall = 0
rf::   rf[0] = 0
rf::   rf[1] = 1
rf::   rf[2] = 2
rf::   rf[3] = 3
rf::   rf[4] = 4
rf::   rf[5] = 5
rf::   rf[6] = 6
rf::   rf[7] = 7
rf::   rf[8] = 8
rf::   rf[9] = 9
rf::   rf[a] = a
rf::   rf[b] = b
rf::   rf[c] = c
rf::   rf[d] = d
rf::   rf[e] = e
rf::   rf[f] = f
rf::   rf[10] = 10
rf::   rf[11] = 11
rf::   rf[12] = 12
rf::   rf[13] = 13
rf::   rf[14] = 14
rf::   rf[15] = 15
rf::   rf[16] = 16
rf::   rf[17] = 17
rf::   rf[18] = 18
rf::   rf[19] = 19
rf::   rf[1a] = 1a
rf::   rf[1b] = 1b
rf::   rf[1c] = 1c
rf::   rf[1d] = 1d
rf::   rf[1e] = 1e
rf::   rf[1f] = 1f
executionUnit::****************************************
executionUnit:: rf_eu_v=1
executionUnit::enable =1
executionUnit:: instReg=10 isInstFmtLas=1 instFmt=0
executionUnit:: rf_eu_ir = 000000010
executionUnit:: las op = ELasAdd	 las op = 0
executionUnit:: src_a = 000000078
executionUnit:: src_b = 000000010
executionUnit:: eu_rf_wr_data_las = 0
executionUnit:: eu_rf_wr_data_bit = 0
executionUnit:: id->dest = 0
executionUnit:: eu_rf_wr_data = 000000078
executionUnit:: eu_rf_wr_addr = 00
executionUnit:: eu_rf_wren             = 1
rf::****************************************
rf::v = 1
rf::instructionReg = 11
rf::reset_ = 1
rf::rd_addr_a = 00
rf::rden_a    = 1
rf::rd_addr_b = 11
rf::rden_b    = 1
rf:0 read operation rd_addr_a = 00
rf:all read operation rd_addr_b = 11
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 000000088
rf::eu_rf_wren    = 1
rf::swapbit_wr_data_a = 0
rf::swapbit_wr_addr_a = 0
rf::swapbit_wr_data_b = 0
rf::swapbit_wr_addr_b = 0
rf::swapbit_wren.writ = 0
rf::eu_rf_wren 	  = 1
rf::swap_wren 		  = 0
rf::swapbit_wren 	  = 0
rf::testbit_wren 	  = 0
rf::setbit_wren 	  = 0
rf::ldimm_ab_16_wren = 0
rf::rf_mux_in_wren_a = 0
rf::rf_mux_in_wren_b = 0
rf::enable = 1
rf::operandA = 0
rf::operandB = 0
rf::im_rf_ir.read()  = 11
rf::im_rf_instructionDecoder->getInstructionReg()  = 11
rf:: isInstFormatOpLas = 1
rf:: isInstFormatOpBit = 0
rf:: isInstFormatOpLdIm= 0
rf:: isInstFormatOpBr  = 0
rf:: getLdImmOperand16Field= 11
rf:: signExtend16(im_rf_instructionDecoder->getLdImmOperand16Field ()) = 11
rf:: rf_dest_data  = 1f
rf::im_rf_ir = 11
rf::eu_rf_ir = 00000000f
rf::op_imm_a = 0
rf::op_imm_b = 11
rf:: getOperandAImm8Field  = 0
rf:: getOperandBImm8Field  = 11
rf::signExtend8 (op_imm_a) = 0
rf::signExtend8 (op_imm_b) = 11
rf::signExtend16(op_imm_b) = 11
rf::rd_data_rf_a = 0
rf::rd_data_rf_b = 11
rf::rd_data_imm_a = 0
rf::rd_data_imm_b = 11
rf::rd_data_imm_mux_sel_a = 0
rf::rd_data_imm_mux_sel_b = 0
rf::rd_data_imm_mux_a = 0
rf::rd_data_imm_mux_b = 11
rf::rd_data_bypass_mux_a = 88
rf::rd_data_bypass_mux_b = 11
rf::rf_eu_wr_addr = 0
rf::enable = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_a     = 00
rf::eu_rf_wr_addr_equal_rd_addr_a = 1
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_a = 1
rf::bypass_a = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_b     = 11
rf::eu_rf_wr_addr_equal_rd_addr_b = 0
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_b = 0
rf::bypass_b = 0
rf::eu_data_a = 88
rf::rd_data_a = 000000078
rf::rd_data_b = 000000010
rf::rf_eu_v = 1
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 000000088
rf::eu_rf_wren    = 1
rf::rf_stall = 0
rf::   rf[0] = 0
rf::   rf[1] = 1
rf::   rf[2] = 2
rf::   rf[3] = 3
rf::   rf[4] = 4
rf::   rf[5] = 5
rf::   rf[6] = 6
rf::   rf[7] = 7
rf::   rf[8] = 8
rf::   rf[9] = 9
rf::   rf[a] = a
rf::   rf[b] = b
rf::   rf[c] = c
rf::   rf[d] = d
rf::   rf[e] = e
rf::   rf[f] = f
rf::   rf[10] = 10
rf::   rf[11] = 11
rf::   rf[12] = 12
rf::   rf[13] = 13
rf::   rf[14] = 14
rf::   rf[15] = 15
rf::   rf[16] = 16
rf::   rf[17] = 17
rf::   rf[18] = 18
rf::   rf[19] = 19
rf::   rf[1a] = 1a
rf::   rf[1b] = 1b
rf::   rf[1c] = 1c
rf::   rf[1d] = 1d
rf::   rf[1e] = 1e
rf::   rf[1f] = 1f
   read op  buffer[32] = 12 im read operation  = 32 data = 11
 eu_branch = 0 pcx = 33 pc_inc = 33
reset_ = 1
enable = 1
eu_branch = 0
 pc_im_v   = 1
 im_rf_v   = 1
 rf_eu_v   = 1
 eu_rf_wren= 1
pc_im_address = 32
im.data = 11
npc_2 = 00010
npc_3 = 0000f
npc_4 = 00000
pc_im_v = 1 im_RnW = 1 pc_im_address = 32  im_1 = 11
im_data = 11
ir_rf_3 = 000000010
ir_eu_4 = 00000000f
 eu_branch.read() = 1
 pc_im_v   = 1
 im_rf_v   = 1
 rf_eu_v   = 1
 rf_rd_addr_a = 0
 rf_rd_addr_b = 11
 rf_dest_addr = 0
 rf_rd_data_a = 000000078
 rf_rd_data_b = 000000010
 im_rf_v   = 1
 rf_eu_v = 1
 eu_rf_wren = 1
 eu_rf_wr_data  = 000000088
 eu_rf_wr_addr  = 00
rf::****************************************
rf::v = 1
rf::instructionReg = 12
rf::reset_ = 1
rf::rd_addr_a = 00
rf::rden_a    = 1
rf::rd_addr_b = 12
rf::rden_b    = 1
rf:0 read operation rd_addr_a = 00
rf:all read operation rd_addr_b = 12
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 000000088
rf::eu_rf_wren    = 1
rf::swapbit_wr_data_a = 0
rf::swapbit_wr_addr_a = 0
rf::swapbit_wr_data_b = 0
rf::swapbit_wr_addr_b = 0
rf::swapbit_wren.writ = 0
rf::eu_rf_wren 	  = 1
rf::swap_wren 		  = 0
rf::swapbit_wren 	  = 0
rf::testbit_wren 	  = 0
rf::setbit_wren 	  = 0
rf::ldimm_ab_16_wren = 0
rf::rf_mux_in_wren_a = 0
rf::rf_mux_in_wren_b = 0
rf::enable = 1
rf::operandA = 0
rf::operandB = 0
rf::im_rf_ir.read()  = 12
rf::im_rf_instructionDecoder->getInstructionReg()  = 12
rf:: isInstFormatOpLas = 1
rf:: isInstFormatOpBit = 0
rf:: isInstFormatOpLdIm= 0
rf:: isInstFormatOpBr  = 0
rf:: getLdImmOperand16Field= 12
rf:: signExtend16(im_rf_instructionDecoder->getLdImmOperand16Field ()) = 12
rf:: rf_dest_data  = 1f
rf::im_rf_ir = 12
rf::eu_rf_ir = 000000010
rf::op_imm_a = 0
rf::op_imm_b = 12
rf:: getOperandAImm8Field  = 0
rf:: getOperandBImm8Field  = 12
rf::signExtend8 (op_imm_a) = 0
rf::signExtend8 (op_imm_b) = 12
rf::signExtend16(op_imm_b) = 12
rf::rd_data_rf_a = 0
rf::rd_data_rf_b = 12
rf::rd_data_imm_a = 0
rf::rd_data_imm_b = 12
rf::rd_data_imm_mux_sel_a = 0
rf::rd_data_imm_mux_sel_b = 0
rf::rd_data_imm_mux_a = 0
rf::rd_data_imm_mux_b = 12
rf::rd_data_bypass_mux_a = 88
rf::rd_data_bypass_mux_b = 12
rf::rf_eu_wr_addr = 0
rf::enable = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_a     = 00
rf::eu_rf_wr_addr_equal_rd_addr_a = 1
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_a = 1
rf::bypass_a = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_b     = 12
rf::eu_rf_wr_addr_equal_rd_addr_b = 0
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_b = 0
rf::bypass_b = 0
rf::eu_data_a = 88
rf::rd_data_a = 000000088
rf::rd_data_b = 000000011
rf::rf_eu_v = 1
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 000000088
rf::eu_rf_wren    = 1
rf::rf_stall = 0
rf::   rf[0] = 0
rf::   rf[1] = 1
rf::   rf[2] = 2
rf::   rf[3] = 3
rf::   rf[4] = 4
rf::   rf[5] = 5
rf::   rf[6] = 6
rf::   rf[7] = 7
rf::   rf[8] = 8
rf::   rf[9] = 9
rf::   rf[a] = a
rf::   rf[b] = b
rf::   rf[c] = c
rf::   rf[d] = d
rf::   rf[e] = e
rf::   rf[f] = f
rf::   rf[10] = 10
rf::   rf[11] = 11
rf::   rf[12] = 12
rf::   rf[13] = 13
rf::   rf[14] = 14
rf::   rf[15] = 15
rf::   rf[16] = 16
rf::   rf[17] = 17
rf::   rf[18] = 18
rf::   rf[19] = 19
rf::   rf[1a] = 1a
rf::   rf[1b] = 1b
rf::   rf[1c] = 1c
rf::   rf[1d] = 1d
rf::   rf[1e] = 1e
rf::   rf[1f] = 1f
executionUnit::****************************************
executionUnit:: rf_eu_v=1
executionUnit::enable =1
executionUnit:: instReg=11 isInstFmtLas=1 instFmt=0
executionUnit:: rf_eu_ir = 000000011
executionUnit:: las op = ELasAdd	 las op = 0
executionUnit:: src_a = 000000088
executionUnit:: src_b = 000000011
executionUnit:: eu_rf_wr_data_las = 0
executionUnit:: eu_rf_wr_data_bit = 0
executionUnit:: id->dest = 0
executionUnit:: eu_rf_wr_data = 000000088
executionUnit:: eu_rf_wr_addr = 00
executionUnit:: eu_rf_wren             = 1
rf::****************************************
rf::v = 1
rf::instructionReg = 12
rf::reset_ = 1
rf::rd_addr_a = 00
rf::rden_a    = 1
rf::rd_addr_b = 12
rf::rden_b    = 1
rf:0 read operation rd_addr_a = 00
rf:all read operation rd_addr_b = 12
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 000000099
rf::eu_rf_wren    = 1
rf::swapbit_wr_data_a = 0
rf::swapbit_wr_addr_a = 0
rf::swapbit_wr_data_b = 0
rf::swapbit_wr_addr_b = 0
rf::swapbit_wren.writ = 0
rf::eu_rf_wren 	  = 1
rf::swap_wren 		  = 0
rf::swapbit_wren 	  = 0
rf::testbit_wren 	  = 0
rf::setbit_wren 	  = 0
rf::ldimm_ab_16_wren = 0
rf::rf_mux_in_wren_a = 0
rf::rf_mux_in_wren_b = 0
rf::enable = 1
rf::operandA = 0
rf::operandB = 0
rf::im_rf_ir.read()  = 12
rf::im_rf_instructionDecoder->getInstructionReg()  = 12
rf:: isInstFormatOpLas = 1
rf:: isInstFormatOpBit = 0
rf:: isInstFormatOpLdIm= 0
rf:: isInstFormatOpBr  = 0
rf:: getLdImmOperand16Field= 12
rf:: signExtend16(im_rf_instructionDecoder->getLdImmOperand16Field ()) = 12
rf:: rf_dest_data  = 1f
rf::im_rf_ir = 12
rf::eu_rf_ir = 000000010
rf::op_imm_a = 0
rf::op_imm_b = 12
rf:: getOperandAImm8Field  = 0
rf:: getOperandBImm8Field  = 12
rf::signExtend8 (op_imm_a) = 0
rf::signExtend8 (op_imm_b) = 12
rf::signExtend16(op_imm_b) = 12
rf::rd_data_rf_a = 0
rf::rd_data_rf_b = 12
rf::rd_data_imm_a = 0
rf::rd_data_imm_b = 12
rf::rd_data_imm_mux_sel_a = 0
rf::rd_data_imm_mux_sel_b = 0
rf::rd_data_imm_mux_a = 0
rf::rd_data_imm_mux_b = 12
rf::rd_data_bypass_mux_a = 99
rf::rd_data_bypass_mux_b = 12
rf::rf_eu_wr_addr = 0
rf::enable = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_a     = 00
rf::eu_rf_wr_addr_equal_rd_addr_a = 1
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_a = 1
rf::bypass_a = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_b     = 12
rf::eu_rf_wr_addr_equal_rd_addr_b = 0
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_b = 0
rf::bypass_b = 0
rf::eu_data_a = 99
rf::rd_data_a = 000000088
rf::rd_data_b = 000000011
rf::rf_eu_v = 1
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 000000099
rf::eu_rf_wren    = 1
rf::rf_stall = 0
rf::   rf[0] = 0
rf::   rf[1] = 1
rf::   rf[2] = 2
rf::   rf[3] = 3
rf::   rf[4] = 4
rf::   rf[5] = 5
rf::   rf[6] = 6
rf::   rf[7] = 7
rf::   rf[8] = 8
rf::   rf[9] = 9
rf::   rf[a] = a
rf::   rf[b] = b
rf::   rf[c] = c
rf::   rf[d] = d
rf::   rf[e] = e
rf::   rf[f] = f
rf::   rf[10] = 10
rf::   rf[11] = 11
rf::   rf[12] = 12
rf::   rf[13] = 13
rf::   rf[14] = 14
rf::   rf[15] = 15
rf::   rf[16] = 16
rf::   rf[17] = 17
rf::   rf[18] = 18
rf::   rf[19] = 19
rf::   rf[1a] = 1a
rf::   rf[1b] = 1b
rf::   rf[1c] = 1c
rf::   rf[1d] = 1d
rf::   rf[1e] = 1e
rf::   rf[1f] = 1f
   read op  buffer[33] = 13 im read operation  = 33 data = 12
 eu_branch = 0 pcx = 34 pc_inc = 34
reset_ = 1
enable = 1
eu_branch = 0
 pc_im_v   = 1
 im_rf_v   = 1
 rf_eu_v   = 1
 eu_rf_wren= 1
pc_im_address = 33
im.data = 12
npc_2 = 00011
npc_3 = 00010
npc_4 = 00000
pc_im_v = 1 im_RnW = 1 pc_im_address = 33  im_1 = 12
im_data = 12
ir_rf_3 = 000000011
ir_eu_4 = 000000010
 eu_branch.read() = 1
 pc_im_v   = 1
 im_rf_v   = 1
 rf_eu_v   = 1
 rf_rd_addr_a = 0
 rf_rd_addr_b = 12
 rf_dest_addr = 0
 rf_rd_data_a = 000000088
 rf_rd_data_b = 000000011
 im_rf_v   = 1
 rf_eu_v = 1
 eu_rf_wren = 1
 eu_rf_wr_data  = 000000099
 eu_rf_wr_addr  = 00
rf::****************************************
rf::v = 1
rf::instructionReg = 13
rf::reset_ = 1
rf::rd_addr_a = 00
rf::rden_a    = 1
rf::rd_addr_b = 13
rf::rden_b    = 1
rf:0 read operation rd_addr_a = 00
rf:all read operation rd_addr_b = 13
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 000000099
rf::eu_rf_wren    = 1
rf::swapbit_wr_data_a = 0
rf::swapbit_wr_addr_a = 0
rf::swapbit_wr_data_b = 0
rf::swapbit_wr_addr_b = 0
rf::swapbit_wren.writ = 0
rf::eu_rf_wren 	  = 1
rf::swap_wren 		  = 0
rf::swapbit_wren 	  = 0
rf::testbit_wren 	  = 0
rf::setbit_wren 	  = 0
rf::ldimm_ab_16_wren = 0
rf::rf_mux_in_wren_a = 0
rf::rf_mux_in_wren_b = 0
rf::enable = 1
rf::operandA = 0
rf::operandB = 0
rf::im_rf_ir.read()  = 13
rf::im_rf_instructionDecoder->getInstructionReg()  = 13
rf:: isInstFormatOpLas = 1
rf:: isInstFormatOpBit = 0
rf:: isInstFormatOpLdIm= 0
rf:: isInstFormatOpBr  = 0
rf:: getLdImmOperand16Field= 13
rf:: signExtend16(im_rf_instructionDecoder->getLdImmOperand16Field ()) = 13
rf:: rf_dest_data  = 1f
rf::im_rf_ir = 13
rf::eu_rf_ir = 000000011
rf::op_imm_a = 0
rf::op_imm_b = 13
rf:: getOperandAImm8Field  = 0
rf:: getOperandBImm8Field  = 13
rf::signExtend8 (op_imm_a) = 0
rf::signExtend8 (op_imm_b) = 13
rf::signExtend16(op_imm_b) = 13
rf::rd_data_rf_a = 0
rf::rd_data_rf_b = 13
rf::rd_data_imm_a = 0
rf::rd_data_imm_b = 13
rf::rd_data_imm_mux_sel_a = 0
rf::rd_data_imm_mux_sel_b = 0
rf::rd_data_imm_mux_a = 0
rf::rd_data_imm_mux_b = 13
rf::rd_data_bypass_mux_a = 99
rf::rd_data_bypass_mux_b = 13
rf::rf_eu_wr_addr = 0
rf::enable = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_a     = 00
rf::eu_rf_wr_addr_equal_rd_addr_a = 1
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_a = 1
rf::bypass_a = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_b     = 13
rf::eu_rf_wr_addr_equal_rd_addr_b = 0
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_b = 0
rf::bypass_b = 0
rf::eu_data_a = 99
rf::rd_data_a = 000000099
rf::rd_data_b = 000000012
rf::rf_eu_v = 1
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 000000099
rf::eu_rf_wren    = 1
rf::rf_stall = 0
rf::   rf[0] = 0
rf::   rf[1] = 1
rf::   rf[2] = 2
rf::   rf[3] = 3
rf::   rf[4] = 4
rf::   rf[5] = 5
rf::   rf[6] = 6
rf::   rf[7] = 7
rf::   rf[8] = 8
rf::   rf[9] = 9
rf::   rf[a] = a
rf::   rf[b] = b
rf::   rf[c] = c
rf::   rf[d] = d
rf::   rf[e] = e
rf::   rf[f] = f
rf::   rf[10] = 10
rf::   rf[11] = 11
rf::   rf[12] = 12
rf::   rf[13] = 13
rf::   rf[14] = 14
rf::   rf[15] = 15
rf::   rf[16] = 16
rf::   rf[17] = 17
rf::   rf[18] = 18
rf::   rf[19] = 19
rf::   rf[1a] = 1a
rf::   rf[1b] = 1b
rf::   rf[1c] = 1c
rf::   rf[1d] = 1d
rf::   rf[1e] = 1e
rf::   rf[1f] = 1f
executionUnit::****************************************
executionUnit:: rf_eu_v=1
executionUnit::enable =1
executionUnit:: instReg=12 isInstFmtLas=1 instFmt=0
executionUnit:: rf_eu_ir = 000000012
executionUnit:: las op = ELasAdd	 las op = 0
executionUnit:: src_a = 000000099
executionUnit:: src_b = 000000012
executionUnit:: eu_rf_wr_data_las = 0
executionUnit:: eu_rf_wr_data_bit = 0
executionUnit:: id->dest = 0
executionUnit:: eu_rf_wr_data = 000000099
executionUnit:: eu_rf_wr_addr = 00
executionUnit:: eu_rf_wren             = 1
rf::****************************************
rf::v = 1
rf::instructionReg = 13
rf::reset_ = 1
rf::rd_addr_a = 00
rf::rden_a    = 1
rf::rd_addr_b = 13
rf::rden_b    = 1
rf:0 read operation rd_addr_a = 00
rf:all read operation rd_addr_b = 13
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 0000000ab
rf::eu_rf_wren    = 1
rf::swapbit_wr_data_a = 0
rf::swapbit_wr_addr_a = 0
rf::swapbit_wr_data_b = 0
rf::swapbit_wr_addr_b = 0
rf::swapbit_wren.writ = 0
rf::eu_rf_wren 	  = 1
rf::swap_wren 		  = 0
rf::swapbit_wren 	  = 0
rf::testbit_wren 	  = 0
rf::setbit_wren 	  = 0
rf::ldimm_ab_16_wren = 0
rf::rf_mux_in_wren_a = 0
rf::rf_mux_in_wren_b = 0
rf::enable = 1
rf::operandA = 0
rf::operandB = 0
rf::im_rf_ir.read()  = 13
rf::im_rf_instructionDecoder->getInstructionReg()  = 13
rf:: isInstFormatOpLas = 1
rf:: isInstFormatOpBit = 0
rf:: isInstFormatOpLdIm= 0
rf:: isInstFormatOpBr  = 0
rf:: getLdImmOperand16Field= 13
rf:: signExtend16(im_rf_instructionDecoder->getLdImmOperand16Field ()) = 13
rf:: rf_dest_data  = 1f
rf::im_rf_ir = 13
rf::eu_rf_ir = 000000011
rf::op_imm_a = 0
rf::op_imm_b = 13
rf:: getOperandAImm8Field  = 0
rf:: getOperandBImm8Field  = 13
rf::signExtend8 (op_imm_a) = 0
rf::signExtend8 (op_imm_b) = 13
rf::signExtend16(op_imm_b) = 13
rf::rd_data_rf_a = 0
rf::rd_data_rf_b = 13
rf::rd_data_imm_a = 0
rf::rd_data_imm_b = 13
rf::rd_data_imm_mux_sel_a = 0
rf::rd_data_imm_mux_sel_b = 0
rf::rd_data_imm_mux_a = 0
rf::rd_data_imm_mux_b = 13
rf::rd_data_bypass_mux_a = ab
rf::rd_data_bypass_mux_b = 13
rf::rf_eu_wr_addr = 0
rf::enable = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_a     = 00
rf::eu_rf_wr_addr_equal_rd_addr_a = 1
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_a = 1
rf::bypass_a = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_b     = 13
rf::eu_rf_wr_addr_equal_rd_addr_b = 0
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_b = 0
rf::bypass_b = 0
rf::eu_data_a = ab
rf::rd_data_a = 000000099
rf::rd_data_b = 000000012
rf::rf_eu_v = 1
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 0000000ab
rf::eu_rf_wren    = 1
rf::rf_stall = 0
rf::   rf[0] = 0
rf::   rf[1] = 1
rf::   rf[2] = 2
rf::   rf[3] = 3
rf::   rf[4] = 4
rf::   rf[5] = 5
rf::   rf[6] = 6
rf::   rf[7] = 7
rf::   rf[8] = 8
rf::   rf[9] = 9
rf::   rf[a] = a
rf::   rf[b] = b
rf::   rf[c] = c
rf::   rf[d] = d
rf::   rf[e] = e
rf::   rf[f] = f
rf::   rf[10] = 10
rf::   rf[11] = 11
rf::   rf[12] = 12
rf::   rf[13] = 13
rf::   rf[14] = 14
rf::   rf[15] = 15
rf::   rf[16] = 16
rf::   rf[17] = 17
rf::   rf[18] = 18
rf::   rf[19] = 19
rf::   rf[1a] = 1a
rf::   rf[1b] = 1b
rf::   rf[1c] = 1c
rf::   rf[1d] = 1d
rf::   rf[1e] = 1e
rf::   rf[1f] = 1f
   read op  buffer[34] = 14 im read operation  = 34 data = 13
 eu_branch = 0 pcx = 35 pc_inc = 35
reset_ = 1
enable = 1
eu_branch = 0
 pc_im_v   = 1
 im_rf_v   = 1
 rf_eu_v   = 1
 eu_rf_wren= 1
pc_im_address = 34
im.data = 13
npc_2 = 00012
npc_3 = 00011
npc_4 = 00000
pc_im_v = 1 im_RnW = 1 pc_im_address = 34  im_1 = 13
im_data = 13
ir_rf_3 = 000000012
ir_eu_4 = 000000011
 eu_branch.read() = 1
 pc_im_v   = 1
 im_rf_v   = 1
 rf_eu_v   = 1
 rf_rd_addr_a = 0
 rf_rd_addr_b = 13
 rf_dest_addr = 0
 rf_rd_data_a = 000000099
 rf_rd_data_b = 000000012
 im_rf_v   = 1
 rf_eu_v = 1
 eu_rf_wren = 1
 eu_rf_wr_data  = 0000000ab
 eu_rf_wr_addr  = 00
rf::****************************************
rf::v = 1
rf::instructionReg = 14
rf::reset_ = 1
rf::rd_addr_a = 00
rf::rden_a    = 1
rf::rd_addr_b = 14
rf::rden_b    = 1
rf:0 read operation rd_addr_a = 00
rf:all read operation rd_addr_b = 14
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 0000000ab
rf::eu_rf_wren    = 1
rf::swapbit_wr_data_a = 0
rf::swapbit_wr_addr_a = 0
rf::swapbit_wr_data_b = 0
rf::swapbit_wr_addr_b = 0
rf::swapbit_wren.writ = 0
rf::eu_rf_wren 	  = 1
rf::swap_wren 		  = 0
rf::swapbit_wren 	  = 0
rf::testbit_wren 	  = 0
rf::setbit_wren 	  = 0
rf::ldimm_ab_16_wren = 0
rf::rf_mux_in_wren_a = 0
rf::rf_mux_in_wren_b = 0
rf::enable = 1
rf::operandA = 0
rf::operandB = 0
rf::im_rf_ir.read()  = 14
rf::im_rf_instructionDecoder->getInstructionReg()  = 14
rf:: isInstFormatOpLas = 1
rf:: isInstFormatOpBit = 0
rf:: isInstFormatOpLdIm= 0
rf:: isInstFormatOpBr  = 0
rf:: getLdImmOperand16Field= 14
rf:: signExtend16(im_rf_instructionDecoder->getLdImmOperand16Field ()) = 14
rf:: rf_dest_data  = 1f
rf::im_rf_ir = 14
rf::eu_rf_ir = 000000012
rf::op_imm_a = 0
rf::op_imm_b = 14
rf:: getOperandAImm8Field  = 0
rf:: getOperandBImm8Field  = 14
rf::signExtend8 (op_imm_a) = 0
rf::signExtend8 (op_imm_b) = 14
rf::signExtend16(op_imm_b) = 14
rf::rd_data_rf_a = 0
rf::rd_data_rf_b = 14
rf::rd_data_imm_a = 0
rf::rd_data_imm_b = 14
rf::rd_data_imm_mux_sel_a = 0
rf::rd_data_imm_mux_sel_b = 0
rf::rd_data_imm_mux_a = 0
rf::rd_data_imm_mux_b = 14
rf::rd_data_bypass_mux_a = ab
rf::rd_data_bypass_mux_b = 14
rf::rf_eu_wr_addr = 0
rf::enable = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_a     = 00
rf::eu_rf_wr_addr_equal_rd_addr_a = 1
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_a = 1
rf::bypass_a = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_b     = 14
rf::eu_rf_wr_addr_equal_rd_addr_b = 0
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_b = 0
rf::bypass_b = 0
rf::eu_data_a = ab
rf::rd_data_a = 0000000ab
rf::rd_data_b = 000000013
rf::rf_eu_v = 1
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 0000000ab
rf::eu_rf_wren    = 1
rf::rf_stall = 0
rf::   rf[0] = 0
rf::   rf[1] = 1
rf::   rf[2] = 2
rf::   rf[3] = 3
rf::   rf[4] = 4
rf::   rf[5] = 5
rf::   rf[6] = 6
rf::   rf[7] = 7
rf::   rf[8] = 8
rf::   rf[9] = 9
rf::   rf[a] = a
rf::   rf[b] = b
rf::   rf[c] = c
rf::   rf[d] = d
rf::   rf[e] = e
rf::   rf[f] = f
rf::   rf[10] = 10
rf::   rf[11] = 11
rf::   rf[12] = 12
rf::   rf[13] = 13
rf::   rf[14] = 14
rf::   rf[15] = 15
rf::   rf[16] = 16
rf::   rf[17] = 17
rf::   rf[18] = 18
rf::   rf[19] = 19
rf::   rf[1a] = 1a
rf::   rf[1b] = 1b
rf::   rf[1c] = 1c
rf::   rf[1d] = 1d
rf::   rf[1e] = 1e
rf::   rf[1f] = 1f
executionUnit::****************************************
executionUnit:: rf_eu_v=1
executionUnit::enable =1
executionUnit:: instReg=13 isInstFmtLas=1 instFmt=0
executionUnit:: rf_eu_ir = 000000013
executionUnit:: las op = ELasAdd	 las op = 0
executionUnit:: src_a = 0000000ab
executionUnit:: src_b = 000000013
executionUnit:: eu_rf_wr_data_las = 0
executionUnit:: eu_rf_wr_data_bit = 0
executionUnit:: id->dest = 0
executionUnit:: eu_rf_wr_data = 0000000ab
executionUnit:: eu_rf_wr_addr = 00
executionUnit:: eu_rf_wren             = 1
rf::****************************************
rf::v = 1
rf::instructionReg = 14
rf::reset_ = 1
rf::rd_addr_a = 00
rf::rden_a    = 1
rf::rd_addr_b = 14
rf::rden_b    = 1
rf:0 read operation rd_addr_a = 00
rf:all read operation rd_addr_b = 14
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 0000000be
rf::eu_rf_wren    = 1
rf::swapbit_wr_data_a = 0
rf::swapbit_wr_addr_a = 0
rf::swapbit_wr_data_b = 0
rf::swapbit_wr_addr_b = 0
rf::swapbit_wren.writ = 0
rf::eu_rf_wren 	  = 1
rf::swap_wren 		  = 0
rf::swapbit_wren 	  = 0
rf::testbit_wren 	  = 0
rf::setbit_wren 	  = 0
rf::ldimm_ab_16_wren = 0
rf::rf_mux_in_wren_a = 0
rf::rf_mux_in_wren_b = 0
rf::enable = 1
rf::operandA = 0
rf::operandB = 0
rf::im_rf_ir.read()  = 14
rf::im_rf_instructionDecoder->getInstructionReg()  = 14
rf:: isInstFormatOpLas = 1
rf:: isInstFormatOpBit = 0
rf:: isInstFormatOpLdIm= 0
rf:: isInstFormatOpBr  = 0
rf:: getLdImmOperand16Field= 14
rf:: signExtend16(im_rf_instructionDecoder->getLdImmOperand16Field ()) = 14
rf:: rf_dest_data  = 1f
rf::im_rf_ir = 14
rf::eu_rf_ir = 000000012
rf::op_imm_a = 0
rf::op_imm_b = 14
rf:: getOperandAImm8Field  = 0
rf:: getOperandBImm8Field  = 14
rf::signExtend8 (op_imm_a) = 0
rf::signExtend8 (op_imm_b) = 14
rf::signExtend16(op_imm_b) = 14
rf::rd_data_rf_a = 0
rf::rd_data_rf_b = 14
rf::rd_data_imm_a = 0
rf::rd_data_imm_b = 14
rf::rd_data_imm_mux_sel_a = 0
rf::rd_data_imm_mux_sel_b = 0
rf::rd_data_imm_mux_a = 0
rf::rd_data_imm_mux_b = 14
rf::rd_data_bypass_mux_a = be
rf::rd_data_bypass_mux_b = 14
rf::rf_eu_wr_addr = 0
rf::enable = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_a     = 00
rf::eu_rf_wr_addr_equal_rd_addr_a = 1
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_a = 1
rf::bypass_a = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_b     = 14
rf::eu_rf_wr_addr_equal_rd_addr_b = 0
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_b = 0
rf::bypass_b = 0
rf::eu_data_a = be
rf::rd_data_a = 0000000ab
rf::rd_data_b = 000000013
rf::rf_eu_v = 1
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 0000000be
rf::eu_rf_wren    = 1
rf::rf_stall = 0
rf::   rf[0] = 0
rf::   rf[1] = 1
rf::   rf[2] = 2
rf::   rf[3] = 3
rf::   rf[4] = 4
rf::   rf[5] = 5
rf::   rf[6] = 6
rf::   rf[7] = 7
rf::   rf[8] = 8
rf::   rf[9] = 9
rf::   rf[a] = a
rf::   rf[b] = b
rf::   rf[c] = c
rf::   rf[d] = d
rf::   rf[e] = e
rf::   rf[f] = f
rf::   rf[10] = 10
rf::   rf[11] = 11
rf::   rf[12] = 12
rf::   rf[13] = 13
rf::   rf[14] = 14
rf::   rf[15] = 15
rf::   rf[16] = 16
rf::   rf[17] = 17
rf::   rf[18] = 18
rf::   rf[19] = 19
rf::   rf[1a] = 1a
rf::   rf[1b] = 1b
rf::   rf[1c] = 1c
rf::   rf[1d] = 1d
rf::   rf[1e] = 1e
rf::   rf[1f] = 1f
   read op  buffer[35] = 15 im read operation  = 35 data = 14
 eu_branch = 0 pcx = 36 pc_inc = 36
reset_ = 1
enable = 1
eu_branch = 0
 pc_im_v   = 1
 im_rf_v   = 1
 rf_eu_v   = 1
 eu_rf_wren= 1
pc_im_address = 35
im.data = 14
npc_2 = 00013
npc_3 = 00012
npc_4 = 00000
pc_im_v = 1 im_RnW = 1 pc_im_address = 35  im_1 = 14
im_data = 14
ir_rf_3 = 000000013
ir_eu_4 = 000000012
 eu_branch.read() = 1
 pc_im_v   = 1
 im_rf_v   = 1
 rf_eu_v   = 1
 rf_rd_addr_a = 0
 rf_rd_addr_b = 14
 rf_dest_addr = 0
 rf_rd_data_a = 0000000ab
 rf_rd_data_b = 000000013
 im_rf_v   = 1
 rf_eu_v = 1
 eu_rf_wren = 1
 eu_rf_wr_data  = 0000000be
 eu_rf_wr_addr  = 00
rf::****************************************
rf::v = 1
rf::instructionReg = 15
rf::reset_ = 1
rf::rd_addr_a = 00
rf::rden_a    = 1
rf::rd_addr_b = 15
rf::rden_b    = 1
rf:0 read operation rd_addr_a = 00
rf:all read operation rd_addr_b = 15
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 0000000be
rf::eu_rf_wren    = 1
rf::swapbit_wr_data_a = 0
rf::swapbit_wr_addr_a = 0
rf::swapbit_wr_data_b = 0
rf::swapbit_wr_addr_b = 0
rf::swapbit_wren.writ = 0
rf::eu_rf_wren 	  = 1
rf::swap_wren 		  = 0
rf::swapbit_wren 	  = 0
rf::testbit_wren 	  = 0
rf::setbit_wren 	  = 0
rf::ldimm_ab_16_wren = 0
rf::rf_mux_in_wren_a = 0
rf::rf_mux_in_wren_b = 0
rf::enable = 1
rf::operandA = 0
rf::operandB = 0
rf::im_rf_ir.read()  = 15
rf::im_rf_instructionDecoder->getInstructionReg()  = 15
rf:: isInstFormatOpLas = 1
rf:: isInstFormatOpBit = 0
rf:: isInstFormatOpLdIm= 0
rf:: isInstFormatOpBr  = 0
rf:: getLdImmOperand16Field= 15
rf:: signExtend16(im_rf_instructionDecoder->getLdImmOperand16Field ()) = 15
rf:: rf_dest_data  = 1f
rf::im_rf_ir = 15
rf::eu_rf_ir = 000000013
rf::op_imm_a = 0
rf::op_imm_b = 15
rf:: getOperandAImm8Field  = 0
rf:: getOperandBImm8Field  = 15
rf::signExtend8 (op_imm_a) = 0
rf::signExtend8 (op_imm_b) = 15
rf::signExtend16(op_imm_b) = 15
rf::rd_data_rf_a = 0
rf::rd_data_rf_b = 15
rf::rd_data_imm_a = 0
rf::rd_data_imm_b = 15
rf::rd_data_imm_mux_sel_a = 0
rf::rd_data_imm_mux_sel_b = 0
rf::rd_data_imm_mux_a = 0
rf::rd_data_imm_mux_b = 15
rf::rd_data_bypass_mux_a = be
rf::rd_data_bypass_mux_b = 15
rf::rf_eu_wr_addr = 0
rf::enable = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_a     = 00
rf::eu_rf_wr_addr_equal_rd_addr_a = 1
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_a = 1
rf::bypass_a = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_b     = 15
rf::eu_rf_wr_addr_equal_rd_addr_b = 0
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_b = 0
rf::bypass_b = 0
rf::eu_data_a = be
rf::rd_data_a = 0000000be
rf::rd_data_b = 000000014
rf::rf_eu_v = 1
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 0000000be
rf::eu_rf_wren    = 1
rf::rf_stall = 0
rf::   rf[0] = 0
rf::   rf[1] = 1
rf::   rf[2] = 2
rf::   rf[3] = 3
rf::   rf[4] = 4
rf::   rf[5] = 5
rf::   rf[6] = 6
rf::   rf[7] = 7
rf::   rf[8] = 8
rf::   rf[9] = 9
rf::   rf[a] = a
rf::   rf[b] = b
rf::   rf[c] = c
rf::   rf[d] = d
rf::   rf[e] = e
rf::   rf[f] = f
rf::   rf[10] = 10
rf::   rf[11] = 11
rf::   rf[12] = 12
rf::   rf[13] = 13
rf::   rf[14] = 14
rf::   rf[15] = 15
rf::   rf[16] = 16
rf::   rf[17] = 17
rf::   rf[18] = 18
rf::   rf[19] = 19
rf::   rf[1a] = 1a
rf::   rf[1b] = 1b
rf::   rf[1c] = 1c
rf::   rf[1d] = 1d
rf::   rf[1e] = 1e
rf::   rf[1f] = 1f
executionUnit::****************************************
executionUnit:: rf_eu_v=1
executionUnit::enable =1
executionUnit:: instReg=14 isInstFmtLas=1 instFmt=0
executionUnit:: rf_eu_ir = 000000014
executionUnit:: las op = ELasAdd	 las op = 0
executionUnit:: src_a = 0000000be
executionUnit:: src_b = 000000014
executionUnit:: eu_rf_wr_data_las = 0
executionUnit:: eu_rf_wr_data_bit = 0
executionUnit:: id->dest = 0
executionUnit:: eu_rf_wr_data = 0000000be
executionUnit:: eu_rf_wr_addr = 00
executionUnit:: eu_rf_wren             = 1
rf::****************************************
rf::v = 1
rf::instructionReg = 15
rf::reset_ = 1
rf::rd_addr_a = 00
rf::rden_a    = 1
rf::rd_addr_b = 15
rf::rden_b    = 1
rf:0 read operation rd_addr_a = 00
rf:all read operation rd_addr_b = 15
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 0000000d2
rf::eu_rf_wren    = 1
rf::swapbit_wr_data_a = 0
rf::swapbit_wr_addr_a = 0
rf::swapbit_wr_data_b = 0
rf::swapbit_wr_addr_b = 0
rf::swapbit_wren.writ = 0
rf::eu_rf_wren 	  = 1
rf::swap_wren 		  = 0
rf::swapbit_wren 	  = 0
rf::testbit_wren 	  = 0
rf::setbit_wren 	  = 0
rf::ldimm_ab_16_wren = 0
rf::rf_mux_in_wren_a = 0
rf::rf_mux_in_wren_b = 0
rf::enable = 1
rf::operandA = 0
rf::operandB = 0
rf::im_rf_ir.read()  = 15
rf::im_rf_instructionDecoder->getInstructionReg()  = 15
rf:: isInstFormatOpLas = 1
rf:: isInstFormatOpBit = 0
rf:: isInstFormatOpLdIm= 0
rf:: isInstFormatOpBr  = 0
rf:: getLdImmOperand16Field= 15
rf:: signExtend16(im_rf_instructionDecoder->getLdImmOperand16Field ()) = 15
rf:: rf_dest_data  = 1f
rf::im_rf_ir = 15
rf::eu_rf_ir = 000000013
rf::op_imm_a = 0
rf::op_imm_b = 15
rf:: getOperandAImm8Field  = 0
rf:: getOperandBImm8Field  = 15
rf::signExtend8 (op_imm_a) = 0
rf::signExtend8 (op_imm_b) = 15
rf::signExtend16(op_imm_b) = 15
rf::rd_data_rf_a = 0
rf::rd_data_rf_b = 15
rf::rd_data_imm_a = 0
rf::rd_data_imm_b = 15
rf::rd_data_imm_mux_sel_a = 0
rf::rd_data_imm_mux_sel_b = 0
rf::rd_data_imm_mux_a = 0
rf::rd_data_imm_mux_b = 15
rf::rd_data_bypass_mux_a = d2
rf::rd_data_bypass_mux_b = 15
rf::rf_eu_wr_addr = 0
rf::enable = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_a     = 00
rf::eu_rf_wr_addr_equal_rd_addr_a = 1
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_a = 1
rf::bypass_a = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_b     = 15
rf::eu_rf_wr_addr_equal_rd_addr_b = 0
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_b = 0
rf::bypass_b = 0
rf::eu_data_a = d2
rf::rd_data_a = 0000000be
rf::rd_data_b = 000000014
rf::rf_eu_v = 1
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 0000000d2
rf::eu_rf_wren    = 1
rf::rf_stall = 0
rf::   rf[0] = 0
rf::   rf[1] = 1
rf::   rf[2] = 2
rf::   rf[3] = 3
rf::   rf[4] = 4
rf::   rf[5] = 5
rf::   rf[6] = 6
rf::   rf[7] = 7
rf::   rf[8] = 8
rf::   rf[9] = 9
rf::   rf[a] = a
rf::   rf[b] = b
rf::   rf[c] = c
rf::   rf[d] = d
rf::   rf[e] = e
rf::   rf[f] = f
rf::   rf[10] = 10
rf::   rf[11] = 11
rf::   rf[12] = 12
rf::   rf[13] = 13
rf::   rf[14] = 14
rf::   rf[15] = 15
rf::   rf[16] = 16
rf::   rf[17] = 17
rf::   rf[18] = 18
rf::   rf[19] = 19
rf::   rf[1a] = 1a
rf::   rf[1b] = 1b
rf::   rf[1c] = 1c
rf::   rf[1d] = 1d
rf::   rf[1e] = 1e
rf::   rf[1f] = 1f
   read op  buffer[36] = 16 im read operation  = 36 data = 15
 eu_branch = 0 pcx = 37 pc_inc = 37
reset_ = 1
enable = 1
eu_branch = 0
 pc_im_v   = 1
 im_rf_v   = 1
 rf_eu_v   = 1
 eu_rf_wren= 1
pc_im_address = 36
im.data = 15
npc_2 = 00014
npc_3 = 00013
npc_4 = 00000
pc_im_v = 1 im_RnW = 1 pc_im_address = 36  im_1 = 15
im_data = 15
ir_rf_3 = 000000014
ir_eu_4 = 000000013
 eu_branch.read() = 1
 pc_im_v   = 1
 im_rf_v   = 1
 rf_eu_v   = 1
 rf_rd_addr_a = 0
 rf_rd_addr_b = 15
 rf_dest_addr = 0
 rf_rd_data_a = 0000000be
 rf_rd_data_b = 000000014
 im_rf_v   = 1
 rf_eu_v = 1
 eu_rf_wren = 1
 eu_rf_wr_data  = 0000000d2
 eu_rf_wr_addr  = 00
rf::****************************************
rf::v = 1
rf::instructionReg = 16
rf::reset_ = 1
rf::rd_addr_a = 00
rf::rden_a    = 1
rf::rd_addr_b = 16
rf::rden_b    = 1
rf:0 read operation rd_addr_a = 00
rf:all read operation rd_addr_b = 16
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 0000000d2
rf::eu_rf_wren    = 1
rf::swapbit_wr_data_a = 0
rf::swapbit_wr_addr_a = 0
rf::swapbit_wr_data_b = 0
rf::swapbit_wr_addr_b = 0
rf::swapbit_wren.writ = 0
rf::eu_rf_wren 	  = 1
rf::swap_wren 		  = 0
rf::swapbit_wren 	  = 0
rf::testbit_wren 	  = 0
rf::setbit_wren 	  = 0
rf::ldimm_ab_16_wren = 0
rf::rf_mux_in_wren_a = 0
rf::rf_mux_in_wren_b = 0
rf::enable = 1
rf::operandA = 0
rf::operandB = 0
rf::im_rf_ir.read()  = 16
rf::im_rf_instructionDecoder->getInstructionReg()  = 16
rf:: isInstFormatOpLas = 1
rf:: isInstFormatOpBit = 0
rf:: isInstFormatOpLdIm= 0
rf:: isInstFormatOpBr  = 0
rf:: getLdImmOperand16Field= 16
rf:: signExtend16(im_rf_instructionDecoder->getLdImmOperand16Field ()) = 16
rf:: rf_dest_data  = 1f
rf::im_rf_ir = 16
rf::eu_rf_ir = 000000014
rf::op_imm_a = 0
rf::op_imm_b = 16
rf:: getOperandAImm8Field  = 0
rf:: getOperandBImm8Field  = 16
rf::signExtend8 (op_imm_a) = 0
rf::signExtend8 (op_imm_b) = 16
rf::signExtend16(op_imm_b) = 16
rf::rd_data_rf_a = 0
rf::rd_data_rf_b = 16
rf::rd_data_imm_a = 0
rf::rd_data_imm_b = 16
rf::rd_data_imm_mux_sel_a = 0
rf::rd_data_imm_mux_sel_b = 0
rf::rd_data_imm_mux_a = 0
rf::rd_data_imm_mux_b = 16
rf::rd_data_bypass_mux_a = d2
rf::rd_data_bypass_mux_b = 16
rf::rf_eu_wr_addr = 0
rf::enable = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_a     = 00
rf::eu_rf_wr_addr_equal_rd_addr_a = 1
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_a = 1
rf::bypass_a = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_b     = 16
rf::eu_rf_wr_addr_equal_rd_addr_b = 0
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_b = 0
rf::bypass_b = 0
rf::eu_data_a = d2
rf::rd_data_a = 0000000d2
rf::rd_data_b = 000000015
rf::rf_eu_v = 1
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 0000000d2
rf::eu_rf_wren    = 1
rf::rf_stall = 0
rf::   rf[0] = 0
rf::   rf[1] = 1
rf::   rf[2] = 2
rf::   rf[3] = 3
rf::   rf[4] = 4
rf::   rf[5] = 5
rf::   rf[6] = 6
rf::   rf[7] = 7
rf::   rf[8] = 8
rf::   rf[9] = 9
rf::   rf[a] = a
rf::   rf[b] = b
rf::   rf[c] = c
rf::   rf[d] = d
rf::   rf[e] = e
rf::   rf[f] = f
rf::   rf[10] = 10
rf::   rf[11] = 11
rf::   rf[12] = 12
rf::   rf[13] = 13
rf::   rf[14] = 14
rf::   rf[15] = 15
rf::   rf[16] = 16
rf::   rf[17] = 17
rf::   rf[18] = 18
rf::   rf[19] = 19
rf::   rf[1a] = 1a
rf::   rf[1b] = 1b
rf::   rf[1c] = 1c
rf::   rf[1d] = 1d
rf::   rf[1e] = 1e
rf::   rf[1f] = 1f
executionUnit::****************************************
executionUnit:: rf_eu_v=1
executionUnit::enable =1
executionUnit:: instReg=15 isInstFmtLas=1 instFmt=0
executionUnit:: rf_eu_ir = 000000015
executionUnit:: las op = ELasAdd	 las op = 0
executionUnit:: src_a = 0000000d2
executionUnit:: src_b = 000000015
executionUnit:: eu_rf_wr_data_las = 0
executionUnit:: eu_rf_wr_data_bit = 0
executionUnit:: id->dest = 0
executionUnit:: eu_rf_wr_data = 0000000d2
executionUnit:: eu_rf_wr_addr = 00
executionUnit:: eu_rf_wren             = 1
rf::****************************************
rf::v = 1
rf::instructionReg = 16
rf::reset_ = 1
rf::rd_addr_a = 00
rf::rden_a    = 1
rf::rd_addr_b = 16
rf::rden_b    = 1
rf:0 read operation rd_addr_a = 00
rf:all read operation rd_addr_b = 16
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 0000000e7
rf::eu_rf_wren    = 1
rf::swapbit_wr_data_a = 0
rf::swapbit_wr_addr_a = 0
rf::swapbit_wr_data_b = 0
rf::swapbit_wr_addr_b = 0
rf::swapbit_wren.writ = 0
rf::eu_rf_wren 	  = 1
rf::swap_wren 		  = 0
rf::swapbit_wren 	  = 0
rf::testbit_wren 	  = 0
rf::setbit_wren 	  = 0
rf::ldimm_ab_16_wren = 0
rf::rf_mux_in_wren_a = 0
rf::rf_mux_in_wren_b = 0
rf::enable = 1
rf::operandA = 0
rf::operandB = 0
rf::im_rf_ir.read()  = 16
rf::im_rf_instructionDecoder->getInstructionReg()  = 16
rf:: isInstFormatOpLas = 1
rf:: isInstFormatOpBit = 0
rf:: isInstFormatOpLdIm= 0
rf:: isInstFormatOpBr  = 0
rf:: getLdImmOperand16Field= 16
rf:: signExtend16(im_rf_instructionDecoder->getLdImmOperand16Field ()) = 16
rf:: rf_dest_data  = 1f
rf::im_rf_ir = 16
rf::eu_rf_ir = 000000014
rf::op_imm_a = 0
rf::op_imm_b = 16
rf:: getOperandAImm8Field  = 0
rf:: getOperandBImm8Field  = 16
rf::signExtend8 (op_imm_a) = 0
rf::signExtend8 (op_imm_b) = 16
rf::signExtend16(op_imm_b) = 16
rf::rd_data_rf_a = 0
rf::rd_data_rf_b = 16
rf::rd_data_imm_a = 0
rf::rd_data_imm_b = 16
rf::rd_data_imm_mux_sel_a = 0
rf::rd_data_imm_mux_sel_b = 0
rf::rd_data_imm_mux_a = 0
rf::rd_data_imm_mux_b = 16
rf::rd_data_bypass_mux_a = e7
rf::rd_data_bypass_mux_b = 16
rf::rf_eu_wr_addr = 0
rf::enable = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_a     = 00
rf::eu_rf_wr_addr_equal_rd_addr_a = 1
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_a = 1
rf::bypass_a = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_b     = 16
rf::eu_rf_wr_addr_equal_rd_addr_b = 0
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_b = 0
rf::bypass_b = 0
rf::eu_data_a = e7
rf::rd_data_a = 0000000d2
rf::rd_data_b = 000000015
rf::rf_eu_v = 1
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 0000000e7
rf::eu_rf_wren    = 1
rf::rf_stall = 0
rf::   rf[0] = 0
rf::   rf[1] = 1
rf::   rf[2] = 2
rf::   rf[3] = 3
rf::   rf[4] = 4
rf::   rf[5] = 5
rf::   rf[6] = 6
rf::   rf[7] = 7
rf::   rf[8] = 8
rf::   rf[9] = 9
rf::   rf[a] = a
rf::   rf[b] = b
rf::   rf[c] = c
rf::   rf[d] = d
rf::   rf[e] = e
rf::   rf[f] = f
rf::   rf[10] = 10
rf::   rf[11] = 11
rf::   rf[12] = 12
rf::   rf[13] = 13
rf::   rf[14] = 14
rf::   rf[15] = 15
rf::   rf[16] = 16
rf::   rf[17] = 17
rf::   rf[18] = 18
rf::   rf[19] = 19
rf::   rf[1a] = 1a
rf::   rf[1b] = 1b
rf::   rf[1c] = 1c
rf::   rf[1d] = 1d
rf::   rf[1e] = 1e
rf::   rf[1f] = 1f
   read op  buffer[37] = 17 im read operation  = 37 data = 16
 eu_branch = 0 pcx = 38 pc_inc = 38
reset_ = 1
enable = 1
eu_branch = 0
 pc_im_v   = 1
 im_rf_v   = 1
 rf_eu_v   = 1
 eu_rf_wren= 1
pc_im_address = 37
im.data = 16
npc_2 = 00015
npc_3 = 00014
npc_4 = 00000
pc_im_v = 1 im_RnW = 1 pc_im_address = 37  im_1 = 16
im_data = 16
ir_rf_3 = 000000015
ir_eu_4 = 000000014
 eu_branch.read() = 1
 pc_im_v   = 1
 im_rf_v   = 1
 rf_eu_v   = 1
 rf_rd_addr_a = 0
 rf_rd_addr_b = 16
 rf_dest_addr = 0
 rf_rd_data_a = 0000000d2
 rf_rd_data_b = 000000015
 im_rf_v   = 1
 rf_eu_v = 1
 eu_rf_wren = 1
 eu_rf_wr_data  = 0000000e7
 eu_rf_wr_addr  = 00
rf::****************************************
rf::v = 1
rf::instructionReg = 17
rf::reset_ = 1
rf::rd_addr_a = 00
rf::rden_a    = 1
rf::rd_addr_b = 17
rf::rden_b    = 1
rf:0 read operation rd_addr_a = 00
rf:all read operation rd_addr_b = 17
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 0000000e7
rf::eu_rf_wren    = 1
rf::swapbit_wr_data_a = 0
rf::swapbit_wr_addr_a = 0
rf::swapbit_wr_data_b = 0
rf::swapbit_wr_addr_b = 0
rf::swapbit_wren.writ = 0
rf::eu_rf_wren 	  = 1
rf::swap_wren 		  = 0
rf::swapbit_wren 	  = 0
rf::testbit_wren 	  = 0
rf::setbit_wren 	  = 0
rf::ldimm_ab_16_wren = 0
rf::rf_mux_in_wren_a = 0
rf::rf_mux_in_wren_b = 0
rf::enable = 1
rf::operandA = 0
rf::operandB = 0
rf::im_rf_ir.read()  = 17
rf::im_rf_instructionDecoder->getInstructionReg()  = 17
rf:: isInstFormatOpLas = 1
rf:: isInstFormatOpBit = 0
rf:: isInstFormatOpLdIm= 0
rf:: isInstFormatOpBr  = 0
rf:: getLdImmOperand16Field= 17
rf:: signExtend16(im_rf_instructionDecoder->getLdImmOperand16Field ()) = 17
rf:: rf_dest_data  = 1f
rf::im_rf_ir = 17
rf::eu_rf_ir = 000000015
rf::op_imm_a = 0
rf::op_imm_b = 17
rf:: getOperandAImm8Field  = 0
rf:: getOperandBImm8Field  = 17
rf::signExtend8 (op_imm_a) = 0
rf::signExtend8 (op_imm_b) = 17
rf::signExtend16(op_imm_b) = 17
rf::rd_data_rf_a = 0
rf::rd_data_rf_b = 17
rf::rd_data_imm_a = 0
rf::rd_data_imm_b = 17
rf::rd_data_imm_mux_sel_a = 0
rf::rd_data_imm_mux_sel_b = 0
rf::rd_data_imm_mux_a = 0
rf::rd_data_imm_mux_b = 17
rf::rd_data_bypass_mux_a = e7
rf::rd_data_bypass_mux_b = 17
rf::rf_eu_wr_addr = 0
rf::enable = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_a     = 00
rf::eu_rf_wr_addr_equal_rd_addr_a = 1
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_a = 1
rf::bypass_a = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_b     = 17
rf::eu_rf_wr_addr_equal_rd_addr_b = 0
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_b = 0
rf::bypass_b = 0
rf::eu_data_a = e7
rf::rd_data_a = 0000000e7
rf::rd_data_b = 000000016
rf::rf_eu_v = 1
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 0000000e7
rf::eu_rf_wren    = 1
rf::rf_stall = 0
rf::   rf[0] = 0
rf::   rf[1] = 1
rf::   rf[2] = 2
rf::   rf[3] = 3
rf::   rf[4] = 4
rf::   rf[5] = 5
rf::   rf[6] = 6
rf::   rf[7] = 7
rf::   rf[8] = 8
rf::   rf[9] = 9
rf::   rf[a] = a
rf::   rf[b] = b
rf::   rf[c] = c
rf::   rf[d] = d
rf::   rf[e] = e
rf::   rf[f] = f
rf::   rf[10] = 10
rf::   rf[11] = 11
rf::   rf[12] = 12
rf::   rf[13] = 13
rf::   rf[14] = 14
rf::   rf[15] = 15
rf::   rf[16] = 16
rf::   rf[17] = 17
rf::   rf[18] = 18
rf::   rf[19] = 19
rf::   rf[1a] = 1a
rf::   rf[1b] = 1b
rf::   rf[1c] = 1c
rf::   rf[1d] = 1d
rf::   rf[1e] = 1e
rf::   rf[1f] = 1f
executionUnit::****************************************
executionUnit:: rf_eu_v=1
executionUnit::enable =1
executionUnit:: instReg=16 isInstFmtLas=1 instFmt=0
executionUnit:: rf_eu_ir = 000000016
executionUnit:: las op = ELasAdd	 las op = 0
executionUnit:: src_a = 0000000e7
executionUnit:: src_b = 000000016
executionUnit:: eu_rf_wr_data_las = 0
executionUnit:: eu_rf_wr_data_bit = 0
executionUnit:: id->dest = 0
executionUnit:: eu_rf_wr_data = 0000000e7
executionUnit:: eu_rf_wr_addr = 00
executionUnit:: eu_rf_wren             = 1
rf::****************************************
rf::v = 1
rf::instructionReg = 17
rf::reset_ = 1
rf::rd_addr_a = 00
rf::rden_a    = 1
rf::rd_addr_b = 17
rf::rden_b    = 1
rf:0 read operation rd_addr_a = 00
rf:all read operation rd_addr_b = 17
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 0000000fd
rf::eu_rf_wren    = 1
rf::swapbit_wr_data_a = 0
rf::swapbit_wr_addr_a = 0
rf::swapbit_wr_data_b = 0
rf::swapbit_wr_addr_b = 0
rf::swapbit_wren.writ = 0
rf::eu_rf_wren 	  = 1
rf::swap_wren 		  = 0
rf::swapbit_wren 	  = 0
rf::testbit_wren 	  = 0
rf::setbit_wren 	  = 0
rf::ldimm_ab_16_wren = 0
rf::rf_mux_in_wren_a = 0
rf::rf_mux_in_wren_b = 0
rf::enable = 1
rf::operandA = 0
rf::operandB = 0
rf::im_rf_ir.read()  = 17
rf::im_rf_instructionDecoder->getInstructionReg()  = 17
rf:: isInstFormatOpLas = 1
rf:: isInstFormatOpBit = 0
rf:: isInstFormatOpLdIm= 0
rf:: isInstFormatOpBr  = 0
rf:: getLdImmOperand16Field= 17
rf:: signExtend16(im_rf_instructionDecoder->getLdImmOperand16Field ()) = 17
rf:: rf_dest_data  = 1f
rf::im_rf_ir = 17
rf::eu_rf_ir = 000000015
rf::op_imm_a = 0
rf::op_imm_b = 17
rf:: getOperandAImm8Field  = 0
rf:: getOperandBImm8Field  = 17
rf::signExtend8 (op_imm_a) = 0
rf::signExtend8 (op_imm_b) = 17
rf::signExtend16(op_imm_b) = 17
rf::rd_data_rf_a = 0
rf::rd_data_rf_b = 17
rf::rd_data_imm_a = 0
rf::rd_data_imm_b = 17
rf::rd_data_imm_mux_sel_a = 0
rf::rd_data_imm_mux_sel_b = 0
rf::rd_data_imm_mux_a = 0
rf::rd_data_imm_mux_b = 17
rf::rd_data_bypass_mux_a = fd
rf::rd_data_bypass_mux_b = 17
rf::rf_eu_wr_addr = 0
rf::enable = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_a     = 00
rf::eu_rf_wr_addr_equal_rd_addr_a = 1
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_a = 1
rf::bypass_a = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_b     = 17
rf::eu_rf_wr_addr_equal_rd_addr_b = 0
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_b = 0
rf::bypass_b = 0
rf::eu_data_a = fd
rf::rd_data_a = 0000000e7
rf::rd_data_b = 000000016
rf::rf_eu_v = 1
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 0000000fd
rf::eu_rf_wren    = 1
rf::rf_stall = 0
rf::   rf[0] = 0
rf::   rf[1] = 1
rf::   rf[2] = 2
rf::   rf[3] = 3
rf::   rf[4] = 4
rf::   rf[5] = 5
rf::   rf[6] = 6
rf::   rf[7] = 7
rf::   rf[8] = 8
rf::   rf[9] = 9
rf::   rf[a] = a
rf::   rf[b] = b
rf::   rf[c] = c
rf::   rf[d] = d
rf::   rf[e] = e
rf::   rf[f] = f
rf::   rf[10] = 10
rf::   rf[11] = 11
rf::   rf[12] = 12
rf::   rf[13] = 13
rf::   rf[14] = 14
rf::   rf[15] = 15
rf::   rf[16] = 16
rf::   rf[17] = 17
rf::   rf[18] = 18
rf::   rf[19] = 19
rf::   rf[1a] = 1a
rf::   rf[1b] = 1b
rf::   rf[1c] = 1c
rf::   rf[1d] = 1d
rf::   rf[1e] = 1e
rf::   rf[1f] = 1f
   read op  buffer[38] = 18 im read operation  = 38 data = 17
 eu_branch = 0 pcx = 39 pc_inc = 39
reset_ = 1
enable = 1
eu_branch = 0
 pc_im_v   = 1
 im_rf_v   = 1
 rf_eu_v   = 1
 eu_rf_wren= 1
pc_im_address = 38
im.data = 17
npc_2 = 00016
npc_3 = 00015
npc_4 = 00000
pc_im_v = 1 im_RnW = 1 pc_im_address = 38  im_1 = 17
im_data = 17
ir_rf_3 = 000000016
ir_eu_4 = 000000015
 eu_branch.read() = 1
 pc_im_v   = 1
 im_rf_v   = 1
 rf_eu_v   = 1
 rf_rd_addr_a = 0
 rf_rd_addr_b = 17
 rf_dest_addr = 0
 rf_rd_data_a = 0000000e7
 rf_rd_data_b = 000000016
 im_rf_v   = 1
 rf_eu_v = 1
 eu_rf_wren = 1
 eu_rf_wr_data  = 0000000fd
 eu_rf_wr_addr  = 00
rf::****************************************
rf::v = 1
rf::instructionReg = 18
rf::reset_ = 1
rf::rd_addr_a = 00
rf::rden_a    = 1
rf::rd_addr_b = 18
rf::rden_b    = 1
rf:0 read operation rd_addr_a = 00
rf:all read operation rd_addr_b = 18
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 0000000fd
rf::eu_rf_wren    = 1
rf::swapbit_wr_data_a = 0
rf::swapbit_wr_addr_a = 0
rf::swapbit_wr_data_b = 0
rf::swapbit_wr_addr_b = 0
rf::swapbit_wren.writ = 0
rf::eu_rf_wren 	  = 1
rf::swap_wren 		  = 0
rf::swapbit_wren 	  = 0
rf::testbit_wren 	  = 0
rf::setbit_wren 	  = 0
rf::ldimm_ab_16_wren = 0
rf::rf_mux_in_wren_a = 0
rf::rf_mux_in_wren_b = 0
rf::enable = 1
rf::operandA = 0
rf::operandB = 0
rf::im_rf_ir.read()  = 18
rf::im_rf_instructionDecoder->getInstructionReg()  = 18
rf:: isInstFormatOpLas = 1
rf:: isInstFormatOpBit = 0
rf:: isInstFormatOpLdIm= 0
rf:: isInstFormatOpBr  = 0
rf:: getLdImmOperand16Field= 18
rf:: signExtend16(im_rf_instructionDecoder->getLdImmOperand16Field ()) = 18
rf:: rf_dest_data  = 1f
rf::im_rf_ir = 18
rf::eu_rf_ir = 000000016
rf::op_imm_a = 0
rf::op_imm_b = 18
rf:: getOperandAImm8Field  = 0
rf:: getOperandBImm8Field  = 18
rf::signExtend8 (op_imm_a) = 0
rf::signExtend8 (op_imm_b) = 18
rf::signExtend16(op_imm_b) = 18
rf::rd_data_rf_a = 0
rf::rd_data_rf_b = 18
rf::rd_data_imm_a = 0
rf::rd_data_imm_b = 18
rf::rd_data_imm_mux_sel_a = 0
rf::rd_data_imm_mux_sel_b = 0
rf::rd_data_imm_mux_a = 0
rf::rd_data_imm_mux_b = 18
rf::rd_data_bypass_mux_a = fd
rf::rd_data_bypass_mux_b = 18
rf::rf_eu_wr_addr = 0
rf::enable = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_a     = 00
rf::eu_rf_wr_addr_equal_rd_addr_a = 1
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_a = 1
rf::bypass_a = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_b     = 18
rf::eu_rf_wr_addr_equal_rd_addr_b = 0
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_b = 0
rf::bypass_b = 0
rf::eu_data_a = fd
rf::rd_data_a = 0000000fd
rf::rd_data_b = 000000017
rf::rf_eu_v = 1
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 0000000fd
rf::eu_rf_wren    = 1
rf::rf_stall = 0
rf::   rf[0] = 0
rf::   rf[1] = 1
rf::   rf[2] = 2
rf::   rf[3] = 3
rf::   rf[4] = 4
rf::   rf[5] = 5
rf::   rf[6] = 6
rf::   rf[7] = 7
rf::   rf[8] = 8
rf::   rf[9] = 9
rf::   rf[a] = a
rf::   rf[b] = b
rf::   rf[c] = c
rf::   rf[d] = d
rf::   rf[e] = e
rf::   rf[f] = f
rf::   rf[10] = 10
rf::   rf[11] = 11
rf::   rf[12] = 12
rf::   rf[13] = 13
rf::   rf[14] = 14
rf::   rf[15] = 15
rf::   rf[16] = 16
rf::   rf[17] = 17
rf::   rf[18] = 18
rf::   rf[19] = 19
rf::   rf[1a] = 1a
rf::   rf[1b] = 1b
rf::   rf[1c] = 1c
rf::   rf[1d] = 1d
rf::   rf[1e] = 1e
rf::   rf[1f] = 1f
executionUnit::****************************************
executionUnit:: rf_eu_v=1
executionUnit::enable =1
executionUnit:: instReg=17 isInstFmtLas=1 instFmt=0
executionUnit:: rf_eu_ir = 000000017
executionUnit:: las op = ELasAdd	 las op = 0
executionUnit:: src_a = 0000000fd
executionUnit:: src_b = 000000017
executionUnit:: eu_rf_wr_data_las = 0
executionUnit:: eu_rf_wr_data_bit = 0
executionUnit:: id->dest = 0
executionUnit:: eu_rf_wr_data = 0000000fd
executionUnit:: eu_rf_wr_addr = 00
executionUnit:: eu_rf_wren             = 1
rf::****************************************
rf::v = 1
rf::instructionReg = 18
rf::reset_ = 1
rf::rd_addr_a = 00
rf::rden_a    = 1
rf::rd_addr_b = 18
rf::rden_b    = 1
rf:0 read operation rd_addr_a = 00
rf:all read operation rd_addr_b = 18
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 000000114
rf::eu_rf_wren    = 1
rf::swapbit_wr_data_a = 0
rf::swapbit_wr_addr_a = 0
rf::swapbit_wr_data_b = 0
rf::swapbit_wr_addr_b = 0
rf::swapbit_wren.writ = 0
rf::eu_rf_wren 	  = 1
rf::swap_wren 		  = 0
rf::swapbit_wren 	  = 0
rf::testbit_wren 	  = 0
rf::setbit_wren 	  = 0
rf::ldimm_ab_16_wren = 0
rf::rf_mux_in_wren_a = 0
rf::rf_mux_in_wren_b = 0
rf::enable = 1
rf::operandA = 0
rf::operandB = 0
rf::im_rf_ir.read()  = 18
rf::im_rf_instructionDecoder->getInstructionReg()  = 18
rf:: isInstFormatOpLas = 1
rf:: isInstFormatOpBit = 0
rf:: isInstFormatOpLdIm= 0
rf:: isInstFormatOpBr  = 0
rf:: getLdImmOperand16Field= 18
rf:: signExtend16(im_rf_instructionDecoder->getLdImmOperand16Field ()) = 18
rf:: rf_dest_data  = 1f
rf::im_rf_ir = 18
rf::eu_rf_ir = 000000016
rf::op_imm_a = 0
rf::op_imm_b = 18
rf:: getOperandAImm8Field  = 0
rf:: getOperandBImm8Field  = 18
rf::signExtend8 (op_imm_a) = 0
rf::signExtend8 (op_imm_b) = 18
rf::signExtend16(op_imm_b) = 18
rf::rd_data_rf_a = 0
rf::rd_data_rf_b = 18
rf::rd_data_imm_a = 0
rf::rd_data_imm_b = 18
rf::rd_data_imm_mux_sel_a = 0
rf::rd_data_imm_mux_sel_b = 0
rf::rd_data_imm_mux_a = 0
rf::rd_data_imm_mux_b = 18
rf::rd_data_bypass_mux_a = 114
rf::rd_data_bypass_mux_b = 18
rf::rf_eu_wr_addr = 0
rf::enable = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_a     = 00
rf::eu_rf_wr_addr_equal_rd_addr_a = 1
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_a = 1
rf::bypass_a = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_b     = 18
rf::eu_rf_wr_addr_equal_rd_addr_b = 0
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_b = 0
rf::bypass_b = 0
rf::eu_data_a = 114
rf::rd_data_a = 0000000fd
rf::rd_data_b = 000000017
rf::rf_eu_v = 1
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 000000114
rf::eu_rf_wren    = 1
rf::rf_stall = 0
rf::   rf[0] = 0
rf::   rf[1] = 1
rf::   rf[2] = 2
rf::   rf[3] = 3
rf::   rf[4] = 4
rf::   rf[5] = 5
rf::   rf[6] = 6
rf::   rf[7] = 7
rf::   rf[8] = 8
rf::   rf[9] = 9
rf::   rf[a] = a
rf::   rf[b] = b
rf::   rf[c] = c
rf::   rf[d] = d
rf::   rf[e] = e
rf::   rf[f] = f
rf::   rf[10] = 10
rf::   rf[11] = 11
rf::   rf[12] = 12
rf::   rf[13] = 13
rf::   rf[14] = 14
rf::   rf[15] = 15
rf::   rf[16] = 16
rf::   rf[17] = 17
rf::   rf[18] = 18
rf::   rf[19] = 19
rf::   rf[1a] = 1a
rf::   rf[1b] = 1b
rf::   rf[1c] = 1c
rf::   rf[1d] = 1d
rf::   rf[1e] = 1e
rf::   rf[1f] = 1f
   read op  buffer[39] = 19 im read operation  = 39 data = 18
 eu_branch = 0 pcx = 3a pc_inc = 3a
reset_ = 1
enable = 1
eu_branch = 0
 pc_im_v   = 1
 im_rf_v   = 1
 rf_eu_v   = 1
 eu_rf_wren= 1
pc_im_address = 39
im.data = 18
npc_2 = 00017
npc_3 = 00016
npc_4 = 00000
pc_im_v = 1 im_RnW = 1 pc_im_address = 39  im_1 = 18
im_data = 18
ir_rf_3 = 000000017
ir_eu_4 = 000000016
 eu_branch.read() = 1
 pc_im_v   = 1
 im_rf_v   = 1
 rf_eu_v   = 1
 rf_rd_addr_a = 0
 rf_rd_addr_b = 18
 rf_dest_addr = 0
 rf_rd_data_a = 0000000fd
 rf_rd_data_b = 000000017
 im_rf_v   = 1
 rf_eu_v = 1
 eu_rf_wren = 1
 eu_rf_wr_data  = 000000114
 eu_rf_wr_addr  = 00
rf::****************************************
rf::v = 1
rf::instructionReg = 19
rf::reset_ = 1
rf::rd_addr_a = 00
rf::rden_a    = 1
rf::rd_addr_b = 19
rf::rden_b    = 1
rf:0 read operation rd_addr_a = 00
rf:all read operation rd_addr_b = 19
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 000000114
rf::eu_rf_wren    = 1
rf::swapbit_wr_data_a = 0
rf::swapbit_wr_addr_a = 0
rf::swapbit_wr_data_b = 0
rf::swapbit_wr_addr_b = 0
rf::swapbit_wren.writ = 0
rf::eu_rf_wren 	  = 1
rf::swap_wren 		  = 0
rf::swapbit_wren 	  = 0
rf::testbit_wren 	  = 0
rf::setbit_wren 	  = 0
rf::ldimm_ab_16_wren = 0
rf::rf_mux_in_wren_a = 0
rf::rf_mux_in_wren_b = 0
rf::enable = 1
rf::operandA = 0
rf::operandB = 0
rf::im_rf_ir.read()  = 19
rf::im_rf_instructionDecoder->getInstructionReg()  = 19
rf:: isInstFormatOpLas = 1
rf:: isInstFormatOpBit = 0
rf:: isInstFormatOpLdIm= 0
rf:: isInstFormatOpBr  = 0
rf:: getLdImmOperand16Field= 19
rf:: signExtend16(im_rf_instructionDecoder->getLdImmOperand16Field ()) = 19
rf:: rf_dest_data  = 1f
rf::im_rf_ir = 19
rf::eu_rf_ir = 000000017
rf::op_imm_a = 0
rf::op_imm_b = 19
rf:: getOperandAImm8Field  = 0
rf:: getOperandBImm8Field  = 19
rf::signExtend8 (op_imm_a) = 0
rf::signExtend8 (op_imm_b) = 19
rf::signExtend16(op_imm_b) = 19
rf::rd_data_rf_a = 0
rf::rd_data_rf_b = 19
rf::rd_data_imm_a = 0
rf::rd_data_imm_b = 19
rf::rd_data_imm_mux_sel_a = 0
rf::rd_data_imm_mux_sel_b = 0
rf::rd_data_imm_mux_a = 0
rf::rd_data_imm_mux_b = 19
rf::rd_data_bypass_mux_a = 114
rf::rd_data_bypass_mux_b = 19
rf::rf_eu_wr_addr = 0
rf::enable = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_a     = 00
rf::eu_rf_wr_addr_equal_rd_addr_a = 1
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_a = 1
rf::bypass_a = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_b     = 19
rf::eu_rf_wr_addr_equal_rd_addr_b = 0
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_b = 0
rf::bypass_b = 0
rf::eu_data_a = 114
rf::rd_data_a = 000000114
rf::rd_data_b = 000000018
rf::rf_eu_v = 1
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 000000114
rf::eu_rf_wren    = 1
rf::rf_stall = 0
rf::   rf[0] = 0
rf::   rf[1] = 1
rf::   rf[2] = 2
rf::   rf[3] = 3
rf::   rf[4] = 4
rf::   rf[5] = 5
rf::   rf[6] = 6
rf::   rf[7] = 7
rf::   rf[8] = 8
rf::   rf[9] = 9
rf::   rf[a] = a
rf::   rf[b] = b
rf::   rf[c] = c
rf::   rf[d] = d
rf::   rf[e] = e
rf::   rf[f] = f
rf::   rf[10] = 10
rf::   rf[11] = 11
rf::   rf[12] = 12
rf::   rf[13] = 13
rf::   rf[14] = 14
rf::   rf[15] = 15
rf::   rf[16] = 16
rf::   rf[17] = 17
rf::   rf[18] = 18
rf::   rf[19] = 19
rf::   rf[1a] = 1a
rf::   rf[1b] = 1b
rf::   rf[1c] = 1c
rf::   rf[1d] = 1d
rf::   rf[1e] = 1e
rf::   rf[1f] = 1f
executionUnit::****************************************
executionUnit:: rf_eu_v=1
executionUnit::enable =1
executionUnit:: instReg=18 isInstFmtLas=1 instFmt=0
executionUnit:: rf_eu_ir = 000000018
executionUnit:: las op = ELasAdd	 las op = 0
executionUnit:: src_a = 000000114
executionUnit:: src_b = 000000018
executionUnit:: eu_rf_wr_data_las = 0
executionUnit:: eu_rf_wr_data_bit = 0
executionUnit:: id->dest = 0
executionUnit:: eu_rf_wr_data = 000000114
executionUnit:: eu_rf_wr_addr = 00
executionUnit:: eu_rf_wren             = 1
rf::****************************************
rf::v = 1
rf::instructionReg = 19
rf::reset_ = 1
rf::rd_addr_a = 00
rf::rden_a    = 1
rf::rd_addr_b = 19
rf::rden_b    = 1
rf:0 read operation rd_addr_a = 00
rf:all read operation rd_addr_b = 19
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 00000012c
rf::eu_rf_wren    = 1
rf::swapbit_wr_data_a = 0
rf::swapbit_wr_addr_a = 0
rf::swapbit_wr_data_b = 0
rf::swapbit_wr_addr_b = 0
rf::swapbit_wren.writ = 0
rf::eu_rf_wren 	  = 1
rf::swap_wren 		  = 0
rf::swapbit_wren 	  = 0
rf::testbit_wren 	  = 0
rf::setbit_wren 	  = 0
rf::ldimm_ab_16_wren = 0
rf::rf_mux_in_wren_a = 0
rf::rf_mux_in_wren_b = 0
rf::enable = 1
rf::operandA = 0
rf::operandB = 0
rf::im_rf_ir.read()  = 19
rf::im_rf_instructionDecoder->getInstructionReg()  = 19
rf:: isInstFormatOpLas = 1
rf:: isInstFormatOpBit = 0
rf:: isInstFormatOpLdIm= 0
rf:: isInstFormatOpBr  = 0
rf:: getLdImmOperand16Field= 19
rf:: signExtend16(im_rf_instructionDecoder->getLdImmOperand16Field ()) = 19
rf:: rf_dest_data  = 1f
rf::im_rf_ir = 19
rf::eu_rf_ir = 000000017
rf::op_imm_a = 0
rf::op_imm_b = 19
rf:: getOperandAImm8Field  = 0
rf:: getOperandBImm8Field  = 19
rf::signExtend8 (op_imm_a) = 0
rf::signExtend8 (op_imm_b) = 19
rf::signExtend16(op_imm_b) = 19
rf::rd_data_rf_a = 0
rf::rd_data_rf_b = 19
rf::rd_data_imm_a = 0
rf::rd_data_imm_b = 19
rf::rd_data_imm_mux_sel_a = 0
rf::rd_data_imm_mux_sel_b = 0
rf::rd_data_imm_mux_a = 0
rf::rd_data_imm_mux_b = 19
rf::rd_data_bypass_mux_a = 12c
rf::rd_data_bypass_mux_b = 19
rf::rf_eu_wr_addr = 0
rf::enable = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_a     = 00
rf::eu_rf_wr_addr_equal_rd_addr_a = 1
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_a = 1
rf::bypass_a = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_b     = 19
rf::eu_rf_wr_addr_equal_rd_addr_b = 0
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_b = 0
rf::bypass_b = 0
rf::eu_data_a = 12c
rf::rd_data_a = 000000114
rf::rd_data_b = 000000018
rf::rf_eu_v = 1
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 00000012c
rf::eu_rf_wren    = 1
rf::rf_stall = 0
rf::   rf[0] = 0
rf::   rf[1] = 1
rf::   rf[2] = 2
rf::   rf[3] = 3
rf::   rf[4] = 4
rf::   rf[5] = 5
rf::   rf[6] = 6
rf::   rf[7] = 7
rf::   rf[8] = 8
rf::   rf[9] = 9
rf::   rf[a] = a
rf::   rf[b] = b
rf::   rf[c] = c
rf::   rf[d] = d
rf::   rf[e] = e
rf::   rf[f] = f
rf::   rf[10] = 10
rf::   rf[11] = 11
rf::   rf[12] = 12
rf::   rf[13] = 13
rf::   rf[14] = 14
rf::   rf[15] = 15
rf::   rf[16] = 16
rf::   rf[17] = 17
rf::   rf[18] = 18
rf::   rf[19] = 19
rf::   rf[1a] = 1a
rf::   rf[1b] = 1b
rf::   rf[1c] = 1c
rf::   rf[1d] = 1d
rf::   rf[1e] = 1e
rf::   rf[1f] = 1f
   read op  buffer[3a] = 1a im read operation  = 3a data = 19
 eu_branch = 0 pcx = 3b pc_inc = 3b
reset_ = 1
enable = 1
eu_branch = 0
 pc_im_v   = 1
 im_rf_v   = 1
 rf_eu_v   = 1
 eu_rf_wren= 1
pc_im_address = 3a
im.data = 19
npc_2 = 00018
npc_3 = 00017
npc_4 = 00000
pc_im_v = 1 im_RnW = 1 pc_im_address = 3a  im_1 = 19
im_data = 19
ir_rf_3 = 000000018
ir_eu_4 = 000000017
 eu_branch.read() = 1
 pc_im_v   = 1
 im_rf_v   = 1
 rf_eu_v   = 1
 rf_rd_addr_a = 0
 rf_rd_addr_b = 19
 rf_dest_addr = 0
 rf_rd_data_a = 000000114
 rf_rd_data_b = 000000018
 im_rf_v   = 1
 rf_eu_v = 1
 eu_rf_wren = 1
 eu_rf_wr_data  = 00000012c
 eu_rf_wr_addr  = 00
rf::****************************************
rf::v = 1
rf::instructionReg = 1a
rf::reset_ = 1
rf::rd_addr_a = 00
rf::rden_a    = 1
rf::rd_addr_b = 1a
rf::rden_b    = 1
rf:0 read operation rd_addr_a = 00
rf:all read operation rd_addr_b = 1a
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 00000012c
rf::eu_rf_wren    = 1
rf::swapbit_wr_data_a = 0
rf::swapbit_wr_addr_a = 0
rf::swapbit_wr_data_b = 0
rf::swapbit_wr_addr_b = 0
rf::swapbit_wren.writ = 0
rf::eu_rf_wren 	  = 1
rf::swap_wren 		  = 0
rf::swapbit_wren 	  = 0
rf::testbit_wren 	  = 0
rf::setbit_wren 	  = 0
rf::ldimm_ab_16_wren = 0
rf::rf_mux_in_wren_a = 0
rf::rf_mux_in_wren_b = 0
rf::enable = 1
rf::operandA = 0
rf::operandB = 0
rf::im_rf_ir.read()  = 1a
rf::im_rf_instructionDecoder->getInstructionReg()  = 1a
rf:: isInstFormatOpLas = 1
rf:: isInstFormatOpBit = 0
rf:: isInstFormatOpLdIm= 0
rf:: isInstFormatOpBr  = 0
rf:: getLdImmOperand16Field= 1a
rf:: signExtend16(im_rf_instructionDecoder->getLdImmOperand16Field ()) = 1a
rf:: rf_dest_data  = 1f
rf::im_rf_ir = 1a
rf::eu_rf_ir = 000000018
rf::op_imm_a = 0
rf::op_imm_b = 1a
rf:: getOperandAImm8Field  = 0
rf:: getOperandBImm8Field  = 1a
rf::signExtend8 (op_imm_a) = 0
rf::signExtend8 (op_imm_b) = 1a
rf::signExtend16(op_imm_b) = 1a
rf::rd_data_rf_a = 0
rf::rd_data_rf_b = 1a
rf::rd_data_imm_a = 0
rf::rd_data_imm_b = 1a
rf::rd_data_imm_mux_sel_a = 0
rf::rd_data_imm_mux_sel_b = 0
rf::rd_data_imm_mux_a = 0
rf::rd_data_imm_mux_b = 1a
rf::rd_data_bypass_mux_a = 12c
rf::rd_data_bypass_mux_b = 1a
rf::rf_eu_wr_addr = 0
rf::enable = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_a     = 00
rf::eu_rf_wr_addr_equal_rd_addr_a = 1
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_a = 1
rf::bypass_a = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_b     = 1a
rf::eu_rf_wr_addr_equal_rd_addr_b = 0
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_b = 0
rf::bypass_b = 0
rf::eu_data_a = 12c
rf::rd_data_a = 00000012c
rf::rd_data_b = 000000019
rf::rf_eu_v = 1
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 00000012c
rf::eu_rf_wren    = 1
rf::rf_stall = 0
rf::   rf[0] = 0
rf::   rf[1] = 1
rf::   rf[2] = 2
rf::   rf[3] = 3
rf::   rf[4] = 4
rf::   rf[5] = 5
rf::   rf[6] = 6
rf::   rf[7] = 7
rf::   rf[8] = 8
rf::   rf[9] = 9
rf::   rf[a] = a
rf::   rf[b] = b
rf::   rf[c] = c
rf::   rf[d] = d
rf::   rf[e] = e
rf::   rf[f] = f
rf::   rf[10] = 10
rf::   rf[11] = 11
rf::   rf[12] = 12
rf::   rf[13] = 13
rf::   rf[14] = 14
rf::   rf[15] = 15
rf::   rf[16] = 16
rf::   rf[17] = 17
rf::   rf[18] = 18
rf::   rf[19] = 19
rf::   rf[1a] = 1a
rf::   rf[1b] = 1b
rf::   rf[1c] = 1c
rf::   rf[1d] = 1d
rf::   rf[1e] = 1e
rf::   rf[1f] = 1f
executionUnit::****************************************
executionUnit:: rf_eu_v=1
executionUnit::enable =1
executionUnit:: instReg=19 isInstFmtLas=1 instFmt=0
executionUnit:: rf_eu_ir = 000000019
executionUnit:: las op = ELasAdd	 las op = 0
executionUnit:: src_a = 00000012c
executionUnit:: src_b = 000000019
executionUnit:: eu_rf_wr_data_las = 0
executionUnit:: eu_rf_wr_data_bit = 0
executionUnit:: id->dest = 0
executionUnit:: eu_rf_wr_data = 00000012c
executionUnit:: eu_rf_wr_addr = 00
executionUnit:: eu_rf_wren             = 1
rf::****************************************
rf::v = 1
rf::instructionReg = 1a
rf::reset_ = 1
rf::rd_addr_a = 00
rf::rden_a    = 1
rf::rd_addr_b = 1a
rf::rden_b    = 1
rf:0 read operation rd_addr_a = 00
rf:all read operation rd_addr_b = 1a
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 000000145
rf::eu_rf_wren    = 1
rf::swapbit_wr_data_a = 0
rf::swapbit_wr_addr_a = 0
rf::swapbit_wr_data_b = 0
rf::swapbit_wr_addr_b = 0
rf::swapbit_wren.writ = 0
rf::eu_rf_wren 	  = 1
rf::swap_wren 		  = 0
rf::swapbit_wren 	  = 0
rf::testbit_wren 	  = 0
rf::setbit_wren 	  = 0
rf::ldimm_ab_16_wren = 0
rf::rf_mux_in_wren_a = 0
rf::rf_mux_in_wren_b = 0
rf::enable = 1
rf::operandA = 0
rf::operandB = 0
rf::im_rf_ir.read()  = 1a
rf::im_rf_instructionDecoder->getInstructionReg()  = 1a
rf:: isInstFormatOpLas = 1
rf:: isInstFormatOpBit = 0
rf:: isInstFormatOpLdIm= 0
rf:: isInstFormatOpBr  = 0
rf:: getLdImmOperand16Field= 1a
rf:: signExtend16(im_rf_instructionDecoder->getLdImmOperand16Field ()) = 1a
rf:: rf_dest_data  = 1f
rf::im_rf_ir = 1a
rf::eu_rf_ir = 000000018
rf::op_imm_a = 0
rf::op_imm_b = 1a
rf:: getOperandAImm8Field  = 0
rf:: getOperandBImm8Field  = 1a
rf::signExtend8 (op_imm_a) = 0
rf::signExtend8 (op_imm_b) = 1a
rf::signExtend16(op_imm_b) = 1a
rf::rd_data_rf_a = 0
rf::rd_data_rf_b = 1a
rf::rd_data_imm_a = 0
rf::rd_data_imm_b = 1a
rf::rd_data_imm_mux_sel_a = 0
rf::rd_data_imm_mux_sel_b = 0
rf::rd_data_imm_mux_a = 0
rf::rd_data_imm_mux_b = 1a
rf::rd_data_bypass_mux_a = 145
rf::rd_data_bypass_mux_b = 1a
rf::rf_eu_wr_addr = 0
rf::enable = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_a     = 00
rf::eu_rf_wr_addr_equal_rd_addr_a = 1
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_a = 1
rf::bypass_a = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_b     = 1a
rf::eu_rf_wr_addr_equal_rd_addr_b = 0
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_b = 0
rf::bypass_b = 0
rf::eu_data_a = 145
rf::rd_data_a = 00000012c
rf::rd_data_b = 000000019
rf::rf_eu_v = 1
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 000000145
rf::eu_rf_wren    = 1
rf::rf_stall = 0
rf::   rf[0] = 0
rf::   rf[1] = 1
rf::   rf[2] = 2
rf::   rf[3] = 3
rf::   rf[4] = 4
rf::   rf[5] = 5
rf::   rf[6] = 6
rf::   rf[7] = 7
rf::   rf[8] = 8
rf::   rf[9] = 9
rf::   rf[a] = a
rf::   rf[b] = b
rf::   rf[c] = c
rf::   rf[d] = d
rf::   rf[e] = e
rf::   rf[f] = f
rf::   rf[10] = 10
rf::   rf[11] = 11
rf::   rf[12] = 12
rf::   rf[13] = 13
rf::   rf[14] = 14
rf::   rf[15] = 15
rf::   rf[16] = 16
rf::   rf[17] = 17
rf::   rf[18] = 18
rf::   rf[19] = 19
rf::   rf[1a] = 1a
rf::   rf[1b] = 1b
rf::   rf[1c] = 1c
rf::   rf[1d] = 1d
rf::   rf[1e] = 1e
rf::   rf[1f] = 1f
   read op  buffer[3b] = 1b im read operation  = 3b data = 1a
 eu_branch = 0 pcx = 3c pc_inc = 3c
reset_ = 1
enable = 1
eu_branch = 0
 pc_im_v   = 1
 im_rf_v   = 1
 rf_eu_v   = 1
 eu_rf_wren= 1
pc_im_address = 3b
im.data = 1a
npc_2 = 00019
npc_3 = 00018
npc_4 = 00000
pc_im_v = 1 im_RnW = 1 pc_im_address = 3b  im_1 = 1a
im_data = 1a
ir_rf_3 = 000000019
ir_eu_4 = 000000018
 eu_branch.read() = 1
 pc_im_v   = 1
 im_rf_v   = 1
 rf_eu_v   = 1
 rf_rd_addr_a = 0
 rf_rd_addr_b = 1a
 rf_dest_addr = 0
 rf_rd_data_a = 00000012c
 rf_rd_data_b = 000000019
 im_rf_v   = 1
 rf_eu_v = 1
 eu_rf_wren = 1
 eu_rf_wr_data  = 000000145
 eu_rf_wr_addr  = 00
rf::****************************************
rf::v = 1
rf::instructionReg = 1b
rf::reset_ = 1
rf::rd_addr_a = 00
rf::rden_a    = 1
rf::rd_addr_b = 1b
rf::rden_b    = 1
rf:0 read operation rd_addr_a = 00
rf:all read operation rd_addr_b = 1b
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 000000145
rf::eu_rf_wren    = 1
rf::swapbit_wr_data_a = 0
rf::swapbit_wr_addr_a = 0
rf::swapbit_wr_data_b = 0
rf::swapbit_wr_addr_b = 0
rf::swapbit_wren.writ = 0
rf::eu_rf_wren 	  = 1
rf::swap_wren 		  = 0
rf::swapbit_wren 	  = 0
rf::testbit_wren 	  = 0
rf::setbit_wren 	  = 0
rf::ldimm_ab_16_wren = 0
rf::rf_mux_in_wren_a = 0
rf::rf_mux_in_wren_b = 0
rf::enable = 1
rf::operandA = 0
rf::operandB = 0
rf::im_rf_ir.read()  = 1b
rf::im_rf_instructionDecoder->getInstructionReg()  = 1b
rf:: isInstFormatOpLas = 1
rf:: isInstFormatOpBit = 0
rf:: isInstFormatOpLdIm= 0
rf:: isInstFormatOpBr  = 0
rf:: getLdImmOperand16Field= 1b
rf:: signExtend16(im_rf_instructionDecoder->getLdImmOperand16Field ()) = 1b
rf:: rf_dest_data  = 1f
rf::im_rf_ir = 1b
rf::eu_rf_ir = 000000019
rf::op_imm_a = 0
rf::op_imm_b = 1b
rf:: getOperandAImm8Field  = 0
rf:: getOperandBImm8Field  = 1b
rf::signExtend8 (op_imm_a) = 0
rf::signExtend8 (op_imm_b) = 1b
rf::signExtend16(op_imm_b) = 1b
rf::rd_data_rf_a = 0
rf::rd_data_rf_b = 1b
rf::rd_data_imm_a = 0
rf::rd_data_imm_b = 1b
rf::rd_data_imm_mux_sel_a = 0
rf::rd_data_imm_mux_sel_b = 0
rf::rd_data_imm_mux_a = 0
rf::rd_data_imm_mux_b = 1b
rf::rd_data_bypass_mux_a = 145
rf::rd_data_bypass_mux_b = 1b
rf::rf_eu_wr_addr = 0
rf::enable = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_a     = 00
rf::eu_rf_wr_addr_equal_rd_addr_a = 1
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_a = 1
rf::bypass_a = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_b     = 1b
rf::eu_rf_wr_addr_equal_rd_addr_b = 0
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_b = 0
rf::bypass_b = 0
rf::eu_data_a = 145
rf::rd_data_a = 000000145
rf::rd_data_b = 00000001a
rf::rf_eu_v = 1
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 000000145
rf::eu_rf_wren    = 1
rf::rf_stall = 0
rf::   rf[0] = 0
rf::   rf[1] = 1
rf::   rf[2] = 2
rf::   rf[3] = 3
rf::   rf[4] = 4
rf::   rf[5] = 5
rf::   rf[6] = 6
rf::   rf[7] = 7
rf::   rf[8] = 8
rf::   rf[9] = 9
rf::   rf[a] = a
rf::   rf[b] = b
rf::   rf[c] = c
rf::   rf[d] = d
rf::   rf[e] = e
rf::   rf[f] = f
rf::   rf[10] = 10
rf::   rf[11] = 11
rf::   rf[12] = 12
rf::   rf[13] = 13
rf::   rf[14] = 14
rf::   rf[15] = 15
rf::   rf[16] = 16
rf::   rf[17] = 17
rf::   rf[18] = 18
rf::   rf[19] = 19
rf::   rf[1a] = 1a
rf::   rf[1b] = 1b
rf::   rf[1c] = 1c
rf::   rf[1d] = 1d
rf::   rf[1e] = 1e
rf::   rf[1f] = 1f
executionUnit::****************************************
executionUnit:: rf_eu_v=1
executionUnit::enable =1
executionUnit:: instReg=1a isInstFmtLas=1 instFmt=0
executionUnit:: rf_eu_ir = 00000001a
executionUnit:: las op = ELasAdd	 las op = 0
executionUnit:: src_a = 000000145
executionUnit:: src_b = 00000001a
executionUnit:: eu_rf_wr_data_las = 0
executionUnit:: eu_rf_wr_data_bit = 0
executionUnit:: id->dest = 0
executionUnit:: eu_rf_wr_data = 000000145
executionUnit:: eu_rf_wr_addr = 00
executionUnit:: eu_rf_wren             = 1
rf::****************************************
rf::v = 1
rf::instructionReg = 1b
rf::reset_ = 1
rf::rd_addr_a = 00
rf::rden_a    = 1
rf::rd_addr_b = 1b
rf::rden_b    = 1
rf:0 read operation rd_addr_a = 00
rf:all read operation rd_addr_b = 1b
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 00000015f
rf::eu_rf_wren    = 1
rf::swapbit_wr_data_a = 0
rf::swapbit_wr_addr_a = 0
rf::swapbit_wr_data_b = 0
rf::swapbit_wr_addr_b = 0
rf::swapbit_wren.writ = 0
rf::eu_rf_wren 	  = 1
rf::swap_wren 		  = 0
rf::swapbit_wren 	  = 0
rf::testbit_wren 	  = 0
rf::setbit_wren 	  = 0
rf::ldimm_ab_16_wren = 0
rf::rf_mux_in_wren_a = 0
rf::rf_mux_in_wren_b = 0
rf::enable = 1
rf::operandA = 0
rf::operandB = 0
rf::im_rf_ir.read()  = 1b
rf::im_rf_instructionDecoder->getInstructionReg()  = 1b
rf:: isInstFormatOpLas = 1
rf:: isInstFormatOpBit = 0
rf:: isInstFormatOpLdIm= 0
rf:: isInstFormatOpBr  = 0
rf:: getLdImmOperand16Field= 1b
rf:: signExtend16(im_rf_instructionDecoder->getLdImmOperand16Field ()) = 1b
rf:: rf_dest_data  = 1f
rf::im_rf_ir = 1b
rf::eu_rf_ir = 000000019
rf::op_imm_a = 0
rf::op_imm_b = 1b
rf:: getOperandAImm8Field  = 0
rf:: getOperandBImm8Field  = 1b
rf::signExtend8 (op_imm_a) = 0
rf::signExtend8 (op_imm_b) = 1b
rf::signExtend16(op_imm_b) = 1b
rf::rd_data_rf_a = 0
rf::rd_data_rf_b = 1b
rf::rd_data_imm_a = 0
rf::rd_data_imm_b = 1b
rf::rd_data_imm_mux_sel_a = 0
rf::rd_data_imm_mux_sel_b = 0
rf::rd_data_imm_mux_a = 0
rf::rd_data_imm_mux_b = 1b
rf::rd_data_bypass_mux_a = 15f
rf::rd_data_bypass_mux_b = 1b
rf::rf_eu_wr_addr = 0
rf::enable = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_a     = 00
rf::eu_rf_wr_addr_equal_rd_addr_a = 1
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_a = 1
rf::bypass_a = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_b     = 1b
rf::eu_rf_wr_addr_equal_rd_addr_b = 0
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_b = 0
rf::bypass_b = 0
rf::eu_data_a = 15f
rf::rd_data_a = 000000145
rf::rd_data_b = 00000001a
rf::rf_eu_v = 1
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 00000015f
rf::eu_rf_wren    = 1
rf::rf_stall = 0
rf::   rf[0] = 0
rf::   rf[1] = 1
rf::   rf[2] = 2
rf::   rf[3] = 3
rf::   rf[4] = 4
rf::   rf[5] = 5
rf::   rf[6] = 6
rf::   rf[7] = 7
rf::   rf[8] = 8
rf::   rf[9] = 9
rf::   rf[a] = a
rf::   rf[b] = b
rf::   rf[c] = c
rf::   rf[d] = d
rf::   rf[e] = e
rf::   rf[f] = f
rf::   rf[10] = 10
rf::   rf[11] = 11
rf::   rf[12] = 12
rf::   rf[13] = 13
rf::   rf[14] = 14
rf::   rf[15] = 15
rf::   rf[16] = 16
rf::   rf[17] = 17
rf::   rf[18] = 18
rf::   rf[19] = 19
rf::   rf[1a] = 1a
rf::   rf[1b] = 1b
rf::   rf[1c] = 1c
rf::   rf[1d] = 1d
rf::   rf[1e] = 1e
rf::   rf[1f] = 1f
   read op  buffer[3c] = 1c im read operation  = 3c data = 1b
 eu_branch = 0 pcx = 3d pc_inc = 3d
reset_ = 1
enable = 1
eu_branch = 0
 pc_im_v   = 1
 im_rf_v   = 1
 rf_eu_v   = 1
 eu_rf_wren= 1
pc_im_address = 3c
im.data = 1b
npc_2 = 0001a
npc_3 = 00019
npc_4 = 00000
pc_im_v = 1 im_RnW = 1 pc_im_address = 3c  im_1 = 1b
im_data = 1b
ir_rf_3 = 00000001a
ir_eu_4 = 000000019
 eu_branch.read() = 1
 pc_im_v   = 1
 im_rf_v   = 1
 rf_eu_v   = 1
 rf_rd_addr_a = 0
 rf_rd_addr_b = 1b
 rf_dest_addr = 0
 rf_rd_data_a = 000000145
 rf_rd_data_b = 00000001a
 im_rf_v   = 1
 rf_eu_v = 1
 eu_rf_wren = 1
 eu_rf_wr_data  = 00000015f
 eu_rf_wr_addr  = 00
rf::****************************************
rf::v = 1
rf::instructionReg = 1c
rf::reset_ = 1
rf::rd_addr_a = 00
rf::rden_a    = 1
rf::rd_addr_b = 1c
rf::rden_b    = 1
rf:0 read operation rd_addr_a = 00
rf:all read operation rd_addr_b = 1c
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 00000015f
rf::eu_rf_wren    = 1
rf::swapbit_wr_data_a = 0
rf::swapbit_wr_addr_a = 0
rf::swapbit_wr_data_b = 0
rf::swapbit_wr_addr_b = 0
rf::swapbit_wren.writ = 0
rf::eu_rf_wren 	  = 1
rf::swap_wren 		  = 0
rf::swapbit_wren 	  = 0
rf::testbit_wren 	  = 0
rf::setbit_wren 	  = 0
rf::ldimm_ab_16_wren = 0
rf::rf_mux_in_wren_a = 0
rf::rf_mux_in_wren_b = 0
rf::enable = 1
rf::operandA = 0
rf::operandB = 0
rf::im_rf_ir.read()  = 1c
rf::im_rf_instructionDecoder->getInstructionReg()  = 1c
rf:: isInstFormatOpLas = 1
rf:: isInstFormatOpBit = 0
rf:: isInstFormatOpLdIm= 0
rf:: isInstFormatOpBr  = 0
rf:: getLdImmOperand16Field= 1c
rf:: signExtend16(im_rf_instructionDecoder->getLdImmOperand16Field ()) = 1c
rf:: rf_dest_data  = 1f
rf::im_rf_ir = 1c
rf::eu_rf_ir = 00000001a
rf::op_imm_a = 0
rf::op_imm_b = 1c
rf:: getOperandAImm8Field  = 0
rf:: getOperandBImm8Field  = 1c
rf::signExtend8 (op_imm_a) = 0
rf::signExtend8 (op_imm_b) = 1c
rf::signExtend16(op_imm_b) = 1c
rf::rd_data_rf_a = 0
rf::rd_data_rf_b = 1c
rf::rd_data_imm_a = 0
rf::rd_data_imm_b = 1c
rf::rd_data_imm_mux_sel_a = 0
rf::rd_data_imm_mux_sel_b = 0
rf::rd_data_imm_mux_a = 0
rf::rd_data_imm_mux_b = 1c
rf::rd_data_bypass_mux_a = 15f
rf::rd_data_bypass_mux_b = 1c
rf::rf_eu_wr_addr = 0
rf::enable = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_a     = 00
rf::eu_rf_wr_addr_equal_rd_addr_a = 1
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_a = 1
rf::bypass_a = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_b     = 1c
rf::eu_rf_wr_addr_equal_rd_addr_b = 0
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_b = 0
rf::bypass_b = 0
rf::eu_data_a = 15f
rf::rd_data_a = 00000015f
rf::rd_data_b = 00000001b
rf::rf_eu_v = 1
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 00000015f
rf::eu_rf_wren    = 1
rf::rf_stall = 0
rf::   rf[0] = 0
rf::   rf[1] = 1
rf::   rf[2] = 2
rf::   rf[3] = 3
rf::   rf[4] = 4
rf::   rf[5] = 5
rf::   rf[6] = 6
rf::   rf[7] = 7
rf::   rf[8] = 8
rf::   rf[9] = 9
rf::   rf[a] = a
rf::   rf[b] = b
rf::   rf[c] = c
rf::   rf[d] = d
rf::   rf[e] = e
rf::   rf[f] = f
rf::   rf[10] = 10
rf::   rf[11] = 11
rf::   rf[12] = 12
rf::   rf[13] = 13
rf::   rf[14] = 14
rf::   rf[15] = 15
rf::   rf[16] = 16
rf::   rf[17] = 17
rf::   rf[18] = 18
rf::   rf[19] = 19
rf::   rf[1a] = 1a
rf::   rf[1b] = 1b
rf::   rf[1c] = 1c
rf::   rf[1d] = 1d
rf::   rf[1e] = 1e
rf::   rf[1f] = 1f
executionUnit::****************************************
executionUnit:: rf_eu_v=1
executionUnit::enable =1
executionUnit:: instReg=1b isInstFmtLas=1 instFmt=0
executionUnit:: rf_eu_ir = 00000001b
executionUnit:: las op = ELasAdd	 las op = 0
executionUnit:: src_a = 00000015f
executionUnit:: src_b = 00000001b
executionUnit:: eu_rf_wr_data_las = 0
executionUnit:: eu_rf_wr_data_bit = 0
executionUnit:: id->dest = 0
executionUnit:: eu_rf_wr_data = 00000015f
executionUnit:: eu_rf_wr_addr = 00
executionUnit:: eu_rf_wren             = 1
rf::****************************************
rf::v = 1
rf::instructionReg = 1c
rf::reset_ = 1
rf::rd_addr_a = 00
rf::rden_a    = 1
rf::rd_addr_b = 1c
rf::rden_b    = 1
rf:0 read operation rd_addr_a = 00
rf:all read operation rd_addr_b = 1c
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 00000017a
rf::eu_rf_wren    = 1
rf::swapbit_wr_data_a = 0
rf::swapbit_wr_addr_a = 0
rf::swapbit_wr_data_b = 0
rf::swapbit_wr_addr_b = 0
rf::swapbit_wren.writ = 0
rf::eu_rf_wren 	  = 1
rf::swap_wren 		  = 0
rf::swapbit_wren 	  = 0
rf::testbit_wren 	  = 0
rf::setbit_wren 	  = 0
rf::ldimm_ab_16_wren = 0
rf::rf_mux_in_wren_a = 0
rf::rf_mux_in_wren_b = 0
rf::enable = 1
rf::operandA = 0
rf::operandB = 0
rf::im_rf_ir.read()  = 1c
rf::im_rf_instructionDecoder->getInstructionReg()  = 1c
rf:: isInstFormatOpLas = 1
rf:: isInstFormatOpBit = 0
rf:: isInstFormatOpLdIm= 0
rf:: isInstFormatOpBr  = 0
rf:: getLdImmOperand16Field= 1c
rf:: signExtend16(im_rf_instructionDecoder->getLdImmOperand16Field ()) = 1c
rf:: rf_dest_data  = 1f
rf::im_rf_ir = 1c
rf::eu_rf_ir = 00000001a
rf::op_imm_a = 0
rf::op_imm_b = 1c
rf:: getOperandAImm8Field  = 0
rf:: getOperandBImm8Field  = 1c
rf::signExtend8 (op_imm_a) = 0
rf::signExtend8 (op_imm_b) = 1c
rf::signExtend16(op_imm_b) = 1c
rf::rd_data_rf_a = 0
rf::rd_data_rf_b = 1c
rf::rd_data_imm_a = 0
rf::rd_data_imm_b = 1c
rf::rd_data_imm_mux_sel_a = 0
rf::rd_data_imm_mux_sel_b = 0
rf::rd_data_imm_mux_a = 0
rf::rd_data_imm_mux_b = 1c
rf::rd_data_bypass_mux_a = 17a
rf::rd_data_bypass_mux_b = 1c
rf::rf_eu_wr_addr = 0
rf::enable = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_a     = 00
rf::eu_rf_wr_addr_equal_rd_addr_a = 1
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_a = 1
rf::bypass_a = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_b     = 1c
rf::eu_rf_wr_addr_equal_rd_addr_b = 0
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_b = 0
rf::bypass_b = 0
rf::eu_data_a = 17a
rf::rd_data_a = 00000015f
rf::rd_data_b = 00000001b
rf::rf_eu_v = 1
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 00000017a
rf::eu_rf_wren    = 1
rf::rf_stall = 0
rf::   rf[0] = 0
rf::   rf[1] = 1
rf::   rf[2] = 2
rf::   rf[3] = 3
rf::   rf[4] = 4
rf::   rf[5] = 5
rf::   rf[6] = 6
rf::   rf[7] = 7
rf::   rf[8] = 8
rf::   rf[9] = 9
rf::   rf[a] = a
rf::   rf[b] = b
rf::   rf[c] = c
rf::   rf[d] = d
rf::   rf[e] = e
rf::   rf[f] = f
rf::   rf[10] = 10
rf::   rf[11] = 11
rf::   rf[12] = 12
rf::   rf[13] = 13
rf::   rf[14] = 14
rf::   rf[15] = 15
rf::   rf[16] = 16
rf::   rf[17] = 17
rf::   rf[18] = 18
rf::   rf[19] = 19
rf::   rf[1a] = 1a
rf::   rf[1b] = 1b
rf::   rf[1c] = 1c
rf::   rf[1d] = 1d
rf::   rf[1e] = 1e
rf::   rf[1f] = 1f
   read op  buffer[3d] = 1d im read operation  = 3d data = 1c
 eu_branch = 0 pcx = 3e pc_inc = 3e
reset_ = 1
enable = 1
eu_branch = 0
 pc_im_v   = 1
 im_rf_v   = 1
 rf_eu_v   = 1
 eu_rf_wren= 1
pc_im_address = 3d
im.data = 1c
npc_2 = 0001b
npc_3 = 0001a
npc_4 = 00000
pc_im_v = 1 im_RnW = 1 pc_im_address = 3d  im_1 = 1c
im_data = 1c
ir_rf_3 = 00000001b
ir_eu_4 = 00000001a
 eu_branch.read() = 1
 pc_im_v   = 1
 im_rf_v   = 1
 rf_eu_v   = 1
 rf_rd_addr_a = 0
 rf_rd_addr_b = 1c
 rf_dest_addr = 0
 rf_rd_data_a = 00000015f
 rf_rd_data_b = 00000001b
 im_rf_v   = 1
 rf_eu_v = 1
 eu_rf_wren = 1
 eu_rf_wr_data  = 00000017a
 eu_rf_wr_addr  = 00
rf::****************************************
rf::v = 1
rf::instructionReg = 1d
rf::reset_ = 1
rf::rd_addr_a = 00
rf::rden_a    = 1
rf::rd_addr_b = 1d
rf::rden_b    = 1
rf:0 read operation rd_addr_a = 00
rf:all read operation rd_addr_b = 1d
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 00000017a
rf::eu_rf_wren    = 1
rf::swapbit_wr_data_a = 0
rf::swapbit_wr_addr_a = 0
rf::swapbit_wr_data_b = 0
rf::swapbit_wr_addr_b = 0
rf::swapbit_wren.writ = 0
rf::eu_rf_wren 	  = 1
rf::swap_wren 		  = 0
rf::swapbit_wren 	  = 0
rf::testbit_wren 	  = 0
rf::setbit_wren 	  = 0
rf::ldimm_ab_16_wren = 0
rf::rf_mux_in_wren_a = 0
rf::rf_mux_in_wren_b = 0
rf::enable = 1
rf::operandA = 0
rf::operandB = 0
rf::im_rf_ir.read()  = 1d
rf::im_rf_instructionDecoder->getInstructionReg()  = 1d
rf:: isInstFormatOpLas = 1
rf:: isInstFormatOpBit = 0
rf:: isInstFormatOpLdIm= 0
rf:: isInstFormatOpBr  = 0
rf:: getLdImmOperand16Field= 1d
rf:: signExtend16(im_rf_instructionDecoder->getLdImmOperand16Field ()) = 1d
rf:: rf_dest_data  = 1f
rf::im_rf_ir = 1d
rf::eu_rf_ir = 00000001b
rf::op_imm_a = 0
rf::op_imm_b = 1d
rf:: getOperandAImm8Field  = 0
rf:: getOperandBImm8Field  = 1d
rf::signExtend8 (op_imm_a) = 0
rf::signExtend8 (op_imm_b) = 1d
rf::signExtend16(op_imm_b) = 1d
rf::rd_data_rf_a = 0
rf::rd_data_rf_b = 1d
rf::rd_data_imm_a = 0
rf::rd_data_imm_b = 1d
rf::rd_data_imm_mux_sel_a = 0
rf::rd_data_imm_mux_sel_b = 0
rf::rd_data_imm_mux_a = 0
rf::rd_data_imm_mux_b = 1d
rf::rd_data_bypass_mux_a = 17a
rf::rd_data_bypass_mux_b = 1d
rf::rf_eu_wr_addr = 0
rf::enable = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_a     = 00
rf::eu_rf_wr_addr_equal_rd_addr_a = 1
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_a = 1
rf::bypass_a = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_b     = 1d
rf::eu_rf_wr_addr_equal_rd_addr_b = 0
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_b = 0
rf::bypass_b = 0
rf::eu_data_a = 17a
rf::rd_data_a = 00000017a
rf::rd_data_b = 00000001c
rf::rf_eu_v = 1
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 00000017a
rf::eu_rf_wren    = 1
rf::rf_stall = 0
rf::   rf[0] = 0
rf::   rf[1] = 1
rf::   rf[2] = 2
rf::   rf[3] = 3
rf::   rf[4] = 4
rf::   rf[5] = 5
rf::   rf[6] = 6
rf::   rf[7] = 7
rf::   rf[8] = 8
rf::   rf[9] = 9
rf::   rf[a] = a
rf::   rf[b] = b
rf::   rf[c] = c
rf::   rf[d] = d
rf::   rf[e] = e
rf::   rf[f] = f
rf::   rf[10] = 10
rf::   rf[11] = 11
rf::   rf[12] = 12
rf::   rf[13] = 13
rf::   rf[14] = 14
rf::   rf[15] = 15
rf::   rf[16] = 16
rf::   rf[17] = 17
rf::   rf[18] = 18
rf::   rf[19] = 19
rf::   rf[1a] = 1a
rf::   rf[1b] = 1b
rf::   rf[1c] = 1c
rf::   rf[1d] = 1d
rf::   rf[1e] = 1e
rf::   rf[1f] = 1f
executionUnit::****************************************
executionUnit:: rf_eu_v=1
executionUnit::enable =1
executionUnit:: instReg=1c isInstFmtLas=1 instFmt=0
executionUnit:: rf_eu_ir = 00000001c
executionUnit:: las op = ELasAdd	 las op = 0
executionUnit:: src_a = 00000017a
executionUnit:: src_b = 00000001c
executionUnit:: eu_rf_wr_data_las = 0
executionUnit:: eu_rf_wr_data_bit = 0
executionUnit:: id->dest = 0
executionUnit:: eu_rf_wr_data = 00000017a
executionUnit:: eu_rf_wr_addr = 00
executionUnit:: eu_rf_wren             = 1
rf::****************************************
rf::v = 1
rf::instructionReg = 1d
rf::reset_ = 1
rf::rd_addr_a = 00
rf::rden_a    = 1
rf::rd_addr_b = 1d
rf::rden_b    = 1
rf:0 read operation rd_addr_a = 00
rf:all read operation rd_addr_b = 1d
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 000000196
rf::eu_rf_wren    = 1
rf::swapbit_wr_data_a = 0
rf::swapbit_wr_addr_a = 0
rf::swapbit_wr_data_b = 0
rf::swapbit_wr_addr_b = 0
rf::swapbit_wren.writ = 0
rf::eu_rf_wren 	  = 1
rf::swap_wren 		  = 0
rf::swapbit_wren 	  = 0
rf::testbit_wren 	  = 0
rf::setbit_wren 	  = 0
rf::ldimm_ab_16_wren = 0
rf::rf_mux_in_wren_a = 0
rf::rf_mux_in_wren_b = 0
rf::enable = 1
rf::operandA = 0
rf::operandB = 0
rf::im_rf_ir.read()  = 1d
rf::im_rf_instructionDecoder->getInstructionReg()  = 1d
rf:: isInstFormatOpLas = 1
rf:: isInstFormatOpBit = 0
rf:: isInstFormatOpLdIm= 0
rf:: isInstFormatOpBr  = 0
rf:: getLdImmOperand16Field= 1d
rf:: signExtend16(im_rf_instructionDecoder->getLdImmOperand16Field ()) = 1d
rf:: rf_dest_data  = 1f
rf::im_rf_ir = 1d
rf::eu_rf_ir = 00000001b
rf::op_imm_a = 0
rf::op_imm_b = 1d
rf:: getOperandAImm8Field  = 0
rf:: getOperandBImm8Field  = 1d
rf::signExtend8 (op_imm_a) = 0
rf::signExtend8 (op_imm_b) = 1d
rf::signExtend16(op_imm_b) = 1d
rf::rd_data_rf_a = 0
rf::rd_data_rf_b = 1d
rf::rd_data_imm_a = 0
rf::rd_data_imm_b = 1d
rf::rd_data_imm_mux_sel_a = 0
rf::rd_data_imm_mux_sel_b = 0
rf::rd_data_imm_mux_a = 0
rf::rd_data_imm_mux_b = 1d
rf::rd_data_bypass_mux_a = 196
rf::rd_data_bypass_mux_b = 1d
rf::rf_eu_wr_addr = 0
rf::enable = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_a     = 00
rf::eu_rf_wr_addr_equal_rd_addr_a = 1
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_a = 1
rf::bypass_a = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_b     = 1d
rf::eu_rf_wr_addr_equal_rd_addr_b = 0
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_b = 0
rf::bypass_b = 0
rf::eu_data_a = 196
rf::rd_data_a = 00000017a
rf::rd_data_b = 00000001c
rf::rf_eu_v = 1
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 000000196
rf::eu_rf_wren    = 1
rf::rf_stall = 0
rf::   rf[0] = 0
rf::   rf[1] = 1
rf::   rf[2] = 2
rf::   rf[3] = 3
rf::   rf[4] = 4
rf::   rf[5] = 5
rf::   rf[6] = 6
rf::   rf[7] = 7
rf::   rf[8] = 8
rf::   rf[9] = 9
rf::   rf[a] = a
rf::   rf[b] = b
rf::   rf[c] = c
rf::   rf[d] = d
rf::   rf[e] = e
rf::   rf[f] = f
rf::   rf[10] = 10
rf::   rf[11] = 11
rf::   rf[12] = 12
rf::   rf[13] = 13
rf::   rf[14] = 14
rf::   rf[15] = 15
rf::   rf[16] = 16
rf::   rf[17] = 17
rf::   rf[18] = 18
rf::   rf[19] = 19
rf::   rf[1a] = 1a
rf::   rf[1b] = 1b
rf::   rf[1c] = 1c
rf::   rf[1d] = 1d
rf::   rf[1e] = 1e
rf::   rf[1f] = 1f
   read op  buffer[3e] = 1e im read operation  = 3e data = 1d
 eu_branch = 0 pcx = 3f pc_inc = 3f
reset_ = 1
enable = 1
eu_branch = 0
 pc_im_v   = 1
 im_rf_v   = 1
 rf_eu_v   = 1
 eu_rf_wren= 1
pc_im_address = 3e
im.data = 1d
npc_2 = 0001c
npc_3 = 0001b
npc_4 = 00000
pc_im_v = 1 im_RnW = 1 pc_im_address = 3e  im_1 = 1d
im_data = 1d
ir_rf_3 = 00000001c
ir_eu_4 = 00000001b
 eu_branch.read() = 1
 pc_im_v   = 1
 im_rf_v   = 1
 rf_eu_v   = 1
 rf_rd_addr_a = 0
 rf_rd_addr_b = 1d
 rf_dest_addr = 0
 rf_rd_data_a = 00000017a
 rf_rd_data_b = 00000001c
 im_rf_v   = 1
 rf_eu_v = 1
 eu_rf_wren = 1
 eu_rf_wr_data  = 000000196
 eu_rf_wr_addr  = 00
rf::****************************************
rf::v = 1
rf::instructionReg = 1e
rf::reset_ = 1
rf::rd_addr_a = 00
rf::rden_a    = 1
rf::rd_addr_b = 1e
rf::rden_b    = 1
rf:0 read operation rd_addr_a = 00
rf:all read operation rd_addr_b = 1e
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 000000196
rf::eu_rf_wren    = 1
rf::swapbit_wr_data_a = 0
rf::swapbit_wr_addr_a = 0
rf::swapbit_wr_data_b = 0
rf::swapbit_wr_addr_b = 0
rf::swapbit_wren.writ = 0
rf::eu_rf_wren 	  = 1
rf::swap_wren 		  = 0
rf::swapbit_wren 	  = 0
rf::testbit_wren 	  = 0
rf::setbit_wren 	  = 0
rf::ldimm_ab_16_wren = 0
rf::rf_mux_in_wren_a = 0
rf::rf_mux_in_wren_b = 0
rf::enable = 1
rf::operandA = 0
rf::operandB = 0
rf::im_rf_ir.read()  = 1e
rf::im_rf_instructionDecoder->getInstructionReg()  = 1e
rf:: isInstFormatOpLas = 1
rf:: isInstFormatOpBit = 0
rf:: isInstFormatOpLdIm= 0
rf:: isInstFormatOpBr  = 0
rf:: getLdImmOperand16Field= 1e
rf:: signExtend16(im_rf_instructionDecoder->getLdImmOperand16Field ()) = 1e
rf:: rf_dest_data  = 1f
rf::im_rf_ir = 1e
rf::eu_rf_ir = 00000001c
rf::op_imm_a = 0
rf::op_imm_b = 1e
rf:: getOperandAImm8Field  = 0
rf:: getOperandBImm8Field  = 1e
rf::signExtend8 (op_imm_a) = 0
rf::signExtend8 (op_imm_b) = 1e
rf::signExtend16(op_imm_b) = 1e
rf::rd_data_rf_a = 0
rf::rd_data_rf_b = 1e
rf::rd_data_imm_a = 0
rf::rd_data_imm_b = 1e
rf::rd_data_imm_mux_sel_a = 0
rf::rd_data_imm_mux_sel_b = 0
rf::rd_data_imm_mux_a = 0
rf::rd_data_imm_mux_b = 1e
rf::rd_data_bypass_mux_a = 196
rf::rd_data_bypass_mux_b = 1e
rf::rf_eu_wr_addr = 0
rf::enable = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_a     = 00
rf::eu_rf_wr_addr_equal_rd_addr_a = 1
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_a = 1
rf::bypass_a = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_b     = 1e
rf::eu_rf_wr_addr_equal_rd_addr_b = 0
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_b = 0
rf::bypass_b = 0
rf::eu_data_a = 196
rf::rd_data_a = 000000196
rf::rd_data_b = 00000001d
rf::rf_eu_v = 1
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 000000196
rf::eu_rf_wren    = 1
rf::rf_stall = 0
rf::   rf[0] = 0
rf::   rf[1] = 1
rf::   rf[2] = 2
rf::   rf[3] = 3
rf::   rf[4] = 4
rf::   rf[5] = 5
rf::   rf[6] = 6
rf::   rf[7] = 7
rf::   rf[8] = 8
rf::   rf[9] = 9
rf::   rf[a] = a
rf::   rf[b] = b
rf::   rf[c] = c
rf::   rf[d] = d
rf::   rf[e] = e
rf::   rf[f] = f
rf::   rf[10] = 10
rf::   rf[11] = 11
rf::   rf[12] = 12
rf::   rf[13] = 13
rf::   rf[14] = 14
rf::   rf[15] = 15
rf::   rf[16] = 16
rf::   rf[17] = 17
rf::   rf[18] = 18
rf::   rf[19] = 19
rf::   rf[1a] = 1a
rf::   rf[1b] = 1b
rf::   rf[1c] = 1c
rf::   rf[1d] = 1d
rf::   rf[1e] = 1e
rf::   rf[1f] = 1f
executionUnit::****************************************
executionUnit:: rf_eu_v=1
executionUnit::enable =1
executionUnit:: instReg=1d isInstFmtLas=1 instFmt=0
executionUnit:: rf_eu_ir = 00000001d
executionUnit:: las op = ELasAdd	 las op = 0
executionUnit:: src_a = 000000196
executionUnit:: src_b = 00000001d
executionUnit:: eu_rf_wr_data_las = 0
executionUnit:: eu_rf_wr_data_bit = 0
executionUnit:: id->dest = 0
executionUnit:: eu_rf_wr_data = 000000196
executionUnit:: eu_rf_wr_addr = 00
executionUnit:: eu_rf_wren             = 1
rf::****************************************
rf::v = 1
rf::instructionReg = 1e
rf::reset_ = 1
rf::rd_addr_a = 00
rf::rden_a    = 1
rf::rd_addr_b = 1e
rf::rden_b    = 1
rf:0 read operation rd_addr_a = 00
rf:all read operation rd_addr_b = 1e
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 0000001b3
rf::eu_rf_wren    = 1
rf::swapbit_wr_data_a = 0
rf::swapbit_wr_addr_a = 0
rf::swapbit_wr_data_b = 0
rf::swapbit_wr_addr_b = 0
rf::swapbit_wren.writ = 0
rf::eu_rf_wren 	  = 1
rf::swap_wren 		  = 0
rf::swapbit_wren 	  = 0
rf::testbit_wren 	  = 0
rf::setbit_wren 	  = 0
rf::ldimm_ab_16_wren = 0
rf::rf_mux_in_wren_a = 0
rf::rf_mux_in_wren_b = 0
rf::enable = 1
rf::operandA = 0
rf::operandB = 0
rf::im_rf_ir.read()  = 1e
rf::im_rf_instructionDecoder->getInstructionReg()  = 1e
rf:: isInstFormatOpLas = 1
rf:: isInstFormatOpBit = 0
rf:: isInstFormatOpLdIm= 0
rf:: isInstFormatOpBr  = 0
rf:: getLdImmOperand16Field= 1e
rf:: signExtend16(im_rf_instructionDecoder->getLdImmOperand16Field ()) = 1e
rf:: rf_dest_data  = 1f
rf::im_rf_ir = 1e
rf::eu_rf_ir = 00000001c
rf::op_imm_a = 0
rf::op_imm_b = 1e
rf:: getOperandAImm8Field  = 0
rf:: getOperandBImm8Field  = 1e
rf::signExtend8 (op_imm_a) = 0
rf::signExtend8 (op_imm_b) = 1e
rf::signExtend16(op_imm_b) = 1e
rf::rd_data_rf_a = 0
rf::rd_data_rf_b = 1e
rf::rd_data_imm_a = 0
rf::rd_data_imm_b = 1e
rf::rd_data_imm_mux_sel_a = 0
rf::rd_data_imm_mux_sel_b = 0
rf::rd_data_imm_mux_a = 0
rf::rd_data_imm_mux_b = 1e
rf::rd_data_bypass_mux_a = 1b3
rf::rd_data_bypass_mux_b = 1e
rf::rf_eu_wr_addr = 0
rf::enable = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_a     = 00
rf::eu_rf_wr_addr_equal_rd_addr_a = 1
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_a = 1
rf::bypass_a = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_b     = 1e
rf::eu_rf_wr_addr_equal_rd_addr_b = 0
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_b = 0
rf::bypass_b = 0
rf::eu_data_a = 1b3
rf::rd_data_a = 000000196
rf::rd_data_b = 00000001d
rf::rf_eu_v = 1
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 0000001b3
rf::eu_rf_wren    = 1
rf::rf_stall = 0
rf::   rf[0] = 0
rf::   rf[1] = 1
rf::   rf[2] = 2
rf::   rf[3] = 3
rf::   rf[4] = 4
rf::   rf[5] = 5
rf::   rf[6] = 6
rf::   rf[7] = 7
rf::   rf[8] = 8
rf::   rf[9] = 9
rf::   rf[a] = a
rf::   rf[b] = b
rf::   rf[c] = c
rf::   rf[d] = d
rf::   rf[e] = e
rf::   rf[f] = f
rf::   rf[10] = 10
rf::   rf[11] = 11
rf::   rf[12] = 12
rf::   rf[13] = 13
rf::   rf[14] = 14
rf::   rf[15] = 15
rf::   rf[16] = 16
rf::   rf[17] = 17
rf::   rf[18] = 18
rf::   rf[19] = 19
rf::   rf[1a] = 1a
rf::   rf[1b] = 1b
rf::   rf[1c] = 1c
rf::   rf[1d] = 1d
rf::   rf[1e] = 1e
rf::   rf[1f] = 1f
   read op  buffer[3f] = 1f im read operation  = 3f data = 1e
 eu_branch = 0 pcx = 40 pc_inc = 40
reset_ = 1
enable = 1
eu_branch = 0
 pc_im_v   = 1
 im_rf_v   = 1
 rf_eu_v   = 1
 eu_rf_wren= 1
pc_im_address = 3f
im.data = 1e
npc_2 = 0001d
npc_3 = 0001c
npc_4 = 00000
pc_im_v = 1 im_RnW = 1 pc_im_address = 3f  im_1 = 1e
im_data = 1e
ir_rf_3 = 00000001d
ir_eu_4 = 00000001c
 eu_branch.read() = 1
 pc_im_v   = 1
 im_rf_v   = 1
 rf_eu_v   = 1
 rf_rd_addr_a = 0
 rf_rd_addr_b = 1e
 rf_dest_addr = 0
 rf_rd_data_a = 000000196
 rf_rd_data_b = 00000001d
 im_rf_v   = 1
 rf_eu_v = 1
 eu_rf_wren = 1
 eu_rf_wr_data  = 0000001b3
 eu_rf_wr_addr  = 00
rf::****************************************
rf::v = 1
rf::instructionReg = 1f
rf::reset_ = 1
rf::rd_addr_a = 00
rf::rden_a    = 1
rf::rd_addr_b = 1f
rf::rden_b    = 1
rf:0 read operation rd_addr_a = 00
rf:all read operation rd_addr_b = 1f
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 0000001b3
rf::eu_rf_wren    = 1
rf::swapbit_wr_data_a = 0
rf::swapbit_wr_addr_a = 0
rf::swapbit_wr_data_b = 0
rf::swapbit_wr_addr_b = 0
rf::swapbit_wren.writ = 0
rf::eu_rf_wren 	  = 1
rf::swap_wren 		  = 0
rf::swapbit_wren 	  = 0
rf::testbit_wren 	  = 0
rf::setbit_wren 	  = 0
rf::ldimm_ab_16_wren = 0
rf::rf_mux_in_wren_a = 0
rf::rf_mux_in_wren_b = 0
rf::enable = 1
rf::operandA = 0
rf::operandB = 0
rf::im_rf_ir.read()  = 1f
rf::im_rf_instructionDecoder->getInstructionReg()  = 1f
rf:: isInstFormatOpLas = 1
rf:: isInstFormatOpBit = 0
rf:: isInstFormatOpLdIm= 0
rf:: isInstFormatOpBr  = 0
rf:: getLdImmOperand16Field= 1f
rf:: signExtend16(im_rf_instructionDecoder->getLdImmOperand16Field ()) = 1f
rf:: rf_dest_data  = 1f
rf::im_rf_ir = 1f
rf::eu_rf_ir = 00000001d
rf::op_imm_a = 0
rf::op_imm_b = 1f
rf:: getOperandAImm8Field  = 0
rf:: getOperandBImm8Field  = 1f
rf::signExtend8 (op_imm_a) = 0
rf::signExtend8 (op_imm_b) = 1f
rf::signExtend16(op_imm_b) = 1f
rf::rd_data_rf_a = 0
rf::rd_data_rf_b = 1f
rf::rd_data_imm_a = 0
rf::rd_data_imm_b = 1f
rf::rd_data_imm_mux_sel_a = 0
rf::rd_data_imm_mux_sel_b = 0
rf::rd_data_imm_mux_a = 0
rf::rd_data_imm_mux_b = 1f
rf::rd_data_bypass_mux_a = 1b3
rf::rd_data_bypass_mux_b = 1f
rf::rf_eu_wr_addr = 0
rf::enable = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_a     = 00
rf::eu_rf_wr_addr_equal_rd_addr_a = 1
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_a = 1
rf::bypass_a = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_b     = 1f
rf::eu_rf_wr_addr_equal_rd_addr_b = 0
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_b = 0
rf::bypass_b = 0
rf::eu_data_a = 1b3
rf::rd_data_a = 0000001b3
rf::rd_data_b = 00000001e
rf::rf_eu_v = 1
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 0000001b3
rf::eu_rf_wren    = 1
rf::rf_stall = 0
rf::   rf[0] = 0
rf::   rf[1] = 1
rf::   rf[2] = 2
rf::   rf[3] = 3
rf::   rf[4] = 4
rf::   rf[5] = 5
rf::   rf[6] = 6
rf::   rf[7] = 7
rf::   rf[8] = 8
rf::   rf[9] = 9
rf::   rf[a] = a
rf::   rf[b] = b
rf::   rf[c] = c
rf::   rf[d] = d
rf::   rf[e] = e
rf::   rf[f] = f
rf::   rf[10] = 10
rf::   rf[11] = 11
rf::   rf[12] = 12
rf::   rf[13] = 13
rf::   rf[14] = 14
rf::   rf[15] = 15
rf::   rf[16] = 16
rf::   rf[17] = 17
rf::   rf[18] = 18
rf::   rf[19] = 19
rf::   rf[1a] = 1a
rf::   rf[1b] = 1b
rf::   rf[1c] = 1c
rf::   rf[1d] = 1d
rf::   rf[1e] = 1e
rf::   rf[1f] = 1f
executionUnit::****************************************
executionUnit:: rf_eu_v=1
executionUnit::enable =1
executionUnit:: instReg=1e isInstFmtLas=1 instFmt=0
executionUnit:: rf_eu_ir = 00000001e
executionUnit:: las op = ELasAdd	 las op = 0
executionUnit:: src_a = 0000001b3
executionUnit:: src_b = 00000001e
executionUnit:: eu_rf_wr_data_las = 0
executionUnit:: eu_rf_wr_data_bit = 0
executionUnit:: id->dest = 0
executionUnit:: eu_rf_wr_data = 0000001b3
executionUnit:: eu_rf_wr_addr = 00
executionUnit:: eu_rf_wren             = 1
rf::****************************************
rf::v = 1
rf::instructionReg = 1f
rf::reset_ = 1
rf::rd_addr_a = 00
rf::rden_a    = 1
rf::rd_addr_b = 1f
rf::rden_b    = 1
rf:0 read operation rd_addr_a = 00
rf:all read operation rd_addr_b = 1f
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 0000001d1
rf::eu_rf_wren    = 1
rf::swapbit_wr_data_a = 0
rf::swapbit_wr_addr_a = 0
rf::swapbit_wr_data_b = 0
rf::swapbit_wr_addr_b = 0
rf::swapbit_wren.writ = 0
rf::eu_rf_wren 	  = 1
rf::swap_wren 		  = 0
rf::swapbit_wren 	  = 0
rf::testbit_wren 	  = 0
rf::setbit_wren 	  = 0
rf::ldimm_ab_16_wren = 0
rf::rf_mux_in_wren_a = 0
rf::rf_mux_in_wren_b = 0
rf::enable = 1
rf::operandA = 0
rf::operandB = 0
rf::im_rf_ir.read()  = 1f
rf::im_rf_instructionDecoder->getInstructionReg()  = 1f
rf:: isInstFormatOpLas = 1
rf:: isInstFormatOpBit = 0
rf:: isInstFormatOpLdIm= 0
rf:: isInstFormatOpBr  = 0
rf:: getLdImmOperand16Field= 1f
rf:: signExtend16(im_rf_instructionDecoder->getLdImmOperand16Field ()) = 1f
rf:: rf_dest_data  = 1f
rf::im_rf_ir = 1f
rf::eu_rf_ir = 00000001d
rf::op_imm_a = 0
rf::op_imm_b = 1f
rf:: getOperandAImm8Field  = 0
rf:: getOperandBImm8Field  = 1f
rf::signExtend8 (op_imm_a) = 0
rf::signExtend8 (op_imm_b) = 1f
rf::signExtend16(op_imm_b) = 1f
rf::rd_data_rf_a = 0
rf::rd_data_rf_b = 1f
rf::rd_data_imm_a = 0
rf::rd_data_imm_b = 1f
rf::rd_data_imm_mux_sel_a = 0
rf::rd_data_imm_mux_sel_b = 0
rf::rd_data_imm_mux_a = 0
rf::rd_data_imm_mux_b = 1f
rf::rd_data_bypass_mux_a = 1d1
rf::rd_data_bypass_mux_b = 1f
rf::rf_eu_wr_addr = 0
rf::enable = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_a     = 00
rf::eu_rf_wr_addr_equal_rd_addr_a = 1
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_a = 1
rf::bypass_a = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_b     = 1f
rf::eu_rf_wr_addr_equal_rd_addr_b = 0
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_b = 0
rf::bypass_b = 0
rf::eu_data_a = 1d1
rf::rd_data_a = 0000001b3
rf::rd_data_b = 00000001e
rf::rf_eu_v = 1
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 0000001d1
rf::eu_rf_wren    = 1
rf::rf_stall = 0
rf::   rf[0] = 0
rf::   rf[1] = 1
rf::   rf[2] = 2
rf::   rf[3] = 3
rf::   rf[4] = 4
rf::   rf[5] = 5
rf::   rf[6] = 6
rf::   rf[7] = 7
rf::   rf[8] = 8
rf::   rf[9] = 9
rf::   rf[a] = a
rf::   rf[b] = b
rf::   rf[c] = c
rf::   rf[d] = d
rf::   rf[e] = e
rf::   rf[f] = f
rf::   rf[10] = 10
rf::   rf[11] = 11
rf::   rf[12] = 12
rf::   rf[13] = 13
rf::   rf[14] = 14
rf::   rf[15] = 15
rf::   rf[16] = 16
rf::   rf[17] = 17
rf::   rf[18] = 18
rf::   rf[19] = 19
rf::   rf[1a] = 1a
rf::   rf[1b] = 1b
rf::   rf[1c] = 1c
rf::   rf[1d] = 1d
rf::   rf[1e] = 1e
rf::   rf[1f] = 1f
   read op  buffer[40] = 100 im read operation  = 40 data = 1f
 eu_branch = 0 pcx = 41 pc_inc = 41
reset_ = 1
enable = 1
eu_branch = 0
 pc_im_v   = 1
 im_rf_v   = 1
 rf_eu_v   = 1
 eu_rf_wren= 1
pc_im_address = 40
im.data = 1f
npc_2 = 0001e
npc_3 = 0001d
npc_4 = 00000
pc_im_v = 1 im_RnW = 1 pc_im_address = 40  im_1 = 1f
im_data = 1f
ir_rf_3 = 00000001e
ir_eu_4 = 00000001d
 eu_branch.read() = 1
 pc_im_v   = 1
 im_rf_v   = 1
 rf_eu_v   = 1
 rf_rd_addr_a = 0
 rf_rd_addr_b = 1f
 rf_dest_addr = 0
 rf_rd_data_a = 0000001b3
 rf_rd_data_b = 00000001e
 im_rf_v   = 1
 rf_eu_v = 1
 eu_rf_wren = 1
 eu_rf_wr_data  = 0000001d1
 eu_rf_wr_addr  = 00
rf::****************************************
rf::v = 1
rf::instructionReg = 100
rf::reset_ = 1
rf::rd_addr_a = 01
rf::rden_a    = 1
rf::rd_addr_b = 00
rf::rden_b    = 1
rf:1 all read operation rd_addr_a = 01
rf:0 read operation rd_addr_b = 00
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 0000001d1
rf::eu_rf_wren    = 1
rf::swapbit_wr_data_a = 0
rf::swapbit_wr_addr_a = 0
rf::swapbit_wr_data_b = 0
rf::swapbit_wr_addr_b = 0
rf::swapbit_wren.writ = 0
rf::eu_rf_wren 	  = 1
rf::swap_wren 		  = 0
rf::swapbit_wren 	  = 0
rf::testbit_wren 	  = 0
rf::setbit_wren 	  = 0
rf::ldimm_ab_16_wren = 0
rf::rf_mux_in_wren_a = 0
rf::rf_mux_in_wren_b = 0
rf::enable = 1
rf::operandA = 0
rf::operandB = 0
rf::im_rf_ir.read()  = 100
rf::im_rf_instructionDecoder->getInstructionReg()  = 100
rf:: isInstFormatOpLas = 1
rf:: isInstFormatOpBit = 0
rf:: isInstFormatOpLdIm= 0
rf:: isInstFormatOpBr  = 0
rf:: getLdImmOperand16Field= 100
rf:: signExtend16(im_rf_instructionDecoder->getLdImmOperand16Field ()) = 100
rf:: rf_dest_data  = 1f
rf::im_rf_ir = 100
rf::eu_rf_ir = 00000001e
rf::op_imm_a = 1
rf::op_imm_b = 0
rf:: getOperandAImm8Field  = 1
rf:: getOperandBImm8Field  = 0
rf::signExtend8 (op_imm_a) = 1
rf::signExtend8 (op_imm_b) = 0
rf::signExtend16(op_imm_b) = 100
rf::rd_data_rf_a = 1
rf::rd_data_rf_b = 0
rf::rd_data_imm_a = 1
rf::rd_data_imm_b = 0
rf::rd_data_imm_mux_sel_a = 0
rf::rd_data_imm_mux_sel_b = 0
rf::rd_data_imm_mux_a = 1
rf::rd_data_imm_mux_b = 0
rf::rd_data_bypass_mux_a = 1
rf::rd_data_bypass_mux_b = 1d1
rf::rf_eu_wr_addr = 0
rf::enable = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_a     = 01
rf::eu_rf_wr_addr_equal_rd_addr_a = 0
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_a = 0
rf::bypass_a = 0
rf::eu_rf_wr_addr = 00
rf::rd_addr_b     = 00
rf::eu_rf_wr_addr_equal_rd_addr_b = 1
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_b = 1
rf::bypass_b = 1
rf::eu_data_a = 1d1
rf::rd_data_a = 0000001d1
rf::rd_data_b = 00000001f
rf::rf_eu_v = 1
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 0000001d1
rf::eu_rf_wren    = 1
rf::rf_stall = 0
rf::   rf[0] = 0
rf::   rf[1] = 1
rf::   rf[2] = 2
rf::   rf[3] = 3
rf::   rf[4] = 4
rf::   rf[5] = 5
rf::   rf[6] = 6
rf::   rf[7] = 7
rf::   rf[8] = 8
rf::   rf[9] = 9
rf::   rf[a] = a
rf::   rf[b] = b
rf::   rf[c] = c
rf::   rf[d] = d
rf::   rf[e] = e
rf::   rf[f] = f
rf::   rf[10] = 10
rf::   rf[11] = 11
rf::   rf[12] = 12
rf::   rf[13] = 13
rf::   rf[14] = 14
rf::   rf[15] = 15
rf::   rf[16] = 16
rf::   rf[17] = 17
rf::   rf[18] = 18
rf::   rf[19] = 19
rf::   rf[1a] = 1a
rf::   rf[1b] = 1b
rf::   rf[1c] = 1c
rf::   rf[1d] = 1d
rf::   rf[1e] = 1e
rf::   rf[1f] = 1f
executionUnit::****************************************
executionUnit:: rf_eu_v=1
executionUnit::enable =1
executionUnit:: instReg=1f isInstFmtLas=1 instFmt=0
executionUnit:: rf_eu_ir = 00000001f
executionUnit:: las op = ELasAdd	 las op = 0
executionUnit:: src_a = 0000001d1
executionUnit:: src_b = 00000001f
executionUnit:: eu_rf_wr_data_las = 0
executionUnit:: eu_rf_wr_data_bit = 0
executionUnit:: id->dest = 0
executionUnit:: eu_rf_wr_data = 0000001d1
executionUnit:: eu_rf_wr_addr = 00
executionUnit:: eu_rf_wren             = 1
rf::****************************************
rf::v = 1
rf::instructionReg = 100
rf::reset_ = 1
rf::rd_addr_a = 01
rf::rden_a    = 1
rf::rd_addr_b = 00
rf::rden_b    = 1
rf:1 all read operation rd_addr_a = 01
rf:0 read operation rd_addr_b = 00
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 0000001f0
rf::eu_rf_wren    = 1
rf::swapbit_wr_data_a = 0
rf::swapbit_wr_addr_a = 0
rf::swapbit_wr_data_b = 0
rf::swapbit_wr_addr_b = 0
rf::swapbit_wren.writ = 0
rf::eu_rf_wren 	  = 1
rf::swap_wren 		  = 0
rf::swapbit_wren 	  = 0
rf::testbit_wren 	  = 0
rf::setbit_wren 	  = 0
rf::ldimm_ab_16_wren = 0
rf::rf_mux_in_wren_a = 0
rf::rf_mux_in_wren_b = 0
rf::enable = 1
rf::operandA = 0
rf::operandB = 0
rf::im_rf_ir.read()  = 100
rf::im_rf_instructionDecoder->getInstructionReg()  = 100
rf:: isInstFormatOpLas = 1
rf:: isInstFormatOpBit = 0
rf:: isInstFormatOpLdIm= 0
rf:: isInstFormatOpBr  = 0
rf:: getLdImmOperand16Field= 100
rf:: signExtend16(im_rf_instructionDecoder->getLdImmOperand16Field ()) = 100
rf:: rf_dest_data  = 1f
rf::im_rf_ir = 100
rf::eu_rf_ir = 00000001e
rf::op_imm_a = 1
rf::op_imm_b = 0
rf:: getOperandAImm8Field  = 1
rf:: getOperandBImm8Field  = 0
rf::signExtend8 (op_imm_a) = 1
rf::signExtend8 (op_imm_b) = 0
rf::signExtend16(op_imm_b) = 100
rf::rd_data_rf_a = 1
rf::rd_data_rf_b = 0
rf::rd_data_imm_a = 1
rf::rd_data_imm_b = 0
rf::rd_data_imm_mux_sel_a = 0
rf::rd_data_imm_mux_sel_b = 0
rf::rd_data_imm_mux_a = 1
rf::rd_data_imm_mux_b = 0
rf::rd_data_bypass_mux_a = 1
rf::rd_data_bypass_mux_b = 1f0
rf::rf_eu_wr_addr = 0
rf::enable = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_a     = 01
rf::eu_rf_wr_addr_equal_rd_addr_a = 0
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_a = 0
rf::bypass_a = 0
rf::eu_rf_wr_addr = 00
rf::rd_addr_b     = 00
rf::eu_rf_wr_addr_equal_rd_addr_b = 1
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_b = 1
rf::bypass_b = 1
rf::eu_data_a = 1f0
rf::rd_data_a = 0000001d1
rf::rd_data_b = 00000001f
rf::rf_eu_v = 1
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 0000001f0
rf::eu_rf_wren    = 1
rf::rf_stall = 0
rf::   rf[0] = 0
rf::   rf[1] = 1
rf::   rf[2] = 2
rf::   rf[3] = 3
rf::   rf[4] = 4
rf::   rf[5] = 5
rf::   rf[6] = 6
rf::   rf[7] = 7
rf::   rf[8] = 8
rf::   rf[9] = 9
rf::   rf[a] = a
rf::   rf[b] = b
rf::   rf[c] = c
rf::   rf[d] = d
rf::   rf[e] = e
rf::   rf[f] = f
rf::   rf[10] = 10
rf::   rf[11] = 11
rf::   rf[12] = 12
rf::   rf[13] = 13
rf::   rf[14] = 14
rf::   rf[15] = 15
rf::   rf[16] = 16
rf::   rf[17] = 17
rf::   rf[18] = 18
rf::   rf[19] = 19
rf::   rf[1a] = 1a
rf::   rf[1b] = 1b
rf::   rf[1c] = 1c
rf::   rf[1d] = 1d
rf::   rf[1e] = 1e
rf::   rf[1f] = 1f
   read op  buffer[41] = 200 im read operation  = 41 data = 100
 eu_branch = 0 pcx = 42 pc_inc = 42
reset_ = 1
enable = 1
eu_branch = 0
 pc_im_v   = 1
 im_rf_v   = 1
 rf_eu_v   = 1
 eu_rf_wren= 1
pc_im_address = 41
im.data = 100
npc_2 = 0001f
npc_3 = 0001e
npc_4 = 00000
pc_im_v = 1 im_RnW = 1 pc_im_address = 41  im_1 = 100
im_data = 100
ir_rf_3 = 00000001f
ir_eu_4 = 00000001e
 eu_branch.read() = 1
 pc_im_v   = 1
 im_rf_v   = 1
 rf_eu_v   = 1
 rf_rd_addr_a = 1
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 0000001d1
 rf_rd_data_b = 00000001f
 im_rf_v   = 1
 rf_eu_v = 1
 eu_rf_wren = 1
 eu_rf_wr_data  = 0000001f0
 eu_rf_wr_addr  = 00
rf::****************************************
rf::v = 1
rf::instructionReg = 200
rf::reset_ = 1
rf::rd_addr_a = 02
rf::rden_a    = 1
rf::rd_addr_b = 00
rf::rden_b    = 1
rf:1 all read operation rd_addr_a = 02
rf:0 read operation rd_addr_b = 00
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 0000001f0
rf::eu_rf_wren    = 1
rf::swapbit_wr_data_a = 0
rf::swapbit_wr_addr_a = 0
rf::swapbit_wr_data_b = 0
rf::swapbit_wr_addr_b = 0
rf::swapbit_wren.writ = 0
rf::eu_rf_wren 	  = 1
rf::swap_wren 		  = 0
rf::swapbit_wren 	  = 0
rf::testbit_wren 	  = 0
rf::setbit_wren 	  = 0
rf::ldimm_ab_16_wren = 0
rf::rf_mux_in_wren_a = 0
rf::rf_mux_in_wren_b = 0
rf::enable = 1
rf::operandA = 0
rf::operandB = 0
rf::im_rf_ir.read()  = 200
rf::im_rf_instructionDecoder->getInstructionReg()  = 200
rf:: isInstFormatOpLas = 1
rf:: isInstFormatOpBit = 0
rf:: isInstFormatOpLdIm= 0
rf:: isInstFormatOpBr  = 0
rf:: getLdImmOperand16Field= 200
rf:: signExtend16(im_rf_instructionDecoder->getLdImmOperand16Field ()) = 200
rf:: rf_dest_data  = 1f
rf::im_rf_ir = 200
rf::eu_rf_ir = 00000001f
rf::op_imm_a = 2
rf::op_imm_b = 0
rf:: getOperandAImm8Field  = 2
rf:: getOperandBImm8Field  = 0
rf::signExtend8 (op_imm_a) = 2
rf::signExtend8 (op_imm_b) = 0
rf::signExtend16(op_imm_b) = 200
rf::rd_data_rf_a = 2
rf::rd_data_rf_b = 0
rf::rd_data_imm_a = 2
rf::rd_data_imm_b = 0
rf::rd_data_imm_mux_sel_a = 0
rf::rd_data_imm_mux_sel_b = 0
rf::rd_data_imm_mux_a = 2
rf::rd_data_imm_mux_b = 0
rf::rd_data_bypass_mux_a = 2
rf::rd_data_bypass_mux_b = 1f0
rf::rf_eu_wr_addr = 0
rf::enable = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_a     = 02
rf::eu_rf_wr_addr_equal_rd_addr_a = 0
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_a = 0
rf::bypass_a = 0
rf::eu_rf_wr_addr = 00
rf::rd_addr_b     = 00
rf::eu_rf_wr_addr_equal_rd_addr_b = 1
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_b = 1
rf::bypass_b = 1
rf::eu_data_a = 1f0
rf::rd_data_a = 000000001
rf::rd_data_b = 0000001f0
rf::rf_eu_v = 1
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 0000001f0
rf::eu_rf_wren    = 1
rf::rf_stall = 0
rf::   rf[0] = 0
rf::   rf[1] = 1
rf::   rf[2] = 2
rf::   rf[3] = 3
rf::   rf[4] = 4
rf::   rf[5] = 5
rf::   rf[6] = 6
rf::   rf[7] = 7
rf::   rf[8] = 8
rf::   rf[9] = 9
rf::   rf[a] = a
rf::   rf[b] = b
rf::   rf[c] = c
rf::   rf[d] = d
rf::   rf[e] = e
rf::   rf[f] = f
rf::   rf[10] = 10
rf::   rf[11] = 11
rf::   rf[12] = 12
rf::   rf[13] = 13
rf::   rf[14] = 14
rf::   rf[15] = 15
rf::   rf[16] = 16
rf::   rf[17] = 17
rf::   rf[18] = 18
rf::   rf[19] = 19
rf::   rf[1a] = 1a
rf::   rf[1b] = 1b
rf::   rf[1c] = 1c
rf::   rf[1d] = 1d
rf::   rf[1e] = 1e
rf::   rf[1f] = 1f
executionUnit::****************************************
executionUnit:: rf_eu_v=1
executionUnit::enable =1
executionUnit:: instReg=100 isInstFmtLas=1 instFmt=0
executionUnit:: rf_eu_ir = 000000100
executionUnit:: las op = ELasAdd	 las op = 0
executionUnit:: src_a = 000000001
executionUnit:: src_b = 0000001f0
executionUnit:: eu_rf_wr_data_las = 0
executionUnit:: eu_rf_wr_data_bit = 0
executionUnit:: id->dest = 0
executionUnit:: eu_rf_wr_data = 0000001f0
executionUnit:: eu_rf_wr_addr = 00
executionUnit:: eu_rf_wren             = 1
rf::****************************************
rf::v = 1
rf::instructionReg = 200
rf::reset_ = 1
rf::rd_addr_a = 02
rf::rden_a    = 1
rf::rd_addr_b = 00
rf::rden_b    = 1
rf:1 all read operation rd_addr_a = 02
rf:0 read operation rd_addr_b = 00
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 0000001f1
rf::eu_rf_wren    = 1
rf::swapbit_wr_data_a = 0
rf::swapbit_wr_addr_a = 0
rf::swapbit_wr_data_b = 0
rf::swapbit_wr_addr_b = 0
rf::swapbit_wren.writ = 0
rf::eu_rf_wren 	  = 1
rf::swap_wren 		  = 0
rf::swapbit_wren 	  = 0
rf::testbit_wren 	  = 0
rf::setbit_wren 	  = 0
rf::ldimm_ab_16_wren = 0
rf::rf_mux_in_wren_a = 0
rf::rf_mux_in_wren_b = 0
rf::enable = 1
rf::operandA = 0
rf::operandB = 0
rf::im_rf_ir.read()  = 200
rf::im_rf_instructionDecoder->getInstructionReg()  = 200
rf:: isInstFormatOpLas = 1
rf:: isInstFormatOpBit = 0
rf:: isInstFormatOpLdIm= 0
rf:: isInstFormatOpBr  = 0
rf:: getLdImmOperand16Field= 200
rf:: signExtend16(im_rf_instructionDecoder->getLdImmOperand16Field ()) = 200
rf:: rf_dest_data  = 1f
rf::im_rf_ir = 200
rf::eu_rf_ir = 00000001f
rf::op_imm_a = 2
rf::op_imm_b = 0
rf:: getOperandAImm8Field  = 2
rf:: getOperandBImm8Field  = 0
rf::signExtend8 (op_imm_a) = 2
rf::signExtend8 (op_imm_b) = 0
rf::signExtend16(op_imm_b) = 200
rf::rd_data_rf_a = 2
rf::rd_data_rf_b = 0
rf::rd_data_imm_a = 2
rf::rd_data_imm_b = 0
rf::rd_data_imm_mux_sel_a = 0
rf::rd_data_imm_mux_sel_b = 0
rf::rd_data_imm_mux_a = 2
rf::rd_data_imm_mux_b = 0
rf::rd_data_bypass_mux_a = 2
rf::rd_data_bypass_mux_b = 1f1
rf::rf_eu_wr_addr = 0
rf::enable = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_a     = 02
rf::eu_rf_wr_addr_equal_rd_addr_a = 0
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_a = 0
rf::bypass_a = 0
rf::eu_rf_wr_addr = 00
rf::rd_addr_b     = 00
rf::eu_rf_wr_addr_equal_rd_addr_b = 1
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_b = 1
rf::bypass_b = 1
rf::eu_data_a = 1f1
rf::rd_data_a = 000000001
rf::rd_data_b = 0000001f0
rf::rf_eu_v = 1
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 0000001f1
rf::eu_rf_wren    = 1
rf::rf_stall = 0
rf::   rf[0] = 0
rf::   rf[1] = 1
rf::   rf[2] = 2
rf::   rf[3] = 3
rf::   rf[4] = 4
rf::   rf[5] = 5
rf::   rf[6] = 6
rf::   rf[7] = 7
rf::   rf[8] = 8
rf::   rf[9] = 9
rf::   rf[a] = a
rf::   rf[b] = b
rf::   rf[c] = c
rf::   rf[d] = d
rf::   rf[e] = e
rf::   rf[f] = f
rf::   rf[10] = 10
rf::   rf[11] = 11
rf::   rf[12] = 12
rf::   rf[13] = 13
rf::   rf[14] = 14
rf::   rf[15] = 15
rf::   rf[16] = 16
rf::   rf[17] = 17
rf::   rf[18] = 18
rf::   rf[19] = 19
rf::   rf[1a] = 1a
rf::   rf[1b] = 1b
rf::   rf[1c] = 1c
rf::   rf[1d] = 1d
rf::   rf[1e] = 1e
rf::   rf[1f] = 1f
   read op  buffer[42] = 300 im read operation  = 42 data = 200
 eu_branch = 0 pcx = 43 pc_inc = 43
reset_ = 1
enable = 1
eu_branch = 0
 pc_im_v   = 1
 im_rf_v   = 1
 rf_eu_v   = 1
 eu_rf_wren= 1
pc_im_address = 42
im.data = 200
npc_2 = 00000
npc_3 = 0001f
npc_4 = 00000
pc_im_v = 1 im_RnW = 1 pc_im_address = 42  im_1 = 200
im_data = 200
ir_rf_3 = 000000100
ir_eu_4 = 00000001f
 eu_branch.read() = 1
 pc_im_v   = 1
 im_rf_v   = 1
 rf_eu_v   = 1
 rf_rd_addr_a = 2
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000001
 rf_rd_data_b = 0000001f0
 im_rf_v   = 1
 rf_eu_v = 1
 eu_rf_wren = 1
 eu_rf_wr_data  = 0000001f1
 eu_rf_wr_addr  = 00
rf::****************************************
rf::v = 1
rf::instructionReg = 300
rf::reset_ = 1
rf::rd_addr_a = 03
rf::rden_a    = 1
rf::rd_addr_b = 00
rf::rden_b    = 1
rf:1 all read operation rd_addr_a = 03
rf:0 read operation rd_addr_b = 00
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 0000001f1
rf::eu_rf_wren    = 1
rf::swapbit_wr_data_a = 0
rf::swapbit_wr_addr_a = 0
rf::swapbit_wr_data_b = 0
rf::swapbit_wr_addr_b = 0
rf::swapbit_wren.writ = 0
rf::eu_rf_wren 	  = 1
rf::swap_wren 		  = 0
rf::swapbit_wren 	  = 0
rf::testbit_wren 	  = 0
rf::setbit_wren 	  = 0
rf::ldimm_ab_16_wren = 0
rf::rf_mux_in_wren_a = 0
rf::rf_mux_in_wren_b = 0
rf::enable = 1
rf::operandA = 0
rf::operandB = 0
rf::im_rf_ir.read()  = 300
rf::im_rf_instructionDecoder->getInstructionReg()  = 300
rf:: isInstFormatOpLas = 1
rf:: isInstFormatOpBit = 0
rf:: isInstFormatOpLdIm= 0
rf:: isInstFormatOpBr  = 0
rf:: getLdImmOperand16Field= 300
rf:: signExtend16(im_rf_instructionDecoder->getLdImmOperand16Field ()) = 300
rf:: rf_dest_data  = 1f
rf::im_rf_ir = 300
rf::eu_rf_ir = 000000100
rf::op_imm_a = 3
rf::op_imm_b = 0
rf:: getOperandAImm8Field  = 3
rf:: getOperandBImm8Field  = 0
rf::signExtend8 (op_imm_a) = 3
rf::signExtend8 (op_imm_b) = 0
rf::signExtend16(op_imm_b) = 300
rf::rd_data_rf_a = 3
rf::rd_data_rf_b = 0
rf::rd_data_imm_a = 3
rf::rd_data_imm_b = 0
rf::rd_data_imm_mux_sel_a = 0
rf::rd_data_imm_mux_sel_b = 0
rf::rd_data_imm_mux_a = 3
rf::rd_data_imm_mux_b = 0
rf::rd_data_bypass_mux_a = 3
rf::rd_data_bypass_mux_b = 1f1
rf::rf_eu_wr_addr = 0
rf::enable = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_a     = 03
rf::eu_rf_wr_addr_equal_rd_addr_a = 0
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_a = 0
rf::bypass_a = 0
rf::eu_rf_wr_addr = 00
rf::rd_addr_b     = 00
rf::eu_rf_wr_addr_equal_rd_addr_b = 1
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_b = 1
rf::bypass_b = 1
rf::eu_data_a = 1f1
rf::rd_data_a = 000000002
rf::rd_data_b = 0000001f1
rf::rf_eu_v = 1
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 0000001f1
rf::eu_rf_wren    = 1
rf::rf_stall = 0
rf::   rf[0] = 0
rf::   rf[1] = 1
rf::   rf[2] = 2
rf::   rf[3] = 3
rf::   rf[4] = 4
rf::   rf[5] = 5
rf::   rf[6] = 6
rf::   rf[7] = 7
rf::   rf[8] = 8
rf::   rf[9] = 9
rf::   rf[a] = a
rf::   rf[b] = b
rf::   rf[c] = c
rf::   rf[d] = d
rf::   rf[e] = e
rf::   rf[f] = f
rf::   rf[10] = 10
rf::   rf[11] = 11
rf::   rf[12] = 12
rf::   rf[13] = 13
rf::   rf[14] = 14
rf::   rf[15] = 15
rf::   rf[16] = 16
rf::   rf[17] = 17
rf::   rf[18] = 18
rf::   rf[19] = 19
rf::   rf[1a] = 1a
rf::   rf[1b] = 1b
rf::   rf[1c] = 1c
rf::   rf[1d] = 1d
rf::   rf[1e] = 1e
rf::   rf[1f] = 1f
executionUnit::****************************************
executionUnit:: rf_eu_v=1
executionUnit::enable =1
executionUnit:: instReg=200 isInstFmtLas=1 instFmt=0
executionUnit:: rf_eu_ir = 000000200
executionUnit:: las op = ELasAdd	 las op = 0
executionUnit:: src_a = 000000002
executionUnit:: src_b = 0000001f1
executionUnit:: eu_rf_wr_data_las = 0
executionUnit:: eu_rf_wr_data_bit = 0
executionUnit:: id->dest = 0
executionUnit:: eu_rf_wr_data = 0000001f1
executionUnit:: eu_rf_wr_addr = 00
executionUnit:: eu_rf_wren             = 1
rf::****************************************
rf::v = 1
rf::instructionReg = 300
rf::reset_ = 1
rf::rd_addr_a = 03
rf::rden_a    = 1
rf::rd_addr_b = 00
rf::rden_b    = 1
rf:1 all read operation rd_addr_a = 03
rf:0 read operation rd_addr_b = 00
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 0000001f3
rf::eu_rf_wren    = 1
rf::swapbit_wr_data_a = 0
rf::swapbit_wr_addr_a = 0
rf::swapbit_wr_data_b = 0
rf::swapbit_wr_addr_b = 0
rf::swapbit_wren.writ = 0
rf::eu_rf_wren 	  = 1
rf::swap_wren 		  = 0
rf::swapbit_wren 	  = 0
rf::testbit_wren 	  = 0
rf::setbit_wren 	  = 0
rf::ldimm_ab_16_wren = 0
rf::rf_mux_in_wren_a = 0
rf::rf_mux_in_wren_b = 0
rf::enable = 1
rf::operandA = 0
rf::operandB = 0
rf::im_rf_ir.read()  = 300
rf::im_rf_instructionDecoder->getInstructionReg()  = 300
rf:: isInstFormatOpLas = 1
rf:: isInstFormatOpBit = 0
rf:: isInstFormatOpLdIm= 0
rf:: isInstFormatOpBr  = 0
rf:: getLdImmOperand16Field= 300
rf:: signExtend16(im_rf_instructionDecoder->getLdImmOperand16Field ()) = 300
rf:: rf_dest_data  = 1f
rf::im_rf_ir = 300
rf::eu_rf_ir = 000000100
rf::op_imm_a = 3
rf::op_imm_b = 0
rf:: getOperandAImm8Field  = 3
rf:: getOperandBImm8Field  = 0
rf::signExtend8 (op_imm_a) = 3
rf::signExtend8 (op_imm_b) = 0
rf::signExtend16(op_imm_b) = 300
rf::rd_data_rf_a = 3
rf::rd_data_rf_b = 0
rf::rd_data_imm_a = 3
rf::rd_data_imm_b = 0
rf::rd_data_imm_mux_sel_a = 0
rf::rd_data_imm_mux_sel_b = 0
rf::rd_data_imm_mux_a = 3
rf::rd_data_imm_mux_b = 0
rf::rd_data_bypass_mux_a = 3
rf::rd_data_bypass_mux_b = 1f3
rf::rf_eu_wr_addr = 0
rf::enable = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_a     = 03
rf::eu_rf_wr_addr_equal_rd_addr_a = 0
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_a = 0
rf::bypass_a = 0
rf::eu_rf_wr_addr = 00
rf::rd_addr_b     = 00
rf::eu_rf_wr_addr_equal_rd_addr_b = 1
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_b = 1
rf::bypass_b = 1
rf::eu_data_a = 1f3
rf::rd_data_a = 000000002
rf::rd_data_b = 0000001f1
rf::rf_eu_v = 1
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 0000001f3
rf::eu_rf_wren    = 1
rf::rf_stall = 0
rf::   rf[0] = 0
rf::   rf[1] = 1
rf::   rf[2] = 2
rf::   rf[3] = 3
rf::   rf[4] = 4
rf::   rf[5] = 5
rf::   rf[6] = 6
rf::   rf[7] = 7
rf::   rf[8] = 8
rf::   rf[9] = 9
rf::   rf[a] = a
rf::   rf[b] = b
rf::   rf[c] = c
rf::   rf[d] = d
rf::   rf[e] = e
rf::   rf[f] = f
rf::   rf[10] = 10
rf::   rf[11] = 11
rf::   rf[12] = 12
rf::   rf[13] = 13
rf::   rf[14] = 14
rf::   rf[15] = 15
rf::   rf[16] = 16
rf::   rf[17] = 17
rf::   rf[18] = 18
rf::   rf[19] = 19
rf::   rf[1a] = 1a
rf::   rf[1b] = 1b
rf::   rf[1c] = 1c
rf::   rf[1d] = 1d
rf::   rf[1e] = 1e
rf::   rf[1f] = 1f
   read op  buffer[43] = 400 im read operation  = 43 data = 300
 eu_branch = 0 pcx = 44 pc_inc = 44
reset_ = 1
enable = 1
eu_branch = 0
 pc_im_v   = 1
 im_rf_v   = 1
 rf_eu_v   = 1
 eu_rf_wren= 1
pc_im_address = 43
im.data = 300
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 1 pc_im_address = 43  im_1 = 300
im_data = 300
ir_rf_3 = 000000200
ir_eu_4 = 000000100
 eu_branch.read() = 1
 pc_im_v   = 1
 im_rf_v   = 1
 rf_eu_v   = 1
 rf_rd_addr_a = 3
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000002
 rf_rd_data_b = 0000001f1
 im_rf_v   = 1
 rf_eu_v = 1
 eu_rf_wren = 1
 eu_rf_wr_data  = 0000001f3
 eu_rf_wr_addr  = 00
rf::****************************************
rf::v = 1
rf::instructionReg = 400
rf::reset_ = 1
rf::rd_addr_a = 04
rf::rden_a    = 1
rf::rd_addr_b = 00
rf::rden_b    = 1
rf:1 all read operation rd_addr_a = 04
rf:0 read operation rd_addr_b = 00
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 0000001f3
rf::eu_rf_wren    = 1
rf::swapbit_wr_data_a = 0
rf::swapbit_wr_addr_a = 0
rf::swapbit_wr_data_b = 0
rf::swapbit_wr_addr_b = 0
rf::swapbit_wren.writ = 0
rf::eu_rf_wren 	  = 1
rf::swap_wren 		  = 0
rf::swapbit_wren 	  = 0
rf::testbit_wren 	  = 0
rf::setbit_wren 	  = 0
rf::ldimm_ab_16_wren = 0
rf::rf_mux_in_wren_a = 0
rf::rf_mux_in_wren_b = 0
rf::enable = 1
rf::operandA = 0
rf::operandB = 0
rf::im_rf_ir.read()  = 400
rf::im_rf_instructionDecoder->getInstructionReg()  = 400
rf:: isInstFormatOpLas = 1
rf:: isInstFormatOpBit = 0
rf:: isInstFormatOpLdIm= 0
rf:: isInstFormatOpBr  = 0
rf:: getLdImmOperand16Field= 400
rf:: signExtend16(im_rf_instructionDecoder->getLdImmOperand16Field ()) = 400
rf:: rf_dest_data  = 1f
rf::im_rf_ir = 400
rf::eu_rf_ir = 000000200
rf::op_imm_a = 4
rf::op_imm_b = 0
rf:: getOperandAImm8Field  = 4
rf:: getOperandBImm8Field  = 0
rf::signExtend8 (op_imm_a) = 4
rf::signExtend8 (op_imm_b) = 0
rf::signExtend16(op_imm_b) = 400
rf::rd_data_rf_a = 4
rf::rd_data_rf_b = 0
rf::rd_data_imm_a = 4
rf::rd_data_imm_b = 0
rf::rd_data_imm_mux_sel_a = 0
rf::rd_data_imm_mux_sel_b = 0
rf::rd_data_imm_mux_a = 4
rf::rd_data_imm_mux_b = 0
rf::rd_data_bypass_mux_a = 4
rf::rd_data_bypass_mux_b = 1f3
rf::rf_eu_wr_addr = 0
rf::enable = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_a     = 04
rf::eu_rf_wr_addr_equal_rd_addr_a = 0
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_a = 0
rf::bypass_a = 0
rf::eu_rf_wr_addr = 00
rf::rd_addr_b     = 00
rf::eu_rf_wr_addr_equal_rd_addr_b = 1
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_b = 1
rf::bypass_b = 1
rf::eu_data_a = 1f3
rf::rd_data_a = 000000003
rf::rd_data_b = 0000001f3
rf::rf_eu_v = 1
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 0000001f3
rf::eu_rf_wren    = 1
rf::rf_stall = 0
rf::   rf[0] = 0
rf::   rf[1] = 1
rf::   rf[2] = 2
rf::   rf[3] = 3
rf::   rf[4] = 4
rf::   rf[5] = 5
rf::   rf[6] = 6
rf::   rf[7] = 7
rf::   rf[8] = 8
rf::   rf[9] = 9
rf::   rf[a] = a
rf::   rf[b] = b
rf::   rf[c] = c
rf::   rf[d] = d
rf::   rf[e] = e
rf::   rf[f] = f
rf::   rf[10] = 10
rf::   rf[11] = 11
rf::   rf[12] = 12
rf::   rf[13] = 13
rf::   rf[14] = 14
rf::   rf[15] = 15
rf::   rf[16] = 16
rf::   rf[17] = 17
rf::   rf[18] = 18
rf::   rf[19] = 19
rf::   rf[1a] = 1a
rf::   rf[1b] = 1b
rf::   rf[1c] = 1c
rf::   rf[1d] = 1d
rf::   rf[1e] = 1e
rf::   rf[1f] = 1f
executionUnit::****************************************
executionUnit:: rf_eu_v=1
executionUnit::enable =1
executionUnit:: instReg=300 isInstFmtLas=1 instFmt=0
executionUnit:: rf_eu_ir = 000000300
executionUnit:: las op = ELasAdd	 las op = 0
executionUnit:: src_a = 000000003
executionUnit:: src_b = 0000001f3
executionUnit:: eu_rf_wr_data_las = 0
executionUnit:: eu_rf_wr_data_bit = 0
executionUnit:: id->dest = 0
executionUnit:: eu_rf_wr_data = 0000001f3
executionUnit:: eu_rf_wr_addr = 00
executionUnit:: eu_rf_wren             = 1
rf::****************************************
rf::v = 1
rf::instructionReg = 400
rf::reset_ = 1
rf::rd_addr_a = 04
rf::rden_a    = 1
rf::rd_addr_b = 00
rf::rden_b    = 1
rf:1 all read operation rd_addr_a = 04
rf:0 read operation rd_addr_b = 00
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 0000001f6
rf::eu_rf_wren    = 1
rf::swapbit_wr_data_a = 0
rf::swapbit_wr_addr_a = 0
rf::swapbit_wr_data_b = 0
rf::swapbit_wr_addr_b = 0
rf::swapbit_wren.writ = 0
rf::eu_rf_wren 	  = 1
rf::swap_wren 		  = 0
rf::swapbit_wren 	  = 0
rf::testbit_wren 	  = 0
rf::setbit_wren 	  = 0
rf::ldimm_ab_16_wren = 0
rf::rf_mux_in_wren_a = 0
rf::rf_mux_in_wren_b = 0
rf::enable = 1
rf::operandA = 0
rf::operandB = 0
rf::im_rf_ir.read()  = 400
rf::im_rf_instructionDecoder->getInstructionReg()  = 400
rf:: isInstFormatOpLas = 1
rf:: isInstFormatOpBit = 0
rf:: isInstFormatOpLdIm= 0
rf:: isInstFormatOpBr  = 0
rf:: getLdImmOperand16Field= 400
rf:: signExtend16(im_rf_instructionDecoder->getLdImmOperand16Field ()) = 400
rf:: rf_dest_data  = 1f
rf::im_rf_ir = 400
rf::eu_rf_ir = 000000200
rf::op_imm_a = 4
rf::op_imm_b = 0
rf:: getOperandAImm8Field  = 4
rf:: getOperandBImm8Field  = 0
rf::signExtend8 (op_imm_a) = 4
rf::signExtend8 (op_imm_b) = 0
rf::signExtend16(op_imm_b) = 400
rf::rd_data_rf_a = 4
rf::rd_data_rf_b = 0
rf::rd_data_imm_a = 4
rf::rd_data_imm_b = 0
rf::rd_data_imm_mux_sel_a = 0
rf::rd_data_imm_mux_sel_b = 0
rf::rd_data_imm_mux_a = 4
rf::rd_data_imm_mux_b = 0
rf::rd_data_bypass_mux_a = 4
rf::rd_data_bypass_mux_b = 1f6
rf::rf_eu_wr_addr = 0
rf::enable = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_a     = 04
rf::eu_rf_wr_addr_equal_rd_addr_a = 0
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_a = 0
rf::bypass_a = 0
rf::eu_rf_wr_addr = 00
rf::rd_addr_b     = 00
rf::eu_rf_wr_addr_equal_rd_addr_b = 1
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_b = 1
rf::bypass_b = 1
rf::eu_data_a = 1f6
rf::rd_data_a = 000000003
rf::rd_data_b = 0000001f3
rf::rf_eu_v = 1
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 0000001f6
rf::eu_rf_wren    = 1
rf::rf_stall = 0
rf::   rf[0] = 0
rf::   rf[1] = 1
rf::   rf[2] = 2
rf::   rf[3] = 3
rf::   rf[4] = 4
rf::   rf[5] = 5
rf::   rf[6] = 6
rf::   rf[7] = 7
rf::   rf[8] = 8
rf::   rf[9] = 9
rf::   rf[a] = a
rf::   rf[b] = b
rf::   rf[c] = c
rf::   rf[d] = d
rf::   rf[e] = e
rf::   rf[f] = f
rf::   rf[10] = 10
rf::   rf[11] = 11
rf::   rf[12] = 12
rf::   rf[13] = 13
rf::   rf[14] = 14
rf::   rf[15] = 15
rf::   rf[16] = 16
rf::   rf[17] = 17
rf::   rf[18] = 18
rf::   rf[19] = 19
rf::   rf[1a] = 1a
rf::   rf[1b] = 1b
rf::   rf[1c] = 1c
rf::   rf[1d] = 1d
rf::   rf[1e] = 1e
rf::   rf[1f] = 1f
   read op  buffer[44] = 500 im read operation  = 44 data = 400
 eu_branch = 0 pcx = 45 pc_inc = 45
reset_ = 1
enable = 1
eu_branch = 0
 pc_im_v   = 1
 im_rf_v   = 1
 rf_eu_v   = 1
 eu_rf_wren= 1
pc_im_address = 44
im.data = 400
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 1 pc_im_address = 44  im_1 = 400
im_data = 400
ir_rf_3 = 000000300
ir_eu_4 = 000000200
 eu_branch.read() = 1
 pc_im_v   = 1
 im_rf_v   = 1
 rf_eu_v   = 1
 rf_rd_addr_a = 4
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000003
 rf_rd_data_b = 0000001f3
 im_rf_v   = 1
 rf_eu_v = 1
 eu_rf_wren = 1
 eu_rf_wr_data  = 0000001f6
 eu_rf_wr_addr  = 00
rf::****************************************
rf::v = 1
rf::instructionReg = 500
rf::reset_ = 1
rf::rd_addr_a = 05
rf::rden_a    = 1
rf::rd_addr_b = 00
rf::rden_b    = 1
rf:1 all read operation rd_addr_a = 05
rf:0 read operation rd_addr_b = 00
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 0000001f6
rf::eu_rf_wren    = 1
rf::swapbit_wr_data_a = 0
rf::swapbit_wr_addr_a = 0
rf::swapbit_wr_data_b = 0
rf::swapbit_wr_addr_b = 0
rf::swapbit_wren.writ = 0
rf::eu_rf_wren 	  = 1
rf::swap_wren 		  = 0
rf::swapbit_wren 	  = 0
rf::testbit_wren 	  = 0
rf::setbit_wren 	  = 0
rf::ldimm_ab_16_wren = 0
rf::rf_mux_in_wren_a = 0
rf::rf_mux_in_wren_b = 0
rf::enable = 1
rf::operandA = 0
rf::operandB = 0
rf::im_rf_ir.read()  = 500
rf::im_rf_instructionDecoder->getInstructionReg()  = 500
rf:: isInstFormatOpLas = 1
rf:: isInstFormatOpBit = 0
rf:: isInstFormatOpLdIm= 0
rf:: isInstFormatOpBr  = 0
rf:: getLdImmOperand16Field= 500
rf:: signExtend16(im_rf_instructionDecoder->getLdImmOperand16Field ()) = 500
rf:: rf_dest_data  = 1f
rf::im_rf_ir = 500
rf::eu_rf_ir = 000000300
rf::op_imm_a = 5
rf::op_imm_b = 0
rf:: getOperandAImm8Field  = 5
rf:: getOperandBImm8Field  = 0
rf::signExtend8 (op_imm_a) = 5
rf::signExtend8 (op_imm_b) = 0
rf::signExtend16(op_imm_b) = 500
rf::rd_data_rf_a = 5
rf::rd_data_rf_b = 0
rf::rd_data_imm_a = 5
rf::rd_data_imm_b = 0
rf::rd_data_imm_mux_sel_a = 0
rf::rd_data_imm_mux_sel_b = 0
rf::rd_data_imm_mux_a = 5
rf::rd_data_imm_mux_b = 0
rf::rd_data_bypass_mux_a = 5
rf::rd_data_bypass_mux_b = 1f6
rf::rf_eu_wr_addr = 0
rf::enable = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_a     = 05
rf::eu_rf_wr_addr_equal_rd_addr_a = 0
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_a = 0
rf::bypass_a = 0
rf::eu_rf_wr_addr = 00
rf::rd_addr_b     = 00
rf::eu_rf_wr_addr_equal_rd_addr_b = 1
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_b = 1
rf::bypass_b = 1
rf::eu_data_a = 1f6
rf::rd_data_a = 000000004
rf::rd_data_b = 0000001f6
rf::rf_eu_v = 1
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 0000001f6
rf::eu_rf_wren    = 1
rf::rf_stall = 0
rf::   rf[0] = 0
rf::   rf[1] = 1
rf::   rf[2] = 2
rf::   rf[3] = 3
rf::   rf[4] = 4
rf::   rf[5] = 5
rf::   rf[6] = 6
rf::   rf[7] = 7
rf::   rf[8] = 8
rf::   rf[9] = 9
rf::   rf[a] = a
rf::   rf[b] = b
rf::   rf[c] = c
rf::   rf[d] = d
rf::   rf[e] = e
rf::   rf[f] = f
rf::   rf[10] = 10
rf::   rf[11] = 11
rf::   rf[12] = 12
rf::   rf[13] = 13
rf::   rf[14] = 14
rf::   rf[15] = 15
rf::   rf[16] = 16
rf::   rf[17] = 17
rf::   rf[18] = 18
rf::   rf[19] = 19
rf::   rf[1a] = 1a
rf::   rf[1b] = 1b
rf::   rf[1c] = 1c
rf::   rf[1d] = 1d
rf::   rf[1e] = 1e
rf::   rf[1f] = 1f
executionUnit::****************************************
executionUnit:: rf_eu_v=1
executionUnit::enable =1
executionUnit:: instReg=400 isInstFmtLas=1 instFmt=0
executionUnit:: rf_eu_ir = 000000400
executionUnit:: las op = ELasAdd	 las op = 0
executionUnit:: src_a = 000000004
executionUnit:: src_b = 0000001f6
executionUnit:: eu_rf_wr_data_las = 0
executionUnit:: eu_rf_wr_data_bit = 0
executionUnit:: id->dest = 0
executionUnit:: eu_rf_wr_data = 0000001f6
executionUnit:: eu_rf_wr_addr = 00
executionUnit:: eu_rf_wren             = 1
rf::****************************************
rf::v = 1
rf::instructionReg = 500
rf::reset_ = 1
rf::rd_addr_a = 05
rf::rden_a    = 1
rf::rd_addr_b = 00
rf::rden_b    = 1
rf:1 all read operation rd_addr_a = 05
rf:0 read operation rd_addr_b = 00
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 0000001fa
rf::eu_rf_wren    = 1
rf::swapbit_wr_data_a = 0
rf::swapbit_wr_addr_a = 0
rf::swapbit_wr_data_b = 0
rf::swapbit_wr_addr_b = 0
rf::swapbit_wren.writ = 0
rf::eu_rf_wren 	  = 1
rf::swap_wren 		  = 0
rf::swapbit_wren 	  = 0
rf::testbit_wren 	  = 0
rf::setbit_wren 	  = 0
rf::ldimm_ab_16_wren = 0
rf::rf_mux_in_wren_a = 0
rf::rf_mux_in_wren_b = 0
rf::enable = 1
rf::operandA = 0
rf::operandB = 0
rf::im_rf_ir.read()  = 500
rf::im_rf_instructionDecoder->getInstructionReg()  = 500
rf:: isInstFormatOpLas = 1
rf:: isInstFormatOpBit = 0
rf:: isInstFormatOpLdIm= 0
rf:: isInstFormatOpBr  = 0
rf:: getLdImmOperand16Field= 500
rf:: signExtend16(im_rf_instructionDecoder->getLdImmOperand16Field ()) = 500
rf:: rf_dest_data  = 1f
rf::im_rf_ir = 500
rf::eu_rf_ir = 000000300
rf::op_imm_a = 5
rf::op_imm_b = 0
rf:: getOperandAImm8Field  = 5
rf:: getOperandBImm8Field  = 0
rf::signExtend8 (op_imm_a) = 5
rf::signExtend8 (op_imm_b) = 0
rf::signExtend16(op_imm_b) = 500
rf::rd_data_rf_a = 5
rf::rd_data_rf_b = 0
rf::rd_data_imm_a = 5
rf::rd_data_imm_b = 0
rf::rd_data_imm_mux_sel_a = 0
rf::rd_data_imm_mux_sel_b = 0
rf::rd_data_imm_mux_a = 5
rf::rd_data_imm_mux_b = 0
rf::rd_data_bypass_mux_a = 5
rf::rd_data_bypass_mux_b = 1fa
rf::rf_eu_wr_addr = 0
rf::enable = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_a     = 05
rf::eu_rf_wr_addr_equal_rd_addr_a = 0
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_a = 0
rf::bypass_a = 0
rf::eu_rf_wr_addr = 00
rf::rd_addr_b     = 00
rf::eu_rf_wr_addr_equal_rd_addr_b = 1
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_b = 1
rf::bypass_b = 1
rf::eu_data_a = 1fa
rf::rd_data_a = 000000004
rf::rd_data_b = 0000001f6
rf::rf_eu_v = 1
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 0000001fa
rf::eu_rf_wren    = 1
rf::rf_stall = 0
rf::   rf[0] = 0
rf::   rf[1] = 1
rf::   rf[2] = 2
rf::   rf[3] = 3
rf::   rf[4] = 4
rf::   rf[5] = 5
rf::   rf[6] = 6
rf::   rf[7] = 7
rf::   rf[8] = 8
rf::   rf[9] = 9
rf::   rf[a] = a
rf::   rf[b] = b
rf::   rf[c] = c
rf::   rf[d] = d
rf::   rf[e] = e
rf::   rf[f] = f
rf::   rf[10] = 10
rf::   rf[11] = 11
rf::   rf[12] = 12
rf::   rf[13] = 13
rf::   rf[14] = 14
rf::   rf[15] = 15
rf::   rf[16] = 16
rf::   rf[17] = 17
rf::   rf[18] = 18
rf::   rf[19] = 19
rf::   rf[1a] = 1a
rf::   rf[1b] = 1b
rf::   rf[1c] = 1c
rf::   rf[1d] = 1d
rf::   rf[1e] = 1e
rf::   rf[1f] = 1f
   read op  buffer[45] = 600 im read operation  = 45 data = 500
 eu_branch = 0 pcx = 46 pc_inc = 46
reset_ = 1
enable = 1
eu_branch = 0
 pc_im_v   = 1
 im_rf_v   = 1
 rf_eu_v   = 1
 eu_rf_wren= 1
pc_im_address = 45
im.data = 500
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 1 pc_im_address = 45  im_1 = 500
im_data = 500
ir_rf_3 = 000000400
ir_eu_4 = 000000300
 eu_branch.read() = 1
 pc_im_v   = 1
 im_rf_v   = 1
 rf_eu_v   = 1
 rf_rd_addr_a = 5
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000004
 rf_rd_data_b = 0000001f6
 im_rf_v   = 1
 rf_eu_v = 1
 eu_rf_wren = 1
 eu_rf_wr_data  = 0000001fa
 eu_rf_wr_addr  = 00
rf::****************************************
rf::v = 1
rf::instructionReg = 600
rf::reset_ = 1
rf::rd_addr_a = 06
rf::rden_a    = 1
rf::rd_addr_b = 00
rf::rden_b    = 1
rf:1 all read operation rd_addr_a = 06
rf:0 read operation rd_addr_b = 00
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 0000001fa
rf::eu_rf_wren    = 1
rf::swapbit_wr_data_a = 0
rf::swapbit_wr_addr_a = 0
rf::swapbit_wr_data_b = 0
rf::swapbit_wr_addr_b = 0
rf::swapbit_wren.writ = 0
rf::eu_rf_wren 	  = 1
rf::swap_wren 		  = 0
rf::swapbit_wren 	  = 0
rf::testbit_wren 	  = 0
rf::setbit_wren 	  = 0
rf::ldimm_ab_16_wren = 0
rf::rf_mux_in_wren_a = 0
rf::rf_mux_in_wren_b = 0
rf::enable = 1
rf::operandA = 0
rf::operandB = 0
rf::im_rf_ir.read()  = 600
rf::im_rf_instructionDecoder->getInstructionReg()  = 600
rf:: isInstFormatOpLas = 1
rf:: isInstFormatOpBit = 0
rf:: isInstFormatOpLdIm= 0
rf:: isInstFormatOpBr  = 0
rf:: getLdImmOperand16Field= 600
rf:: signExtend16(im_rf_instructionDecoder->getLdImmOperand16Field ()) = 600
rf:: rf_dest_data  = 1f
rf::im_rf_ir = 600
rf::eu_rf_ir = 000000400
rf::op_imm_a = 6
rf::op_imm_b = 0
rf:: getOperandAImm8Field  = 6
rf:: getOperandBImm8Field  = 0
rf::signExtend8 (op_imm_a) = 6
rf::signExtend8 (op_imm_b) = 0
rf::signExtend16(op_imm_b) = 600
rf::rd_data_rf_a = 6
rf::rd_data_rf_b = 0
rf::rd_data_imm_a = 6
rf::rd_data_imm_b = 0
rf::rd_data_imm_mux_sel_a = 0
rf::rd_data_imm_mux_sel_b = 0
rf::rd_data_imm_mux_a = 6
rf::rd_data_imm_mux_b = 0
rf::rd_data_bypass_mux_a = 6
rf::rd_data_bypass_mux_b = 1fa
rf::rf_eu_wr_addr = 0
rf::enable = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_a     = 06
rf::eu_rf_wr_addr_equal_rd_addr_a = 0
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_a = 0
rf::bypass_a = 0
rf::eu_rf_wr_addr = 00
rf::rd_addr_b     = 00
rf::eu_rf_wr_addr_equal_rd_addr_b = 1
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_b = 1
rf::bypass_b = 1
rf::eu_data_a = 1fa
rf::rd_data_a = 000000005
rf::rd_data_b = 0000001fa
rf::rf_eu_v = 1
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 0000001fa
rf::eu_rf_wren    = 1
rf::rf_stall = 0
rf::   rf[0] = 0
rf::   rf[1] = 1
rf::   rf[2] = 2
rf::   rf[3] = 3
rf::   rf[4] = 4
rf::   rf[5] = 5
rf::   rf[6] = 6
rf::   rf[7] = 7
rf::   rf[8] = 8
rf::   rf[9] = 9
rf::   rf[a] = a
rf::   rf[b] = b
rf::   rf[c] = c
rf::   rf[d] = d
rf::   rf[e] = e
rf::   rf[f] = f
rf::   rf[10] = 10
rf::   rf[11] = 11
rf::   rf[12] = 12
rf::   rf[13] = 13
rf::   rf[14] = 14
rf::   rf[15] = 15
rf::   rf[16] = 16
rf::   rf[17] = 17
rf::   rf[18] = 18
rf::   rf[19] = 19
rf::   rf[1a] = 1a
rf::   rf[1b] = 1b
rf::   rf[1c] = 1c
rf::   rf[1d] = 1d
rf::   rf[1e] = 1e
rf::   rf[1f] = 1f
executionUnit::****************************************
executionUnit:: rf_eu_v=1
executionUnit::enable =1
executionUnit:: instReg=500 isInstFmtLas=1 instFmt=0
executionUnit:: rf_eu_ir = 000000500
executionUnit:: las op = ELasAdd	 las op = 0
executionUnit:: src_a = 000000005
executionUnit:: src_b = 0000001fa
executionUnit:: eu_rf_wr_data_las = 0
executionUnit:: eu_rf_wr_data_bit = 0
executionUnit:: id->dest = 0
executionUnit:: eu_rf_wr_data = 0000001fa
executionUnit:: eu_rf_wr_addr = 00
executionUnit:: eu_rf_wren             = 1
rf::****************************************
rf::v = 1
rf::instructionReg = 600
rf::reset_ = 1
rf::rd_addr_a = 06
rf::rden_a    = 1
rf::rd_addr_b = 00
rf::rden_b    = 1
rf:1 all read operation rd_addr_a = 06
rf:0 read operation rd_addr_b = 00
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 0000001ff
rf::eu_rf_wren    = 1
rf::swapbit_wr_data_a = 0
rf::swapbit_wr_addr_a = 0
rf::swapbit_wr_data_b = 0
rf::swapbit_wr_addr_b = 0
rf::swapbit_wren.writ = 0
rf::eu_rf_wren 	  = 1
rf::swap_wren 		  = 0
rf::swapbit_wren 	  = 0
rf::testbit_wren 	  = 0
rf::setbit_wren 	  = 0
rf::ldimm_ab_16_wren = 0
rf::rf_mux_in_wren_a = 0
rf::rf_mux_in_wren_b = 0
rf::enable = 1
rf::operandA = 0
rf::operandB = 0
rf::im_rf_ir.read()  = 600
rf::im_rf_instructionDecoder->getInstructionReg()  = 600
rf:: isInstFormatOpLas = 1
rf:: isInstFormatOpBit = 0
rf:: isInstFormatOpLdIm= 0
rf:: isInstFormatOpBr  = 0
rf:: getLdImmOperand16Field= 600
rf:: signExtend16(im_rf_instructionDecoder->getLdImmOperand16Field ()) = 600
rf:: rf_dest_data  = 1f
rf::im_rf_ir = 600
rf::eu_rf_ir = 000000400
rf::op_imm_a = 6
rf::op_imm_b = 0
rf:: getOperandAImm8Field  = 6
rf:: getOperandBImm8Field  = 0
rf::signExtend8 (op_imm_a) = 6
rf::signExtend8 (op_imm_b) = 0
rf::signExtend16(op_imm_b) = 600
rf::rd_data_rf_a = 6
rf::rd_data_rf_b = 0
rf::rd_data_imm_a = 6
rf::rd_data_imm_b = 0
rf::rd_data_imm_mux_sel_a = 0
rf::rd_data_imm_mux_sel_b = 0
rf::rd_data_imm_mux_a = 6
rf::rd_data_imm_mux_b = 0
rf::rd_data_bypass_mux_a = 6
rf::rd_data_bypass_mux_b = 1ff
rf::rf_eu_wr_addr = 0
rf::enable = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_a     = 06
rf::eu_rf_wr_addr_equal_rd_addr_a = 0
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_a = 0
rf::bypass_a = 0
rf::eu_rf_wr_addr = 00
rf::rd_addr_b     = 00
rf::eu_rf_wr_addr_equal_rd_addr_b = 1
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_b = 1
rf::bypass_b = 1
rf::eu_data_a = 1ff
rf::rd_data_a = 000000005
rf::rd_data_b = 0000001fa
rf::rf_eu_v = 1
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 0000001ff
rf::eu_rf_wren    = 1
rf::rf_stall = 0
rf::   rf[0] = 0
rf::   rf[1] = 1
rf::   rf[2] = 2
rf::   rf[3] = 3
rf::   rf[4] = 4
rf::   rf[5] = 5
rf::   rf[6] = 6
rf::   rf[7] = 7
rf::   rf[8] = 8
rf::   rf[9] = 9
rf::   rf[a] = a
rf::   rf[b] = b
rf::   rf[c] = c
rf::   rf[d] = d
rf::   rf[e] = e
rf::   rf[f] = f
rf::   rf[10] = 10
rf::   rf[11] = 11
rf::   rf[12] = 12
rf::   rf[13] = 13
rf::   rf[14] = 14
rf::   rf[15] = 15
rf::   rf[16] = 16
rf::   rf[17] = 17
rf::   rf[18] = 18
rf::   rf[19] = 19
rf::   rf[1a] = 1a
rf::   rf[1b] = 1b
rf::   rf[1c] = 1c
rf::   rf[1d] = 1d
rf::   rf[1e] = 1e
rf::   rf[1f] = 1f
   read op  buffer[46] = 700 im read operation  = 46 data = 600
 eu_branch = 0 pcx = 47 pc_inc = 47
reset_ = 1
enable = 1
eu_branch = 0
 pc_im_v   = 1
 im_rf_v   = 1
 rf_eu_v   = 1
 eu_rf_wren= 1
pc_im_address = 46
im.data = 600
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 1 pc_im_address = 46  im_1 = 600
im_data = 600
ir_rf_3 = 000000500
ir_eu_4 = 000000400
 eu_branch.read() = 1
 pc_im_v   = 1
 im_rf_v   = 1
 rf_eu_v   = 1
 rf_rd_addr_a = 6
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000005
 rf_rd_data_b = 0000001fa
 im_rf_v   = 1
 rf_eu_v = 1
 eu_rf_wren = 1
 eu_rf_wr_data  = 0000001ff
 eu_rf_wr_addr  = 00
rf::****************************************
rf::v = 1
rf::instructionReg = 700
rf::reset_ = 1
rf::rd_addr_a = 07
rf::rden_a    = 1
rf::rd_addr_b = 00
rf::rden_b    = 1
rf:1 all read operation rd_addr_a = 07
rf:0 read operation rd_addr_b = 00
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 0000001ff
rf::eu_rf_wren    = 1
rf::swapbit_wr_data_a = 0
rf::swapbit_wr_addr_a = 0
rf::swapbit_wr_data_b = 0
rf::swapbit_wr_addr_b = 0
rf::swapbit_wren.writ = 0
rf::eu_rf_wren 	  = 1
rf::swap_wren 		  = 0
rf::swapbit_wren 	  = 0
rf::testbit_wren 	  = 0
rf::setbit_wren 	  = 0
rf::ldimm_ab_16_wren = 0
rf::rf_mux_in_wren_a = 0
rf::rf_mux_in_wren_b = 0
rf::enable = 1
rf::operandA = 0
rf::operandB = 0
rf::im_rf_ir.read()  = 700
rf::im_rf_instructionDecoder->getInstructionReg()  = 700
rf:: isInstFormatOpLas = 1
rf:: isInstFormatOpBit = 0
rf:: isInstFormatOpLdIm= 0
rf:: isInstFormatOpBr  = 0
rf:: getLdImmOperand16Field= 700
rf:: signExtend16(im_rf_instructionDecoder->getLdImmOperand16Field ()) = 700
rf:: rf_dest_data  = 1f
rf::im_rf_ir = 700
rf::eu_rf_ir = 000000500
rf::op_imm_a = 7
rf::op_imm_b = 0
rf:: getOperandAImm8Field  = 7
rf:: getOperandBImm8Field  = 0
rf::signExtend8 (op_imm_a) = 7
rf::signExtend8 (op_imm_b) = 0
rf::signExtend16(op_imm_b) = 700
rf::rd_data_rf_a = 7
rf::rd_data_rf_b = 0
rf::rd_data_imm_a = 7
rf::rd_data_imm_b = 0
rf::rd_data_imm_mux_sel_a = 0
rf::rd_data_imm_mux_sel_b = 0
rf::rd_data_imm_mux_a = 7
rf::rd_data_imm_mux_b = 0
rf::rd_data_bypass_mux_a = 7
rf::rd_data_bypass_mux_b = 1ff
rf::rf_eu_wr_addr = 0
rf::enable = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_a     = 07
rf::eu_rf_wr_addr_equal_rd_addr_a = 0
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_a = 0
rf::bypass_a = 0
rf::eu_rf_wr_addr = 00
rf::rd_addr_b     = 00
rf::eu_rf_wr_addr_equal_rd_addr_b = 1
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_b = 1
rf::bypass_b = 1
rf::eu_data_a = 1ff
rf::rd_data_a = 000000006
rf::rd_data_b = 0000001ff
rf::rf_eu_v = 1
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 0000001ff
rf::eu_rf_wren    = 1
rf::rf_stall = 0
rf::   rf[0] = 0
rf::   rf[1] = 1
rf::   rf[2] = 2
rf::   rf[3] = 3
rf::   rf[4] = 4
rf::   rf[5] = 5
rf::   rf[6] = 6
rf::   rf[7] = 7
rf::   rf[8] = 8
rf::   rf[9] = 9
rf::   rf[a] = a
rf::   rf[b] = b
rf::   rf[c] = c
rf::   rf[d] = d
rf::   rf[e] = e
rf::   rf[f] = f
rf::   rf[10] = 10
rf::   rf[11] = 11
rf::   rf[12] = 12
rf::   rf[13] = 13
rf::   rf[14] = 14
rf::   rf[15] = 15
rf::   rf[16] = 16
rf::   rf[17] = 17
rf::   rf[18] = 18
rf::   rf[19] = 19
rf::   rf[1a] = 1a
rf::   rf[1b] = 1b
rf::   rf[1c] = 1c
rf::   rf[1d] = 1d
rf::   rf[1e] = 1e
rf::   rf[1f] = 1f
executionUnit::****************************************
executionUnit:: rf_eu_v=1
executionUnit::enable =1
executionUnit:: instReg=600 isInstFmtLas=1 instFmt=0
executionUnit:: rf_eu_ir = 000000600
executionUnit:: las op = ELasAdd	 las op = 0
executionUnit:: src_a = 000000006
executionUnit:: src_b = 0000001ff
executionUnit:: eu_rf_wr_data_las = 0
executionUnit:: eu_rf_wr_data_bit = 0
executionUnit:: id->dest = 0
executionUnit:: eu_rf_wr_data = 0000001ff
executionUnit:: eu_rf_wr_addr = 00
executionUnit:: eu_rf_wren             = 1
rf::****************************************
rf::v = 1
rf::instructionReg = 700
rf::reset_ = 1
rf::rd_addr_a = 07
rf::rden_a    = 1
rf::rd_addr_b = 00
rf::rden_b    = 1
rf:1 all read operation rd_addr_a = 07
rf:0 read operation rd_addr_b = 00
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 000000205
rf::eu_rf_wren    = 1
rf::swapbit_wr_data_a = 0
rf::swapbit_wr_addr_a = 0
rf::swapbit_wr_data_b = 0
rf::swapbit_wr_addr_b = 0
rf::swapbit_wren.writ = 0
rf::eu_rf_wren 	  = 1
rf::swap_wren 		  = 0
rf::swapbit_wren 	  = 0
rf::testbit_wren 	  = 0
rf::setbit_wren 	  = 0
rf::ldimm_ab_16_wren = 0
rf::rf_mux_in_wren_a = 0
rf::rf_mux_in_wren_b = 0
rf::enable = 1
rf::operandA = 0
rf::operandB = 0
rf::im_rf_ir.read()  = 700
rf::im_rf_instructionDecoder->getInstructionReg()  = 700
rf:: isInstFormatOpLas = 1
rf:: isInstFormatOpBit = 0
rf:: isInstFormatOpLdIm= 0
rf:: isInstFormatOpBr  = 0
rf:: getLdImmOperand16Field= 700
rf:: signExtend16(im_rf_instructionDecoder->getLdImmOperand16Field ()) = 700
rf:: rf_dest_data  = 1f
rf::im_rf_ir = 700
rf::eu_rf_ir = 000000500
rf::op_imm_a = 7
rf::op_imm_b = 0
rf:: getOperandAImm8Field  = 7
rf:: getOperandBImm8Field  = 0
rf::signExtend8 (op_imm_a) = 7
rf::signExtend8 (op_imm_b) = 0
rf::signExtend16(op_imm_b) = 700
rf::rd_data_rf_a = 7
rf::rd_data_rf_b = 0
rf::rd_data_imm_a = 7
rf::rd_data_imm_b = 0
rf::rd_data_imm_mux_sel_a = 0
rf::rd_data_imm_mux_sel_b = 0
rf::rd_data_imm_mux_a = 7
rf::rd_data_imm_mux_b = 0
rf::rd_data_bypass_mux_a = 7
rf::rd_data_bypass_mux_b = 205
rf::rf_eu_wr_addr = 0
rf::enable = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_a     = 07
rf::eu_rf_wr_addr_equal_rd_addr_a = 0
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_a = 0
rf::bypass_a = 0
rf::eu_rf_wr_addr = 00
rf::rd_addr_b     = 00
rf::eu_rf_wr_addr_equal_rd_addr_b = 1
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_b = 1
rf::bypass_b = 1
rf::eu_data_a = 205
rf::rd_data_a = 000000006
rf::rd_data_b = 0000001ff
rf::rf_eu_v = 1
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 000000205
rf::eu_rf_wren    = 1
rf::rf_stall = 0
rf::   rf[0] = 0
rf::   rf[1] = 1
rf::   rf[2] = 2
rf::   rf[3] = 3
rf::   rf[4] = 4
rf::   rf[5] = 5
rf::   rf[6] = 6
rf::   rf[7] = 7
rf::   rf[8] = 8
rf::   rf[9] = 9
rf::   rf[a] = a
rf::   rf[b] = b
rf::   rf[c] = c
rf::   rf[d] = d
rf::   rf[e] = e
rf::   rf[f] = f
rf::   rf[10] = 10
rf::   rf[11] = 11
rf::   rf[12] = 12
rf::   rf[13] = 13
rf::   rf[14] = 14
rf::   rf[15] = 15
rf::   rf[16] = 16
rf::   rf[17] = 17
rf::   rf[18] = 18
rf::   rf[19] = 19
rf::   rf[1a] = 1a
rf::   rf[1b] = 1b
rf::   rf[1c] = 1c
rf::   rf[1d] = 1d
rf::   rf[1e] = 1e
rf::   rf[1f] = 1f
   read op  buffer[47] = 800 im read operation  = 47 data = 700
 eu_branch = 0 pcx = 48 pc_inc = 48
reset_ = 1
enable = 1
eu_branch = 0
 pc_im_v   = 1
 im_rf_v   = 1
 rf_eu_v   = 1
 eu_rf_wren= 1
pc_im_address = 47
im.data = 700
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 1 pc_im_address = 47  im_1 = 700
im_data = 700
ir_rf_3 = 000000600
ir_eu_4 = 000000500
 eu_branch.read() = 1
 pc_im_v   = 1
 im_rf_v   = 1
 rf_eu_v   = 1
 rf_rd_addr_a = 7
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000006
 rf_rd_data_b = 0000001ff
 im_rf_v   = 1
 rf_eu_v = 1
 eu_rf_wren = 1
 eu_rf_wr_data  = 000000205
 eu_rf_wr_addr  = 00
rf::****************************************
rf::v = 1
rf::instructionReg = 800
rf::reset_ = 1
rf::rd_addr_a = 08
rf::rden_a    = 1
rf::rd_addr_b = 00
rf::rden_b    = 1
rf:1 all read operation rd_addr_a = 08
rf:0 read operation rd_addr_b = 00
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 000000205
rf::eu_rf_wren    = 1
rf::swapbit_wr_data_a = 0
rf::swapbit_wr_addr_a = 0
rf::swapbit_wr_data_b = 0
rf::swapbit_wr_addr_b = 0
rf::swapbit_wren.writ = 0
rf::eu_rf_wren 	  = 1
rf::swap_wren 		  = 0
rf::swapbit_wren 	  = 0
rf::testbit_wren 	  = 0
rf::setbit_wren 	  = 0
rf::ldimm_ab_16_wren = 0
rf::rf_mux_in_wren_a = 0
rf::rf_mux_in_wren_b = 0
rf::enable = 1
rf::operandA = 0
rf::operandB = 0
rf::im_rf_ir.read()  = 800
rf::im_rf_instructionDecoder->getInstructionReg()  = 800
rf:: isInstFormatOpLas = 1
rf:: isInstFormatOpBit = 0
rf:: isInstFormatOpLdIm= 0
rf:: isInstFormatOpBr  = 0
rf:: getLdImmOperand16Field= 800
rf:: signExtend16(im_rf_instructionDecoder->getLdImmOperand16Field ()) = 800
rf:: rf_dest_data  = 1f
rf::im_rf_ir = 800
rf::eu_rf_ir = 000000600
rf::op_imm_a = 8
rf::op_imm_b = 0
rf:: getOperandAImm8Field  = 8
rf:: getOperandBImm8Field  = 0
rf::signExtend8 (op_imm_a) = 8
rf::signExtend8 (op_imm_b) = 0
rf::signExtend16(op_imm_b) = 800
rf::rd_data_rf_a = 8
rf::rd_data_rf_b = 0
rf::rd_data_imm_a = 8
rf::rd_data_imm_b = 0
rf::rd_data_imm_mux_sel_a = 0
rf::rd_data_imm_mux_sel_b = 0
rf::rd_data_imm_mux_a = 8
rf::rd_data_imm_mux_b = 0
rf::rd_data_bypass_mux_a = 8
rf::rd_data_bypass_mux_b = 205
rf::rf_eu_wr_addr = 0
rf::enable = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_a     = 08
rf::eu_rf_wr_addr_equal_rd_addr_a = 0
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_a = 0
rf::bypass_a = 0
rf::eu_rf_wr_addr = 00
rf::rd_addr_b     = 00
rf::eu_rf_wr_addr_equal_rd_addr_b = 1
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_b = 1
rf::bypass_b = 1
rf::eu_data_a = 205
rf::rd_data_a = 000000007
rf::rd_data_b = 000000205
rf::rf_eu_v = 1
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 000000205
rf::eu_rf_wren    = 1
rf::rf_stall = 0
rf::   rf[0] = 0
rf::   rf[1] = 1
rf::   rf[2] = 2
rf::   rf[3] = 3
rf::   rf[4] = 4
rf::   rf[5] = 5
rf::   rf[6] = 6
rf::   rf[7] = 7
rf::   rf[8] = 8
rf::   rf[9] = 9
rf::   rf[a] = a
rf::   rf[b] = b
rf::   rf[c] = c
rf::   rf[d] = d
rf::   rf[e] = e
rf::   rf[f] = f
rf::   rf[10] = 10
rf::   rf[11] = 11
rf::   rf[12] = 12
rf::   rf[13] = 13
rf::   rf[14] = 14
rf::   rf[15] = 15
rf::   rf[16] = 16
rf::   rf[17] = 17
rf::   rf[18] = 18
rf::   rf[19] = 19
rf::   rf[1a] = 1a
rf::   rf[1b] = 1b
rf::   rf[1c] = 1c
rf::   rf[1d] = 1d
rf::   rf[1e] = 1e
rf::   rf[1f] = 1f
executionUnit::****************************************
executionUnit:: rf_eu_v=1
executionUnit::enable =1
executionUnit:: instReg=700 isInstFmtLas=1 instFmt=0
executionUnit:: rf_eu_ir = 000000700
executionUnit:: las op = ELasAdd	 las op = 0
executionUnit:: src_a = 000000007
executionUnit:: src_b = 000000205
executionUnit:: eu_rf_wr_data_las = 0
executionUnit:: eu_rf_wr_data_bit = 0
executionUnit:: id->dest = 0
executionUnit:: eu_rf_wr_data = 000000205
executionUnit:: eu_rf_wr_addr = 00
executionUnit:: eu_rf_wren             = 1
rf::****************************************
rf::v = 1
rf::instructionReg = 800
rf::reset_ = 1
rf::rd_addr_a = 08
rf::rden_a    = 1
rf::rd_addr_b = 00
rf::rden_b    = 1
rf:1 all read operation rd_addr_a = 08
rf:0 read operation rd_addr_b = 00
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 00000020c
rf::eu_rf_wren    = 1
rf::swapbit_wr_data_a = 0
rf::swapbit_wr_addr_a = 0
rf::swapbit_wr_data_b = 0
rf::swapbit_wr_addr_b = 0
rf::swapbit_wren.writ = 0
rf::eu_rf_wren 	  = 1
rf::swap_wren 		  = 0
rf::swapbit_wren 	  = 0
rf::testbit_wren 	  = 0
rf::setbit_wren 	  = 0
rf::ldimm_ab_16_wren = 0
rf::rf_mux_in_wren_a = 0
rf::rf_mux_in_wren_b = 0
rf::enable = 1
rf::operandA = 0
rf::operandB = 0
rf::im_rf_ir.read()  = 800
rf::im_rf_instructionDecoder->getInstructionReg()  = 800
rf:: isInstFormatOpLas = 1
rf:: isInstFormatOpBit = 0
rf:: isInstFormatOpLdIm= 0
rf:: isInstFormatOpBr  = 0
rf:: getLdImmOperand16Field= 800
rf:: signExtend16(im_rf_instructionDecoder->getLdImmOperand16Field ()) = 800
rf:: rf_dest_data  = 1f
rf::im_rf_ir = 800
rf::eu_rf_ir = 000000600
rf::op_imm_a = 8
rf::op_imm_b = 0
rf:: getOperandAImm8Field  = 8
rf:: getOperandBImm8Field  = 0
rf::signExtend8 (op_imm_a) = 8
rf::signExtend8 (op_imm_b) = 0
rf::signExtend16(op_imm_b) = 800
rf::rd_data_rf_a = 8
rf::rd_data_rf_b = 0
rf::rd_data_imm_a = 8
rf::rd_data_imm_b = 0
rf::rd_data_imm_mux_sel_a = 0
rf::rd_data_imm_mux_sel_b = 0
rf::rd_data_imm_mux_a = 8
rf::rd_data_imm_mux_b = 0
rf::rd_data_bypass_mux_a = 8
rf::rd_data_bypass_mux_b = 20c
rf::rf_eu_wr_addr = 0
rf::enable = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_a     = 08
rf::eu_rf_wr_addr_equal_rd_addr_a = 0
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_a = 0
rf::bypass_a = 0
rf::eu_rf_wr_addr = 00
rf::rd_addr_b     = 00
rf::eu_rf_wr_addr_equal_rd_addr_b = 1
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_b = 1
rf::bypass_b = 1
rf::eu_data_a = 20c
rf::rd_data_a = 000000007
rf::rd_data_b = 000000205
rf::rf_eu_v = 1
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 00000020c
rf::eu_rf_wren    = 1
rf::rf_stall = 0
rf::   rf[0] = 0
rf::   rf[1] = 1
rf::   rf[2] = 2
rf::   rf[3] = 3
rf::   rf[4] = 4
rf::   rf[5] = 5
rf::   rf[6] = 6
rf::   rf[7] = 7
rf::   rf[8] = 8
rf::   rf[9] = 9
rf::   rf[a] = a
rf::   rf[b] = b
rf::   rf[c] = c
rf::   rf[d] = d
rf::   rf[e] = e
rf::   rf[f] = f
rf::   rf[10] = 10
rf::   rf[11] = 11
rf::   rf[12] = 12
rf::   rf[13] = 13
rf::   rf[14] = 14
rf::   rf[15] = 15
rf::   rf[16] = 16
rf::   rf[17] = 17
rf::   rf[18] = 18
rf::   rf[19] = 19
rf::   rf[1a] = 1a
rf::   rf[1b] = 1b
rf::   rf[1c] = 1c
rf::   rf[1d] = 1d
rf::   rf[1e] = 1e
rf::   rf[1f] = 1f
   read op  buffer[48] = 900 im read operation  = 48 data = 800
 eu_branch = 0 pcx = 49 pc_inc = 49
reset_ = 1
enable = 1
eu_branch = 0
 pc_im_v   = 1
 im_rf_v   = 1
 rf_eu_v   = 1
 eu_rf_wren= 1
pc_im_address = 48
im.data = 800
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 1 pc_im_address = 48  im_1 = 800
im_data = 800
ir_rf_3 = 000000700
ir_eu_4 = 000000600
 eu_branch.read() = 1
 pc_im_v   = 1
 im_rf_v   = 1
 rf_eu_v   = 1
 rf_rd_addr_a = 8
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000007
 rf_rd_data_b = 000000205
 im_rf_v   = 1
 rf_eu_v = 1
 eu_rf_wren = 1
 eu_rf_wr_data  = 00000020c
 eu_rf_wr_addr  = 00
rf::****************************************
rf::v = 1
rf::instructionReg = 900
rf::reset_ = 1
rf::rd_addr_a = 09
rf::rden_a    = 1
rf::rd_addr_b = 00
rf::rden_b    = 1
rf:1 all read operation rd_addr_a = 09
rf:0 read operation rd_addr_b = 00
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 00000020c
rf::eu_rf_wren    = 1
rf::swapbit_wr_data_a = 0
rf::swapbit_wr_addr_a = 0
rf::swapbit_wr_data_b = 0
rf::swapbit_wr_addr_b = 0
rf::swapbit_wren.writ = 0
rf::eu_rf_wren 	  = 1
rf::swap_wren 		  = 0
rf::swapbit_wren 	  = 0
rf::testbit_wren 	  = 0
rf::setbit_wren 	  = 0
rf::ldimm_ab_16_wren = 0
rf::rf_mux_in_wren_a = 0
rf::rf_mux_in_wren_b = 0
rf::enable = 1
rf::operandA = 0
rf::operandB = 0
rf::im_rf_ir.read()  = 900
rf::im_rf_instructionDecoder->getInstructionReg()  = 900
rf:: isInstFormatOpLas = 1
rf:: isInstFormatOpBit = 0
rf:: isInstFormatOpLdIm= 0
rf:: isInstFormatOpBr  = 0
rf:: getLdImmOperand16Field= 900
rf:: signExtend16(im_rf_instructionDecoder->getLdImmOperand16Field ()) = 900
rf:: rf_dest_data  = 1f
rf::im_rf_ir = 900
rf::eu_rf_ir = 000000700
rf::op_imm_a = 9
rf::op_imm_b = 0
rf:: getOperandAImm8Field  = 9
rf:: getOperandBImm8Field  = 0
rf::signExtend8 (op_imm_a) = 9
rf::signExtend8 (op_imm_b) = 0
rf::signExtend16(op_imm_b) = 900
rf::rd_data_rf_a = 9
rf::rd_data_rf_b = 0
rf::rd_data_imm_a = 9
rf::rd_data_imm_b = 0
rf::rd_data_imm_mux_sel_a = 0
rf::rd_data_imm_mux_sel_b = 0
rf::rd_data_imm_mux_a = 9
rf::rd_data_imm_mux_b = 0
rf::rd_data_bypass_mux_a = 9
rf::rd_data_bypass_mux_b = 20c
rf::rf_eu_wr_addr = 0
rf::enable = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_a     = 09
rf::eu_rf_wr_addr_equal_rd_addr_a = 0
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_a = 0
rf::bypass_a = 0
rf::eu_rf_wr_addr = 00
rf::rd_addr_b     = 00
rf::eu_rf_wr_addr_equal_rd_addr_b = 1
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_b = 1
rf::bypass_b = 1
rf::eu_data_a = 20c
rf::rd_data_a = 000000008
rf::rd_data_b = 00000020c
rf::rf_eu_v = 1
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 00000020c
rf::eu_rf_wren    = 1
rf::rf_stall = 0
rf::   rf[0] = 0
rf::   rf[1] = 1
rf::   rf[2] = 2
rf::   rf[3] = 3
rf::   rf[4] = 4
rf::   rf[5] = 5
rf::   rf[6] = 6
rf::   rf[7] = 7
rf::   rf[8] = 8
rf::   rf[9] = 9
rf::   rf[a] = a
rf::   rf[b] = b
rf::   rf[c] = c
rf::   rf[d] = d
rf::   rf[e] = e
rf::   rf[f] = f
rf::   rf[10] = 10
rf::   rf[11] = 11
rf::   rf[12] = 12
rf::   rf[13] = 13
rf::   rf[14] = 14
rf::   rf[15] = 15
rf::   rf[16] = 16
rf::   rf[17] = 17
rf::   rf[18] = 18
rf::   rf[19] = 19
rf::   rf[1a] = 1a
rf::   rf[1b] = 1b
rf::   rf[1c] = 1c
rf::   rf[1d] = 1d
rf::   rf[1e] = 1e
rf::   rf[1f] = 1f
executionUnit::****************************************
executionUnit:: rf_eu_v=1
executionUnit::enable =1
executionUnit:: instReg=800 isInstFmtLas=1 instFmt=0
executionUnit:: rf_eu_ir = 000000800
executionUnit:: las op = ELasAdd	 las op = 0
executionUnit:: src_a = 000000008
executionUnit:: src_b = 00000020c
executionUnit:: eu_rf_wr_data_las = 0
executionUnit:: eu_rf_wr_data_bit = 0
executionUnit:: id->dest = 0
executionUnit:: eu_rf_wr_data = 00000020c
executionUnit:: eu_rf_wr_addr = 00
executionUnit:: eu_rf_wren             = 1
rf::****************************************
rf::v = 1
rf::instructionReg = 900
rf::reset_ = 1
rf::rd_addr_a = 09
rf::rden_a    = 1
rf::rd_addr_b = 00
rf::rden_b    = 1
rf:1 all read operation rd_addr_a = 09
rf:0 read operation rd_addr_b = 00
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 000000214
rf::eu_rf_wren    = 1
rf::swapbit_wr_data_a = 0
rf::swapbit_wr_addr_a = 0
rf::swapbit_wr_data_b = 0
rf::swapbit_wr_addr_b = 0
rf::swapbit_wren.writ = 0
rf::eu_rf_wren 	  = 1
rf::swap_wren 		  = 0
rf::swapbit_wren 	  = 0
rf::testbit_wren 	  = 0
rf::setbit_wren 	  = 0
rf::ldimm_ab_16_wren = 0
rf::rf_mux_in_wren_a = 0
rf::rf_mux_in_wren_b = 0
rf::enable = 1
rf::operandA = 0
rf::operandB = 0
rf::im_rf_ir.read()  = 900
rf::im_rf_instructionDecoder->getInstructionReg()  = 900
rf:: isInstFormatOpLas = 1
rf:: isInstFormatOpBit = 0
rf:: isInstFormatOpLdIm= 0
rf:: isInstFormatOpBr  = 0
rf:: getLdImmOperand16Field= 900
rf:: signExtend16(im_rf_instructionDecoder->getLdImmOperand16Field ()) = 900
rf:: rf_dest_data  = 1f
rf::im_rf_ir = 900
rf::eu_rf_ir = 000000700
rf::op_imm_a = 9
rf::op_imm_b = 0
rf:: getOperandAImm8Field  = 9
rf:: getOperandBImm8Field  = 0
rf::signExtend8 (op_imm_a) = 9
rf::signExtend8 (op_imm_b) = 0
rf::signExtend16(op_imm_b) = 900
rf::rd_data_rf_a = 9
rf::rd_data_rf_b = 0
rf::rd_data_imm_a = 9
rf::rd_data_imm_b = 0
rf::rd_data_imm_mux_sel_a = 0
rf::rd_data_imm_mux_sel_b = 0
rf::rd_data_imm_mux_a = 9
rf::rd_data_imm_mux_b = 0
rf::rd_data_bypass_mux_a = 9
rf::rd_data_bypass_mux_b = 214
rf::rf_eu_wr_addr = 0
rf::enable = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_a     = 09
rf::eu_rf_wr_addr_equal_rd_addr_a = 0
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_a = 0
rf::bypass_a = 0
rf::eu_rf_wr_addr = 00
rf::rd_addr_b     = 00
rf::eu_rf_wr_addr_equal_rd_addr_b = 1
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_b = 1
rf::bypass_b = 1
rf::eu_data_a = 214
rf::rd_data_a = 000000008
rf::rd_data_b = 00000020c
rf::rf_eu_v = 1
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 000000214
rf::eu_rf_wren    = 1
rf::rf_stall = 0
rf::   rf[0] = 0
rf::   rf[1] = 1
rf::   rf[2] = 2
rf::   rf[3] = 3
rf::   rf[4] = 4
rf::   rf[5] = 5
rf::   rf[6] = 6
rf::   rf[7] = 7
rf::   rf[8] = 8
rf::   rf[9] = 9
rf::   rf[a] = a
rf::   rf[b] = b
rf::   rf[c] = c
rf::   rf[d] = d
rf::   rf[e] = e
rf::   rf[f] = f
rf::   rf[10] = 10
rf::   rf[11] = 11
rf::   rf[12] = 12
rf::   rf[13] = 13
rf::   rf[14] = 14
rf::   rf[15] = 15
rf::   rf[16] = 16
rf::   rf[17] = 17
rf::   rf[18] = 18
rf::   rf[19] = 19
rf::   rf[1a] = 1a
rf::   rf[1b] = 1b
rf::   rf[1c] = 1c
rf::   rf[1d] = 1d
rf::   rf[1e] = 1e
rf::   rf[1f] = 1f
   read op  buffer[49] = a00 im read operation  = 49 data = 900
 eu_branch = 0 pcx = 4a pc_inc = 4a
reset_ = 1
enable = 1
eu_branch = 0
 pc_im_v   = 1
 im_rf_v   = 1
 rf_eu_v   = 1
 eu_rf_wren= 1
pc_im_address = 49
im.data = 900
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 1 pc_im_address = 49  im_1 = 900
im_data = 900
ir_rf_3 = 000000800
ir_eu_4 = 000000700
 eu_branch.read() = 1
 pc_im_v   = 1
 im_rf_v   = 1
 rf_eu_v   = 1
 rf_rd_addr_a = 9
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000008
 rf_rd_data_b = 00000020c
 im_rf_v   = 1
 rf_eu_v = 1
 eu_rf_wren = 1
 eu_rf_wr_data  = 000000214
 eu_rf_wr_addr  = 00
rf::****************************************
rf::v = 1
rf::instructionReg = a00
rf::reset_ = 1
rf::rd_addr_a = 0a
rf::rden_a    = 1
rf::rd_addr_b = 00
rf::rden_b    = 1
rf:1 all read operation rd_addr_a = 0a
rf:0 read operation rd_addr_b = 00
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 000000214
rf::eu_rf_wren    = 1
rf::swapbit_wr_data_a = 0
rf::swapbit_wr_addr_a = 0
rf::swapbit_wr_data_b = 0
rf::swapbit_wr_addr_b = 0
rf::swapbit_wren.writ = 0
rf::eu_rf_wren 	  = 1
rf::swap_wren 		  = 0
rf::swapbit_wren 	  = 0
rf::testbit_wren 	  = 0
rf::setbit_wren 	  = 0
rf::ldimm_ab_16_wren = 0
rf::rf_mux_in_wren_a = 0
rf::rf_mux_in_wren_b = 0
rf::enable = 1
rf::operandA = 0
rf::operandB = 0
rf::im_rf_ir.read()  = a00
rf::im_rf_instructionDecoder->getInstructionReg()  = a00
rf:: isInstFormatOpLas = 1
rf:: isInstFormatOpBit = 0
rf:: isInstFormatOpLdIm= 0
rf:: isInstFormatOpBr  = 0
rf:: getLdImmOperand16Field= a00
rf:: signExtend16(im_rf_instructionDecoder->getLdImmOperand16Field ()) = a00
rf:: rf_dest_data  = 1f
rf::im_rf_ir = a00
rf::eu_rf_ir = 000000800
rf::op_imm_a = a
rf::op_imm_b = 0
rf:: getOperandAImm8Field  = a
rf:: getOperandBImm8Field  = 0
rf::signExtend8 (op_imm_a) = a
rf::signExtend8 (op_imm_b) = 0
rf::signExtend16(op_imm_b) = a00
rf::rd_data_rf_a = a
rf::rd_data_rf_b = 0
rf::rd_data_imm_a = a
rf::rd_data_imm_b = 0
rf::rd_data_imm_mux_sel_a = 0
rf::rd_data_imm_mux_sel_b = 0
rf::rd_data_imm_mux_a = a
rf::rd_data_imm_mux_b = 0
rf::rd_data_bypass_mux_a = a
rf::rd_data_bypass_mux_b = 214
rf::rf_eu_wr_addr = 0
rf::enable = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_a     = 0a
rf::eu_rf_wr_addr_equal_rd_addr_a = 0
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_a = 0
rf::bypass_a = 0
rf::eu_rf_wr_addr = 00
rf::rd_addr_b     = 00
rf::eu_rf_wr_addr_equal_rd_addr_b = 1
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_b = 1
rf::bypass_b = 1
rf::eu_data_a = 214
rf::rd_data_a = 000000009
rf::rd_data_b = 000000214
rf::rf_eu_v = 1
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 000000214
rf::eu_rf_wren    = 1
rf::rf_stall = 0
rf::   rf[0] = 0
rf::   rf[1] = 1
rf::   rf[2] = 2
rf::   rf[3] = 3
rf::   rf[4] = 4
rf::   rf[5] = 5
rf::   rf[6] = 6
rf::   rf[7] = 7
rf::   rf[8] = 8
rf::   rf[9] = 9
rf::   rf[a] = a
rf::   rf[b] = b
rf::   rf[c] = c
rf::   rf[d] = d
rf::   rf[e] = e
rf::   rf[f] = f
rf::   rf[10] = 10
rf::   rf[11] = 11
rf::   rf[12] = 12
rf::   rf[13] = 13
rf::   rf[14] = 14
rf::   rf[15] = 15
rf::   rf[16] = 16
rf::   rf[17] = 17
rf::   rf[18] = 18
rf::   rf[19] = 19
rf::   rf[1a] = 1a
rf::   rf[1b] = 1b
rf::   rf[1c] = 1c
rf::   rf[1d] = 1d
rf::   rf[1e] = 1e
rf::   rf[1f] = 1f
executionUnit::****************************************
executionUnit:: rf_eu_v=1
executionUnit::enable =1
executionUnit:: instReg=900 isInstFmtLas=1 instFmt=0
executionUnit:: rf_eu_ir = 000000900
executionUnit:: las op = ELasAdd	 las op = 0
executionUnit:: src_a = 000000009
executionUnit:: src_b = 000000214
executionUnit:: eu_rf_wr_data_las = 0
executionUnit:: eu_rf_wr_data_bit = 0
executionUnit:: id->dest = 0
executionUnit:: eu_rf_wr_data = 000000214
executionUnit:: eu_rf_wr_addr = 00
executionUnit:: eu_rf_wren             = 1
rf::****************************************
rf::v = 1
rf::instructionReg = a00
rf::reset_ = 1
rf::rd_addr_a = 0a
rf::rden_a    = 1
rf::rd_addr_b = 00
rf::rden_b    = 1
rf:1 all read operation rd_addr_a = 0a
rf:0 read operation rd_addr_b = 00
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 00000021d
rf::eu_rf_wren    = 1
rf::swapbit_wr_data_a = 0
rf::swapbit_wr_addr_a = 0
rf::swapbit_wr_data_b = 0
rf::swapbit_wr_addr_b = 0
rf::swapbit_wren.writ = 0
rf::eu_rf_wren 	  = 1
rf::swap_wren 		  = 0
rf::swapbit_wren 	  = 0
rf::testbit_wren 	  = 0
rf::setbit_wren 	  = 0
rf::ldimm_ab_16_wren = 0
rf::rf_mux_in_wren_a = 0
rf::rf_mux_in_wren_b = 0
rf::enable = 1
rf::operandA = 0
rf::operandB = 0
rf::im_rf_ir.read()  = a00
rf::im_rf_instructionDecoder->getInstructionReg()  = a00
rf:: isInstFormatOpLas = 1
rf:: isInstFormatOpBit = 0
rf:: isInstFormatOpLdIm= 0
rf:: isInstFormatOpBr  = 0
rf:: getLdImmOperand16Field= a00
rf:: signExtend16(im_rf_instructionDecoder->getLdImmOperand16Field ()) = a00
rf:: rf_dest_data  = 1f
rf::im_rf_ir = a00
rf::eu_rf_ir = 000000800
rf::op_imm_a = a
rf::op_imm_b = 0
rf:: getOperandAImm8Field  = a
rf:: getOperandBImm8Field  = 0
rf::signExtend8 (op_imm_a) = a
rf::signExtend8 (op_imm_b) = 0
rf::signExtend16(op_imm_b) = a00
rf::rd_data_rf_a = a
rf::rd_data_rf_b = 0
rf::rd_data_imm_a = a
rf::rd_data_imm_b = 0
rf::rd_data_imm_mux_sel_a = 0
rf::rd_data_imm_mux_sel_b = 0
rf::rd_data_imm_mux_a = a
rf::rd_data_imm_mux_b = 0
rf::rd_data_bypass_mux_a = a
rf::rd_data_bypass_mux_b = 21d
rf::rf_eu_wr_addr = 0
rf::enable = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_a     = 0a
rf::eu_rf_wr_addr_equal_rd_addr_a = 0
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_a = 0
rf::bypass_a = 0
rf::eu_rf_wr_addr = 00
rf::rd_addr_b     = 00
rf::eu_rf_wr_addr_equal_rd_addr_b = 1
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_b = 1
rf::bypass_b = 1
rf::eu_data_a = 21d
rf::rd_data_a = 000000009
rf::rd_data_b = 000000214
rf::rf_eu_v = 1
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 00000021d
rf::eu_rf_wren    = 1
rf::rf_stall = 0
rf::   rf[0] = 0
rf::   rf[1] = 1
rf::   rf[2] = 2
rf::   rf[3] = 3
rf::   rf[4] = 4
rf::   rf[5] = 5
rf::   rf[6] = 6
rf::   rf[7] = 7
rf::   rf[8] = 8
rf::   rf[9] = 9
rf::   rf[a] = a
rf::   rf[b] = b
rf::   rf[c] = c
rf::   rf[d] = d
rf::   rf[e] = e
rf::   rf[f] = f
rf::   rf[10] = 10
rf::   rf[11] = 11
rf::   rf[12] = 12
rf::   rf[13] = 13
rf::   rf[14] = 14
rf::   rf[15] = 15
rf::   rf[16] = 16
rf::   rf[17] = 17
rf::   rf[18] = 18
rf::   rf[19] = 19
rf::   rf[1a] = 1a
rf::   rf[1b] = 1b
rf::   rf[1c] = 1c
rf::   rf[1d] = 1d
rf::   rf[1e] = 1e
rf::   rf[1f] = 1f
   read op  buffer[4a] = b00 im read operation  = 4a data = a00
 eu_branch = 0 pcx = 4b pc_inc = 4b
reset_ = 1
enable = 1
eu_branch = 0
 pc_im_v   = 1
 im_rf_v   = 1
 rf_eu_v   = 1
 eu_rf_wren= 1
pc_im_address = 4a
im.data = a00
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 1 pc_im_address = 4a  im_1 = a00
im_data = a00
ir_rf_3 = 000000900
ir_eu_4 = 000000800
 eu_branch.read() = 1
 pc_im_v   = 1
 im_rf_v   = 1
 rf_eu_v   = 1
 rf_rd_addr_a = a
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000009
 rf_rd_data_b = 000000214
 im_rf_v   = 1
 rf_eu_v = 1
 eu_rf_wren = 1
 eu_rf_wr_data  = 00000021d
 eu_rf_wr_addr  = 00
rf::****************************************
rf::v = 1
rf::instructionReg = b00
rf::reset_ = 1
rf::rd_addr_a = 0b
rf::rden_a    = 1
rf::rd_addr_b = 00
rf::rden_b    = 1
rf:1 all read operation rd_addr_a = 0b
rf:0 read operation rd_addr_b = 00
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 00000021d
rf::eu_rf_wren    = 1
rf::swapbit_wr_data_a = 0
rf::swapbit_wr_addr_a = 0
rf::swapbit_wr_data_b = 0
rf::swapbit_wr_addr_b = 0
rf::swapbit_wren.writ = 0
rf::eu_rf_wren 	  = 1
rf::swap_wren 		  = 0
rf::swapbit_wren 	  = 0
rf::testbit_wren 	  = 0
rf::setbit_wren 	  = 0
rf::ldimm_ab_16_wren = 0
rf::rf_mux_in_wren_a = 0
rf::rf_mux_in_wren_b = 0
rf::enable = 1
rf::operandA = 0
rf::operandB = 0
rf::im_rf_ir.read()  = b00
rf::im_rf_instructionDecoder->getInstructionReg()  = b00
rf:: isInstFormatOpLas = 1
rf:: isInstFormatOpBit = 0
rf:: isInstFormatOpLdIm= 0
rf:: isInstFormatOpBr  = 0
rf:: getLdImmOperand16Field= b00
rf:: signExtend16(im_rf_instructionDecoder->getLdImmOperand16Field ()) = b00
rf:: rf_dest_data  = 1f
rf::im_rf_ir = b00
rf::eu_rf_ir = 000000900
rf::op_imm_a = b
rf::op_imm_b = 0
rf:: getOperandAImm8Field  = b
rf:: getOperandBImm8Field  = 0
rf::signExtend8 (op_imm_a) = b
rf::signExtend8 (op_imm_b) = 0
rf::signExtend16(op_imm_b) = b00
rf::rd_data_rf_a = b
rf::rd_data_rf_b = 0
rf::rd_data_imm_a = b
rf::rd_data_imm_b = 0
rf::rd_data_imm_mux_sel_a = 0
rf::rd_data_imm_mux_sel_b = 0
rf::rd_data_imm_mux_a = b
rf::rd_data_imm_mux_b = 0
rf::rd_data_bypass_mux_a = b
rf::rd_data_bypass_mux_b = 21d
rf::rf_eu_wr_addr = 0
rf::enable = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_a     = 0b
rf::eu_rf_wr_addr_equal_rd_addr_a = 0
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_a = 0
rf::bypass_a = 0
rf::eu_rf_wr_addr = 00
rf::rd_addr_b     = 00
rf::eu_rf_wr_addr_equal_rd_addr_b = 1
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_b = 1
rf::bypass_b = 1
rf::eu_data_a = 21d
rf::rd_data_a = 00000000a
rf::rd_data_b = 00000021d
rf::rf_eu_v = 1
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 00000021d
rf::eu_rf_wren    = 1
rf::rf_stall = 0
rf::   rf[0] = 0
rf::   rf[1] = 1
rf::   rf[2] = 2
rf::   rf[3] = 3
rf::   rf[4] = 4
rf::   rf[5] = 5
rf::   rf[6] = 6
rf::   rf[7] = 7
rf::   rf[8] = 8
rf::   rf[9] = 9
rf::   rf[a] = a
rf::   rf[b] = b
rf::   rf[c] = c
rf::   rf[d] = d
rf::   rf[e] = e
rf::   rf[f] = f
rf::   rf[10] = 10
rf::   rf[11] = 11
rf::   rf[12] = 12
rf::   rf[13] = 13
rf::   rf[14] = 14
rf::   rf[15] = 15
rf::   rf[16] = 16
rf::   rf[17] = 17
rf::   rf[18] = 18
rf::   rf[19] = 19
rf::   rf[1a] = 1a
rf::   rf[1b] = 1b
rf::   rf[1c] = 1c
rf::   rf[1d] = 1d
rf::   rf[1e] = 1e
rf::   rf[1f] = 1f
executionUnit::****************************************
executionUnit:: rf_eu_v=1
executionUnit::enable =1
executionUnit:: instReg=a00 isInstFmtLas=1 instFmt=0
executionUnit:: rf_eu_ir = 000000a00
executionUnit:: las op = ELasAdd	 las op = 0
executionUnit:: src_a = 00000000a
executionUnit:: src_b = 00000021d
executionUnit:: eu_rf_wr_data_las = 0
executionUnit:: eu_rf_wr_data_bit = 0
executionUnit:: id->dest = 0
executionUnit:: eu_rf_wr_data = 00000021d
executionUnit:: eu_rf_wr_addr = 00
executionUnit:: eu_rf_wren             = 1
rf::****************************************
rf::v = 1
rf::instructionReg = b00
rf::reset_ = 1
rf::rd_addr_a = 0b
rf::rden_a    = 1
rf::rd_addr_b = 00
rf::rden_b    = 1
rf:1 all read operation rd_addr_a = 0b
rf:0 read operation rd_addr_b = 00
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 000000227
rf::eu_rf_wren    = 1
rf::swapbit_wr_data_a = 0
rf::swapbit_wr_addr_a = 0
rf::swapbit_wr_data_b = 0
rf::swapbit_wr_addr_b = 0
rf::swapbit_wren.writ = 0
rf::eu_rf_wren 	  = 1
rf::swap_wren 		  = 0
rf::swapbit_wren 	  = 0
rf::testbit_wren 	  = 0
rf::setbit_wren 	  = 0
rf::ldimm_ab_16_wren = 0
rf::rf_mux_in_wren_a = 0
rf::rf_mux_in_wren_b = 0
rf::enable = 1
rf::operandA = 0
rf::operandB = 0
rf::im_rf_ir.read()  = b00
rf::im_rf_instructionDecoder->getInstructionReg()  = b00
rf:: isInstFormatOpLas = 1
rf:: isInstFormatOpBit = 0
rf:: isInstFormatOpLdIm= 0
rf:: isInstFormatOpBr  = 0
rf:: getLdImmOperand16Field= b00
rf:: signExtend16(im_rf_instructionDecoder->getLdImmOperand16Field ()) = b00
rf:: rf_dest_data  = 1f
rf::im_rf_ir = b00
rf::eu_rf_ir = 000000900
rf::op_imm_a = b
rf::op_imm_b = 0
rf:: getOperandAImm8Field  = b
rf:: getOperandBImm8Field  = 0
rf::signExtend8 (op_imm_a) = b
rf::signExtend8 (op_imm_b) = 0
rf::signExtend16(op_imm_b) = b00
rf::rd_data_rf_a = b
rf::rd_data_rf_b = 0
rf::rd_data_imm_a = b
rf::rd_data_imm_b = 0
rf::rd_data_imm_mux_sel_a = 0
rf::rd_data_imm_mux_sel_b = 0
rf::rd_data_imm_mux_a = b
rf::rd_data_imm_mux_b = 0
rf::rd_data_bypass_mux_a = b
rf::rd_data_bypass_mux_b = 227
rf::rf_eu_wr_addr = 0
rf::enable = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_a     = 0b
rf::eu_rf_wr_addr_equal_rd_addr_a = 0
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_a = 0
rf::bypass_a = 0
rf::eu_rf_wr_addr = 00
rf::rd_addr_b     = 00
rf::eu_rf_wr_addr_equal_rd_addr_b = 1
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_b = 1
rf::bypass_b = 1
rf::eu_data_a = 227
rf::rd_data_a = 00000000a
rf::rd_data_b = 00000021d
rf::rf_eu_v = 1
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 000000227
rf::eu_rf_wren    = 1
rf::rf_stall = 0
rf::   rf[0] = 0
rf::   rf[1] = 1
rf::   rf[2] = 2
rf::   rf[3] = 3
rf::   rf[4] = 4
rf::   rf[5] = 5
rf::   rf[6] = 6
rf::   rf[7] = 7
rf::   rf[8] = 8
rf::   rf[9] = 9
rf::   rf[a] = a
rf::   rf[b] = b
rf::   rf[c] = c
rf::   rf[d] = d
rf::   rf[e] = e
rf::   rf[f] = f
rf::   rf[10] = 10
rf::   rf[11] = 11
rf::   rf[12] = 12
rf::   rf[13] = 13
rf::   rf[14] = 14
rf::   rf[15] = 15
rf::   rf[16] = 16
rf::   rf[17] = 17
rf::   rf[18] = 18
rf::   rf[19] = 19
rf::   rf[1a] = 1a
rf::   rf[1b] = 1b
rf::   rf[1c] = 1c
rf::   rf[1d] = 1d
rf::   rf[1e] = 1e
rf::   rf[1f] = 1f
   read op  buffer[4b] = c00 im read operation  = 4b data = b00
 eu_branch = 0 pcx = 4c pc_inc = 4c
reset_ = 1
enable = 1
eu_branch = 0
 pc_im_v   = 1
 im_rf_v   = 1
 rf_eu_v   = 1
 eu_rf_wren= 1
pc_im_address = 4b
im.data = b00
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 1 pc_im_address = 4b  im_1 = b00
im_data = b00
ir_rf_3 = 000000a00
ir_eu_4 = 000000900
 eu_branch.read() = 1
 pc_im_v   = 1
 im_rf_v   = 1
 rf_eu_v   = 1
 rf_rd_addr_a = b
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 00000000a
 rf_rd_data_b = 00000021d
 im_rf_v   = 1
 rf_eu_v = 1
 eu_rf_wren = 1
 eu_rf_wr_data  = 000000227
 eu_rf_wr_addr  = 00
rf::****************************************
rf::v = 1
rf::instructionReg = c00
rf::reset_ = 1
rf::rd_addr_a = 0c
rf::rden_a    = 1
rf::rd_addr_b = 00
rf::rden_b    = 1
rf:1 all read operation rd_addr_a = 0c
rf:0 read operation rd_addr_b = 00
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 000000227
rf::eu_rf_wren    = 1
rf::swapbit_wr_data_a = 0
rf::swapbit_wr_addr_a = 0
rf::swapbit_wr_data_b = 0
rf::swapbit_wr_addr_b = 0
rf::swapbit_wren.writ = 0
rf::eu_rf_wren 	  = 1
rf::swap_wren 		  = 0
rf::swapbit_wren 	  = 0
rf::testbit_wren 	  = 0
rf::setbit_wren 	  = 0
rf::ldimm_ab_16_wren = 0
rf::rf_mux_in_wren_a = 0
rf::rf_mux_in_wren_b = 0
rf::enable = 1
rf::operandA = 0
rf::operandB = 0
rf::im_rf_ir.read()  = c00
rf::im_rf_instructionDecoder->getInstructionReg()  = c00
rf:: isInstFormatOpLas = 1
rf:: isInstFormatOpBit = 0
rf:: isInstFormatOpLdIm= 0
rf:: isInstFormatOpBr  = 0
rf:: getLdImmOperand16Field= c00
rf:: signExtend16(im_rf_instructionDecoder->getLdImmOperand16Field ()) = c00
rf:: rf_dest_data  = 1f
rf::im_rf_ir = c00
rf::eu_rf_ir = 000000a00
rf::op_imm_a = c
rf::op_imm_b = 0
rf:: getOperandAImm8Field  = c
rf:: getOperandBImm8Field  = 0
rf::signExtend8 (op_imm_a) = c
rf::signExtend8 (op_imm_b) = 0
rf::signExtend16(op_imm_b) = c00
rf::rd_data_rf_a = c
rf::rd_data_rf_b = 0
rf::rd_data_imm_a = c
rf::rd_data_imm_b = 0
rf::rd_data_imm_mux_sel_a = 0
rf::rd_data_imm_mux_sel_b = 0
rf::rd_data_imm_mux_a = c
rf::rd_data_imm_mux_b = 0
rf::rd_data_bypass_mux_a = c
rf::rd_data_bypass_mux_b = 227
rf::rf_eu_wr_addr = 0
rf::enable = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_a     = 0c
rf::eu_rf_wr_addr_equal_rd_addr_a = 0
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_a = 0
rf::bypass_a = 0
rf::eu_rf_wr_addr = 00
rf::rd_addr_b     = 00
rf::eu_rf_wr_addr_equal_rd_addr_b = 1
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_b = 1
rf::bypass_b = 1
rf::eu_data_a = 227
rf::rd_data_a = 00000000b
rf::rd_data_b = 000000227
rf::rf_eu_v = 1
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 000000227
rf::eu_rf_wren    = 1
rf::rf_stall = 0
rf::   rf[0] = 0
rf::   rf[1] = 1
rf::   rf[2] = 2
rf::   rf[3] = 3
rf::   rf[4] = 4
rf::   rf[5] = 5
rf::   rf[6] = 6
rf::   rf[7] = 7
rf::   rf[8] = 8
rf::   rf[9] = 9
rf::   rf[a] = a
rf::   rf[b] = b
rf::   rf[c] = c
rf::   rf[d] = d
rf::   rf[e] = e
rf::   rf[f] = f
rf::   rf[10] = 10
rf::   rf[11] = 11
rf::   rf[12] = 12
rf::   rf[13] = 13
rf::   rf[14] = 14
rf::   rf[15] = 15
rf::   rf[16] = 16
rf::   rf[17] = 17
rf::   rf[18] = 18
rf::   rf[19] = 19
rf::   rf[1a] = 1a
rf::   rf[1b] = 1b
rf::   rf[1c] = 1c
rf::   rf[1d] = 1d
rf::   rf[1e] = 1e
rf::   rf[1f] = 1f
executionUnit::****************************************
executionUnit:: rf_eu_v=1
executionUnit::enable =1
executionUnit:: instReg=b00 isInstFmtLas=1 instFmt=0
executionUnit:: rf_eu_ir = 000000b00
executionUnit:: las op = ELasAdd	 las op = 0
executionUnit:: src_a = 00000000b
executionUnit:: src_b = 000000227
executionUnit:: eu_rf_wr_data_las = 0
executionUnit:: eu_rf_wr_data_bit = 0
executionUnit:: id->dest = 0
executionUnit:: eu_rf_wr_data = 000000227
executionUnit:: eu_rf_wr_addr = 00
executionUnit:: eu_rf_wren             = 1
rf::****************************************
rf::v = 1
rf::instructionReg = c00
rf::reset_ = 1
rf::rd_addr_a = 0c
rf::rden_a    = 1
rf::rd_addr_b = 00
rf::rden_b    = 1
rf:1 all read operation rd_addr_a = 0c
rf:0 read operation rd_addr_b = 00
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 000000232
rf::eu_rf_wren    = 1
rf::swapbit_wr_data_a = 0
rf::swapbit_wr_addr_a = 0
rf::swapbit_wr_data_b = 0
rf::swapbit_wr_addr_b = 0
rf::swapbit_wren.writ = 0
rf::eu_rf_wren 	  = 1
rf::swap_wren 		  = 0
rf::swapbit_wren 	  = 0
rf::testbit_wren 	  = 0
rf::setbit_wren 	  = 0
rf::ldimm_ab_16_wren = 0
rf::rf_mux_in_wren_a = 0
rf::rf_mux_in_wren_b = 0
rf::enable = 1
rf::operandA = 0
rf::operandB = 0
rf::im_rf_ir.read()  = c00
rf::im_rf_instructionDecoder->getInstructionReg()  = c00
rf:: isInstFormatOpLas = 1
rf:: isInstFormatOpBit = 0
rf:: isInstFormatOpLdIm= 0
rf:: isInstFormatOpBr  = 0
rf:: getLdImmOperand16Field= c00
rf:: signExtend16(im_rf_instructionDecoder->getLdImmOperand16Field ()) = c00
rf:: rf_dest_data  = 1f
rf::im_rf_ir = c00
rf::eu_rf_ir = 000000a00
rf::op_imm_a = c
rf::op_imm_b = 0
rf:: getOperandAImm8Field  = c
rf:: getOperandBImm8Field  = 0
rf::signExtend8 (op_imm_a) = c
rf::signExtend8 (op_imm_b) = 0
rf::signExtend16(op_imm_b) = c00
rf::rd_data_rf_a = c
rf::rd_data_rf_b = 0
rf::rd_data_imm_a = c
rf::rd_data_imm_b = 0
rf::rd_data_imm_mux_sel_a = 0
rf::rd_data_imm_mux_sel_b = 0
rf::rd_data_imm_mux_a = c
rf::rd_data_imm_mux_b = 0
rf::rd_data_bypass_mux_a = c
rf::rd_data_bypass_mux_b = 232
rf::rf_eu_wr_addr = 0
rf::enable = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_a     = 0c
rf::eu_rf_wr_addr_equal_rd_addr_a = 0
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_a = 0
rf::bypass_a = 0
rf::eu_rf_wr_addr = 00
rf::rd_addr_b     = 00
rf::eu_rf_wr_addr_equal_rd_addr_b = 1
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_b = 1
rf::bypass_b = 1
rf::eu_data_a = 232
rf::rd_data_a = 00000000b
rf::rd_data_b = 000000227
rf::rf_eu_v = 1
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 000000232
rf::eu_rf_wren    = 1
rf::rf_stall = 0
rf::   rf[0] = 0
rf::   rf[1] = 1
rf::   rf[2] = 2
rf::   rf[3] = 3
rf::   rf[4] = 4
rf::   rf[5] = 5
rf::   rf[6] = 6
rf::   rf[7] = 7
rf::   rf[8] = 8
rf::   rf[9] = 9
rf::   rf[a] = a
rf::   rf[b] = b
rf::   rf[c] = c
rf::   rf[d] = d
rf::   rf[e] = e
rf::   rf[f] = f
rf::   rf[10] = 10
rf::   rf[11] = 11
rf::   rf[12] = 12
rf::   rf[13] = 13
rf::   rf[14] = 14
rf::   rf[15] = 15
rf::   rf[16] = 16
rf::   rf[17] = 17
rf::   rf[18] = 18
rf::   rf[19] = 19
rf::   rf[1a] = 1a
rf::   rf[1b] = 1b
rf::   rf[1c] = 1c
rf::   rf[1d] = 1d
rf::   rf[1e] = 1e
rf::   rf[1f] = 1f
   read op  buffer[4c] = d00 im read operation  = 4c data = c00
 eu_branch = 0 pcx = 4d pc_inc = 4d
reset_ = 1
enable = 1
eu_branch = 0
 pc_im_v   = 1
 im_rf_v   = 1
 rf_eu_v   = 1
 eu_rf_wren= 1
pc_im_address = 4c
im.data = c00
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 1 pc_im_address = 4c  im_1 = c00
im_data = c00
ir_rf_3 = 000000b00
ir_eu_4 = 000000a00
 eu_branch.read() = 1
 pc_im_v   = 1
 im_rf_v   = 1
 rf_eu_v   = 1
 rf_rd_addr_a = c
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 00000000b
 rf_rd_data_b = 000000227
 im_rf_v   = 1
 rf_eu_v = 1
 eu_rf_wren = 1
 eu_rf_wr_data  = 000000232
 eu_rf_wr_addr  = 00
rf::****************************************
rf::v = 1
rf::instructionReg = d00
rf::reset_ = 1
rf::rd_addr_a = 0d
rf::rden_a    = 1
rf::rd_addr_b = 00
rf::rden_b    = 1
rf:1 all read operation rd_addr_a = 0d
rf:0 read operation rd_addr_b = 00
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 000000232
rf::eu_rf_wren    = 1
rf::swapbit_wr_data_a = 0
rf::swapbit_wr_addr_a = 0
rf::swapbit_wr_data_b = 0
rf::swapbit_wr_addr_b = 0
rf::swapbit_wren.writ = 0
rf::eu_rf_wren 	  = 1
rf::swap_wren 		  = 0
rf::swapbit_wren 	  = 0
rf::testbit_wren 	  = 0
rf::setbit_wren 	  = 0
rf::ldimm_ab_16_wren = 0
rf::rf_mux_in_wren_a = 0
rf::rf_mux_in_wren_b = 0
rf::enable = 1
rf::operandA = 0
rf::operandB = 0
rf::im_rf_ir.read()  = d00
rf::im_rf_instructionDecoder->getInstructionReg()  = d00
rf:: isInstFormatOpLas = 1
rf:: isInstFormatOpBit = 0
rf:: isInstFormatOpLdIm= 0
rf:: isInstFormatOpBr  = 0
rf:: getLdImmOperand16Field= d00
rf:: signExtend16(im_rf_instructionDecoder->getLdImmOperand16Field ()) = d00
rf:: rf_dest_data  = 1f
rf::im_rf_ir = d00
rf::eu_rf_ir = 000000b00
rf::op_imm_a = d
rf::op_imm_b = 0
rf:: getOperandAImm8Field  = d
rf:: getOperandBImm8Field  = 0
rf::signExtend8 (op_imm_a) = d
rf::signExtend8 (op_imm_b) = 0
rf::signExtend16(op_imm_b) = d00
rf::rd_data_rf_a = d
rf::rd_data_rf_b = 0
rf::rd_data_imm_a = d
rf::rd_data_imm_b = 0
rf::rd_data_imm_mux_sel_a = 0
rf::rd_data_imm_mux_sel_b = 0
rf::rd_data_imm_mux_a = d
rf::rd_data_imm_mux_b = 0
rf::rd_data_bypass_mux_a = d
rf::rd_data_bypass_mux_b = 232
rf::rf_eu_wr_addr = 0
rf::enable = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_a     = 0d
rf::eu_rf_wr_addr_equal_rd_addr_a = 0
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_a = 0
rf::bypass_a = 0
rf::eu_rf_wr_addr = 00
rf::rd_addr_b     = 00
rf::eu_rf_wr_addr_equal_rd_addr_b = 1
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_b = 1
rf::bypass_b = 1
rf::eu_data_a = 232
rf::rd_data_a = 00000000c
rf::rd_data_b = 000000232
rf::rf_eu_v = 1
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 000000232
rf::eu_rf_wren    = 1
rf::rf_stall = 0
rf::   rf[0] = 0
rf::   rf[1] = 1
rf::   rf[2] = 2
rf::   rf[3] = 3
rf::   rf[4] = 4
rf::   rf[5] = 5
rf::   rf[6] = 6
rf::   rf[7] = 7
rf::   rf[8] = 8
rf::   rf[9] = 9
rf::   rf[a] = a
rf::   rf[b] = b
rf::   rf[c] = c
rf::   rf[d] = d
rf::   rf[e] = e
rf::   rf[f] = f
rf::   rf[10] = 10
rf::   rf[11] = 11
rf::   rf[12] = 12
rf::   rf[13] = 13
rf::   rf[14] = 14
rf::   rf[15] = 15
rf::   rf[16] = 16
rf::   rf[17] = 17
rf::   rf[18] = 18
rf::   rf[19] = 19
rf::   rf[1a] = 1a
rf::   rf[1b] = 1b
rf::   rf[1c] = 1c
rf::   rf[1d] = 1d
rf::   rf[1e] = 1e
rf::   rf[1f] = 1f
executionUnit::****************************************
executionUnit:: rf_eu_v=1
executionUnit::enable =1
executionUnit:: instReg=c00 isInstFmtLas=1 instFmt=0
executionUnit:: rf_eu_ir = 000000c00
executionUnit:: las op = ELasAdd	 las op = 0
executionUnit:: src_a = 00000000c
executionUnit:: src_b = 000000232
executionUnit:: eu_rf_wr_data_las = 0
executionUnit:: eu_rf_wr_data_bit = 0
executionUnit:: id->dest = 0
executionUnit:: eu_rf_wr_data = 000000232
executionUnit:: eu_rf_wr_addr = 00
executionUnit:: eu_rf_wren             = 1
rf::****************************************
rf::v = 1
rf::instructionReg = d00
rf::reset_ = 1
rf::rd_addr_a = 0d
rf::rden_a    = 1
rf::rd_addr_b = 00
rf::rden_b    = 1
rf:1 all read operation rd_addr_a = 0d
rf:0 read operation rd_addr_b = 00
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 00000023e
rf::eu_rf_wren    = 1
rf::swapbit_wr_data_a = 0
rf::swapbit_wr_addr_a = 0
rf::swapbit_wr_data_b = 0
rf::swapbit_wr_addr_b = 0
rf::swapbit_wren.writ = 0
rf::eu_rf_wren 	  = 1
rf::swap_wren 		  = 0
rf::swapbit_wren 	  = 0
rf::testbit_wren 	  = 0
rf::setbit_wren 	  = 0
rf::ldimm_ab_16_wren = 0
rf::rf_mux_in_wren_a = 0
rf::rf_mux_in_wren_b = 0
rf::enable = 1
rf::operandA = 0
rf::operandB = 0
rf::im_rf_ir.read()  = d00
rf::im_rf_instructionDecoder->getInstructionReg()  = d00
rf:: isInstFormatOpLas = 1
rf:: isInstFormatOpBit = 0
rf:: isInstFormatOpLdIm= 0
rf:: isInstFormatOpBr  = 0
rf:: getLdImmOperand16Field= d00
rf:: signExtend16(im_rf_instructionDecoder->getLdImmOperand16Field ()) = d00
rf:: rf_dest_data  = 1f
rf::im_rf_ir = d00
rf::eu_rf_ir = 000000b00
rf::op_imm_a = d
rf::op_imm_b = 0
rf:: getOperandAImm8Field  = d
rf:: getOperandBImm8Field  = 0
rf::signExtend8 (op_imm_a) = d
rf::signExtend8 (op_imm_b) = 0
rf::signExtend16(op_imm_b) = d00
rf::rd_data_rf_a = d
rf::rd_data_rf_b = 0
rf::rd_data_imm_a = d
rf::rd_data_imm_b = 0
rf::rd_data_imm_mux_sel_a = 0
rf::rd_data_imm_mux_sel_b = 0
rf::rd_data_imm_mux_a = d
rf::rd_data_imm_mux_b = 0
rf::rd_data_bypass_mux_a = d
rf::rd_data_bypass_mux_b = 23e
rf::rf_eu_wr_addr = 0
rf::enable = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_a     = 0d
rf::eu_rf_wr_addr_equal_rd_addr_a = 0
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_a = 0
rf::bypass_a = 0
rf::eu_rf_wr_addr = 00
rf::rd_addr_b     = 00
rf::eu_rf_wr_addr_equal_rd_addr_b = 1
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_b = 1
rf::bypass_b = 1
rf::eu_data_a = 23e
rf::rd_data_a = 00000000c
rf::rd_data_b = 000000232
rf::rf_eu_v = 1
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 00000023e
rf::eu_rf_wren    = 1
rf::rf_stall = 0
rf::   rf[0] = 0
rf::   rf[1] = 1
rf::   rf[2] = 2
rf::   rf[3] = 3
rf::   rf[4] = 4
rf::   rf[5] = 5
rf::   rf[6] = 6
rf::   rf[7] = 7
rf::   rf[8] = 8
rf::   rf[9] = 9
rf::   rf[a] = a
rf::   rf[b] = b
rf::   rf[c] = c
rf::   rf[d] = d
rf::   rf[e] = e
rf::   rf[f] = f
rf::   rf[10] = 10
rf::   rf[11] = 11
rf::   rf[12] = 12
rf::   rf[13] = 13
rf::   rf[14] = 14
rf::   rf[15] = 15
rf::   rf[16] = 16
rf::   rf[17] = 17
rf::   rf[18] = 18
rf::   rf[19] = 19
rf::   rf[1a] = 1a
rf::   rf[1b] = 1b
rf::   rf[1c] = 1c
rf::   rf[1d] = 1d
rf::   rf[1e] = 1e
rf::   rf[1f] = 1f
   read op  buffer[4d] = e00 im read operation  = 4d data = d00
 eu_branch = 0 pcx = 4e pc_inc = 4e
reset_ = 1
enable = 1
eu_branch = 0
 pc_im_v   = 1
 im_rf_v   = 1
 rf_eu_v   = 1
 eu_rf_wren= 1
pc_im_address = 4d
im.data = d00
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 1 pc_im_address = 4d  im_1 = d00
im_data = d00
ir_rf_3 = 000000c00
ir_eu_4 = 000000b00
 eu_branch.read() = 1
 pc_im_v   = 1
 im_rf_v   = 1
 rf_eu_v   = 1
 rf_rd_addr_a = d
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 00000000c
 rf_rd_data_b = 000000232
 im_rf_v   = 1
 rf_eu_v = 1
 eu_rf_wren = 1
 eu_rf_wr_data  = 00000023e
 eu_rf_wr_addr  = 00
rf::****************************************
rf::v = 1
rf::instructionReg = e00
rf::reset_ = 1
rf::rd_addr_a = 0e
rf::rden_a    = 1
rf::rd_addr_b = 00
rf::rden_b    = 1
rf:1 all read operation rd_addr_a = 0e
rf:0 read operation rd_addr_b = 00
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 00000023e
rf::eu_rf_wren    = 1
rf::swapbit_wr_data_a = 0
rf::swapbit_wr_addr_a = 0
rf::swapbit_wr_data_b = 0
rf::swapbit_wr_addr_b = 0
rf::swapbit_wren.writ = 0
rf::eu_rf_wren 	  = 1
rf::swap_wren 		  = 0
rf::swapbit_wren 	  = 0
rf::testbit_wren 	  = 0
rf::setbit_wren 	  = 0
rf::ldimm_ab_16_wren = 0
rf::rf_mux_in_wren_a = 0
rf::rf_mux_in_wren_b = 0
rf::enable = 1
rf::operandA = 0
rf::operandB = 0
rf::im_rf_ir.read()  = e00
rf::im_rf_instructionDecoder->getInstructionReg()  = e00
rf:: isInstFormatOpLas = 1
rf:: isInstFormatOpBit = 0
rf:: isInstFormatOpLdIm= 0
rf:: isInstFormatOpBr  = 0
rf:: getLdImmOperand16Field= e00
rf:: signExtend16(im_rf_instructionDecoder->getLdImmOperand16Field ()) = e00
rf:: rf_dest_data  = 1f
rf::im_rf_ir = e00
rf::eu_rf_ir = 000000c00
rf::op_imm_a = e
rf::op_imm_b = 0
rf:: getOperandAImm8Field  = e
rf:: getOperandBImm8Field  = 0
rf::signExtend8 (op_imm_a) = e
rf::signExtend8 (op_imm_b) = 0
rf::signExtend16(op_imm_b) = e00
rf::rd_data_rf_a = e
rf::rd_data_rf_b = 0
rf::rd_data_imm_a = e
rf::rd_data_imm_b = 0
rf::rd_data_imm_mux_sel_a = 0
rf::rd_data_imm_mux_sel_b = 0
rf::rd_data_imm_mux_a = e
rf::rd_data_imm_mux_b = 0
rf::rd_data_bypass_mux_a = e
rf::rd_data_bypass_mux_b = 23e
rf::rf_eu_wr_addr = 0
rf::enable = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_a     = 0e
rf::eu_rf_wr_addr_equal_rd_addr_a = 0
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_a = 0
rf::bypass_a = 0
rf::eu_rf_wr_addr = 00
rf::rd_addr_b     = 00
rf::eu_rf_wr_addr_equal_rd_addr_b = 1
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_b = 1
rf::bypass_b = 1
rf::eu_data_a = 23e
rf::rd_data_a = 00000000d
rf::rd_data_b = 00000023e
rf::rf_eu_v = 1
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 00000023e
rf::eu_rf_wren    = 1
rf::rf_stall = 0
rf::   rf[0] = 0
rf::   rf[1] = 1
rf::   rf[2] = 2
rf::   rf[3] = 3
rf::   rf[4] = 4
rf::   rf[5] = 5
rf::   rf[6] = 6
rf::   rf[7] = 7
rf::   rf[8] = 8
rf::   rf[9] = 9
rf::   rf[a] = a
rf::   rf[b] = b
rf::   rf[c] = c
rf::   rf[d] = d
rf::   rf[e] = e
rf::   rf[f] = f
rf::   rf[10] = 10
rf::   rf[11] = 11
rf::   rf[12] = 12
rf::   rf[13] = 13
rf::   rf[14] = 14
rf::   rf[15] = 15
rf::   rf[16] = 16
rf::   rf[17] = 17
rf::   rf[18] = 18
rf::   rf[19] = 19
rf::   rf[1a] = 1a
rf::   rf[1b] = 1b
rf::   rf[1c] = 1c
rf::   rf[1d] = 1d
rf::   rf[1e] = 1e
rf::   rf[1f] = 1f
executionUnit::****************************************
executionUnit:: rf_eu_v=1
executionUnit::enable =1
executionUnit:: instReg=d00 isInstFmtLas=1 instFmt=0
executionUnit:: rf_eu_ir = 000000d00
executionUnit:: las op = ELasAdd	 las op = 0
executionUnit:: src_a = 00000000d
executionUnit:: src_b = 00000023e
executionUnit:: eu_rf_wr_data_las = 0
executionUnit:: eu_rf_wr_data_bit = 0
executionUnit:: id->dest = 0
executionUnit:: eu_rf_wr_data = 00000023e
executionUnit:: eu_rf_wr_addr = 00
executionUnit:: eu_rf_wren             = 1
rf::****************************************
rf::v = 1
rf::instructionReg = e00
rf::reset_ = 1
rf::rd_addr_a = 0e
rf::rden_a    = 1
rf::rd_addr_b = 00
rf::rden_b    = 1
rf:1 all read operation rd_addr_a = 0e
rf:0 read operation rd_addr_b = 00
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 00000024b
rf::eu_rf_wren    = 1
rf::swapbit_wr_data_a = 0
rf::swapbit_wr_addr_a = 0
rf::swapbit_wr_data_b = 0
rf::swapbit_wr_addr_b = 0
rf::swapbit_wren.writ = 0
rf::eu_rf_wren 	  = 1
rf::swap_wren 		  = 0
rf::swapbit_wren 	  = 0
rf::testbit_wren 	  = 0
rf::setbit_wren 	  = 0
rf::ldimm_ab_16_wren = 0
rf::rf_mux_in_wren_a = 0
rf::rf_mux_in_wren_b = 0
rf::enable = 1
rf::operandA = 0
rf::operandB = 0
rf::im_rf_ir.read()  = e00
rf::im_rf_instructionDecoder->getInstructionReg()  = e00
rf:: isInstFormatOpLas = 1
rf:: isInstFormatOpBit = 0
rf:: isInstFormatOpLdIm= 0
rf:: isInstFormatOpBr  = 0
rf:: getLdImmOperand16Field= e00
rf:: signExtend16(im_rf_instructionDecoder->getLdImmOperand16Field ()) = e00
rf:: rf_dest_data  = 1f
rf::im_rf_ir = e00
rf::eu_rf_ir = 000000c00
rf::op_imm_a = e
rf::op_imm_b = 0
rf:: getOperandAImm8Field  = e
rf:: getOperandBImm8Field  = 0
rf::signExtend8 (op_imm_a) = e
rf::signExtend8 (op_imm_b) = 0
rf::signExtend16(op_imm_b) = e00
rf::rd_data_rf_a = e
rf::rd_data_rf_b = 0
rf::rd_data_imm_a = e
rf::rd_data_imm_b = 0
rf::rd_data_imm_mux_sel_a = 0
rf::rd_data_imm_mux_sel_b = 0
rf::rd_data_imm_mux_a = e
rf::rd_data_imm_mux_b = 0
rf::rd_data_bypass_mux_a = e
rf::rd_data_bypass_mux_b = 24b
rf::rf_eu_wr_addr = 0
rf::enable = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_a     = 0e
rf::eu_rf_wr_addr_equal_rd_addr_a = 0
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_a = 0
rf::bypass_a = 0
rf::eu_rf_wr_addr = 00
rf::rd_addr_b     = 00
rf::eu_rf_wr_addr_equal_rd_addr_b = 1
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_b = 1
rf::bypass_b = 1
rf::eu_data_a = 24b
rf::rd_data_a = 00000000d
rf::rd_data_b = 00000023e
rf::rf_eu_v = 1
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 00000024b
rf::eu_rf_wren    = 1
rf::rf_stall = 0
rf::   rf[0] = 0
rf::   rf[1] = 1
rf::   rf[2] = 2
rf::   rf[3] = 3
rf::   rf[4] = 4
rf::   rf[5] = 5
rf::   rf[6] = 6
rf::   rf[7] = 7
rf::   rf[8] = 8
rf::   rf[9] = 9
rf::   rf[a] = a
rf::   rf[b] = b
rf::   rf[c] = c
rf::   rf[d] = d
rf::   rf[e] = e
rf::   rf[f] = f
rf::   rf[10] = 10
rf::   rf[11] = 11
rf::   rf[12] = 12
rf::   rf[13] = 13
rf::   rf[14] = 14
rf::   rf[15] = 15
rf::   rf[16] = 16
rf::   rf[17] = 17
rf::   rf[18] = 18
rf::   rf[19] = 19
rf::   rf[1a] = 1a
rf::   rf[1b] = 1b
rf::   rf[1c] = 1c
rf::   rf[1d] = 1d
rf::   rf[1e] = 1e
rf::   rf[1f] = 1f
   read op  buffer[4e] = f00 im read operation  = 4e data = e00
 eu_branch = 0 pcx = 4f pc_inc = 4f
reset_ = 1
enable = 1
eu_branch = 0
 pc_im_v   = 1
 im_rf_v   = 1
 rf_eu_v   = 1
 eu_rf_wren= 1
pc_im_address = 4e
im.data = e00
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 1 pc_im_address = 4e  im_1 = e00
im_data = e00
ir_rf_3 = 000000d00
ir_eu_4 = 000000c00
 eu_branch.read() = 1
 pc_im_v   = 1
 im_rf_v   = 1
 rf_eu_v   = 1
 rf_rd_addr_a = e
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 00000000d
 rf_rd_data_b = 00000023e
 im_rf_v   = 1
 rf_eu_v = 1
 eu_rf_wren = 1
 eu_rf_wr_data  = 00000024b
 eu_rf_wr_addr  = 00
rf::****************************************
rf::v = 1
rf::instructionReg = f00
rf::reset_ = 1
rf::rd_addr_a = 0f
rf::rden_a    = 1
rf::rd_addr_b = 00
rf::rden_b    = 1
rf:1 all read operation rd_addr_a = 0f
rf:0 read operation rd_addr_b = 00
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 00000024b
rf::eu_rf_wren    = 1
rf::swapbit_wr_data_a = 0
rf::swapbit_wr_addr_a = 0
rf::swapbit_wr_data_b = 0
rf::swapbit_wr_addr_b = 0
rf::swapbit_wren.writ = 0
rf::eu_rf_wren 	  = 1
rf::swap_wren 		  = 0
rf::swapbit_wren 	  = 0
rf::testbit_wren 	  = 0
rf::setbit_wren 	  = 0
rf::ldimm_ab_16_wren = 0
rf::rf_mux_in_wren_a = 0
rf::rf_mux_in_wren_b = 0
rf::enable = 1
rf::operandA = 0
rf::operandB = 0
rf::im_rf_ir.read()  = f00
rf::im_rf_instructionDecoder->getInstructionReg()  = f00
rf:: isInstFormatOpLas = 1
rf:: isInstFormatOpBit = 0
rf:: isInstFormatOpLdIm= 0
rf:: isInstFormatOpBr  = 0
rf:: getLdImmOperand16Field= f00
rf:: signExtend16(im_rf_instructionDecoder->getLdImmOperand16Field ()) = f00
rf:: rf_dest_data  = 1f
rf::im_rf_ir = f00
rf::eu_rf_ir = 000000d00
rf::op_imm_a = f
rf::op_imm_b = 0
rf:: getOperandAImm8Field  = f
rf:: getOperandBImm8Field  = 0
rf::signExtend8 (op_imm_a) = f
rf::signExtend8 (op_imm_b) = 0
rf::signExtend16(op_imm_b) = f00
rf::rd_data_rf_a = f
rf::rd_data_rf_b = 0
rf::rd_data_imm_a = f
rf::rd_data_imm_b = 0
rf::rd_data_imm_mux_sel_a = 0
rf::rd_data_imm_mux_sel_b = 0
rf::rd_data_imm_mux_a = f
rf::rd_data_imm_mux_b = 0
rf::rd_data_bypass_mux_a = f
rf::rd_data_bypass_mux_b = 24b
rf::rf_eu_wr_addr = 0
rf::enable = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_a     = 0f
rf::eu_rf_wr_addr_equal_rd_addr_a = 0
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_a = 0
rf::bypass_a = 0
rf::eu_rf_wr_addr = 00
rf::rd_addr_b     = 00
rf::eu_rf_wr_addr_equal_rd_addr_b = 1
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_b = 1
rf::bypass_b = 1
rf::eu_data_a = 24b
rf::rd_data_a = 00000000e
rf::rd_data_b = 00000024b
rf::rf_eu_v = 1
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 00000024b
rf::eu_rf_wren    = 1
rf::rf_stall = 0
rf::   rf[0] = 0
rf::   rf[1] = 1
rf::   rf[2] = 2
rf::   rf[3] = 3
rf::   rf[4] = 4
rf::   rf[5] = 5
rf::   rf[6] = 6
rf::   rf[7] = 7
rf::   rf[8] = 8
rf::   rf[9] = 9
rf::   rf[a] = a
rf::   rf[b] = b
rf::   rf[c] = c
rf::   rf[d] = d
rf::   rf[e] = e
rf::   rf[f] = f
rf::   rf[10] = 10
rf::   rf[11] = 11
rf::   rf[12] = 12
rf::   rf[13] = 13
rf::   rf[14] = 14
rf::   rf[15] = 15
rf::   rf[16] = 16
rf::   rf[17] = 17
rf::   rf[18] = 18
rf::   rf[19] = 19
rf::   rf[1a] = 1a
rf::   rf[1b] = 1b
rf::   rf[1c] = 1c
rf::   rf[1d] = 1d
rf::   rf[1e] = 1e
rf::   rf[1f] = 1f
executionUnit::****************************************
executionUnit:: rf_eu_v=1
executionUnit::enable =1
executionUnit:: instReg=e00 isInstFmtLas=1 instFmt=0
executionUnit:: rf_eu_ir = 000000e00
executionUnit:: las op = ELasAdd	 las op = 0
executionUnit:: src_a = 00000000e
executionUnit:: src_b = 00000024b
executionUnit:: eu_rf_wr_data_las = 0
executionUnit:: eu_rf_wr_data_bit = 0
executionUnit:: id->dest = 0
executionUnit:: eu_rf_wr_data = 00000024b
executionUnit:: eu_rf_wr_addr = 00
executionUnit:: eu_rf_wren             = 1
rf::****************************************
rf::v = 1
rf::instructionReg = f00
rf::reset_ = 1
rf::rd_addr_a = 0f
rf::rden_a    = 1
rf::rd_addr_b = 00
rf::rden_b    = 1
rf:1 all read operation rd_addr_a = 0f
rf:0 read operation rd_addr_b = 00
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 000000259
rf::eu_rf_wren    = 1
rf::swapbit_wr_data_a = 0
rf::swapbit_wr_addr_a = 0
rf::swapbit_wr_data_b = 0
rf::swapbit_wr_addr_b = 0
rf::swapbit_wren.writ = 0
rf::eu_rf_wren 	  = 1
rf::swap_wren 		  = 0
rf::swapbit_wren 	  = 0
rf::testbit_wren 	  = 0
rf::setbit_wren 	  = 0
rf::ldimm_ab_16_wren = 0
rf::rf_mux_in_wren_a = 0
rf::rf_mux_in_wren_b = 0
rf::enable = 1
rf::operandA = 0
rf::operandB = 0
rf::im_rf_ir.read()  = f00
rf::im_rf_instructionDecoder->getInstructionReg()  = f00
rf:: isInstFormatOpLas = 1
rf:: isInstFormatOpBit = 0
rf:: isInstFormatOpLdIm= 0
rf:: isInstFormatOpBr  = 0
rf:: getLdImmOperand16Field= f00
rf:: signExtend16(im_rf_instructionDecoder->getLdImmOperand16Field ()) = f00
rf:: rf_dest_data  = 1f
rf::im_rf_ir = f00
rf::eu_rf_ir = 000000d00
rf::op_imm_a = f
rf::op_imm_b = 0
rf:: getOperandAImm8Field  = f
rf:: getOperandBImm8Field  = 0
rf::signExtend8 (op_imm_a) = f
rf::signExtend8 (op_imm_b) = 0
rf::signExtend16(op_imm_b) = f00
rf::rd_data_rf_a = f
rf::rd_data_rf_b = 0
rf::rd_data_imm_a = f
rf::rd_data_imm_b = 0
rf::rd_data_imm_mux_sel_a = 0
rf::rd_data_imm_mux_sel_b = 0
rf::rd_data_imm_mux_a = f
rf::rd_data_imm_mux_b = 0
rf::rd_data_bypass_mux_a = f
rf::rd_data_bypass_mux_b = 259
rf::rf_eu_wr_addr = 0
rf::enable = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_a     = 0f
rf::eu_rf_wr_addr_equal_rd_addr_a = 0
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_a = 0
rf::bypass_a = 0
rf::eu_rf_wr_addr = 00
rf::rd_addr_b     = 00
rf::eu_rf_wr_addr_equal_rd_addr_b = 1
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_b = 1
rf::bypass_b = 1
rf::eu_data_a = 259
rf::rd_data_a = 00000000e
rf::rd_data_b = 00000024b
rf::rf_eu_v = 1
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 000000259
rf::eu_rf_wren    = 1
rf::rf_stall = 0
rf::   rf[0] = 0
rf::   rf[1] = 1
rf::   rf[2] = 2
rf::   rf[3] = 3
rf::   rf[4] = 4
rf::   rf[5] = 5
rf::   rf[6] = 6
rf::   rf[7] = 7
rf::   rf[8] = 8
rf::   rf[9] = 9
rf::   rf[a] = a
rf::   rf[b] = b
rf::   rf[c] = c
rf::   rf[d] = d
rf::   rf[e] = e
rf::   rf[f] = f
rf::   rf[10] = 10
rf::   rf[11] = 11
rf::   rf[12] = 12
rf::   rf[13] = 13
rf::   rf[14] = 14
rf::   rf[15] = 15
rf::   rf[16] = 16
rf::   rf[17] = 17
rf::   rf[18] = 18
rf::   rf[19] = 19
rf::   rf[1a] = 1a
rf::   rf[1b] = 1b
rf::   rf[1c] = 1c
rf::   rf[1d] = 1d
rf::   rf[1e] = 1e
rf::   rf[1f] = 1f
   read op  buffer[4f] = 1000 im read operation  = 4f data = f00
 eu_branch = 0 pcx = 50 pc_inc = 50
reset_ = 1
enable = 1
eu_branch = 0
 pc_im_v   = 1
 im_rf_v   = 1
 rf_eu_v   = 1
 eu_rf_wren= 1
pc_im_address = 4f
im.data = f00
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 1 pc_im_address = 4f  im_1 = f00
im_data = f00
ir_rf_3 = 000000e00
ir_eu_4 = 000000d00
 eu_branch.read() = 1
 pc_im_v   = 1
 im_rf_v   = 1
 rf_eu_v   = 1
 rf_rd_addr_a = f
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 00000000e
 rf_rd_data_b = 00000024b
 im_rf_v   = 1
 rf_eu_v = 1
 eu_rf_wren = 1
 eu_rf_wr_data  = 000000259
 eu_rf_wr_addr  = 00
rf::****************************************
rf::v = 1
rf::instructionReg = 1000
rf::reset_ = 1
rf::rd_addr_a = 10
rf::rden_a    = 1
rf::rd_addr_b = 00
rf::rden_b    = 1
rf:1 all read operation rd_addr_a = 10
rf:0 read operation rd_addr_b = 00
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 000000259
rf::eu_rf_wren    = 1
rf::swapbit_wr_data_a = 0
rf::swapbit_wr_addr_a = 0
rf::swapbit_wr_data_b = 0
rf::swapbit_wr_addr_b = 0
rf::swapbit_wren.writ = 0
rf::eu_rf_wren 	  = 1
rf::swap_wren 		  = 0
rf::swapbit_wren 	  = 0
rf::testbit_wren 	  = 0
rf::setbit_wren 	  = 0
rf::ldimm_ab_16_wren = 0
rf::rf_mux_in_wren_a = 0
rf::rf_mux_in_wren_b = 0
rf::enable = 1
rf::operandA = 0
rf::operandB = 0
rf::im_rf_ir.read()  = 1000
rf::im_rf_instructionDecoder->getInstructionReg()  = 1000
rf:: isInstFormatOpLas = 1
rf:: isInstFormatOpBit = 0
rf:: isInstFormatOpLdIm= 0
rf:: isInstFormatOpBr  = 0
rf:: getLdImmOperand16Field= 1000
rf:: signExtend16(im_rf_instructionDecoder->getLdImmOperand16Field ()) = 1000
rf:: rf_dest_data  = 1f
rf::im_rf_ir = 1000
rf::eu_rf_ir = 000000e00
rf::op_imm_a = 10
rf::op_imm_b = 0
rf:: getOperandAImm8Field  = 10
rf:: getOperandBImm8Field  = 0
rf::signExtend8 (op_imm_a) = 10
rf::signExtend8 (op_imm_b) = 0
rf::signExtend16(op_imm_b) = 1000
rf::rd_data_rf_a = 10
rf::rd_data_rf_b = 0
rf::rd_data_imm_a = 10
rf::rd_data_imm_b = 0
rf::rd_data_imm_mux_sel_a = 0
rf::rd_data_imm_mux_sel_b = 0
rf::rd_data_imm_mux_a = 10
rf::rd_data_imm_mux_b = 0
rf::rd_data_bypass_mux_a = 10
rf::rd_data_bypass_mux_b = 259
rf::rf_eu_wr_addr = 0
rf::enable = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_a     = 10
rf::eu_rf_wr_addr_equal_rd_addr_a = 0
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_a = 0
rf::bypass_a = 0
rf::eu_rf_wr_addr = 00
rf::rd_addr_b     = 00
rf::eu_rf_wr_addr_equal_rd_addr_b = 1
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_b = 1
rf::bypass_b = 1
rf::eu_data_a = 259
rf::rd_data_a = 00000000f
rf::rd_data_b = 000000259
rf::rf_eu_v = 1
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 000000259
rf::eu_rf_wren    = 1
rf::rf_stall = 0
rf::   rf[0] = 0
rf::   rf[1] = 1
rf::   rf[2] = 2
rf::   rf[3] = 3
rf::   rf[4] = 4
rf::   rf[5] = 5
rf::   rf[6] = 6
rf::   rf[7] = 7
rf::   rf[8] = 8
rf::   rf[9] = 9
rf::   rf[a] = a
rf::   rf[b] = b
rf::   rf[c] = c
rf::   rf[d] = d
rf::   rf[e] = e
rf::   rf[f] = f
rf::   rf[10] = 10
rf::   rf[11] = 11
rf::   rf[12] = 12
rf::   rf[13] = 13
rf::   rf[14] = 14
rf::   rf[15] = 15
rf::   rf[16] = 16
rf::   rf[17] = 17
rf::   rf[18] = 18
rf::   rf[19] = 19
rf::   rf[1a] = 1a
rf::   rf[1b] = 1b
rf::   rf[1c] = 1c
rf::   rf[1d] = 1d
rf::   rf[1e] = 1e
rf::   rf[1f] = 1f
executionUnit::****************************************
executionUnit:: rf_eu_v=1
executionUnit::enable =1
executionUnit:: instReg=f00 isInstFmtLas=1 instFmt=0
executionUnit:: rf_eu_ir = 000000f00
executionUnit:: las op = ELasAdd	 las op = 0
executionUnit:: src_a = 00000000f
executionUnit:: src_b = 000000259
executionUnit:: eu_rf_wr_data_las = 0
executionUnit:: eu_rf_wr_data_bit = 0
executionUnit:: id->dest = 0
executionUnit:: eu_rf_wr_data = 000000259
executionUnit:: eu_rf_wr_addr = 00
executionUnit:: eu_rf_wren             = 1
rf::****************************************
rf::v = 1
rf::instructionReg = 1000
rf::reset_ = 1
rf::rd_addr_a = 10
rf::rden_a    = 1
rf::rd_addr_b = 00
rf::rden_b    = 1
rf:1 all read operation rd_addr_a = 10
rf:0 read operation rd_addr_b = 00
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 000000268
rf::eu_rf_wren    = 1
rf::swapbit_wr_data_a = 0
rf::swapbit_wr_addr_a = 0
rf::swapbit_wr_data_b = 0
rf::swapbit_wr_addr_b = 0
rf::swapbit_wren.writ = 0
rf::eu_rf_wren 	  = 1
rf::swap_wren 		  = 0
rf::swapbit_wren 	  = 0
rf::testbit_wren 	  = 0
rf::setbit_wren 	  = 0
rf::ldimm_ab_16_wren = 0
rf::rf_mux_in_wren_a = 0
rf::rf_mux_in_wren_b = 0
rf::enable = 1
rf::operandA = 0
rf::operandB = 0
rf::im_rf_ir.read()  = 1000
rf::im_rf_instructionDecoder->getInstructionReg()  = 1000
rf:: isInstFormatOpLas = 1
rf:: isInstFormatOpBit = 0
rf:: isInstFormatOpLdIm= 0
rf:: isInstFormatOpBr  = 0
rf:: getLdImmOperand16Field= 1000
rf:: signExtend16(im_rf_instructionDecoder->getLdImmOperand16Field ()) = 1000
rf:: rf_dest_data  = 1f
rf::im_rf_ir = 1000
rf::eu_rf_ir = 000000e00
rf::op_imm_a = 10
rf::op_imm_b = 0
rf:: getOperandAImm8Field  = 10
rf:: getOperandBImm8Field  = 0
rf::signExtend8 (op_imm_a) = 10
rf::signExtend8 (op_imm_b) = 0
rf::signExtend16(op_imm_b) = 1000
rf::rd_data_rf_a = 10
rf::rd_data_rf_b = 0
rf::rd_data_imm_a = 10
rf::rd_data_imm_b = 0
rf::rd_data_imm_mux_sel_a = 0
rf::rd_data_imm_mux_sel_b = 0
rf::rd_data_imm_mux_a = 10
rf::rd_data_imm_mux_b = 0
rf::rd_data_bypass_mux_a = 10
rf::rd_data_bypass_mux_b = 268
rf::rf_eu_wr_addr = 0
rf::enable = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_a     = 10
rf::eu_rf_wr_addr_equal_rd_addr_a = 0
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_a = 0
rf::bypass_a = 0
rf::eu_rf_wr_addr = 00
rf::rd_addr_b     = 00
rf::eu_rf_wr_addr_equal_rd_addr_b = 1
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_b = 1
rf::bypass_b = 1
rf::eu_data_a = 268
rf::rd_data_a = 00000000f
rf::rd_data_b = 000000259
rf::rf_eu_v = 1
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 000000268
rf::eu_rf_wren    = 1
rf::rf_stall = 0
rf::   rf[0] = 0
rf::   rf[1] = 1
rf::   rf[2] = 2
rf::   rf[3] = 3
rf::   rf[4] = 4
rf::   rf[5] = 5
rf::   rf[6] = 6
rf::   rf[7] = 7
rf::   rf[8] = 8
rf::   rf[9] = 9
rf::   rf[a] = a
rf::   rf[b] = b
rf::   rf[c] = c
rf::   rf[d] = d
rf::   rf[e] = e
rf::   rf[f] = f
rf::   rf[10] = 10
rf::   rf[11] = 11
rf::   rf[12] = 12
rf::   rf[13] = 13
rf::   rf[14] = 14
rf::   rf[15] = 15
rf::   rf[16] = 16
rf::   rf[17] = 17
rf::   rf[18] = 18
rf::   rf[19] = 19
rf::   rf[1a] = 1a
rf::   rf[1b] = 1b
rf::   rf[1c] = 1c
rf::   rf[1d] = 1d
rf::   rf[1e] = 1e
rf::   rf[1f] = 1f
   read op  buffer[50] = 1100 im read operation  = 50 data = 1000
 eu_branch = 0 pcx = 51 pc_inc = 51
reset_ = 1
enable = 1
eu_branch = 0
 pc_im_v   = 1
 im_rf_v   = 1
 rf_eu_v   = 1
 eu_rf_wren= 1
pc_im_address = 50
im.data = 1000
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 1 pc_im_address = 50  im_1 = 1000
im_data = 1000
ir_rf_3 = 000000f00
ir_eu_4 = 000000e00
 eu_branch.read() = 1
 pc_im_v   = 1
 im_rf_v   = 1
 rf_eu_v   = 1
 rf_rd_addr_a = 10
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 00000000f
 rf_rd_data_b = 000000259
 im_rf_v   = 1
 rf_eu_v = 1
 eu_rf_wren = 1
 eu_rf_wr_data  = 000000268
 eu_rf_wr_addr  = 00
rf::****************************************
rf::v = 1
rf::instructionReg = 1100
rf::reset_ = 1
rf::rd_addr_a = 11
rf::rden_a    = 1
rf::rd_addr_b = 00
rf::rden_b    = 1
rf:1 all read operation rd_addr_a = 11
rf:0 read operation rd_addr_b = 00
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 000000268
rf::eu_rf_wren    = 1
rf::swapbit_wr_data_a = 0
rf::swapbit_wr_addr_a = 0
rf::swapbit_wr_data_b = 0
rf::swapbit_wr_addr_b = 0
rf::swapbit_wren.writ = 0
rf::eu_rf_wren 	  = 1
rf::swap_wren 		  = 0
rf::swapbit_wren 	  = 0
rf::testbit_wren 	  = 0
rf::setbit_wren 	  = 0
rf::ldimm_ab_16_wren = 0
rf::rf_mux_in_wren_a = 0
rf::rf_mux_in_wren_b = 0
rf::enable = 1
rf::operandA = 0
rf::operandB = 0
rf::im_rf_ir.read()  = 1100
rf::im_rf_instructionDecoder->getInstructionReg()  = 1100
rf:: isInstFormatOpLas = 1
rf:: isInstFormatOpBit = 0
rf:: isInstFormatOpLdIm= 0
rf:: isInstFormatOpBr  = 0
rf:: getLdImmOperand16Field= 1100
rf:: signExtend16(im_rf_instructionDecoder->getLdImmOperand16Field ()) = 1100
rf:: rf_dest_data  = 1f
rf::im_rf_ir = 1100
rf::eu_rf_ir = 000000f00
rf::op_imm_a = 11
rf::op_imm_b = 0
rf:: getOperandAImm8Field  = 11
rf:: getOperandBImm8Field  = 0
rf::signExtend8 (op_imm_a) = 11
rf::signExtend8 (op_imm_b) = 0
rf::signExtend16(op_imm_b) = 1100
rf::rd_data_rf_a = 11
rf::rd_data_rf_b = 0
rf::rd_data_imm_a = 11
rf::rd_data_imm_b = 0
rf::rd_data_imm_mux_sel_a = 0
rf::rd_data_imm_mux_sel_b = 0
rf::rd_data_imm_mux_a = 11
rf::rd_data_imm_mux_b = 0
rf::rd_data_bypass_mux_a = 11
rf::rd_data_bypass_mux_b = 268
rf::rf_eu_wr_addr = 0
rf::enable = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_a     = 11
rf::eu_rf_wr_addr_equal_rd_addr_a = 0
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_a = 0
rf::bypass_a = 0
rf::eu_rf_wr_addr = 00
rf::rd_addr_b     = 00
rf::eu_rf_wr_addr_equal_rd_addr_b = 1
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_b = 1
rf::bypass_b = 1
rf::eu_data_a = 268
rf::rd_data_a = 000000010
rf::rd_data_b = 000000268
rf::rf_eu_v = 1
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 000000268
rf::eu_rf_wren    = 1
rf::rf_stall = 0
rf::   rf[0] = 0
rf::   rf[1] = 1
rf::   rf[2] = 2
rf::   rf[3] = 3
rf::   rf[4] = 4
rf::   rf[5] = 5
rf::   rf[6] = 6
rf::   rf[7] = 7
rf::   rf[8] = 8
rf::   rf[9] = 9
rf::   rf[a] = a
rf::   rf[b] = b
rf::   rf[c] = c
rf::   rf[d] = d
rf::   rf[e] = e
rf::   rf[f] = f
rf::   rf[10] = 10
rf::   rf[11] = 11
rf::   rf[12] = 12
rf::   rf[13] = 13
rf::   rf[14] = 14
rf::   rf[15] = 15
rf::   rf[16] = 16
rf::   rf[17] = 17
rf::   rf[18] = 18
rf::   rf[19] = 19
rf::   rf[1a] = 1a
rf::   rf[1b] = 1b
rf::   rf[1c] = 1c
rf::   rf[1d] = 1d
rf::   rf[1e] = 1e
rf::   rf[1f] = 1f
executionUnit::****************************************
executionUnit:: rf_eu_v=1
executionUnit::enable =1
executionUnit:: instReg=1000 isInstFmtLas=1 instFmt=0
executionUnit:: rf_eu_ir = 000001000
executionUnit:: las op = ELasAdd	 las op = 0
executionUnit:: src_a = 000000010
executionUnit:: src_b = 000000268
executionUnit:: eu_rf_wr_data_las = 0
executionUnit:: eu_rf_wr_data_bit = 0
executionUnit:: id->dest = 0
executionUnit:: eu_rf_wr_data = 000000268
executionUnit:: eu_rf_wr_addr = 00
executionUnit:: eu_rf_wren             = 1
rf::****************************************
rf::v = 1
rf::instructionReg = 1100
rf::reset_ = 1
rf::rd_addr_a = 11
rf::rden_a    = 1
rf::rd_addr_b = 00
rf::rden_b    = 1
rf:1 all read operation rd_addr_a = 11
rf:0 read operation rd_addr_b = 00
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 000000278
rf::eu_rf_wren    = 1
rf::swapbit_wr_data_a = 0
rf::swapbit_wr_addr_a = 0
rf::swapbit_wr_data_b = 0
rf::swapbit_wr_addr_b = 0
rf::swapbit_wren.writ = 0
rf::eu_rf_wren 	  = 1
rf::swap_wren 		  = 0
rf::swapbit_wren 	  = 0
rf::testbit_wren 	  = 0
rf::setbit_wren 	  = 0
rf::ldimm_ab_16_wren = 0
rf::rf_mux_in_wren_a = 0
rf::rf_mux_in_wren_b = 0
rf::enable = 1
rf::operandA = 0
rf::operandB = 0
rf::im_rf_ir.read()  = 1100
rf::im_rf_instructionDecoder->getInstructionReg()  = 1100
rf:: isInstFormatOpLas = 1
rf:: isInstFormatOpBit = 0
rf:: isInstFormatOpLdIm= 0
rf:: isInstFormatOpBr  = 0
rf:: getLdImmOperand16Field= 1100
rf:: signExtend16(im_rf_instructionDecoder->getLdImmOperand16Field ()) = 1100
rf:: rf_dest_data  = 1f
rf::im_rf_ir = 1100
rf::eu_rf_ir = 000000f00
rf::op_imm_a = 11
rf::op_imm_b = 0
rf:: getOperandAImm8Field  = 11
rf:: getOperandBImm8Field  = 0
rf::signExtend8 (op_imm_a) = 11
rf::signExtend8 (op_imm_b) = 0
rf::signExtend16(op_imm_b) = 1100
rf::rd_data_rf_a = 11
rf::rd_data_rf_b = 0
rf::rd_data_imm_a = 11
rf::rd_data_imm_b = 0
rf::rd_data_imm_mux_sel_a = 0
rf::rd_data_imm_mux_sel_b = 0
rf::rd_data_imm_mux_a = 11
rf::rd_data_imm_mux_b = 0
rf::rd_data_bypass_mux_a = 11
rf::rd_data_bypass_mux_b = 278
rf::rf_eu_wr_addr = 0
rf::enable = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_a     = 11
rf::eu_rf_wr_addr_equal_rd_addr_a = 0
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_a = 0
rf::bypass_a = 0
rf::eu_rf_wr_addr = 00
rf::rd_addr_b     = 00
rf::eu_rf_wr_addr_equal_rd_addr_b = 1
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_b = 1
rf::bypass_b = 1
rf::eu_data_a = 278
rf::rd_data_a = 000000010
rf::rd_data_b = 000000268
rf::rf_eu_v = 1
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 000000278
rf::eu_rf_wren    = 1
rf::rf_stall = 0
rf::   rf[0] = 0
rf::   rf[1] = 1
rf::   rf[2] = 2
rf::   rf[3] = 3
rf::   rf[4] = 4
rf::   rf[5] = 5
rf::   rf[6] = 6
rf::   rf[7] = 7
rf::   rf[8] = 8
rf::   rf[9] = 9
rf::   rf[a] = a
rf::   rf[b] = b
rf::   rf[c] = c
rf::   rf[d] = d
rf::   rf[e] = e
rf::   rf[f] = f
rf::   rf[10] = 10
rf::   rf[11] = 11
rf::   rf[12] = 12
rf::   rf[13] = 13
rf::   rf[14] = 14
rf::   rf[15] = 15
rf::   rf[16] = 16
rf::   rf[17] = 17
rf::   rf[18] = 18
rf::   rf[19] = 19
rf::   rf[1a] = 1a
rf::   rf[1b] = 1b
rf::   rf[1c] = 1c
rf::   rf[1d] = 1d
rf::   rf[1e] = 1e
rf::   rf[1f] = 1f
   read op  buffer[51] = 1200 im read operation  = 51 data = 1100
 eu_branch = 0 pcx = 52 pc_inc = 52
reset_ = 1
enable = 1
eu_branch = 0
 pc_im_v   = 1
 im_rf_v   = 1
 rf_eu_v   = 1
 eu_rf_wren= 1
pc_im_address = 51
im.data = 1100
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 1 pc_im_address = 51  im_1 = 1100
im_data = 1100
ir_rf_3 = 000001000
ir_eu_4 = 000000f00
 eu_branch.read() = 1
 pc_im_v   = 1
 im_rf_v   = 1
 rf_eu_v   = 1
 rf_rd_addr_a = 11
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000010
 rf_rd_data_b = 000000268
 im_rf_v   = 1
 rf_eu_v = 1
 eu_rf_wren = 1
 eu_rf_wr_data  = 000000278
 eu_rf_wr_addr  = 00
rf::****************************************
rf::v = 1
rf::instructionReg = 1200
rf::reset_ = 1
rf::rd_addr_a = 12
rf::rden_a    = 1
rf::rd_addr_b = 00
rf::rden_b    = 1
rf:1 all read operation rd_addr_a = 12
rf:0 read operation rd_addr_b = 00
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 000000278
rf::eu_rf_wren    = 1
rf::swapbit_wr_data_a = 0
rf::swapbit_wr_addr_a = 0
rf::swapbit_wr_data_b = 0
rf::swapbit_wr_addr_b = 0
rf::swapbit_wren.writ = 0
rf::eu_rf_wren 	  = 1
rf::swap_wren 		  = 0
rf::swapbit_wren 	  = 0
rf::testbit_wren 	  = 0
rf::setbit_wren 	  = 0
rf::ldimm_ab_16_wren = 0
rf::rf_mux_in_wren_a = 0
rf::rf_mux_in_wren_b = 0
rf::enable = 1
rf::operandA = 0
rf::operandB = 0
rf::im_rf_ir.read()  = 1200
rf::im_rf_instructionDecoder->getInstructionReg()  = 1200
rf:: isInstFormatOpLas = 1
rf:: isInstFormatOpBit = 0
rf:: isInstFormatOpLdIm= 0
rf:: isInstFormatOpBr  = 0
rf:: getLdImmOperand16Field= 1200
rf:: signExtend16(im_rf_instructionDecoder->getLdImmOperand16Field ()) = 1200
rf:: rf_dest_data  = 1f
rf::im_rf_ir = 1200
rf::eu_rf_ir = 000001000
rf::op_imm_a = 12
rf::op_imm_b = 0
rf:: getOperandAImm8Field  = 12
rf:: getOperandBImm8Field  = 0
rf::signExtend8 (op_imm_a) = 12
rf::signExtend8 (op_imm_b) = 0
rf::signExtend16(op_imm_b) = 1200
rf::rd_data_rf_a = 12
rf::rd_data_rf_b = 0
rf::rd_data_imm_a = 12
rf::rd_data_imm_b = 0
rf::rd_data_imm_mux_sel_a = 0
rf::rd_data_imm_mux_sel_b = 0
rf::rd_data_imm_mux_a = 12
rf::rd_data_imm_mux_b = 0
rf::rd_data_bypass_mux_a = 12
rf::rd_data_bypass_mux_b = 278
rf::rf_eu_wr_addr = 0
rf::enable = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_a     = 12
rf::eu_rf_wr_addr_equal_rd_addr_a = 0
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_a = 0
rf::bypass_a = 0
rf::eu_rf_wr_addr = 00
rf::rd_addr_b     = 00
rf::eu_rf_wr_addr_equal_rd_addr_b = 1
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_b = 1
rf::bypass_b = 1
rf::eu_data_a = 278
rf::rd_data_a = 000000011
rf::rd_data_b = 000000278
rf::rf_eu_v = 1
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 000000278
rf::eu_rf_wren    = 1
rf::rf_stall = 0
rf::   rf[0] = 0
rf::   rf[1] = 1
rf::   rf[2] = 2
rf::   rf[3] = 3
rf::   rf[4] = 4
rf::   rf[5] = 5
rf::   rf[6] = 6
rf::   rf[7] = 7
rf::   rf[8] = 8
rf::   rf[9] = 9
rf::   rf[a] = a
rf::   rf[b] = b
rf::   rf[c] = c
rf::   rf[d] = d
rf::   rf[e] = e
rf::   rf[f] = f
rf::   rf[10] = 10
rf::   rf[11] = 11
rf::   rf[12] = 12
rf::   rf[13] = 13
rf::   rf[14] = 14
rf::   rf[15] = 15
rf::   rf[16] = 16
rf::   rf[17] = 17
rf::   rf[18] = 18
rf::   rf[19] = 19
rf::   rf[1a] = 1a
rf::   rf[1b] = 1b
rf::   rf[1c] = 1c
rf::   rf[1d] = 1d
rf::   rf[1e] = 1e
rf::   rf[1f] = 1f
executionUnit::****************************************
executionUnit:: rf_eu_v=1
executionUnit::enable =1
executionUnit:: instReg=1100 isInstFmtLas=1 instFmt=0
executionUnit:: rf_eu_ir = 000001100
executionUnit:: las op = ELasAdd	 las op = 0
executionUnit:: src_a = 000000011
executionUnit:: src_b = 000000278
executionUnit:: eu_rf_wr_data_las = 0
executionUnit:: eu_rf_wr_data_bit = 0
executionUnit:: id->dest = 0
executionUnit:: eu_rf_wr_data = 000000278
executionUnit:: eu_rf_wr_addr = 00
executionUnit:: eu_rf_wren             = 1
rf::****************************************
rf::v = 1
rf::instructionReg = 1200
rf::reset_ = 1
rf::rd_addr_a = 12
rf::rden_a    = 1
rf::rd_addr_b = 00
rf::rden_b    = 1
rf:1 all read operation rd_addr_a = 12
rf:0 read operation rd_addr_b = 00
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 000000289
rf::eu_rf_wren    = 1
rf::swapbit_wr_data_a = 0
rf::swapbit_wr_addr_a = 0
rf::swapbit_wr_data_b = 0
rf::swapbit_wr_addr_b = 0
rf::swapbit_wren.writ = 0
rf::eu_rf_wren 	  = 1
rf::swap_wren 		  = 0
rf::swapbit_wren 	  = 0
rf::testbit_wren 	  = 0
rf::setbit_wren 	  = 0
rf::ldimm_ab_16_wren = 0
rf::rf_mux_in_wren_a = 0
rf::rf_mux_in_wren_b = 0
rf::enable = 1
rf::operandA = 0
rf::operandB = 0
rf::im_rf_ir.read()  = 1200
rf::im_rf_instructionDecoder->getInstructionReg()  = 1200
rf:: isInstFormatOpLas = 1
rf:: isInstFormatOpBit = 0
rf:: isInstFormatOpLdIm= 0
rf:: isInstFormatOpBr  = 0
rf:: getLdImmOperand16Field= 1200
rf:: signExtend16(im_rf_instructionDecoder->getLdImmOperand16Field ()) = 1200
rf:: rf_dest_data  = 1f
rf::im_rf_ir = 1200
rf::eu_rf_ir = 000001000
rf::op_imm_a = 12
rf::op_imm_b = 0
rf:: getOperandAImm8Field  = 12
rf:: getOperandBImm8Field  = 0
rf::signExtend8 (op_imm_a) = 12
rf::signExtend8 (op_imm_b) = 0
rf::signExtend16(op_imm_b) = 1200
rf::rd_data_rf_a = 12
rf::rd_data_rf_b = 0
rf::rd_data_imm_a = 12
rf::rd_data_imm_b = 0
rf::rd_data_imm_mux_sel_a = 0
rf::rd_data_imm_mux_sel_b = 0
rf::rd_data_imm_mux_a = 12
rf::rd_data_imm_mux_b = 0
rf::rd_data_bypass_mux_a = 12
rf::rd_data_bypass_mux_b = 289
rf::rf_eu_wr_addr = 0
rf::enable = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_a     = 12
rf::eu_rf_wr_addr_equal_rd_addr_a = 0
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_a = 0
rf::bypass_a = 0
rf::eu_rf_wr_addr = 00
rf::rd_addr_b     = 00
rf::eu_rf_wr_addr_equal_rd_addr_b = 1
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_b = 1
rf::bypass_b = 1
rf::eu_data_a = 289
rf::rd_data_a = 000000011
rf::rd_data_b = 000000278
rf::rf_eu_v = 1
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 000000289
rf::eu_rf_wren    = 1
rf::rf_stall = 0
rf::   rf[0] = 0
rf::   rf[1] = 1
rf::   rf[2] = 2
rf::   rf[3] = 3
rf::   rf[4] = 4
rf::   rf[5] = 5
rf::   rf[6] = 6
rf::   rf[7] = 7
rf::   rf[8] = 8
rf::   rf[9] = 9
rf::   rf[a] = a
rf::   rf[b] = b
rf::   rf[c] = c
rf::   rf[d] = d
rf::   rf[e] = e
rf::   rf[f] = f
rf::   rf[10] = 10
rf::   rf[11] = 11
rf::   rf[12] = 12
rf::   rf[13] = 13
rf::   rf[14] = 14
rf::   rf[15] = 15
rf::   rf[16] = 16
rf::   rf[17] = 17
rf::   rf[18] = 18
rf::   rf[19] = 19
rf::   rf[1a] = 1a
rf::   rf[1b] = 1b
rf::   rf[1c] = 1c
rf::   rf[1d] = 1d
rf::   rf[1e] = 1e
rf::   rf[1f] = 1f
   read op  buffer[52] = 1300 im read operation  = 52 data = 1200
 eu_branch = 0 pcx = 53 pc_inc = 53
reset_ = 1
enable = 1
eu_branch = 0
 pc_im_v   = 1
 im_rf_v   = 1
 rf_eu_v   = 1
 eu_rf_wren= 1
pc_im_address = 52
im.data = 1200
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 1 pc_im_address = 52  im_1 = 1200
im_data = 1200
ir_rf_3 = 000001100
ir_eu_4 = 000001000
 eu_branch.read() = 1
 pc_im_v   = 1
 im_rf_v   = 1
 rf_eu_v   = 1
 rf_rd_addr_a = 12
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000011
 rf_rd_data_b = 000000278
 im_rf_v   = 1
 rf_eu_v = 1
 eu_rf_wren = 1
 eu_rf_wr_data  = 000000289
 eu_rf_wr_addr  = 00
rf::****************************************
rf::v = 1
rf::instructionReg = 1300
rf::reset_ = 1
rf::rd_addr_a = 13
rf::rden_a    = 1
rf::rd_addr_b = 00
rf::rden_b    = 1
rf:1 all read operation rd_addr_a = 13
rf:0 read operation rd_addr_b = 00
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 000000289
rf::eu_rf_wren    = 1
rf::swapbit_wr_data_a = 0
rf::swapbit_wr_addr_a = 0
rf::swapbit_wr_data_b = 0
rf::swapbit_wr_addr_b = 0
rf::swapbit_wren.writ = 0
rf::eu_rf_wren 	  = 1
rf::swap_wren 		  = 0
rf::swapbit_wren 	  = 0
rf::testbit_wren 	  = 0
rf::setbit_wren 	  = 0
rf::ldimm_ab_16_wren = 0
rf::rf_mux_in_wren_a = 0
rf::rf_mux_in_wren_b = 0
rf::enable = 1
rf::operandA = 0
rf::operandB = 0
rf::im_rf_ir.read()  = 1300
rf::im_rf_instructionDecoder->getInstructionReg()  = 1300
rf:: isInstFormatOpLas = 1
rf:: isInstFormatOpBit = 0
rf:: isInstFormatOpLdIm= 0
rf:: isInstFormatOpBr  = 0
rf:: getLdImmOperand16Field= 1300
rf:: signExtend16(im_rf_instructionDecoder->getLdImmOperand16Field ()) = 1300
rf:: rf_dest_data  = 1f
rf::im_rf_ir = 1300
rf::eu_rf_ir = 000001100
rf::op_imm_a = 13
rf::op_imm_b = 0
rf:: getOperandAImm8Field  = 13
rf:: getOperandBImm8Field  = 0
rf::signExtend8 (op_imm_a) = 13
rf::signExtend8 (op_imm_b) = 0
rf::signExtend16(op_imm_b) = 1300
rf::rd_data_rf_a = 13
rf::rd_data_rf_b = 0
rf::rd_data_imm_a = 13
rf::rd_data_imm_b = 0
rf::rd_data_imm_mux_sel_a = 0
rf::rd_data_imm_mux_sel_b = 0
rf::rd_data_imm_mux_a = 13
rf::rd_data_imm_mux_b = 0
rf::rd_data_bypass_mux_a = 13
rf::rd_data_bypass_mux_b = 289
rf::rf_eu_wr_addr = 0
rf::enable = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_a     = 13
rf::eu_rf_wr_addr_equal_rd_addr_a = 0
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_a = 0
rf::bypass_a = 0
rf::eu_rf_wr_addr = 00
rf::rd_addr_b     = 00
rf::eu_rf_wr_addr_equal_rd_addr_b = 1
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_b = 1
rf::bypass_b = 1
rf::eu_data_a = 289
rf::rd_data_a = 000000012
rf::rd_data_b = 000000289
rf::rf_eu_v = 1
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 000000289
rf::eu_rf_wren    = 1
rf::rf_stall = 0
rf::   rf[0] = 0
rf::   rf[1] = 1
rf::   rf[2] = 2
rf::   rf[3] = 3
rf::   rf[4] = 4
rf::   rf[5] = 5
rf::   rf[6] = 6
rf::   rf[7] = 7
rf::   rf[8] = 8
rf::   rf[9] = 9
rf::   rf[a] = a
rf::   rf[b] = b
rf::   rf[c] = c
rf::   rf[d] = d
rf::   rf[e] = e
rf::   rf[f] = f
rf::   rf[10] = 10
rf::   rf[11] = 11
rf::   rf[12] = 12
rf::   rf[13] = 13
rf::   rf[14] = 14
rf::   rf[15] = 15
rf::   rf[16] = 16
rf::   rf[17] = 17
rf::   rf[18] = 18
rf::   rf[19] = 19
rf::   rf[1a] = 1a
rf::   rf[1b] = 1b
rf::   rf[1c] = 1c
rf::   rf[1d] = 1d
rf::   rf[1e] = 1e
rf::   rf[1f] = 1f
executionUnit::****************************************
executionUnit:: rf_eu_v=1
executionUnit::enable =1
executionUnit:: instReg=1200 isInstFmtLas=1 instFmt=0
executionUnit:: rf_eu_ir = 000001200
executionUnit:: las op = ELasAdd	 las op = 0
executionUnit:: src_a = 000000012
executionUnit:: src_b = 000000289
executionUnit:: eu_rf_wr_data_las = 0
executionUnit:: eu_rf_wr_data_bit = 0
executionUnit:: id->dest = 0
executionUnit:: eu_rf_wr_data = 000000289
executionUnit:: eu_rf_wr_addr = 00
executionUnit:: eu_rf_wren             = 1
rf::****************************************
rf::v = 1
rf::instructionReg = 1300
rf::reset_ = 1
rf::rd_addr_a = 13
rf::rden_a    = 1
rf::rd_addr_b = 00
rf::rden_b    = 1
rf:1 all read operation rd_addr_a = 13
rf:0 read operation rd_addr_b = 00
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 00000029b
rf::eu_rf_wren    = 1
rf::swapbit_wr_data_a = 0
rf::swapbit_wr_addr_a = 0
rf::swapbit_wr_data_b = 0
rf::swapbit_wr_addr_b = 0
rf::swapbit_wren.writ = 0
rf::eu_rf_wren 	  = 1
rf::swap_wren 		  = 0
rf::swapbit_wren 	  = 0
rf::testbit_wren 	  = 0
rf::setbit_wren 	  = 0
rf::ldimm_ab_16_wren = 0
rf::rf_mux_in_wren_a = 0
rf::rf_mux_in_wren_b = 0
rf::enable = 1
rf::operandA = 0
rf::operandB = 0
rf::im_rf_ir.read()  = 1300
rf::im_rf_instructionDecoder->getInstructionReg()  = 1300
rf:: isInstFormatOpLas = 1
rf:: isInstFormatOpBit = 0
rf:: isInstFormatOpLdIm= 0
rf:: isInstFormatOpBr  = 0
rf:: getLdImmOperand16Field= 1300
rf:: signExtend16(im_rf_instructionDecoder->getLdImmOperand16Field ()) = 1300
rf:: rf_dest_data  = 1f
rf::im_rf_ir = 1300
rf::eu_rf_ir = 000001100
rf::op_imm_a = 13
rf::op_imm_b = 0
rf:: getOperandAImm8Field  = 13
rf:: getOperandBImm8Field  = 0
rf::signExtend8 (op_imm_a) = 13
rf::signExtend8 (op_imm_b) = 0
rf::signExtend16(op_imm_b) = 1300
rf::rd_data_rf_a = 13
rf::rd_data_rf_b = 0
rf::rd_data_imm_a = 13
rf::rd_data_imm_b = 0
rf::rd_data_imm_mux_sel_a = 0
rf::rd_data_imm_mux_sel_b = 0
rf::rd_data_imm_mux_a = 13
rf::rd_data_imm_mux_b = 0
rf::rd_data_bypass_mux_a = 13
rf::rd_data_bypass_mux_b = 29b
rf::rf_eu_wr_addr = 0
rf::enable = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_a     = 13
rf::eu_rf_wr_addr_equal_rd_addr_a = 0
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_a = 0
rf::bypass_a = 0
rf::eu_rf_wr_addr = 00
rf::rd_addr_b     = 00
rf::eu_rf_wr_addr_equal_rd_addr_b = 1
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_b = 1
rf::bypass_b = 1
rf::eu_data_a = 29b
rf::rd_data_a = 000000012
rf::rd_data_b = 000000289
rf::rf_eu_v = 1
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 00000029b
rf::eu_rf_wren    = 1
rf::rf_stall = 0
rf::   rf[0] = 0
rf::   rf[1] = 1
rf::   rf[2] = 2
rf::   rf[3] = 3
rf::   rf[4] = 4
rf::   rf[5] = 5
rf::   rf[6] = 6
rf::   rf[7] = 7
rf::   rf[8] = 8
rf::   rf[9] = 9
rf::   rf[a] = a
rf::   rf[b] = b
rf::   rf[c] = c
rf::   rf[d] = d
rf::   rf[e] = e
rf::   rf[f] = f
rf::   rf[10] = 10
rf::   rf[11] = 11
rf::   rf[12] = 12
rf::   rf[13] = 13
rf::   rf[14] = 14
rf::   rf[15] = 15
rf::   rf[16] = 16
rf::   rf[17] = 17
rf::   rf[18] = 18
rf::   rf[19] = 19
rf::   rf[1a] = 1a
rf::   rf[1b] = 1b
rf::   rf[1c] = 1c
rf::   rf[1d] = 1d
rf::   rf[1e] = 1e
rf::   rf[1f] = 1f
   read op  buffer[53] = 1400 im read operation  = 53 data = 1300
 eu_branch = 0 pcx = 54 pc_inc = 54
reset_ = 1
enable = 1
eu_branch = 0
 pc_im_v   = 1
 im_rf_v   = 1
 rf_eu_v   = 1
 eu_rf_wren= 1
pc_im_address = 53
im.data = 1300
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 1 pc_im_address = 53  im_1 = 1300
im_data = 1300
ir_rf_3 = 000001200
ir_eu_4 = 000001100
 eu_branch.read() = 1
 pc_im_v   = 1
 im_rf_v   = 1
 rf_eu_v   = 1
 rf_rd_addr_a = 13
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000012
 rf_rd_data_b = 000000289
 im_rf_v   = 1
 rf_eu_v = 1
 eu_rf_wren = 1
 eu_rf_wr_data  = 00000029b
 eu_rf_wr_addr  = 00
rf::****************************************
rf::v = 1
rf::instructionReg = 1400
rf::reset_ = 1
rf::rd_addr_a = 14
rf::rden_a    = 1
rf::rd_addr_b = 00
rf::rden_b    = 1
rf:1 all read operation rd_addr_a = 14
rf:0 read operation rd_addr_b = 00
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 00000029b
rf::eu_rf_wren    = 1
rf::swapbit_wr_data_a = 0
rf::swapbit_wr_addr_a = 0
rf::swapbit_wr_data_b = 0
rf::swapbit_wr_addr_b = 0
rf::swapbit_wren.writ = 0
rf::eu_rf_wren 	  = 1
rf::swap_wren 		  = 0
rf::swapbit_wren 	  = 0
rf::testbit_wren 	  = 0
rf::setbit_wren 	  = 0
rf::ldimm_ab_16_wren = 0
rf::rf_mux_in_wren_a = 0
rf::rf_mux_in_wren_b = 0
rf::enable = 1
rf::operandA = 0
rf::operandB = 0
rf::im_rf_ir.read()  = 1400
rf::im_rf_instructionDecoder->getInstructionReg()  = 1400
rf:: isInstFormatOpLas = 1
rf:: isInstFormatOpBit = 0
rf:: isInstFormatOpLdIm= 0
rf:: isInstFormatOpBr  = 0
rf:: getLdImmOperand16Field= 1400
rf:: signExtend16(im_rf_instructionDecoder->getLdImmOperand16Field ()) = 1400
rf:: rf_dest_data  = 1f
rf::im_rf_ir = 1400
rf::eu_rf_ir = 000001200
rf::op_imm_a = 14
rf::op_imm_b = 0
rf:: getOperandAImm8Field  = 14
rf:: getOperandBImm8Field  = 0
rf::signExtend8 (op_imm_a) = 14
rf::signExtend8 (op_imm_b) = 0
rf::signExtend16(op_imm_b) = 1400
rf::rd_data_rf_a = 14
rf::rd_data_rf_b = 0
rf::rd_data_imm_a = 14
rf::rd_data_imm_b = 0
rf::rd_data_imm_mux_sel_a = 0
rf::rd_data_imm_mux_sel_b = 0
rf::rd_data_imm_mux_a = 14
rf::rd_data_imm_mux_b = 0
rf::rd_data_bypass_mux_a = 14
rf::rd_data_bypass_mux_b = 29b
rf::rf_eu_wr_addr = 0
rf::enable = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_a     = 14
rf::eu_rf_wr_addr_equal_rd_addr_a = 0
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_a = 0
rf::bypass_a = 0
rf::eu_rf_wr_addr = 00
rf::rd_addr_b     = 00
rf::eu_rf_wr_addr_equal_rd_addr_b = 1
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_b = 1
rf::bypass_b = 1
rf::eu_data_a = 29b
rf::rd_data_a = 000000013
rf::rd_data_b = 00000029b
rf::rf_eu_v = 1
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 00000029b
rf::eu_rf_wren    = 1
rf::rf_stall = 0
rf::   rf[0] = 0
rf::   rf[1] = 1
rf::   rf[2] = 2
rf::   rf[3] = 3
rf::   rf[4] = 4
rf::   rf[5] = 5
rf::   rf[6] = 6
rf::   rf[7] = 7
rf::   rf[8] = 8
rf::   rf[9] = 9
rf::   rf[a] = a
rf::   rf[b] = b
rf::   rf[c] = c
rf::   rf[d] = d
rf::   rf[e] = e
rf::   rf[f] = f
rf::   rf[10] = 10
rf::   rf[11] = 11
rf::   rf[12] = 12
rf::   rf[13] = 13
rf::   rf[14] = 14
rf::   rf[15] = 15
rf::   rf[16] = 16
rf::   rf[17] = 17
rf::   rf[18] = 18
rf::   rf[19] = 19
rf::   rf[1a] = 1a
rf::   rf[1b] = 1b
rf::   rf[1c] = 1c
rf::   rf[1d] = 1d
rf::   rf[1e] = 1e
rf::   rf[1f] = 1f
executionUnit::****************************************
executionUnit:: rf_eu_v=1
executionUnit::enable =1
executionUnit:: instReg=1300 isInstFmtLas=1 instFmt=0
executionUnit:: rf_eu_ir = 000001300
executionUnit:: las op = ELasAdd	 las op = 0
executionUnit:: src_a = 000000013
executionUnit:: src_b = 00000029b
executionUnit:: eu_rf_wr_data_las = 0
executionUnit:: eu_rf_wr_data_bit = 0
executionUnit:: id->dest = 0
executionUnit:: eu_rf_wr_data = 00000029b
executionUnit:: eu_rf_wr_addr = 00
executionUnit:: eu_rf_wren             = 1
rf::****************************************
rf::v = 1
rf::instructionReg = 1400
rf::reset_ = 1
rf::rd_addr_a = 14
rf::rden_a    = 1
rf::rd_addr_b = 00
rf::rden_b    = 1
rf:1 all read operation rd_addr_a = 14
rf:0 read operation rd_addr_b = 00
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 0000002ae
rf::eu_rf_wren    = 1
rf::swapbit_wr_data_a = 0
rf::swapbit_wr_addr_a = 0
rf::swapbit_wr_data_b = 0
rf::swapbit_wr_addr_b = 0
rf::swapbit_wren.writ = 0
rf::eu_rf_wren 	  = 1
rf::swap_wren 		  = 0
rf::swapbit_wren 	  = 0
rf::testbit_wren 	  = 0
rf::setbit_wren 	  = 0
rf::ldimm_ab_16_wren = 0
rf::rf_mux_in_wren_a = 0
rf::rf_mux_in_wren_b = 0
rf::enable = 1
rf::operandA = 0
rf::operandB = 0
rf::im_rf_ir.read()  = 1400
rf::im_rf_instructionDecoder->getInstructionReg()  = 1400
rf:: isInstFormatOpLas = 1
rf:: isInstFormatOpBit = 0
rf:: isInstFormatOpLdIm= 0
rf:: isInstFormatOpBr  = 0
rf:: getLdImmOperand16Field= 1400
rf:: signExtend16(im_rf_instructionDecoder->getLdImmOperand16Field ()) = 1400
rf:: rf_dest_data  = 1f
rf::im_rf_ir = 1400
rf::eu_rf_ir = 000001200
rf::op_imm_a = 14
rf::op_imm_b = 0
rf:: getOperandAImm8Field  = 14
rf:: getOperandBImm8Field  = 0
rf::signExtend8 (op_imm_a) = 14
rf::signExtend8 (op_imm_b) = 0
rf::signExtend16(op_imm_b) = 1400
rf::rd_data_rf_a = 14
rf::rd_data_rf_b = 0
rf::rd_data_imm_a = 14
rf::rd_data_imm_b = 0
rf::rd_data_imm_mux_sel_a = 0
rf::rd_data_imm_mux_sel_b = 0
rf::rd_data_imm_mux_a = 14
rf::rd_data_imm_mux_b = 0
rf::rd_data_bypass_mux_a = 14
rf::rd_data_bypass_mux_b = 2ae
rf::rf_eu_wr_addr = 0
rf::enable = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_a     = 14
rf::eu_rf_wr_addr_equal_rd_addr_a = 0
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_a = 0
rf::bypass_a = 0
rf::eu_rf_wr_addr = 00
rf::rd_addr_b     = 00
rf::eu_rf_wr_addr_equal_rd_addr_b = 1
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_b = 1
rf::bypass_b = 1
rf::eu_data_a = 2ae
rf::rd_data_a = 000000013
rf::rd_data_b = 00000029b
rf::rf_eu_v = 1
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 0000002ae
rf::eu_rf_wren    = 1
rf::rf_stall = 0
rf::   rf[0] = 0
rf::   rf[1] = 1
rf::   rf[2] = 2
rf::   rf[3] = 3
rf::   rf[4] = 4
rf::   rf[5] = 5
rf::   rf[6] = 6
rf::   rf[7] = 7
rf::   rf[8] = 8
rf::   rf[9] = 9
rf::   rf[a] = a
rf::   rf[b] = b
rf::   rf[c] = c
rf::   rf[d] = d
rf::   rf[e] = e
rf::   rf[f] = f
rf::   rf[10] = 10
rf::   rf[11] = 11
rf::   rf[12] = 12
rf::   rf[13] = 13
rf::   rf[14] = 14
rf::   rf[15] = 15
rf::   rf[16] = 16
rf::   rf[17] = 17
rf::   rf[18] = 18
rf::   rf[19] = 19
rf::   rf[1a] = 1a
rf::   rf[1b] = 1b
rf::   rf[1c] = 1c
rf::   rf[1d] = 1d
rf::   rf[1e] = 1e
rf::   rf[1f] = 1f
   read op  buffer[54] = 1500 im read operation  = 54 data = 1400
 eu_branch = 0 pcx = 55 pc_inc = 55
reset_ = 1
enable = 1
eu_branch = 0
 pc_im_v   = 1
 im_rf_v   = 1
 rf_eu_v   = 1
 eu_rf_wren= 1
pc_im_address = 54
im.data = 1400
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 1 pc_im_address = 54  im_1 = 1400
im_data = 1400
ir_rf_3 = 000001300
ir_eu_4 = 000001200
 eu_branch.read() = 1
 pc_im_v   = 1
 im_rf_v   = 1
 rf_eu_v   = 1
 rf_rd_addr_a = 14
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000013
 rf_rd_data_b = 00000029b
 im_rf_v   = 1
 rf_eu_v = 1
 eu_rf_wren = 1
 eu_rf_wr_data  = 0000002ae
 eu_rf_wr_addr  = 00
rf::****************************************
rf::v = 1
rf::instructionReg = 1500
rf::reset_ = 1
rf::rd_addr_a = 15
rf::rden_a    = 1
rf::rd_addr_b = 00
rf::rden_b    = 1
rf:1 all read operation rd_addr_a = 15
rf:0 read operation rd_addr_b = 00
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 0000002ae
rf::eu_rf_wren    = 1
rf::swapbit_wr_data_a = 0
rf::swapbit_wr_addr_a = 0
rf::swapbit_wr_data_b = 0
rf::swapbit_wr_addr_b = 0
rf::swapbit_wren.writ = 0
rf::eu_rf_wren 	  = 1
rf::swap_wren 		  = 0
rf::swapbit_wren 	  = 0
rf::testbit_wren 	  = 0
rf::setbit_wren 	  = 0
rf::ldimm_ab_16_wren = 0
rf::rf_mux_in_wren_a = 0
rf::rf_mux_in_wren_b = 0
rf::enable = 1
rf::operandA = 0
rf::operandB = 0
rf::im_rf_ir.read()  = 1500
rf::im_rf_instructionDecoder->getInstructionReg()  = 1500
rf:: isInstFormatOpLas = 1
rf:: isInstFormatOpBit = 0
rf:: isInstFormatOpLdIm= 0
rf:: isInstFormatOpBr  = 0
rf:: getLdImmOperand16Field= 1500
rf:: signExtend16(im_rf_instructionDecoder->getLdImmOperand16Field ()) = 1500
rf:: rf_dest_data  = 1f
rf::im_rf_ir = 1500
rf::eu_rf_ir = 000001300
rf::op_imm_a = 15
rf::op_imm_b = 0
rf:: getOperandAImm8Field  = 15
rf:: getOperandBImm8Field  = 0
rf::signExtend8 (op_imm_a) = 15
rf::signExtend8 (op_imm_b) = 0
rf::signExtend16(op_imm_b) = 1500
rf::rd_data_rf_a = 15
rf::rd_data_rf_b = 0
rf::rd_data_imm_a = 15
rf::rd_data_imm_b = 0
rf::rd_data_imm_mux_sel_a = 0
rf::rd_data_imm_mux_sel_b = 0
rf::rd_data_imm_mux_a = 15
rf::rd_data_imm_mux_b = 0
rf::rd_data_bypass_mux_a = 15
rf::rd_data_bypass_mux_b = 2ae
rf::rf_eu_wr_addr = 0
rf::enable = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_a     = 15
rf::eu_rf_wr_addr_equal_rd_addr_a = 0
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_a = 0
rf::bypass_a = 0
rf::eu_rf_wr_addr = 00
rf::rd_addr_b     = 00
rf::eu_rf_wr_addr_equal_rd_addr_b = 1
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_b = 1
rf::bypass_b = 1
rf::eu_data_a = 2ae
rf::rd_data_a = 000000014
rf::rd_data_b = 0000002ae
rf::rf_eu_v = 1
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 0000002ae
rf::eu_rf_wren    = 1
rf::rf_stall = 0
rf::   rf[0] = 0
rf::   rf[1] = 1
rf::   rf[2] = 2
rf::   rf[3] = 3
rf::   rf[4] = 4
rf::   rf[5] = 5
rf::   rf[6] = 6
rf::   rf[7] = 7
rf::   rf[8] = 8
rf::   rf[9] = 9
rf::   rf[a] = a
rf::   rf[b] = b
rf::   rf[c] = c
rf::   rf[d] = d
rf::   rf[e] = e
rf::   rf[f] = f
rf::   rf[10] = 10
rf::   rf[11] = 11
rf::   rf[12] = 12
rf::   rf[13] = 13
rf::   rf[14] = 14
rf::   rf[15] = 15
rf::   rf[16] = 16
rf::   rf[17] = 17
rf::   rf[18] = 18
rf::   rf[19] = 19
rf::   rf[1a] = 1a
rf::   rf[1b] = 1b
rf::   rf[1c] = 1c
rf::   rf[1d] = 1d
rf::   rf[1e] = 1e
rf::   rf[1f] = 1f
executionUnit::****************************************
executionUnit:: rf_eu_v=1
executionUnit::enable =1
executionUnit:: instReg=1400 isInstFmtLas=1 instFmt=0
executionUnit:: rf_eu_ir = 000001400
executionUnit:: las op = ELasAdd	 las op = 0
executionUnit:: src_a = 000000014
executionUnit:: src_b = 0000002ae
executionUnit:: eu_rf_wr_data_las = 0
executionUnit:: eu_rf_wr_data_bit = 0
executionUnit:: id->dest = 0
executionUnit:: eu_rf_wr_data = 0000002ae
executionUnit:: eu_rf_wr_addr = 00
executionUnit:: eu_rf_wren             = 1
rf::****************************************
rf::v = 1
rf::instructionReg = 1500
rf::reset_ = 1
rf::rd_addr_a = 15
rf::rden_a    = 1
rf::rd_addr_b = 00
rf::rden_b    = 1
rf:1 all read operation rd_addr_a = 15
rf:0 read operation rd_addr_b = 00
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 0000002c2
rf::eu_rf_wren    = 1
rf::swapbit_wr_data_a = 0
rf::swapbit_wr_addr_a = 0
rf::swapbit_wr_data_b = 0
rf::swapbit_wr_addr_b = 0
rf::swapbit_wren.writ = 0
rf::eu_rf_wren 	  = 1
rf::swap_wren 		  = 0
rf::swapbit_wren 	  = 0
rf::testbit_wren 	  = 0
rf::setbit_wren 	  = 0
rf::ldimm_ab_16_wren = 0
rf::rf_mux_in_wren_a = 0
rf::rf_mux_in_wren_b = 0
rf::enable = 1
rf::operandA = 0
rf::operandB = 0
rf::im_rf_ir.read()  = 1500
rf::im_rf_instructionDecoder->getInstructionReg()  = 1500
rf:: isInstFormatOpLas = 1
rf:: isInstFormatOpBit = 0
rf:: isInstFormatOpLdIm= 0
rf:: isInstFormatOpBr  = 0
rf:: getLdImmOperand16Field= 1500
rf:: signExtend16(im_rf_instructionDecoder->getLdImmOperand16Field ()) = 1500
rf:: rf_dest_data  = 1f
rf::im_rf_ir = 1500
rf::eu_rf_ir = 000001300
rf::op_imm_a = 15
rf::op_imm_b = 0
rf:: getOperandAImm8Field  = 15
rf:: getOperandBImm8Field  = 0
rf::signExtend8 (op_imm_a) = 15
rf::signExtend8 (op_imm_b) = 0
rf::signExtend16(op_imm_b) = 1500
rf::rd_data_rf_a = 15
rf::rd_data_rf_b = 0
rf::rd_data_imm_a = 15
rf::rd_data_imm_b = 0
rf::rd_data_imm_mux_sel_a = 0
rf::rd_data_imm_mux_sel_b = 0
rf::rd_data_imm_mux_a = 15
rf::rd_data_imm_mux_b = 0
rf::rd_data_bypass_mux_a = 15
rf::rd_data_bypass_mux_b = 2c2
rf::rf_eu_wr_addr = 0
rf::enable = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_a     = 15
rf::eu_rf_wr_addr_equal_rd_addr_a = 0
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_a = 0
rf::bypass_a = 0
rf::eu_rf_wr_addr = 00
rf::rd_addr_b     = 00
rf::eu_rf_wr_addr_equal_rd_addr_b = 1
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_b = 1
rf::bypass_b = 1
rf::eu_data_a = 2c2
rf::rd_data_a = 000000014
rf::rd_data_b = 0000002ae
rf::rf_eu_v = 1
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 0000002c2
rf::eu_rf_wren    = 1
rf::rf_stall = 0
rf::   rf[0] = 0
rf::   rf[1] = 1
rf::   rf[2] = 2
rf::   rf[3] = 3
rf::   rf[4] = 4
rf::   rf[5] = 5
rf::   rf[6] = 6
rf::   rf[7] = 7
rf::   rf[8] = 8
rf::   rf[9] = 9
rf::   rf[a] = a
rf::   rf[b] = b
rf::   rf[c] = c
rf::   rf[d] = d
rf::   rf[e] = e
rf::   rf[f] = f
rf::   rf[10] = 10
rf::   rf[11] = 11
rf::   rf[12] = 12
rf::   rf[13] = 13
rf::   rf[14] = 14
rf::   rf[15] = 15
rf::   rf[16] = 16
rf::   rf[17] = 17
rf::   rf[18] = 18
rf::   rf[19] = 19
rf::   rf[1a] = 1a
rf::   rf[1b] = 1b
rf::   rf[1c] = 1c
rf::   rf[1d] = 1d
rf::   rf[1e] = 1e
rf::   rf[1f] = 1f
   read op  buffer[55] = 1600 im read operation  = 55 data = 1500
 eu_branch = 0 pcx = 56 pc_inc = 56
reset_ = 1
enable = 1
eu_branch = 0
 pc_im_v   = 1
 im_rf_v   = 1
 rf_eu_v   = 1
 eu_rf_wren= 1
pc_im_address = 55
im.data = 1500
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 1 pc_im_address = 55  im_1 = 1500
im_data = 1500
ir_rf_3 = 000001400
ir_eu_4 = 000001300
 eu_branch.read() = 1
 pc_im_v   = 1
 im_rf_v   = 1
 rf_eu_v   = 1
 rf_rd_addr_a = 15
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000014
 rf_rd_data_b = 0000002ae
 im_rf_v   = 1
 rf_eu_v = 1
 eu_rf_wren = 1
 eu_rf_wr_data  = 0000002c2
 eu_rf_wr_addr  = 00
rf::****************************************
rf::v = 1
rf::instructionReg = 1600
rf::reset_ = 1
rf::rd_addr_a = 16
rf::rden_a    = 1
rf::rd_addr_b = 00
rf::rden_b    = 1
rf:1 all read operation rd_addr_a = 16
rf:0 read operation rd_addr_b = 00
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 0000002c2
rf::eu_rf_wren    = 1
rf::swapbit_wr_data_a = 0
rf::swapbit_wr_addr_a = 0
rf::swapbit_wr_data_b = 0
rf::swapbit_wr_addr_b = 0
rf::swapbit_wren.writ = 0
rf::eu_rf_wren 	  = 1
rf::swap_wren 		  = 0
rf::swapbit_wren 	  = 0
rf::testbit_wren 	  = 0
rf::setbit_wren 	  = 0
rf::ldimm_ab_16_wren = 0
rf::rf_mux_in_wren_a = 0
rf::rf_mux_in_wren_b = 0
rf::enable = 1
rf::operandA = 0
rf::operandB = 0
rf::im_rf_ir.read()  = 1600
rf::im_rf_instructionDecoder->getInstructionReg()  = 1600
rf:: isInstFormatOpLas = 1
rf:: isInstFormatOpBit = 0
rf:: isInstFormatOpLdIm= 0
rf:: isInstFormatOpBr  = 0
rf:: getLdImmOperand16Field= 1600
rf:: signExtend16(im_rf_instructionDecoder->getLdImmOperand16Field ()) = 1600
rf:: rf_dest_data  = 1f
rf::im_rf_ir = 1600
rf::eu_rf_ir = 000001400
rf::op_imm_a = 16
rf::op_imm_b = 0
rf:: getOperandAImm8Field  = 16
rf:: getOperandBImm8Field  = 0
rf::signExtend8 (op_imm_a) = 16
rf::signExtend8 (op_imm_b) = 0
rf::signExtend16(op_imm_b) = 1600
rf::rd_data_rf_a = 16
rf::rd_data_rf_b = 0
rf::rd_data_imm_a = 16
rf::rd_data_imm_b = 0
rf::rd_data_imm_mux_sel_a = 0
rf::rd_data_imm_mux_sel_b = 0
rf::rd_data_imm_mux_a = 16
rf::rd_data_imm_mux_b = 0
rf::rd_data_bypass_mux_a = 16
rf::rd_data_bypass_mux_b = 2c2
rf::rf_eu_wr_addr = 0
rf::enable = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_a     = 16
rf::eu_rf_wr_addr_equal_rd_addr_a = 0
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_a = 0
rf::bypass_a = 0
rf::eu_rf_wr_addr = 00
rf::rd_addr_b     = 00
rf::eu_rf_wr_addr_equal_rd_addr_b = 1
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_b = 1
rf::bypass_b = 1
rf::eu_data_a = 2c2
rf::rd_data_a = 000000015
rf::rd_data_b = 0000002c2
rf::rf_eu_v = 1
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 0000002c2
rf::eu_rf_wren    = 1
rf::rf_stall = 0
rf::   rf[0] = 0
rf::   rf[1] = 1
rf::   rf[2] = 2
rf::   rf[3] = 3
rf::   rf[4] = 4
rf::   rf[5] = 5
rf::   rf[6] = 6
rf::   rf[7] = 7
rf::   rf[8] = 8
rf::   rf[9] = 9
rf::   rf[a] = a
rf::   rf[b] = b
rf::   rf[c] = c
rf::   rf[d] = d
rf::   rf[e] = e
rf::   rf[f] = f
rf::   rf[10] = 10
rf::   rf[11] = 11
rf::   rf[12] = 12
rf::   rf[13] = 13
rf::   rf[14] = 14
rf::   rf[15] = 15
rf::   rf[16] = 16
rf::   rf[17] = 17
rf::   rf[18] = 18
rf::   rf[19] = 19
rf::   rf[1a] = 1a
rf::   rf[1b] = 1b
rf::   rf[1c] = 1c
rf::   rf[1d] = 1d
rf::   rf[1e] = 1e
rf::   rf[1f] = 1f
executionUnit::****************************************
executionUnit:: rf_eu_v=1
executionUnit::enable =1
executionUnit:: instReg=1500 isInstFmtLas=1 instFmt=0
executionUnit:: rf_eu_ir = 000001500
executionUnit:: las op = ELasAdd	 las op = 0
executionUnit:: src_a = 000000015
executionUnit:: src_b = 0000002c2
executionUnit:: eu_rf_wr_data_las = 0
executionUnit:: eu_rf_wr_data_bit = 0
executionUnit:: id->dest = 0
executionUnit:: eu_rf_wr_data = 0000002c2
executionUnit:: eu_rf_wr_addr = 00
executionUnit:: eu_rf_wren             = 1
rf::****************************************
rf::v = 1
rf::instructionReg = 1600
rf::reset_ = 1
rf::rd_addr_a = 16
rf::rden_a    = 1
rf::rd_addr_b = 00
rf::rden_b    = 1
rf:1 all read operation rd_addr_a = 16
rf:0 read operation rd_addr_b = 00
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 0000002d7
rf::eu_rf_wren    = 1
rf::swapbit_wr_data_a = 0
rf::swapbit_wr_addr_a = 0
rf::swapbit_wr_data_b = 0
rf::swapbit_wr_addr_b = 0
rf::swapbit_wren.writ = 0
rf::eu_rf_wren 	  = 1
rf::swap_wren 		  = 0
rf::swapbit_wren 	  = 0
rf::testbit_wren 	  = 0
rf::setbit_wren 	  = 0
rf::ldimm_ab_16_wren = 0
rf::rf_mux_in_wren_a = 0
rf::rf_mux_in_wren_b = 0
rf::enable = 1
rf::operandA = 0
rf::operandB = 0
rf::im_rf_ir.read()  = 1600
rf::im_rf_instructionDecoder->getInstructionReg()  = 1600
rf:: isInstFormatOpLas = 1
rf:: isInstFormatOpBit = 0
rf:: isInstFormatOpLdIm= 0
rf:: isInstFormatOpBr  = 0
rf:: getLdImmOperand16Field= 1600
rf:: signExtend16(im_rf_instructionDecoder->getLdImmOperand16Field ()) = 1600
rf:: rf_dest_data  = 1f
rf::im_rf_ir = 1600
rf::eu_rf_ir = 000001400
rf::op_imm_a = 16
rf::op_imm_b = 0
rf:: getOperandAImm8Field  = 16
rf:: getOperandBImm8Field  = 0
rf::signExtend8 (op_imm_a) = 16
rf::signExtend8 (op_imm_b) = 0
rf::signExtend16(op_imm_b) = 1600
rf::rd_data_rf_a = 16
rf::rd_data_rf_b = 0
rf::rd_data_imm_a = 16
rf::rd_data_imm_b = 0
rf::rd_data_imm_mux_sel_a = 0
rf::rd_data_imm_mux_sel_b = 0
rf::rd_data_imm_mux_a = 16
rf::rd_data_imm_mux_b = 0
rf::rd_data_bypass_mux_a = 16
rf::rd_data_bypass_mux_b = 2d7
rf::rf_eu_wr_addr = 0
rf::enable = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_a     = 16
rf::eu_rf_wr_addr_equal_rd_addr_a = 0
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_a = 0
rf::bypass_a = 0
rf::eu_rf_wr_addr = 00
rf::rd_addr_b     = 00
rf::eu_rf_wr_addr_equal_rd_addr_b = 1
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_b = 1
rf::bypass_b = 1
rf::eu_data_a = 2d7
rf::rd_data_a = 000000015
rf::rd_data_b = 0000002c2
rf::rf_eu_v = 1
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 0000002d7
rf::eu_rf_wren    = 1
rf::rf_stall = 0
rf::   rf[0] = 0
rf::   rf[1] = 1
rf::   rf[2] = 2
rf::   rf[3] = 3
rf::   rf[4] = 4
rf::   rf[5] = 5
rf::   rf[6] = 6
rf::   rf[7] = 7
rf::   rf[8] = 8
rf::   rf[9] = 9
rf::   rf[a] = a
rf::   rf[b] = b
rf::   rf[c] = c
rf::   rf[d] = d
rf::   rf[e] = e
rf::   rf[f] = f
rf::   rf[10] = 10
rf::   rf[11] = 11
rf::   rf[12] = 12
rf::   rf[13] = 13
rf::   rf[14] = 14
rf::   rf[15] = 15
rf::   rf[16] = 16
rf::   rf[17] = 17
rf::   rf[18] = 18
rf::   rf[19] = 19
rf::   rf[1a] = 1a
rf::   rf[1b] = 1b
rf::   rf[1c] = 1c
rf::   rf[1d] = 1d
rf::   rf[1e] = 1e
rf::   rf[1f] = 1f
   read op  buffer[56] = 1700 im read operation  = 56 data = 1600
 eu_branch = 0 pcx = 57 pc_inc = 57
reset_ = 1
enable = 1
eu_branch = 0
 pc_im_v   = 1
 im_rf_v   = 1
 rf_eu_v   = 1
 eu_rf_wren= 1
pc_im_address = 56
im.data = 1600
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 1 pc_im_address = 56  im_1 = 1600
im_data = 1600
ir_rf_3 = 000001500
ir_eu_4 = 000001400
 eu_branch.read() = 1
 pc_im_v   = 1
 im_rf_v   = 1
 rf_eu_v   = 1
 rf_rd_addr_a = 16
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000015
 rf_rd_data_b = 0000002c2
 im_rf_v   = 1
 rf_eu_v = 1
 eu_rf_wren = 1
 eu_rf_wr_data  = 0000002d7
 eu_rf_wr_addr  = 00
rf::****************************************
rf::v = 1
rf::instructionReg = 1700
rf::reset_ = 1
rf::rd_addr_a = 17
rf::rden_a    = 1
rf::rd_addr_b = 00
rf::rden_b    = 1
rf:1 all read operation rd_addr_a = 17
rf:0 read operation rd_addr_b = 00
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 0000002d7
rf::eu_rf_wren    = 1
rf::swapbit_wr_data_a = 0
rf::swapbit_wr_addr_a = 0
rf::swapbit_wr_data_b = 0
rf::swapbit_wr_addr_b = 0
rf::swapbit_wren.writ = 0
rf::eu_rf_wren 	  = 1
rf::swap_wren 		  = 0
rf::swapbit_wren 	  = 0
rf::testbit_wren 	  = 0
rf::setbit_wren 	  = 0
rf::ldimm_ab_16_wren = 0
rf::rf_mux_in_wren_a = 0
rf::rf_mux_in_wren_b = 0
rf::enable = 1
rf::operandA = 0
rf::operandB = 0
rf::im_rf_ir.read()  = 1700
rf::im_rf_instructionDecoder->getInstructionReg()  = 1700
rf:: isInstFormatOpLas = 1
rf:: isInstFormatOpBit = 0
rf:: isInstFormatOpLdIm= 0
rf:: isInstFormatOpBr  = 0
rf:: getLdImmOperand16Field= 1700
rf:: signExtend16(im_rf_instructionDecoder->getLdImmOperand16Field ()) = 1700
rf:: rf_dest_data  = 1f
rf::im_rf_ir = 1700
rf::eu_rf_ir = 000001500
rf::op_imm_a = 17
rf::op_imm_b = 0
rf:: getOperandAImm8Field  = 17
rf:: getOperandBImm8Field  = 0
rf::signExtend8 (op_imm_a) = 17
rf::signExtend8 (op_imm_b) = 0
rf::signExtend16(op_imm_b) = 1700
rf::rd_data_rf_a = 17
rf::rd_data_rf_b = 0
rf::rd_data_imm_a = 17
rf::rd_data_imm_b = 0
rf::rd_data_imm_mux_sel_a = 0
rf::rd_data_imm_mux_sel_b = 0
rf::rd_data_imm_mux_a = 17
rf::rd_data_imm_mux_b = 0
rf::rd_data_bypass_mux_a = 17
rf::rd_data_bypass_mux_b = 2d7
rf::rf_eu_wr_addr = 0
rf::enable = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_a     = 17
rf::eu_rf_wr_addr_equal_rd_addr_a = 0
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_a = 0
rf::bypass_a = 0
rf::eu_rf_wr_addr = 00
rf::rd_addr_b     = 00
rf::eu_rf_wr_addr_equal_rd_addr_b = 1
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_b = 1
rf::bypass_b = 1
rf::eu_data_a = 2d7
rf::rd_data_a = 000000016
rf::rd_data_b = 0000002d7
rf::rf_eu_v = 1
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 0000002d7
rf::eu_rf_wren    = 1
rf::rf_stall = 0
rf::   rf[0] = 0
rf::   rf[1] = 1
rf::   rf[2] = 2
rf::   rf[3] = 3
rf::   rf[4] = 4
rf::   rf[5] = 5
rf::   rf[6] = 6
rf::   rf[7] = 7
rf::   rf[8] = 8
rf::   rf[9] = 9
rf::   rf[a] = a
rf::   rf[b] = b
rf::   rf[c] = c
rf::   rf[d] = d
rf::   rf[e] = e
rf::   rf[f] = f
rf::   rf[10] = 10
rf::   rf[11] = 11
rf::   rf[12] = 12
rf::   rf[13] = 13
rf::   rf[14] = 14
rf::   rf[15] = 15
rf::   rf[16] = 16
rf::   rf[17] = 17
rf::   rf[18] = 18
rf::   rf[19] = 19
rf::   rf[1a] = 1a
rf::   rf[1b] = 1b
rf::   rf[1c] = 1c
rf::   rf[1d] = 1d
rf::   rf[1e] = 1e
rf::   rf[1f] = 1f
executionUnit::****************************************
executionUnit:: rf_eu_v=1
executionUnit::enable =1
executionUnit:: instReg=1600 isInstFmtLas=1 instFmt=0
executionUnit:: rf_eu_ir = 000001600
executionUnit:: las op = ELasAdd	 las op = 0
executionUnit:: src_a = 000000016
executionUnit:: src_b = 0000002d7
executionUnit:: eu_rf_wr_data_las = 0
executionUnit:: eu_rf_wr_data_bit = 0
executionUnit:: id->dest = 0
executionUnit:: eu_rf_wr_data = 0000002d7
executionUnit:: eu_rf_wr_addr = 00
executionUnit:: eu_rf_wren             = 1
rf::****************************************
rf::v = 1
rf::instructionReg = 1700
rf::reset_ = 1
rf::rd_addr_a = 17
rf::rden_a    = 1
rf::rd_addr_b = 00
rf::rden_b    = 1
rf:1 all read operation rd_addr_a = 17
rf:0 read operation rd_addr_b = 00
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 0000002ed
rf::eu_rf_wren    = 1
rf::swapbit_wr_data_a = 0
rf::swapbit_wr_addr_a = 0
rf::swapbit_wr_data_b = 0
rf::swapbit_wr_addr_b = 0
rf::swapbit_wren.writ = 0
rf::eu_rf_wren 	  = 1
rf::swap_wren 		  = 0
rf::swapbit_wren 	  = 0
rf::testbit_wren 	  = 0
rf::setbit_wren 	  = 0
rf::ldimm_ab_16_wren = 0
rf::rf_mux_in_wren_a = 0
rf::rf_mux_in_wren_b = 0
rf::enable = 1
rf::operandA = 0
rf::operandB = 0
rf::im_rf_ir.read()  = 1700
rf::im_rf_instructionDecoder->getInstructionReg()  = 1700
rf:: isInstFormatOpLas = 1
rf:: isInstFormatOpBit = 0
rf:: isInstFormatOpLdIm= 0
rf:: isInstFormatOpBr  = 0
rf:: getLdImmOperand16Field= 1700
rf:: signExtend16(im_rf_instructionDecoder->getLdImmOperand16Field ()) = 1700
rf:: rf_dest_data  = 1f
rf::im_rf_ir = 1700
rf::eu_rf_ir = 000001500
rf::op_imm_a = 17
rf::op_imm_b = 0
rf:: getOperandAImm8Field  = 17
rf:: getOperandBImm8Field  = 0
rf::signExtend8 (op_imm_a) = 17
rf::signExtend8 (op_imm_b) = 0
rf::signExtend16(op_imm_b) = 1700
rf::rd_data_rf_a = 17
rf::rd_data_rf_b = 0
rf::rd_data_imm_a = 17
rf::rd_data_imm_b = 0
rf::rd_data_imm_mux_sel_a = 0
rf::rd_data_imm_mux_sel_b = 0
rf::rd_data_imm_mux_a = 17
rf::rd_data_imm_mux_b = 0
rf::rd_data_bypass_mux_a = 17
rf::rd_data_bypass_mux_b = 2ed
rf::rf_eu_wr_addr = 0
rf::enable = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_a     = 17
rf::eu_rf_wr_addr_equal_rd_addr_a = 0
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_a = 0
rf::bypass_a = 0
rf::eu_rf_wr_addr = 00
rf::rd_addr_b     = 00
rf::eu_rf_wr_addr_equal_rd_addr_b = 1
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_b = 1
rf::bypass_b = 1
rf::eu_data_a = 2ed
rf::rd_data_a = 000000016
rf::rd_data_b = 0000002d7
rf::rf_eu_v = 1
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 0000002ed
rf::eu_rf_wren    = 1
rf::rf_stall = 0
rf::   rf[0] = 0
rf::   rf[1] = 1
rf::   rf[2] = 2
rf::   rf[3] = 3
rf::   rf[4] = 4
rf::   rf[5] = 5
rf::   rf[6] = 6
rf::   rf[7] = 7
rf::   rf[8] = 8
rf::   rf[9] = 9
rf::   rf[a] = a
rf::   rf[b] = b
rf::   rf[c] = c
rf::   rf[d] = d
rf::   rf[e] = e
rf::   rf[f] = f
rf::   rf[10] = 10
rf::   rf[11] = 11
rf::   rf[12] = 12
rf::   rf[13] = 13
rf::   rf[14] = 14
rf::   rf[15] = 15
rf::   rf[16] = 16
rf::   rf[17] = 17
rf::   rf[18] = 18
rf::   rf[19] = 19
rf::   rf[1a] = 1a
rf::   rf[1b] = 1b
rf::   rf[1c] = 1c
rf::   rf[1d] = 1d
rf::   rf[1e] = 1e
rf::   rf[1f] = 1f
   read op  buffer[57] = 1800 im read operation  = 57 data = 1700
 eu_branch = 0 pcx = 58 pc_inc = 58
reset_ = 1
enable = 1
eu_branch = 0
 pc_im_v   = 1
 im_rf_v   = 1
 rf_eu_v   = 1
 eu_rf_wren= 1
pc_im_address = 57
im.data = 1700
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 1 pc_im_address = 57  im_1 = 1700
im_data = 1700
ir_rf_3 = 000001600
ir_eu_4 = 000001500
 eu_branch.read() = 1
 pc_im_v   = 1
 im_rf_v   = 1
 rf_eu_v   = 1
 rf_rd_addr_a = 17
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000016
 rf_rd_data_b = 0000002d7
 im_rf_v   = 1
 rf_eu_v = 1
 eu_rf_wren = 1
 eu_rf_wr_data  = 0000002ed
 eu_rf_wr_addr  = 00
rf::****************************************
rf::v = 1
rf::instructionReg = 1800
rf::reset_ = 1
rf::rd_addr_a = 18
rf::rden_a    = 1
rf::rd_addr_b = 00
rf::rden_b    = 1
rf:1 all read operation rd_addr_a = 18
rf:0 read operation rd_addr_b = 00
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 0000002ed
rf::eu_rf_wren    = 1
rf::swapbit_wr_data_a = 0
rf::swapbit_wr_addr_a = 0
rf::swapbit_wr_data_b = 0
rf::swapbit_wr_addr_b = 0
rf::swapbit_wren.writ = 0
rf::eu_rf_wren 	  = 1
rf::swap_wren 		  = 0
rf::swapbit_wren 	  = 0
rf::testbit_wren 	  = 0
rf::setbit_wren 	  = 0
rf::ldimm_ab_16_wren = 0
rf::rf_mux_in_wren_a = 0
rf::rf_mux_in_wren_b = 0
rf::enable = 1
rf::operandA = 0
rf::operandB = 0
rf::im_rf_ir.read()  = 1800
rf::im_rf_instructionDecoder->getInstructionReg()  = 1800
rf:: isInstFormatOpLas = 1
rf:: isInstFormatOpBit = 0
rf:: isInstFormatOpLdIm= 0
rf:: isInstFormatOpBr  = 0
rf:: getLdImmOperand16Field= 1800
rf:: signExtend16(im_rf_instructionDecoder->getLdImmOperand16Field ()) = 1800
rf:: rf_dest_data  = 1f
rf::im_rf_ir = 1800
rf::eu_rf_ir = 000001600
rf::op_imm_a = 18
rf::op_imm_b = 0
rf:: getOperandAImm8Field  = 18
rf:: getOperandBImm8Field  = 0
rf::signExtend8 (op_imm_a) = 18
rf::signExtend8 (op_imm_b) = 0
rf::signExtend16(op_imm_b) = 1800
rf::rd_data_rf_a = 18
rf::rd_data_rf_b = 0
rf::rd_data_imm_a = 18
rf::rd_data_imm_b = 0
rf::rd_data_imm_mux_sel_a = 0
rf::rd_data_imm_mux_sel_b = 0
rf::rd_data_imm_mux_a = 18
rf::rd_data_imm_mux_b = 0
rf::rd_data_bypass_mux_a = 18
rf::rd_data_bypass_mux_b = 2ed
rf::rf_eu_wr_addr = 0
rf::enable = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_a     = 18
rf::eu_rf_wr_addr_equal_rd_addr_a = 0
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_a = 0
rf::bypass_a = 0
rf::eu_rf_wr_addr = 00
rf::rd_addr_b     = 00
rf::eu_rf_wr_addr_equal_rd_addr_b = 1
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_b = 1
rf::bypass_b = 1
rf::eu_data_a = 2ed
rf::rd_data_a = 000000017
rf::rd_data_b = 0000002ed
rf::rf_eu_v = 1
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 0000002ed
rf::eu_rf_wren    = 1
rf::rf_stall = 0
rf::   rf[0] = 0
rf::   rf[1] = 1
rf::   rf[2] = 2
rf::   rf[3] = 3
rf::   rf[4] = 4
rf::   rf[5] = 5
rf::   rf[6] = 6
rf::   rf[7] = 7
rf::   rf[8] = 8
rf::   rf[9] = 9
rf::   rf[a] = a
rf::   rf[b] = b
rf::   rf[c] = c
rf::   rf[d] = d
rf::   rf[e] = e
rf::   rf[f] = f
rf::   rf[10] = 10
rf::   rf[11] = 11
rf::   rf[12] = 12
rf::   rf[13] = 13
rf::   rf[14] = 14
rf::   rf[15] = 15
rf::   rf[16] = 16
rf::   rf[17] = 17
rf::   rf[18] = 18
rf::   rf[19] = 19
rf::   rf[1a] = 1a
rf::   rf[1b] = 1b
rf::   rf[1c] = 1c
rf::   rf[1d] = 1d
rf::   rf[1e] = 1e
rf::   rf[1f] = 1f
executionUnit::****************************************
executionUnit:: rf_eu_v=1
executionUnit::enable =1
executionUnit:: instReg=1700 isInstFmtLas=1 instFmt=0
executionUnit:: rf_eu_ir = 000001700
executionUnit:: las op = ELasAdd	 las op = 0
executionUnit:: src_a = 000000017
executionUnit:: src_b = 0000002ed
executionUnit:: eu_rf_wr_data_las = 0
executionUnit:: eu_rf_wr_data_bit = 0
executionUnit:: id->dest = 0
executionUnit:: eu_rf_wr_data = 0000002ed
executionUnit:: eu_rf_wr_addr = 00
executionUnit:: eu_rf_wren             = 1
rf::****************************************
rf::v = 1
rf::instructionReg = 1800
rf::reset_ = 1
rf::rd_addr_a = 18
rf::rden_a    = 1
rf::rd_addr_b = 00
rf::rden_b    = 1
rf:1 all read operation rd_addr_a = 18
rf:0 read operation rd_addr_b = 00
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 000000304
rf::eu_rf_wren    = 1
rf::swapbit_wr_data_a = 0
rf::swapbit_wr_addr_a = 0
rf::swapbit_wr_data_b = 0
rf::swapbit_wr_addr_b = 0
rf::swapbit_wren.writ = 0
rf::eu_rf_wren 	  = 1
rf::swap_wren 		  = 0
rf::swapbit_wren 	  = 0
rf::testbit_wren 	  = 0
rf::setbit_wren 	  = 0
rf::ldimm_ab_16_wren = 0
rf::rf_mux_in_wren_a = 0
rf::rf_mux_in_wren_b = 0
rf::enable = 1
rf::operandA = 0
rf::operandB = 0
rf::im_rf_ir.read()  = 1800
rf::im_rf_instructionDecoder->getInstructionReg()  = 1800
rf:: isInstFormatOpLas = 1
rf:: isInstFormatOpBit = 0
rf:: isInstFormatOpLdIm= 0
rf:: isInstFormatOpBr  = 0
rf:: getLdImmOperand16Field= 1800
rf:: signExtend16(im_rf_instructionDecoder->getLdImmOperand16Field ()) = 1800
rf:: rf_dest_data  = 1f
rf::im_rf_ir = 1800
rf::eu_rf_ir = 000001600
rf::op_imm_a = 18
rf::op_imm_b = 0
rf:: getOperandAImm8Field  = 18
rf:: getOperandBImm8Field  = 0
rf::signExtend8 (op_imm_a) = 18
rf::signExtend8 (op_imm_b) = 0
rf::signExtend16(op_imm_b) = 1800
rf::rd_data_rf_a = 18
rf::rd_data_rf_b = 0
rf::rd_data_imm_a = 18
rf::rd_data_imm_b = 0
rf::rd_data_imm_mux_sel_a = 0
rf::rd_data_imm_mux_sel_b = 0
rf::rd_data_imm_mux_a = 18
rf::rd_data_imm_mux_b = 0
rf::rd_data_bypass_mux_a = 18
rf::rd_data_bypass_mux_b = 304
rf::rf_eu_wr_addr = 0
rf::enable = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_a     = 18
rf::eu_rf_wr_addr_equal_rd_addr_a = 0
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_a = 0
rf::bypass_a = 0
rf::eu_rf_wr_addr = 00
rf::rd_addr_b     = 00
rf::eu_rf_wr_addr_equal_rd_addr_b = 1
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_b = 1
rf::bypass_b = 1
rf::eu_data_a = 304
rf::rd_data_a = 000000017
rf::rd_data_b = 0000002ed
rf::rf_eu_v = 1
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 000000304
rf::eu_rf_wren    = 1
rf::rf_stall = 0
rf::   rf[0] = 0
rf::   rf[1] = 1
rf::   rf[2] = 2
rf::   rf[3] = 3
rf::   rf[4] = 4
rf::   rf[5] = 5
rf::   rf[6] = 6
rf::   rf[7] = 7
rf::   rf[8] = 8
rf::   rf[9] = 9
rf::   rf[a] = a
rf::   rf[b] = b
rf::   rf[c] = c
rf::   rf[d] = d
rf::   rf[e] = e
rf::   rf[f] = f
rf::   rf[10] = 10
rf::   rf[11] = 11
rf::   rf[12] = 12
rf::   rf[13] = 13
rf::   rf[14] = 14
rf::   rf[15] = 15
rf::   rf[16] = 16
rf::   rf[17] = 17
rf::   rf[18] = 18
rf::   rf[19] = 19
rf::   rf[1a] = 1a
rf::   rf[1b] = 1b
rf::   rf[1c] = 1c
rf::   rf[1d] = 1d
rf::   rf[1e] = 1e
rf::   rf[1f] = 1f
   read op  buffer[58] = 1900 im read operation  = 58 data = 1800
 eu_branch = 0 pcx = 59 pc_inc = 59
reset_ = 1
enable = 1
eu_branch = 0
 pc_im_v   = 1
 im_rf_v   = 1
 rf_eu_v   = 1
 eu_rf_wren= 1
pc_im_address = 58
im.data = 1800
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 1 pc_im_address = 58  im_1 = 1800
im_data = 1800
ir_rf_3 = 000001700
ir_eu_4 = 000001600
 eu_branch.read() = 1
 pc_im_v   = 1
 im_rf_v   = 1
 rf_eu_v   = 1
 rf_rd_addr_a = 18
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000017
 rf_rd_data_b = 0000002ed
 im_rf_v   = 1
 rf_eu_v = 1
 eu_rf_wren = 1
 eu_rf_wr_data  = 000000304
 eu_rf_wr_addr  = 00
rf::****************************************
rf::v = 1
rf::instructionReg = 1900
rf::reset_ = 1
rf::rd_addr_a = 19
rf::rden_a    = 1
rf::rd_addr_b = 00
rf::rden_b    = 1
rf:1 all read operation rd_addr_a = 19
rf:0 read operation rd_addr_b = 00
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 000000304
rf::eu_rf_wren    = 1
rf::swapbit_wr_data_a = 0
rf::swapbit_wr_addr_a = 0
rf::swapbit_wr_data_b = 0
rf::swapbit_wr_addr_b = 0
rf::swapbit_wren.writ = 0
rf::eu_rf_wren 	  = 1
rf::swap_wren 		  = 0
rf::swapbit_wren 	  = 0
rf::testbit_wren 	  = 0
rf::setbit_wren 	  = 0
rf::ldimm_ab_16_wren = 0
rf::rf_mux_in_wren_a = 0
rf::rf_mux_in_wren_b = 0
rf::enable = 1
rf::operandA = 0
rf::operandB = 0
rf::im_rf_ir.read()  = 1900
rf::im_rf_instructionDecoder->getInstructionReg()  = 1900
rf:: isInstFormatOpLas = 1
rf:: isInstFormatOpBit = 0
rf:: isInstFormatOpLdIm= 0
rf:: isInstFormatOpBr  = 0
rf:: getLdImmOperand16Field= 1900
rf:: signExtend16(im_rf_instructionDecoder->getLdImmOperand16Field ()) = 1900
rf:: rf_dest_data  = 1f
rf::im_rf_ir = 1900
rf::eu_rf_ir = 000001700
rf::op_imm_a = 19
rf::op_imm_b = 0
rf:: getOperandAImm8Field  = 19
rf:: getOperandBImm8Field  = 0
rf::signExtend8 (op_imm_a) = 19
rf::signExtend8 (op_imm_b) = 0
rf::signExtend16(op_imm_b) = 1900
rf::rd_data_rf_a = 19
rf::rd_data_rf_b = 0
rf::rd_data_imm_a = 19
rf::rd_data_imm_b = 0
rf::rd_data_imm_mux_sel_a = 0
rf::rd_data_imm_mux_sel_b = 0
rf::rd_data_imm_mux_a = 19
rf::rd_data_imm_mux_b = 0
rf::rd_data_bypass_mux_a = 19
rf::rd_data_bypass_mux_b = 304
rf::rf_eu_wr_addr = 0
rf::enable = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_a     = 19
rf::eu_rf_wr_addr_equal_rd_addr_a = 0
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_a = 0
rf::bypass_a = 0
rf::eu_rf_wr_addr = 00
rf::rd_addr_b     = 00
rf::eu_rf_wr_addr_equal_rd_addr_b = 1
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_b = 1
rf::bypass_b = 1
rf::eu_data_a = 304
rf::rd_data_a = 000000018
rf::rd_data_b = 000000304
rf::rf_eu_v = 1
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 000000304
rf::eu_rf_wren    = 1
rf::rf_stall = 0
rf::   rf[0] = 0
rf::   rf[1] = 1
rf::   rf[2] = 2
rf::   rf[3] = 3
rf::   rf[4] = 4
rf::   rf[5] = 5
rf::   rf[6] = 6
rf::   rf[7] = 7
rf::   rf[8] = 8
rf::   rf[9] = 9
rf::   rf[a] = a
rf::   rf[b] = b
rf::   rf[c] = c
rf::   rf[d] = d
rf::   rf[e] = e
rf::   rf[f] = f
rf::   rf[10] = 10
rf::   rf[11] = 11
rf::   rf[12] = 12
rf::   rf[13] = 13
rf::   rf[14] = 14
rf::   rf[15] = 15
rf::   rf[16] = 16
rf::   rf[17] = 17
rf::   rf[18] = 18
rf::   rf[19] = 19
rf::   rf[1a] = 1a
rf::   rf[1b] = 1b
rf::   rf[1c] = 1c
rf::   rf[1d] = 1d
rf::   rf[1e] = 1e
rf::   rf[1f] = 1f
executionUnit::****************************************
executionUnit:: rf_eu_v=1
executionUnit::enable =1
executionUnit:: instReg=1800 isInstFmtLas=1 instFmt=0
executionUnit:: rf_eu_ir = 000001800
executionUnit:: las op = ELasAdd	 las op = 0
executionUnit:: src_a = 000000018
executionUnit:: src_b = 000000304
executionUnit:: eu_rf_wr_data_las = 0
executionUnit:: eu_rf_wr_data_bit = 0
executionUnit:: id->dest = 0
executionUnit:: eu_rf_wr_data = 000000304
executionUnit:: eu_rf_wr_addr = 00
executionUnit:: eu_rf_wren             = 1
rf::****************************************
rf::v = 1
rf::instructionReg = 1900
rf::reset_ = 1
rf::rd_addr_a = 19
rf::rden_a    = 1
rf::rd_addr_b = 00
rf::rden_b    = 1
rf:1 all read operation rd_addr_a = 19
rf:0 read operation rd_addr_b = 00
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 00000031c
rf::eu_rf_wren    = 1
rf::swapbit_wr_data_a = 0
rf::swapbit_wr_addr_a = 0
rf::swapbit_wr_data_b = 0
rf::swapbit_wr_addr_b = 0
rf::swapbit_wren.writ = 0
rf::eu_rf_wren 	  = 1
rf::swap_wren 		  = 0
rf::swapbit_wren 	  = 0
rf::testbit_wren 	  = 0
rf::setbit_wren 	  = 0
rf::ldimm_ab_16_wren = 0
rf::rf_mux_in_wren_a = 0
rf::rf_mux_in_wren_b = 0
rf::enable = 1
rf::operandA = 0
rf::operandB = 0
rf::im_rf_ir.read()  = 1900
rf::im_rf_instructionDecoder->getInstructionReg()  = 1900
rf:: isInstFormatOpLas = 1
rf:: isInstFormatOpBit = 0
rf:: isInstFormatOpLdIm= 0
rf:: isInstFormatOpBr  = 0
rf:: getLdImmOperand16Field= 1900
rf:: signExtend16(im_rf_instructionDecoder->getLdImmOperand16Field ()) = 1900
rf:: rf_dest_data  = 1f
rf::im_rf_ir = 1900
rf::eu_rf_ir = 000001700
rf::op_imm_a = 19
rf::op_imm_b = 0
rf:: getOperandAImm8Field  = 19
rf:: getOperandBImm8Field  = 0
rf::signExtend8 (op_imm_a) = 19
rf::signExtend8 (op_imm_b) = 0
rf::signExtend16(op_imm_b) = 1900
rf::rd_data_rf_a = 19
rf::rd_data_rf_b = 0
rf::rd_data_imm_a = 19
rf::rd_data_imm_b = 0
rf::rd_data_imm_mux_sel_a = 0
rf::rd_data_imm_mux_sel_b = 0
rf::rd_data_imm_mux_a = 19
rf::rd_data_imm_mux_b = 0
rf::rd_data_bypass_mux_a = 19
rf::rd_data_bypass_mux_b = 31c
rf::rf_eu_wr_addr = 0
rf::enable = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_a     = 19
rf::eu_rf_wr_addr_equal_rd_addr_a = 0
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_a = 0
rf::bypass_a = 0
rf::eu_rf_wr_addr = 00
rf::rd_addr_b     = 00
rf::eu_rf_wr_addr_equal_rd_addr_b = 1
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_b = 1
rf::bypass_b = 1
rf::eu_data_a = 31c
rf::rd_data_a = 000000018
rf::rd_data_b = 000000304
rf::rf_eu_v = 1
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 00000031c
rf::eu_rf_wren    = 1
rf::rf_stall = 0
rf::   rf[0] = 0
rf::   rf[1] = 1
rf::   rf[2] = 2
rf::   rf[3] = 3
rf::   rf[4] = 4
rf::   rf[5] = 5
rf::   rf[6] = 6
rf::   rf[7] = 7
rf::   rf[8] = 8
rf::   rf[9] = 9
rf::   rf[a] = a
rf::   rf[b] = b
rf::   rf[c] = c
rf::   rf[d] = d
rf::   rf[e] = e
rf::   rf[f] = f
rf::   rf[10] = 10
rf::   rf[11] = 11
rf::   rf[12] = 12
rf::   rf[13] = 13
rf::   rf[14] = 14
rf::   rf[15] = 15
rf::   rf[16] = 16
rf::   rf[17] = 17
rf::   rf[18] = 18
rf::   rf[19] = 19
rf::   rf[1a] = 1a
rf::   rf[1b] = 1b
rf::   rf[1c] = 1c
rf::   rf[1d] = 1d
rf::   rf[1e] = 1e
rf::   rf[1f] = 1f
   read op  buffer[59] = 1a00 im read operation  = 59 data = 1900
 eu_branch = 0 pcx = 5a pc_inc = 5a
reset_ = 1
enable = 1
eu_branch = 0
 pc_im_v   = 1
 im_rf_v   = 1
 rf_eu_v   = 1
 eu_rf_wren= 1
pc_im_address = 59
im.data = 1900
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 1 pc_im_address = 59  im_1 = 1900
im_data = 1900
ir_rf_3 = 000001800
ir_eu_4 = 000001700
 eu_branch.read() = 1
 pc_im_v   = 1
 im_rf_v   = 1
 rf_eu_v   = 1
 rf_rd_addr_a = 19
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000018
 rf_rd_data_b = 000000304
 im_rf_v   = 1
 rf_eu_v = 1
 eu_rf_wren = 1
 eu_rf_wr_data  = 00000031c
 eu_rf_wr_addr  = 00
rf::****************************************
rf::v = 1
rf::instructionReg = 1a00
rf::reset_ = 1
rf::rd_addr_a = 1a
rf::rden_a    = 1
rf::rd_addr_b = 00
rf::rden_b    = 1
rf:1 all read operation rd_addr_a = 1a
rf:0 read operation rd_addr_b = 00
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 00000031c
rf::eu_rf_wren    = 1
rf::swapbit_wr_data_a = 0
rf::swapbit_wr_addr_a = 0
rf::swapbit_wr_data_b = 0
rf::swapbit_wr_addr_b = 0
rf::swapbit_wren.writ = 0
rf::eu_rf_wren 	  = 1
rf::swap_wren 		  = 0
rf::swapbit_wren 	  = 0
rf::testbit_wren 	  = 0
rf::setbit_wren 	  = 0
rf::ldimm_ab_16_wren = 0
rf::rf_mux_in_wren_a = 0
rf::rf_mux_in_wren_b = 0
rf::enable = 1
rf::operandA = 0
rf::operandB = 0
rf::im_rf_ir.read()  = 1a00
rf::im_rf_instructionDecoder->getInstructionReg()  = 1a00
rf:: isInstFormatOpLas = 1
rf:: isInstFormatOpBit = 0
rf:: isInstFormatOpLdIm= 0
rf:: isInstFormatOpBr  = 0
rf:: getLdImmOperand16Field= 1a00
rf:: signExtend16(im_rf_instructionDecoder->getLdImmOperand16Field ()) = 1a00
rf:: rf_dest_data  = 1f
rf::im_rf_ir = 1a00
rf::eu_rf_ir = 000001800
rf::op_imm_a = 1a
rf::op_imm_b = 0
rf:: getOperandAImm8Field  = 1a
rf:: getOperandBImm8Field  = 0
rf::signExtend8 (op_imm_a) = 1a
rf::signExtend8 (op_imm_b) = 0
rf::signExtend16(op_imm_b) = 1a00
rf::rd_data_rf_a = 1a
rf::rd_data_rf_b = 0
rf::rd_data_imm_a = 1a
rf::rd_data_imm_b = 0
rf::rd_data_imm_mux_sel_a = 0
rf::rd_data_imm_mux_sel_b = 0
rf::rd_data_imm_mux_a = 1a
rf::rd_data_imm_mux_b = 0
rf::rd_data_bypass_mux_a = 1a
rf::rd_data_bypass_mux_b = 31c
rf::rf_eu_wr_addr = 0
rf::enable = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_a     = 1a
rf::eu_rf_wr_addr_equal_rd_addr_a = 0
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_a = 0
rf::bypass_a = 0
rf::eu_rf_wr_addr = 00
rf::rd_addr_b     = 00
rf::eu_rf_wr_addr_equal_rd_addr_b = 1
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_b = 1
rf::bypass_b = 1
rf::eu_data_a = 31c
rf::rd_data_a = 000000019
rf::rd_data_b = 00000031c
rf::rf_eu_v = 1
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 00000031c
rf::eu_rf_wren    = 1
rf::rf_stall = 0
rf::   rf[0] = 0
rf::   rf[1] = 1
rf::   rf[2] = 2
rf::   rf[3] = 3
rf::   rf[4] = 4
rf::   rf[5] = 5
rf::   rf[6] = 6
rf::   rf[7] = 7
rf::   rf[8] = 8
rf::   rf[9] = 9
rf::   rf[a] = a
rf::   rf[b] = b
rf::   rf[c] = c
rf::   rf[d] = d
rf::   rf[e] = e
rf::   rf[f] = f
rf::   rf[10] = 10
rf::   rf[11] = 11
rf::   rf[12] = 12
rf::   rf[13] = 13
rf::   rf[14] = 14
rf::   rf[15] = 15
rf::   rf[16] = 16
rf::   rf[17] = 17
rf::   rf[18] = 18
rf::   rf[19] = 19
rf::   rf[1a] = 1a
rf::   rf[1b] = 1b
rf::   rf[1c] = 1c
rf::   rf[1d] = 1d
rf::   rf[1e] = 1e
rf::   rf[1f] = 1f
executionUnit::****************************************
executionUnit:: rf_eu_v=1
executionUnit::enable =1
executionUnit:: instReg=1900 isInstFmtLas=1 instFmt=0
executionUnit:: rf_eu_ir = 000001900
executionUnit:: las op = ELasAdd	 las op = 0
executionUnit:: src_a = 000000019
executionUnit:: src_b = 00000031c
executionUnit:: eu_rf_wr_data_las = 0
executionUnit:: eu_rf_wr_data_bit = 0
executionUnit:: id->dest = 0
executionUnit:: eu_rf_wr_data = 00000031c
executionUnit:: eu_rf_wr_addr = 00
executionUnit:: eu_rf_wren             = 1
rf::****************************************
rf::v = 1
rf::instructionReg = 1a00
rf::reset_ = 1
rf::rd_addr_a = 1a
rf::rden_a    = 1
rf::rd_addr_b = 00
rf::rden_b    = 1
rf:1 all read operation rd_addr_a = 1a
rf:0 read operation rd_addr_b = 00
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 000000335
rf::eu_rf_wren    = 1
rf::swapbit_wr_data_a = 0
rf::swapbit_wr_addr_a = 0
rf::swapbit_wr_data_b = 0
rf::swapbit_wr_addr_b = 0
rf::swapbit_wren.writ = 0
rf::eu_rf_wren 	  = 1
rf::swap_wren 		  = 0
rf::swapbit_wren 	  = 0
rf::testbit_wren 	  = 0
rf::setbit_wren 	  = 0
rf::ldimm_ab_16_wren = 0
rf::rf_mux_in_wren_a = 0
rf::rf_mux_in_wren_b = 0
rf::enable = 1
rf::operandA = 0
rf::operandB = 0
rf::im_rf_ir.read()  = 1a00
rf::im_rf_instructionDecoder->getInstructionReg()  = 1a00
rf:: isInstFormatOpLas = 1
rf:: isInstFormatOpBit = 0
rf:: isInstFormatOpLdIm= 0
rf:: isInstFormatOpBr  = 0
rf:: getLdImmOperand16Field= 1a00
rf:: signExtend16(im_rf_instructionDecoder->getLdImmOperand16Field ()) = 1a00
rf:: rf_dest_data  = 1f
rf::im_rf_ir = 1a00
rf::eu_rf_ir = 000001800
rf::op_imm_a = 1a
rf::op_imm_b = 0
rf:: getOperandAImm8Field  = 1a
rf:: getOperandBImm8Field  = 0
rf::signExtend8 (op_imm_a) = 1a
rf::signExtend8 (op_imm_b) = 0
rf::signExtend16(op_imm_b) = 1a00
rf::rd_data_rf_a = 1a
rf::rd_data_rf_b = 0
rf::rd_data_imm_a = 1a
rf::rd_data_imm_b = 0
rf::rd_data_imm_mux_sel_a = 0
rf::rd_data_imm_mux_sel_b = 0
rf::rd_data_imm_mux_a = 1a
rf::rd_data_imm_mux_b = 0
rf::rd_data_bypass_mux_a = 1a
rf::rd_data_bypass_mux_b = 335
rf::rf_eu_wr_addr = 0
rf::enable = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_a     = 1a
rf::eu_rf_wr_addr_equal_rd_addr_a = 0
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_a = 0
rf::bypass_a = 0
rf::eu_rf_wr_addr = 00
rf::rd_addr_b     = 00
rf::eu_rf_wr_addr_equal_rd_addr_b = 1
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_b = 1
rf::bypass_b = 1
rf::eu_data_a = 335
rf::rd_data_a = 000000019
rf::rd_data_b = 00000031c
rf::rf_eu_v = 1
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 000000335
rf::eu_rf_wren    = 1
rf::rf_stall = 0
rf::   rf[0] = 0
rf::   rf[1] = 1
rf::   rf[2] = 2
rf::   rf[3] = 3
rf::   rf[4] = 4
rf::   rf[5] = 5
rf::   rf[6] = 6
rf::   rf[7] = 7
rf::   rf[8] = 8
rf::   rf[9] = 9
rf::   rf[a] = a
rf::   rf[b] = b
rf::   rf[c] = c
rf::   rf[d] = d
rf::   rf[e] = e
rf::   rf[f] = f
rf::   rf[10] = 10
rf::   rf[11] = 11
rf::   rf[12] = 12
rf::   rf[13] = 13
rf::   rf[14] = 14
rf::   rf[15] = 15
rf::   rf[16] = 16
rf::   rf[17] = 17
rf::   rf[18] = 18
rf::   rf[19] = 19
rf::   rf[1a] = 1a
rf::   rf[1b] = 1b
rf::   rf[1c] = 1c
rf::   rf[1d] = 1d
rf::   rf[1e] = 1e
rf::   rf[1f] = 1f
   read op  buffer[5a] = 1b00 im read operation  = 5a data = 1a00
 eu_branch = 0 pcx = 5b pc_inc = 5b
reset_ = 1
enable = 1
eu_branch = 0
 pc_im_v   = 1
 im_rf_v   = 1
 rf_eu_v   = 1
 eu_rf_wren= 1
pc_im_address = 5a
im.data = 1a00
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 1 pc_im_address = 5a  im_1 = 1a00
im_data = 1a00
ir_rf_3 = 000001900
ir_eu_4 = 000001800
 eu_branch.read() = 1
 pc_im_v   = 1
 im_rf_v   = 1
 rf_eu_v   = 1
 rf_rd_addr_a = 1a
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000019
 rf_rd_data_b = 00000031c
 im_rf_v   = 1
 rf_eu_v = 1
 eu_rf_wren = 1
 eu_rf_wr_data  = 000000335
 eu_rf_wr_addr  = 00
rf::****************************************
rf::v = 1
rf::instructionReg = 1b00
rf::reset_ = 1
rf::rd_addr_a = 1b
rf::rden_a    = 1
rf::rd_addr_b = 00
rf::rden_b    = 1
rf:1 all read operation rd_addr_a = 1b
rf:0 read operation rd_addr_b = 00
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 000000335
rf::eu_rf_wren    = 1
rf::swapbit_wr_data_a = 0
rf::swapbit_wr_addr_a = 0
rf::swapbit_wr_data_b = 0
rf::swapbit_wr_addr_b = 0
rf::swapbit_wren.writ = 0
rf::eu_rf_wren 	  = 1
rf::swap_wren 		  = 0
rf::swapbit_wren 	  = 0
rf::testbit_wren 	  = 0
rf::setbit_wren 	  = 0
rf::ldimm_ab_16_wren = 0
rf::rf_mux_in_wren_a = 0
rf::rf_mux_in_wren_b = 0
rf::enable = 1
rf::operandA = 0
rf::operandB = 0
rf::im_rf_ir.read()  = 1b00
rf::im_rf_instructionDecoder->getInstructionReg()  = 1b00
rf:: isInstFormatOpLas = 1
rf:: isInstFormatOpBit = 0
rf:: isInstFormatOpLdIm= 0
rf:: isInstFormatOpBr  = 0
rf:: getLdImmOperand16Field= 1b00
rf:: signExtend16(im_rf_instructionDecoder->getLdImmOperand16Field ()) = 1b00
rf:: rf_dest_data  = 1f
rf::im_rf_ir = 1b00
rf::eu_rf_ir = 000001900
rf::op_imm_a = 1b
rf::op_imm_b = 0
rf:: getOperandAImm8Field  = 1b
rf:: getOperandBImm8Field  = 0
rf::signExtend8 (op_imm_a) = 1b
rf::signExtend8 (op_imm_b) = 0
rf::signExtend16(op_imm_b) = 1b00
rf::rd_data_rf_a = 1b
rf::rd_data_rf_b = 0
rf::rd_data_imm_a = 1b
rf::rd_data_imm_b = 0
rf::rd_data_imm_mux_sel_a = 0
rf::rd_data_imm_mux_sel_b = 0
rf::rd_data_imm_mux_a = 1b
rf::rd_data_imm_mux_b = 0
rf::rd_data_bypass_mux_a = 1b
rf::rd_data_bypass_mux_b = 335
rf::rf_eu_wr_addr = 0
rf::enable = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_a     = 1b
rf::eu_rf_wr_addr_equal_rd_addr_a = 0
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_a = 0
rf::bypass_a = 0
rf::eu_rf_wr_addr = 00
rf::rd_addr_b     = 00
rf::eu_rf_wr_addr_equal_rd_addr_b = 1
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_b = 1
rf::bypass_b = 1
rf::eu_data_a = 335
rf::rd_data_a = 00000001a
rf::rd_data_b = 000000335
rf::rf_eu_v = 1
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 000000335
rf::eu_rf_wren    = 1
rf::rf_stall = 0
rf::   rf[0] = 0
rf::   rf[1] = 1
rf::   rf[2] = 2
rf::   rf[3] = 3
rf::   rf[4] = 4
rf::   rf[5] = 5
rf::   rf[6] = 6
rf::   rf[7] = 7
rf::   rf[8] = 8
rf::   rf[9] = 9
rf::   rf[a] = a
rf::   rf[b] = b
rf::   rf[c] = c
rf::   rf[d] = d
rf::   rf[e] = e
rf::   rf[f] = f
rf::   rf[10] = 10
rf::   rf[11] = 11
rf::   rf[12] = 12
rf::   rf[13] = 13
rf::   rf[14] = 14
rf::   rf[15] = 15
rf::   rf[16] = 16
rf::   rf[17] = 17
rf::   rf[18] = 18
rf::   rf[19] = 19
rf::   rf[1a] = 1a
rf::   rf[1b] = 1b
rf::   rf[1c] = 1c
rf::   rf[1d] = 1d
rf::   rf[1e] = 1e
rf::   rf[1f] = 1f
executionUnit::****************************************
executionUnit:: rf_eu_v=1
executionUnit::enable =1
executionUnit:: instReg=1a00 isInstFmtLas=1 instFmt=0
executionUnit:: rf_eu_ir = 000001a00
executionUnit:: las op = ELasAdd	 las op = 0
executionUnit:: src_a = 00000001a
executionUnit:: src_b = 000000335
executionUnit:: eu_rf_wr_data_las = 0
executionUnit:: eu_rf_wr_data_bit = 0
executionUnit:: id->dest = 0
executionUnit:: eu_rf_wr_data = 000000335
executionUnit:: eu_rf_wr_addr = 00
executionUnit:: eu_rf_wren             = 1
rf::****************************************
rf::v = 1
rf::instructionReg = 1b00
rf::reset_ = 1
rf::rd_addr_a = 1b
rf::rden_a    = 1
rf::rd_addr_b = 00
rf::rden_b    = 1
rf:1 all read operation rd_addr_a = 1b
rf:0 read operation rd_addr_b = 00
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 00000034f
rf::eu_rf_wren    = 1
rf::swapbit_wr_data_a = 0
rf::swapbit_wr_addr_a = 0
rf::swapbit_wr_data_b = 0
rf::swapbit_wr_addr_b = 0
rf::swapbit_wren.writ = 0
rf::eu_rf_wren 	  = 1
rf::swap_wren 		  = 0
rf::swapbit_wren 	  = 0
rf::testbit_wren 	  = 0
rf::setbit_wren 	  = 0
rf::ldimm_ab_16_wren = 0
rf::rf_mux_in_wren_a = 0
rf::rf_mux_in_wren_b = 0
rf::enable = 1
rf::operandA = 0
rf::operandB = 0
rf::im_rf_ir.read()  = 1b00
rf::im_rf_instructionDecoder->getInstructionReg()  = 1b00
rf:: isInstFormatOpLas = 1
rf:: isInstFormatOpBit = 0
rf:: isInstFormatOpLdIm= 0
rf:: isInstFormatOpBr  = 0
rf:: getLdImmOperand16Field= 1b00
rf:: signExtend16(im_rf_instructionDecoder->getLdImmOperand16Field ()) = 1b00
rf:: rf_dest_data  = 1f
rf::im_rf_ir = 1b00
rf::eu_rf_ir = 000001900
rf::op_imm_a = 1b
rf::op_imm_b = 0
rf:: getOperandAImm8Field  = 1b
rf:: getOperandBImm8Field  = 0
rf::signExtend8 (op_imm_a) = 1b
rf::signExtend8 (op_imm_b) = 0
rf::signExtend16(op_imm_b) = 1b00
rf::rd_data_rf_a = 1b
rf::rd_data_rf_b = 0
rf::rd_data_imm_a = 1b
rf::rd_data_imm_b = 0
rf::rd_data_imm_mux_sel_a = 0
rf::rd_data_imm_mux_sel_b = 0
rf::rd_data_imm_mux_a = 1b
rf::rd_data_imm_mux_b = 0
rf::rd_data_bypass_mux_a = 1b
rf::rd_data_bypass_mux_b = 34f
rf::rf_eu_wr_addr = 0
rf::enable = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_a     = 1b
rf::eu_rf_wr_addr_equal_rd_addr_a = 0
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_a = 0
rf::bypass_a = 0
rf::eu_rf_wr_addr = 00
rf::rd_addr_b     = 00
rf::eu_rf_wr_addr_equal_rd_addr_b = 1
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_b = 1
rf::bypass_b = 1
rf::eu_data_a = 34f
rf::rd_data_a = 00000001a
rf::rd_data_b = 000000335
rf::rf_eu_v = 1
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 00000034f
rf::eu_rf_wren    = 1
rf::rf_stall = 0
rf::   rf[0] = 0
rf::   rf[1] = 1
rf::   rf[2] = 2
rf::   rf[3] = 3
rf::   rf[4] = 4
rf::   rf[5] = 5
rf::   rf[6] = 6
rf::   rf[7] = 7
rf::   rf[8] = 8
rf::   rf[9] = 9
rf::   rf[a] = a
rf::   rf[b] = b
rf::   rf[c] = c
rf::   rf[d] = d
rf::   rf[e] = e
rf::   rf[f] = f
rf::   rf[10] = 10
rf::   rf[11] = 11
rf::   rf[12] = 12
rf::   rf[13] = 13
rf::   rf[14] = 14
rf::   rf[15] = 15
rf::   rf[16] = 16
rf::   rf[17] = 17
rf::   rf[18] = 18
rf::   rf[19] = 19
rf::   rf[1a] = 1a
rf::   rf[1b] = 1b
rf::   rf[1c] = 1c
rf::   rf[1d] = 1d
rf::   rf[1e] = 1e
rf::   rf[1f] = 1f
   read op  buffer[5b] = 1c00 im read operation  = 5b data = 1b00
 eu_branch = 0 pcx = 5c pc_inc = 5c
reset_ = 1
enable = 1
eu_branch = 0
 pc_im_v   = 1
 im_rf_v   = 1
 rf_eu_v   = 1
 eu_rf_wren= 1
pc_im_address = 5b
im.data = 1b00
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 1 pc_im_address = 5b  im_1 = 1b00
im_data = 1b00
ir_rf_3 = 000001a00
ir_eu_4 = 000001900
 eu_branch.read() = 1
 pc_im_v   = 1
 im_rf_v   = 1
 rf_eu_v   = 1
 rf_rd_addr_a = 1b
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 00000001a
 rf_rd_data_b = 000000335
 im_rf_v   = 1
 rf_eu_v = 1
 eu_rf_wren = 1
 eu_rf_wr_data  = 00000034f
 eu_rf_wr_addr  = 00
rf::****************************************
rf::v = 1
rf::instructionReg = 1c00
rf::reset_ = 1
rf::rd_addr_a = 1c
rf::rden_a    = 1
rf::rd_addr_b = 00
rf::rden_b    = 1
rf:1 all read operation rd_addr_a = 1c
rf:0 read operation rd_addr_b = 00
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 00000034f
rf::eu_rf_wren    = 1
rf::swapbit_wr_data_a = 0
rf::swapbit_wr_addr_a = 0
rf::swapbit_wr_data_b = 0
rf::swapbit_wr_addr_b = 0
rf::swapbit_wren.writ = 0
rf::eu_rf_wren 	  = 1
rf::swap_wren 		  = 0
rf::swapbit_wren 	  = 0
rf::testbit_wren 	  = 0
rf::setbit_wren 	  = 0
rf::ldimm_ab_16_wren = 0
rf::rf_mux_in_wren_a = 0
rf::rf_mux_in_wren_b = 0
rf::enable = 1
rf::operandA = 0
rf::operandB = 0
rf::im_rf_ir.read()  = 1c00
rf::im_rf_instructionDecoder->getInstructionReg()  = 1c00
rf:: isInstFormatOpLas = 1
rf:: isInstFormatOpBit = 0
rf:: isInstFormatOpLdIm= 0
rf:: isInstFormatOpBr  = 0
rf:: getLdImmOperand16Field= 1c00
rf:: signExtend16(im_rf_instructionDecoder->getLdImmOperand16Field ()) = 1c00
rf:: rf_dest_data  = 1f
rf::im_rf_ir = 1c00
rf::eu_rf_ir = 000001a00
rf::op_imm_a = 1c
rf::op_imm_b = 0
rf:: getOperandAImm8Field  = 1c
rf:: getOperandBImm8Field  = 0
rf::signExtend8 (op_imm_a) = 1c
rf::signExtend8 (op_imm_b) = 0
rf::signExtend16(op_imm_b) = 1c00
rf::rd_data_rf_a = 1c
rf::rd_data_rf_b = 0
rf::rd_data_imm_a = 1c
rf::rd_data_imm_b = 0
rf::rd_data_imm_mux_sel_a = 0
rf::rd_data_imm_mux_sel_b = 0
rf::rd_data_imm_mux_a = 1c
rf::rd_data_imm_mux_b = 0
rf::rd_data_bypass_mux_a = 1c
rf::rd_data_bypass_mux_b = 34f
rf::rf_eu_wr_addr = 0
rf::enable = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_a     = 1c
rf::eu_rf_wr_addr_equal_rd_addr_a = 0
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_a = 0
rf::bypass_a = 0
rf::eu_rf_wr_addr = 00
rf::rd_addr_b     = 00
rf::eu_rf_wr_addr_equal_rd_addr_b = 1
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_b = 1
rf::bypass_b = 1
rf::eu_data_a = 34f
rf::rd_data_a = 00000001b
rf::rd_data_b = 00000034f
rf::rf_eu_v = 1
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 00000034f
rf::eu_rf_wren    = 1
rf::rf_stall = 0
rf::   rf[0] = 0
rf::   rf[1] = 1
rf::   rf[2] = 2
rf::   rf[3] = 3
rf::   rf[4] = 4
rf::   rf[5] = 5
rf::   rf[6] = 6
rf::   rf[7] = 7
rf::   rf[8] = 8
rf::   rf[9] = 9
rf::   rf[a] = a
rf::   rf[b] = b
rf::   rf[c] = c
rf::   rf[d] = d
rf::   rf[e] = e
rf::   rf[f] = f
rf::   rf[10] = 10
rf::   rf[11] = 11
rf::   rf[12] = 12
rf::   rf[13] = 13
rf::   rf[14] = 14
rf::   rf[15] = 15
rf::   rf[16] = 16
rf::   rf[17] = 17
rf::   rf[18] = 18
rf::   rf[19] = 19
rf::   rf[1a] = 1a
rf::   rf[1b] = 1b
rf::   rf[1c] = 1c
rf::   rf[1d] = 1d
rf::   rf[1e] = 1e
rf::   rf[1f] = 1f
executionUnit::****************************************
executionUnit:: rf_eu_v=1
executionUnit::enable =1
executionUnit:: instReg=1b00 isInstFmtLas=1 instFmt=0
executionUnit:: rf_eu_ir = 000001b00
executionUnit:: las op = ELasAdd	 las op = 0
executionUnit:: src_a = 00000001b
executionUnit:: src_b = 00000034f
executionUnit:: eu_rf_wr_data_las = 0
executionUnit:: eu_rf_wr_data_bit = 0
executionUnit:: id->dest = 0
executionUnit:: eu_rf_wr_data = 00000034f
executionUnit:: eu_rf_wr_addr = 00
executionUnit:: eu_rf_wren             = 1
rf::****************************************
rf::v = 1
rf::instructionReg = 1c00
rf::reset_ = 1
rf::rd_addr_a = 1c
rf::rden_a    = 1
rf::rd_addr_b = 00
rf::rden_b    = 1
rf:1 all read operation rd_addr_a = 1c
rf:0 read operation rd_addr_b = 00
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 00000036a
rf::eu_rf_wren    = 1
rf::swapbit_wr_data_a = 0
rf::swapbit_wr_addr_a = 0
rf::swapbit_wr_data_b = 0
rf::swapbit_wr_addr_b = 0
rf::swapbit_wren.writ = 0
rf::eu_rf_wren 	  = 1
rf::swap_wren 		  = 0
rf::swapbit_wren 	  = 0
rf::testbit_wren 	  = 0
rf::setbit_wren 	  = 0
rf::ldimm_ab_16_wren = 0
rf::rf_mux_in_wren_a = 0
rf::rf_mux_in_wren_b = 0
rf::enable = 1
rf::operandA = 0
rf::operandB = 0
rf::im_rf_ir.read()  = 1c00
rf::im_rf_instructionDecoder->getInstructionReg()  = 1c00
rf:: isInstFormatOpLas = 1
rf:: isInstFormatOpBit = 0
rf:: isInstFormatOpLdIm= 0
rf:: isInstFormatOpBr  = 0
rf:: getLdImmOperand16Field= 1c00
rf:: signExtend16(im_rf_instructionDecoder->getLdImmOperand16Field ()) = 1c00
rf:: rf_dest_data  = 1f
rf::im_rf_ir = 1c00
rf::eu_rf_ir = 000001a00
rf::op_imm_a = 1c
rf::op_imm_b = 0
rf:: getOperandAImm8Field  = 1c
rf:: getOperandBImm8Field  = 0
rf::signExtend8 (op_imm_a) = 1c
rf::signExtend8 (op_imm_b) = 0
rf::signExtend16(op_imm_b) = 1c00
rf::rd_data_rf_a = 1c
rf::rd_data_rf_b = 0
rf::rd_data_imm_a = 1c
rf::rd_data_imm_b = 0
rf::rd_data_imm_mux_sel_a = 0
rf::rd_data_imm_mux_sel_b = 0
rf::rd_data_imm_mux_a = 1c
rf::rd_data_imm_mux_b = 0
rf::rd_data_bypass_mux_a = 1c
rf::rd_data_bypass_mux_b = 36a
rf::rf_eu_wr_addr = 0
rf::enable = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_a     = 1c
rf::eu_rf_wr_addr_equal_rd_addr_a = 0
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_a = 0
rf::bypass_a = 0
rf::eu_rf_wr_addr = 00
rf::rd_addr_b     = 00
rf::eu_rf_wr_addr_equal_rd_addr_b = 1
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_b = 1
rf::bypass_b = 1
rf::eu_data_a = 36a
rf::rd_data_a = 00000001b
rf::rd_data_b = 00000034f
rf::rf_eu_v = 1
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 00000036a
rf::eu_rf_wren    = 1
rf::rf_stall = 0
rf::   rf[0] = 0
rf::   rf[1] = 1
rf::   rf[2] = 2
rf::   rf[3] = 3
rf::   rf[4] = 4
rf::   rf[5] = 5
rf::   rf[6] = 6
rf::   rf[7] = 7
rf::   rf[8] = 8
rf::   rf[9] = 9
rf::   rf[a] = a
rf::   rf[b] = b
rf::   rf[c] = c
rf::   rf[d] = d
rf::   rf[e] = e
rf::   rf[f] = f
rf::   rf[10] = 10
rf::   rf[11] = 11
rf::   rf[12] = 12
rf::   rf[13] = 13
rf::   rf[14] = 14
rf::   rf[15] = 15
rf::   rf[16] = 16
rf::   rf[17] = 17
rf::   rf[18] = 18
rf::   rf[19] = 19
rf::   rf[1a] = 1a
rf::   rf[1b] = 1b
rf::   rf[1c] = 1c
rf::   rf[1d] = 1d
rf::   rf[1e] = 1e
rf::   rf[1f] = 1f
   read op  buffer[5c] = 1d00 im read operation  = 5c data = 1c00
 eu_branch = 0 pcx = 5d pc_inc = 5d
reset_ = 1
enable = 1
eu_branch = 0
 pc_im_v   = 1
 im_rf_v   = 1
 rf_eu_v   = 1
 eu_rf_wren= 1
pc_im_address = 5c
im.data = 1c00
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 1 pc_im_address = 5c  im_1 = 1c00
im_data = 1c00
ir_rf_3 = 000001b00
ir_eu_4 = 000001a00
 eu_branch.read() = 1
 pc_im_v   = 1
 im_rf_v   = 1
 rf_eu_v   = 1
 rf_rd_addr_a = 1c
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 00000001b
 rf_rd_data_b = 00000034f
 im_rf_v   = 1
 rf_eu_v = 1
 eu_rf_wren = 1
 eu_rf_wr_data  = 00000036a
 eu_rf_wr_addr  = 00
rf::****************************************
rf::v = 1
rf::instructionReg = 1d00
rf::reset_ = 1
rf::rd_addr_a = 1d
rf::rden_a    = 1
rf::rd_addr_b = 00
rf::rden_b    = 1
rf:1 all read operation rd_addr_a = 1d
rf:0 read operation rd_addr_b = 00
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 00000036a
rf::eu_rf_wren    = 1
rf::swapbit_wr_data_a = 0
rf::swapbit_wr_addr_a = 0
rf::swapbit_wr_data_b = 0
rf::swapbit_wr_addr_b = 0
rf::swapbit_wren.writ = 0
rf::eu_rf_wren 	  = 1
rf::swap_wren 		  = 0
rf::swapbit_wren 	  = 0
rf::testbit_wren 	  = 0
rf::setbit_wren 	  = 0
rf::ldimm_ab_16_wren = 0
rf::rf_mux_in_wren_a = 0
rf::rf_mux_in_wren_b = 0
rf::enable = 1
rf::operandA = 0
rf::operandB = 0
rf::im_rf_ir.read()  = 1d00
rf::im_rf_instructionDecoder->getInstructionReg()  = 1d00
rf:: isInstFormatOpLas = 1
rf:: isInstFormatOpBit = 0
rf:: isInstFormatOpLdIm= 0
rf:: isInstFormatOpBr  = 0
rf:: getLdImmOperand16Field= 1d00
rf:: signExtend16(im_rf_instructionDecoder->getLdImmOperand16Field ()) = 1d00
rf:: rf_dest_data  = 1f
rf::im_rf_ir = 1d00
rf::eu_rf_ir = 000001b00
rf::op_imm_a = 1d
rf::op_imm_b = 0
rf:: getOperandAImm8Field  = 1d
rf:: getOperandBImm8Field  = 0
rf::signExtend8 (op_imm_a) = 1d
rf::signExtend8 (op_imm_b) = 0
rf::signExtend16(op_imm_b) = 1d00
rf::rd_data_rf_a = 1d
rf::rd_data_rf_b = 0
rf::rd_data_imm_a = 1d
rf::rd_data_imm_b = 0
rf::rd_data_imm_mux_sel_a = 0
rf::rd_data_imm_mux_sel_b = 0
rf::rd_data_imm_mux_a = 1d
rf::rd_data_imm_mux_b = 0
rf::rd_data_bypass_mux_a = 1d
rf::rd_data_bypass_mux_b = 36a
rf::rf_eu_wr_addr = 0
rf::enable = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_a     = 1d
rf::eu_rf_wr_addr_equal_rd_addr_a = 0
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_a = 0
rf::bypass_a = 0
rf::eu_rf_wr_addr = 00
rf::rd_addr_b     = 00
rf::eu_rf_wr_addr_equal_rd_addr_b = 1
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_b = 1
rf::bypass_b = 1
rf::eu_data_a = 36a
rf::rd_data_a = 00000001c
rf::rd_data_b = 00000036a
rf::rf_eu_v = 1
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 00000036a
rf::eu_rf_wren    = 1
rf::rf_stall = 0
rf::   rf[0] = 0
rf::   rf[1] = 1
rf::   rf[2] = 2
rf::   rf[3] = 3
rf::   rf[4] = 4
rf::   rf[5] = 5
rf::   rf[6] = 6
rf::   rf[7] = 7
rf::   rf[8] = 8
rf::   rf[9] = 9
rf::   rf[a] = a
rf::   rf[b] = b
rf::   rf[c] = c
rf::   rf[d] = d
rf::   rf[e] = e
rf::   rf[f] = f
rf::   rf[10] = 10
rf::   rf[11] = 11
rf::   rf[12] = 12
rf::   rf[13] = 13
rf::   rf[14] = 14
rf::   rf[15] = 15
rf::   rf[16] = 16
rf::   rf[17] = 17
rf::   rf[18] = 18
rf::   rf[19] = 19
rf::   rf[1a] = 1a
rf::   rf[1b] = 1b
rf::   rf[1c] = 1c
rf::   rf[1d] = 1d
rf::   rf[1e] = 1e
rf::   rf[1f] = 1f
executionUnit::****************************************
executionUnit:: rf_eu_v=1
executionUnit::enable =1
executionUnit:: instReg=1c00 isInstFmtLas=1 instFmt=0
executionUnit:: rf_eu_ir = 000001c00
executionUnit:: las op = ELasAdd	 las op = 0
executionUnit:: src_a = 00000001c
executionUnit:: src_b = 00000036a
executionUnit:: eu_rf_wr_data_las = 0
executionUnit:: eu_rf_wr_data_bit = 0
executionUnit:: id->dest = 0
executionUnit:: eu_rf_wr_data = 00000036a
executionUnit:: eu_rf_wr_addr = 00
executionUnit:: eu_rf_wren             = 1
rf::****************************************
rf::v = 1
rf::instructionReg = 1d00
rf::reset_ = 1
rf::rd_addr_a = 1d
rf::rden_a    = 1
rf::rd_addr_b = 00
rf::rden_b    = 1
rf:1 all read operation rd_addr_a = 1d
rf:0 read operation rd_addr_b = 00
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 000000386
rf::eu_rf_wren    = 1
rf::swapbit_wr_data_a = 0
rf::swapbit_wr_addr_a = 0
rf::swapbit_wr_data_b = 0
rf::swapbit_wr_addr_b = 0
rf::swapbit_wren.writ = 0
rf::eu_rf_wren 	  = 1
rf::swap_wren 		  = 0
rf::swapbit_wren 	  = 0
rf::testbit_wren 	  = 0
rf::setbit_wren 	  = 0
rf::ldimm_ab_16_wren = 0
rf::rf_mux_in_wren_a = 0
rf::rf_mux_in_wren_b = 0
rf::enable = 1
rf::operandA = 0
rf::operandB = 0
rf::im_rf_ir.read()  = 1d00
rf::im_rf_instructionDecoder->getInstructionReg()  = 1d00
rf:: isInstFormatOpLas = 1
rf:: isInstFormatOpBit = 0
rf:: isInstFormatOpLdIm= 0
rf:: isInstFormatOpBr  = 0
rf:: getLdImmOperand16Field= 1d00
rf:: signExtend16(im_rf_instructionDecoder->getLdImmOperand16Field ()) = 1d00
rf:: rf_dest_data  = 1f
rf::im_rf_ir = 1d00
rf::eu_rf_ir = 000001b00
rf::op_imm_a = 1d
rf::op_imm_b = 0
rf:: getOperandAImm8Field  = 1d
rf:: getOperandBImm8Field  = 0
rf::signExtend8 (op_imm_a) = 1d
rf::signExtend8 (op_imm_b) = 0
rf::signExtend16(op_imm_b) = 1d00
rf::rd_data_rf_a = 1d
rf::rd_data_rf_b = 0
rf::rd_data_imm_a = 1d
rf::rd_data_imm_b = 0
rf::rd_data_imm_mux_sel_a = 0
rf::rd_data_imm_mux_sel_b = 0
rf::rd_data_imm_mux_a = 1d
rf::rd_data_imm_mux_b = 0
rf::rd_data_bypass_mux_a = 1d
rf::rd_data_bypass_mux_b = 386
rf::rf_eu_wr_addr = 0
rf::enable = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_a     = 1d
rf::eu_rf_wr_addr_equal_rd_addr_a = 0
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_a = 0
rf::bypass_a = 0
rf::eu_rf_wr_addr = 00
rf::rd_addr_b     = 00
rf::eu_rf_wr_addr_equal_rd_addr_b = 1
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_b = 1
rf::bypass_b = 1
rf::eu_data_a = 386
rf::rd_data_a = 00000001c
rf::rd_data_b = 00000036a
rf::rf_eu_v = 1
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 000000386
rf::eu_rf_wren    = 1
rf::rf_stall = 0
rf::   rf[0] = 0
rf::   rf[1] = 1
rf::   rf[2] = 2
rf::   rf[3] = 3
rf::   rf[4] = 4
rf::   rf[5] = 5
rf::   rf[6] = 6
rf::   rf[7] = 7
rf::   rf[8] = 8
rf::   rf[9] = 9
rf::   rf[a] = a
rf::   rf[b] = b
rf::   rf[c] = c
rf::   rf[d] = d
rf::   rf[e] = e
rf::   rf[f] = f
rf::   rf[10] = 10
rf::   rf[11] = 11
rf::   rf[12] = 12
rf::   rf[13] = 13
rf::   rf[14] = 14
rf::   rf[15] = 15
rf::   rf[16] = 16
rf::   rf[17] = 17
rf::   rf[18] = 18
rf::   rf[19] = 19
rf::   rf[1a] = 1a
rf::   rf[1b] = 1b
rf::   rf[1c] = 1c
rf::   rf[1d] = 1d
rf::   rf[1e] = 1e
rf::   rf[1f] = 1f
   read op  buffer[5d] = 1e00 im read operation  = 5d data = 1d00
 eu_branch = 0 pcx = 5e pc_inc = 5e
reset_ = 1
enable = 1
eu_branch = 0
 pc_im_v   = 1
 im_rf_v   = 1
 rf_eu_v   = 1
 eu_rf_wren= 1
pc_im_address = 5d
im.data = 1d00
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 1 pc_im_address = 5d  im_1 = 1d00
im_data = 1d00
ir_rf_3 = 000001c00
ir_eu_4 = 000001b00
 eu_branch.read() = 1
 pc_im_v   = 1
 im_rf_v   = 1
 rf_eu_v   = 1
 rf_rd_addr_a = 1d
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 00000001c
 rf_rd_data_b = 00000036a
 im_rf_v   = 1
 rf_eu_v = 1
 eu_rf_wren = 1
 eu_rf_wr_data  = 000000386
 eu_rf_wr_addr  = 00
rf::****************************************
rf::v = 1
rf::instructionReg = 1e00
rf::reset_ = 1
rf::rd_addr_a = 1e
rf::rden_a    = 1
rf::rd_addr_b = 00
rf::rden_b    = 1
rf:1 all read operation rd_addr_a = 1e
rf:0 read operation rd_addr_b = 00
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 000000386
rf::eu_rf_wren    = 1
rf::swapbit_wr_data_a = 0
rf::swapbit_wr_addr_a = 0
rf::swapbit_wr_data_b = 0
rf::swapbit_wr_addr_b = 0
rf::swapbit_wren.writ = 0
rf::eu_rf_wren 	  = 1
rf::swap_wren 		  = 0
rf::swapbit_wren 	  = 0
rf::testbit_wren 	  = 0
rf::setbit_wren 	  = 0
rf::ldimm_ab_16_wren = 0
rf::rf_mux_in_wren_a = 0
rf::rf_mux_in_wren_b = 0
rf::enable = 1
rf::operandA = 0
rf::operandB = 0
rf::im_rf_ir.read()  = 1e00
rf::im_rf_instructionDecoder->getInstructionReg()  = 1e00
rf:: isInstFormatOpLas = 1
rf:: isInstFormatOpBit = 0
rf:: isInstFormatOpLdIm= 0
rf:: isInstFormatOpBr  = 0
rf:: getLdImmOperand16Field= 1e00
rf:: signExtend16(im_rf_instructionDecoder->getLdImmOperand16Field ()) = 1e00
rf:: rf_dest_data  = 1f
rf::im_rf_ir = 1e00
rf::eu_rf_ir = 000001c00
rf::op_imm_a = 1e
rf::op_imm_b = 0
rf:: getOperandAImm8Field  = 1e
rf:: getOperandBImm8Field  = 0
rf::signExtend8 (op_imm_a) = 1e
rf::signExtend8 (op_imm_b) = 0
rf::signExtend16(op_imm_b) = 1e00
rf::rd_data_rf_a = 1e
rf::rd_data_rf_b = 0
rf::rd_data_imm_a = 1e
rf::rd_data_imm_b = 0
rf::rd_data_imm_mux_sel_a = 0
rf::rd_data_imm_mux_sel_b = 0
rf::rd_data_imm_mux_a = 1e
rf::rd_data_imm_mux_b = 0
rf::rd_data_bypass_mux_a = 1e
rf::rd_data_bypass_mux_b = 386
rf::rf_eu_wr_addr = 0
rf::enable = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_a     = 1e
rf::eu_rf_wr_addr_equal_rd_addr_a = 0
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_a = 0
rf::bypass_a = 0
rf::eu_rf_wr_addr = 00
rf::rd_addr_b     = 00
rf::eu_rf_wr_addr_equal_rd_addr_b = 1
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_b = 1
rf::bypass_b = 1
rf::eu_data_a = 386
rf::rd_data_a = 00000001d
rf::rd_data_b = 000000386
rf::rf_eu_v = 1
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 000000386
rf::eu_rf_wren    = 1
rf::rf_stall = 0
rf::   rf[0] = 0
rf::   rf[1] = 1
rf::   rf[2] = 2
rf::   rf[3] = 3
rf::   rf[4] = 4
rf::   rf[5] = 5
rf::   rf[6] = 6
rf::   rf[7] = 7
rf::   rf[8] = 8
rf::   rf[9] = 9
rf::   rf[a] = a
rf::   rf[b] = b
rf::   rf[c] = c
rf::   rf[d] = d
rf::   rf[e] = e
rf::   rf[f] = f
rf::   rf[10] = 10
rf::   rf[11] = 11
rf::   rf[12] = 12
rf::   rf[13] = 13
rf::   rf[14] = 14
rf::   rf[15] = 15
rf::   rf[16] = 16
rf::   rf[17] = 17
rf::   rf[18] = 18
rf::   rf[19] = 19
rf::   rf[1a] = 1a
rf::   rf[1b] = 1b
rf::   rf[1c] = 1c
rf::   rf[1d] = 1d
rf::   rf[1e] = 1e
rf::   rf[1f] = 1f
executionUnit::****************************************
executionUnit:: rf_eu_v=1
executionUnit::enable =1
executionUnit:: instReg=1d00 isInstFmtLas=1 instFmt=0
executionUnit:: rf_eu_ir = 000001d00
executionUnit:: las op = ELasAdd	 las op = 0
executionUnit:: src_a = 00000001d
executionUnit:: src_b = 000000386
executionUnit:: eu_rf_wr_data_las = 0
executionUnit:: eu_rf_wr_data_bit = 0
executionUnit:: id->dest = 0
executionUnit:: eu_rf_wr_data = 000000386
executionUnit:: eu_rf_wr_addr = 00
executionUnit:: eu_rf_wren             = 1
rf::****************************************
rf::v = 1
rf::instructionReg = 1e00
rf::reset_ = 1
rf::rd_addr_a = 1e
rf::rden_a    = 1
rf::rd_addr_b = 00
rf::rden_b    = 1
rf:1 all read operation rd_addr_a = 1e
rf:0 read operation rd_addr_b = 00
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 0000003a3
rf::eu_rf_wren    = 1
rf::swapbit_wr_data_a = 0
rf::swapbit_wr_addr_a = 0
rf::swapbit_wr_data_b = 0
rf::swapbit_wr_addr_b = 0
rf::swapbit_wren.writ = 0
rf::eu_rf_wren 	  = 1
rf::swap_wren 		  = 0
rf::swapbit_wren 	  = 0
rf::testbit_wren 	  = 0
rf::setbit_wren 	  = 0
rf::ldimm_ab_16_wren = 0
rf::rf_mux_in_wren_a = 0
rf::rf_mux_in_wren_b = 0
rf::enable = 1
rf::operandA = 0
rf::operandB = 0
rf::im_rf_ir.read()  = 1e00
rf::im_rf_instructionDecoder->getInstructionReg()  = 1e00
rf:: isInstFormatOpLas = 1
rf:: isInstFormatOpBit = 0
rf:: isInstFormatOpLdIm= 0
rf:: isInstFormatOpBr  = 0
rf:: getLdImmOperand16Field= 1e00
rf:: signExtend16(im_rf_instructionDecoder->getLdImmOperand16Field ()) = 1e00
rf:: rf_dest_data  = 1f
rf::im_rf_ir = 1e00
rf::eu_rf_ir = 000001c00
rf::op_imm_a = 1e
rf::op_imm_b = 0
rf:: getOperandAImm8Field  = 1e
rf:: getOperandBImm8Field  = 0
rf::signExtend8 (op_imm_a) = 1e
rf::signExtend8 (op_imm_b) = 0
rf::signExtend16(op_imm_b) = 1e00
rf::rd_data_rf_a = 1e
rf::rd_data_rf_b = 0
rf::rd_data_imm_a = 1e
rf::rd_data_imm_b = 0
rf::rd_data_imm_mux_sel_a = 0
rf::rd_data_imm_mux_sel_b = 0
rf::rd_data_imm_mux_a = 1e
rf::rd_data_imm_mux_b = 0
rf::rd_data_bypass_mux_a = 1e
rf::rd_data_bypass_mux_b = 3a3
rf::rf_eu_wr_addr = 0
rf::enable = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_a     = 1e
rf::eu_rf_wr_addr_equal_rd_addr_a = 0
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_a = 0
rf::bypass_a = 0
rf::eu_rf_wr_addr = 00
rf::rd_addr_b     = 00
rf::eu_rf_wr_addr_equal_rd_addr_b = 1
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_b = 1
rf::bypass_b = 1
rf::eu_data_a = 3a3
rf::rd_data_a = 00000001d
rf::rd_data_b = 000000386
rf::rf_eu_v = 1
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 0000003a3
rf::eu_rf_wren    = 1
rf::rf_stall = 0
rf::   rf[0] = 0
rf::   rf[1] = 1
rf::   rf[2] = 2
rf::   rf[3] = 3
rf::   rf[4] = 4
rf::   rf[5] = 5
rf::   rf[6] = 6
rf::   rf[7] = 7
rf::   rf[8] = 8
rf::   rf[9] = 9
rf::   rf[a] = a
rf::   rf[b] = b
rf::   rf[c] = c
rf::   rf[d] = d
rf::   rf[e] = e
rf::   rf[f] = f
rf::   rf[10] = 10
rf::   rf[11] = 11
rf::   rf[12] = 12
rf::   rf[13] = 13
rf::   rf[14] = 14
rf::   rf[15] = 15
rf::   rf[16] = 16
rf::   rf[17] = 17
rf::   rf[18] = 18
rf::   rf[19] = 19
rf::   rf[1a] = 1a
rf::   rf[1b] = 1b
rf::   rf[1c] = 1c
rf::   rf[1d] = 1d
rf::   rf[1e] = 1e
rf::   rf[1f] = 1f
   read op  buffer[5e] = 1f00 im read operation  = 5e data = 1e00
 eu_branch = 0 pcx = 5f pc_inc = 5f
reset_ = 1
enable = 1
eu_branch = 0
 pc_im_v   = 1
 im_rf_v   = 1
 rf_eu_v   = 1
 eu_rf_wren= 1
pc_im_address = 5e
im.data = 1e00
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 1 pc_im_address = 5e  im_1 = 1e00
im_data = 1e00
ir_rf_3 = 000001d00
ir_eu_4 = 000001c00
 eu_branch.read() = 1
 pc_im_v   = 1
 im_rf_v   = 1
 rf_eu_v   = 1
 rf_rd_addr_a = 1e
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 00000001d
 rf_rd_data_b = 000000386
 im_rf_v   = 1
 rf_eu_v = 1
 eu_rf_wren = 1
 eu_rf_wr_data  = 0000003a3
 eu_rf_wr_addr  = 00
rf::****************************************
rf::v = 1
rf::instructionReg = 1f00
rf::reset_ = 1
rf::rd_addr_a = 1f
rf::rden_a    = 1
rf::rd_addr_b = 00
rf::rden_b    = 1
rf:1 all read operation rd_addr_a = 1f
rf:0 read operation rd_addr_b = 00
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 0000003a3
rf::eu_rf_wren    = 1
rf::swapbit_wr_data_a = 0
rf::swapbit_wr_addr_a = 0
rf::swapbit_wr_data_b = 0
rf::swapbit_wr_addr_b = 0
rf::swapbit_wren.writ = 0
rf::eu_rf_wren 	  = 1
rf::swap_wren 		  = 0
rf::swapbit_wren 	  = 0
rf::testbit_wren 	  = 0
rf::setbit_wren 	  = 0
rf::ldimm_ab_16_wren = 0
rf::rf_mux_in_wren_a = 0
rf::rf_mux_in_wren_b = 0
rf::enable = 1
rf::operandA = 0
rf::operandB = 0
rf::im_rf_ir.read()  = 1f00
rf::im_rf_instructionDecoder->getInstructionReg()  = 1f00
rf:: isInstFormatOpLas = 1
rf:: isInstFormatOpBit = 0
rf:: isInstFormatOpLdIm= 0
rf:: isInstFormatOpBr  = 0
rf:: getLdImmOperand16Field= 1f00
rf:: signExtend16(im_rf_instructionDecoder->getLdImmOperand16Field ()) = 1f00
rf:: rf_dest_data  = 1f
rf::im_rf_ir = 1f00
rf::eu_rf_ir = 000001d00
rf::op_imm_a = 1f
rf::op_imm_b = 0
rf:: getOperandAImm8Field  = 1f
rf:: getOperandBImm8Field  = 0
rf::signExtend8 (op_imm_a) = 1f
rf::signExtend8 (op_imm_b) = 0
rf::signExtend16(op_imm_b) = 1f00
rf::rd_data_rf_a = 1f
rf::rd_data_rf_b = 0
rf::rd_data_imm_a = 1f
rf::rd_data_imm_b = 0
rf::rd_data_imm_mux_sel_a = 0
rf::rd_data_imm_mux_sel_b = 0
rf::rd_data_imm_mux_a = 1f
rf::rd_data_imm_mux_b = 0
rf::rd_data_bypass_mux_a = 1f
rf::rd_data_bypass_mux_b = 3a3
rf::rf_eu_wr_addr = 0
rf::enable = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_a     = 1f
rf::eu_rf_wr_addr_equal_rd_addr_a = 0
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_a = 0
rf::bypass_a = 0
rf::eu_rf_wr_addr = 00
rf::rd_addr_b     = 00
rf::eu_rf_wr_addr_equal_rd_addr_b = 1
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_b = 1
rf::bypass_b = 1
rf::eu_data_a = 3a3
rf::rd_data_a = 00000001e
rf::rd_data_b = 0000003a3
rf::rf_eu_v = 1
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 0000003a3
rf::eu_rf_wren    = 1
rf::rf_stall = 0
rf::   rf[0] = 0
rf::   rf[1] = 1
rf::   rf[2] = 2
rf::   rf[3] = 3
rf::   rf[4] = 4
rf::   rf[5] = 5
rf::   rf[6] = 6
rf::   rf[7] = 7
rf::   rf[8] = 8
rf::   rf[9] = 9
rf::   rf[a] = a
rf::   rf[b] = b
rf::   rf[c] = c
rf::   rf[d] = d
rf::   rf[e] = e
rf::   rf[f] = f
rf::   rf[10] = 10
rf::   rf[11] = 11
rf::   rf[12] = 12
rf::   rf[13] = 13
rf::   rf[14] = 14
rf::   rf[15] = 15
rf::   rf[16] = 16
rf::   rf[17] = 17
rf::   rf[18] = 18
rf::   rf[19] = 19
rf::   rf[1a] = 1a
rf::   rf[1b] = 1b
rf::   rf[1c] = 1c
rf::   rf[1d] = 1d
rf::   rf[1e] = 1e
rf::   rf[1f] = 1f
executionUnit::****************************************
executionUnit:: rf_eu_v=1
executionUnit::enable =1
executionUnit:: instReg=1e00 isInstFmtLas=1 instFmt=0
executionUnit:: rf_eu_ir = 000001e00
executionUnit:: las op = ELasAdd	 las op = 0
executionUnit:: src_a = 00000001e
executionUnit:: src_b = 0000003a3
executionUnit:: eu_rf_wr_data_las = 0
executionUnit:: eu_rf_wr_data_bit = 0
executionUnit:: id->dest = 0
executionUnit:: eu_rf_wr_data = 0000003a3
executionUnit:: eu_rf_wr_addr = 00
executionUnit:: eu_rf_wren             = 1
rf::****************************************
rf::v = 1
rf::instructionReg = 1f00
rf::reset_ = 1
rf::rd_addr_a = 1f
rf::rden_a    = 1
rf::rd_addr_b = 00
rf::rden_b    = 1
rf:1 all read operation rd_addr_a = 1f
rf:0 read operation rd_addr_b = 00
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 0000003c1
rf::eu_rf_wren    = 1
rf::swapbit_wr_data_a = 0
rf::swapbit_wr_addr_a = 0
rf::swapbit_wr_data_b = 0
rf::swapbit_wr_addr_b = 0
rf::swapbit_wren.writ = 0
rf::eu_rf_wren 	  = 1
rf::swap_wren 		  = 0
rf::swapbit_wren 	  = 0
rf::testbit_wren 	  = 0
rf::setbit_wren 	  = 0
rf::ldimm_ab_16_wren = 0
rf::rf_mux_in_wren_a = 0
rf::rf_mux_in_wren_b = 0
rf::enable = 1
rf::operandA = 0
rf::operandB = 0
rf::im_rf_ir.read()  = 1f00
rf::im_rf_instructionDecoder->getInstructionReg()  = 1f00
rf:: isInstFormatOpLas = 1
rf:: isInstFormatOpBit = 0
rf:: isInstFormatOpLdIm= 0
rf:: isInstFormatOpBr  = 0
rf:: getLdImmOperand16Field= 1f00
rf:: signExtend16(im_rf_instructionDecoder->getLdImmOperand16Field ()) = 1f00
rf:: rf_dest_data  = 1f
rf::im_rf_ir = 1f00
rf::eu_rf_ir = 000001d00
rf::op_imm_a = 1f
rf::op_imm_b = 0
rf:: getOperandAImm8Field  = 1f
rf:: getOperandBImm8Field  = 0
rf::signExtend8 (op_imm_a) = 1f
rf::signExtend8 (op_imm_b) = 0
rf::signExtend16(op_imm_b) = 1f00
rf::rd_data_rf_a = 1f
rf::rd_data_rf_b = 0
rf::rd_data_imm_a = 1f
rf::rd_data_imm_b = 0
rf::rd_data_imm_mux_sel_a = 0
rf::rd_data_imm_mux_sel_b = 0
rf::rd_data_imm_mux_a = 1f
rf::rd_data_imm_mux_b = 0
rf::rd_data_bypass_mux_a = 1f
rf::rd_data_bypass_mux_b = 3c1
rf::rf_eu_wr_addr = 0
rf::enable = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_a     = 1f
rf::eu_rf_wr_addr_equal_rd_addr_a = 0
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_a = 0
rf::bypass_a = 0
rf::eu_rf_wr_addr = 00
rf::rd_addr_b     = 00
rf::eu_rf_wr_addr_equal_rd_addr_b = 1
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_b = 1
rf::bypass_b = 1
rf::eu_data_a = 3c1
rf::rd_data_a = 00000001e
rf::rd_data_b = 0000003a3
rf::rf_eu_v = 1
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 0000003c1
rf::eu_rf_wren    = 1
rf::rf_stall = 0
rf::   rf[0] = 0
rf::   rf[1] = 1
rf::   rf[2] = 2
rf::   rf[3] = 3
rf::   rf[4] = 4
rf::   rf[5] = 5
rf::   rf[6] = 6
rf::   rf[7] = 7
rf::   rf[8] = 8
rf::   rf[9] = 9
rf::   rf[a] = a
rf::   rf[b] = b
rf::   rf[c] = c
rf::   rf[d] = d
rf::   rf[e] = e
rf::   rf[f] = f
rf::   rf[10] = 10
rf::   rf[11] = 11
rf::   rf[12] = 12
rf::   rf[13] = 13
rf::   rf[14] = 14
rf::   rf[15] = 15
rf::   rf[16] = 16
rf::   rf[17] = 17
rf::   rf[18] = 18
rf::   rf[19] = 19
rf::   rf[1a] = 1a
rf::   rf[1b] = 1b
rf::   rf[1c] = 1c
rf::   rf[1d] = 1d
rf::   rf[1e] = 1e
rf::   rf[1f] = 1f
   read op  buffer[5f] = 1100007c im read operation  = 5f data = 1f00
 eu_branch = 0 pcx = 60 pc_inc = 60
reset_ = 1
enable = 1
eu_branch = 0
 pc_im_v   = 1
 im_rf_v   = 1
 rf_eu_v   = 1
 eu_rf_wren= 1
pc_im_address = 5f
im.data = 1f00
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 1 pc_im_address = 5f  im_1 = 1f00
im_data = 1f00
ir_rf_3 = 000001e00
ir_eu_4 = 000001d00
 eu_branch.read() = 1
 pc_im_v   = 1
 im_rf_v   = 1
 rf_eu_v   = 1
 rf_rd_addr_a = 1f
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 00000001e
 rf_rd_data_b = 0000003a3
 im_rf_v   = 1
 rf_eu_v = 1
 eu_rf_wren = 1
 eu_rf_wr_data  = 0000003c1
 eu_rf_wr_addr  = 00
rf::****************************************
rf::v = 1
rf::instructionReg = 1100007c
rf::reset_ = 1
rf::rd_addr_a = 00
rf::rden_a    = 1
rf::rd_addr_b = 1c
rf::rden_b    = 1
rf:0 read operation rd_addr_a = 00
rf:all read operation rd_addr_b = 1c
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 0000003c1
rf::eu_rf_wren    = 1
rf::swapbit_wr_data_a = 0
rf::swapbit_wr_addr_a = 0
rf::swapbit_wr_data_b = 0
rf::swapbit_wr_addr_b = 0
rf::swapbit_wren.writ = 0
rf::eu_rf_wren 	  = 1
rf::swap_wren 		  = 0
rf::swapbit_wren 	  = 0
rf::testbit_wren 	  = 0
rf::setbit_wren 	  = 0
rf::ldimm_ab_16_wren = 0
rf::rf_mux_in_wren_a = 0
rf::rf_mux_in_wren_b = 0
rf::enable = 1
rf::operandA = 0
rf::operandB = 0
rf::im_rf_ir.read()  = 1100007c
rf::im_rf_instructionDecoder->getInstructionReg()  = 1100007c
rf:: isInstFormatOpLas = 1
rf:: isInstFormatOpBit = 0
rf:: isInstFormatOpLdIm= 0
rf:: isInstFormatOpBr  = 0
rf:: getLdImmOperand16Field= 7c
rf:: signExtend16(im_rf_instructionDecoder->getLdImmOperand16Field ()) = 7c
rf:: rf_dest_data  = 1f
rf::im_rf_ir = 1100007c
rf::eu_rf_ir = 000001e00
rf::op_imm_a = 0
rf::op_imm_b = 7c
rf:: getOperandAImm8Field  = 0
rf:: getOperandBImm8Field  = 7c
rf::signExtend8 (op_imm_a) = 0
rf::signExtend8 (op_imm_b) = 7c
rf::signExtend16(op_imm_b) = 7c
rf::rd_data_rf_a = 0
rf::rd_data_rf_b = 1c
rf::rd_data_imm_a = 0
rf::rd_data_imm_b = 7c
rf::rd_data_imm_mux_sel_a = 0
rf::rd_data_imm_mux_sel_b = 1
rf::rd_data_imm_mux_a = 0
rf::rd_data_imm_mux_b = 7c
rf::rd_data_bypass_mux_a = 3c1
rf::rd_data_bypass_mux_b = 7c
rf::rf_eu_wr_addr = 0
rf::enable = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_a     = 00
rf::eu_rf_wr_addr_equal_rd_addr_a = 1
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_a = 1
rf::bypass_a = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_b     = 1c
rf::eu_rf_wr_addr_equal_rd_addr_b = 0
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_b = 0
rf::bypass_b = 0
rf::eu_data_a = 3c1
rf::rd_data_a = 00000001f
rf::rd_data_b = 0000003c1
rf::rf_eu_v = 1
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 0000003c1
rf::eu_rf_wren    = 1
rf::rf_stall = 0
rf::   rf[0] = 0
rf::   rf[1] = 1
rf::   rf[2] = 2
rf::   rf[3] = 3
rf::   rf[4] = 4
rf::   rf[5] = 5
rf::   rf[6] = 6
rf::   rf[7] = 7
rf::   rf[8] = 8
rf::   rf[9] = 9
rf::   rf[a] = a
rf::   rf[b] = b
rf::   rf[c] = c
rf::   rf[d] = d
rf::   rf[e] = e
rf::   rf[f] = f
rf::   rf[10] = 10
rf::   rf[11] = 11
rf::   rf[12] = 12
rf::   rf[13] = 13
rf::   rf[14] = 14
rf::   rf[15] = 15
rf::   rf[16] = 16
rf::   rf[17] = 17
rf::   rf[18] = 18
rf::   rf[19] = 19
rf::   rf[1a] = 1a
rf::   rf[1b] = 1b
rf::   rf[1c] = 1c
rf::   rf[1d] = 1d
rf::   rf[1e] = 1e
rf::   rf[1f] = 1f
executionUnit::****************************************
executionUnit:: rf_eu_v=1
executionUnit::enable =1
executionUnit:: instReg=1f00 isInstFmtLas=1 instFmt=0
executionUnit:: rf_eu_ir = 000001f00
executionUnit:: las op = ELasAdd	 las op = 0
executionUnit:: src_a = 00000001f
executionUnit:: src_b = 0000003c1
executionUnit:: eu_rf_wr_data_las = 0
executionUnit:: eu_rf_wr_data_bit = 0
executionUnit:: id->dest = 0
executionUnit:: eu_rf_wr_data = 0000003c1
executionUnit:: eu_rf_wr_addr = 00
executionUnit:: eu_rf_wren             = 1
rf::****************************************
rf::v = 1
rf::instructionReg = 1100007c
rf::reset_ = 1
rf::rd_addr_a = 00
rf::rden_a    = 1
rf::rd_addr_b = 1c
rf::rden_b    = 1
rf:0 read operation rd_addr_a = 00
rf:all read operation rd_addr_b = 1c
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 0000003e0
rf::eu_rf_wren    = 1
rf::swapbit_wr_data_a = 0
rf::swapbit_wr_addr_a = 0
rf::swapbit_wr_data_b = 0
rf::swapbit_wr_addr_b = 0
rf::swapbit_wren.writ = 0
rf::eu_rf_wren 	  = 1
rf::swap_wren 		  = 0
rf::swapbit_wren 	  = 0
rf::testbit_wren 	  = 0
rf::setbit_wren 	  = 0
rf::ldimm_ab_16_wren = 0
rf::rf_mux_in_wren_a = 0
rf::rf_mux_in_wren_b = 0
rf::enable = 1
rf::operandA = 0
rf::operandB = 0
rf::im_rf_ir.read()  = 1100007c
rf::im_rf_instructionDecoder->getInstructionReg()  = 1100007c
rf:: isInstFormatOpLas = 1
rf:: isInstFormatOpBit = 0
rf:: isInstFormatOpLdIm= 0
rf:: isInstFormatOpBr  = 0
rf:: getLdImmOperand16Field= 7c
rf:: signExtend16(im_rf_instructionDecoder->getLdImmOperand16Field ()) = 7c
rf:: rf_dest_data  = 1f
rf::im_rf_ir = 1100007c
rf::eu_rf_ir = 000001e00
rf::op_imm_a = 0
rf::op_imm_b = 7c
rf:: getOperandAImm8Field  = 0
rf:: getOperandBImm8Field  = 7c
rf::signExtend8 (op_imm_a) = 0
rf::signExtend8 (op_imm_b) = 7c
rf::signExtend16(op_imm_b) = 7c
rf::rd_data_rf_a = 0
rf::rd_data_rf_b = 1c
rf::rd_data_imm_a = 0
rf::rd_data_imm_b = 7c
rf::rd_data_imm_mux_sel_a = 0
rf::rd_data_imm_mux_sel_b = 1
rf::rd_data_imm_mux_a = 0
rf::rd_data_imm_mux_b = 7c
rf::rd_data_bypass_mux_a = 3e0
rf::rd_data_bypass_mux_b = 7c
rf::rf_eu_wr_addr = 0
rf::enable = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_a     = 00
rf::eu_rf_wr_addr_equal_rd_addr_a = 1
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_a = 1
rf::bypass_a = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_b     = 1c
rf::eu_rf_wr_addr_equal_rd_addr_b = 0
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_b = 0
rf::bypass_b = 0
rf::eu_data_a = 3e0
rf::rd_data_a = 00000001f
rf::rd_data_b = 0000003c1
rf::rf_eu_v = 1
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 0000003e0
rf::eu_rf_wren    = 1
rf::rf_stall = 0
rf::   rf[0] = 0
rf::   rf[1] = 1
rf::   rf[2] = 2
rf::   rf[3] = 3
rf::   rf[4] = 4
rf::   rf[5] = 5
rf::   rf[6] = 6
rf::   rf[7] = 7
rf::   rf[8] = 8
rf::   rf[9] = 9
rf::   rf[a] = a
rf::   rf[b] = b
rf::   rf[c] = c
rf::   rf[d] = d
rf::   rf[e] = e
rf::   rf[f] = f
rf::   rf[10] = 10
rf::   rf[11] = 11
rf::   rf[12] = 12
rf::   rf[13] = 13
rf::   rf[14] = 14
rf::   rf[15] = 15
rf::   rf[16] = 16
rf::   rf[17] = 17
rf::   rf[18] = 18
rf::   rf[19] = 19
rf::   rf[1a] = 1a
rf::   rf[1b] = 1b
rf::   rf[1c] = 1c
rf::   rf[1d] = 1d
rf::   rf[1e] = 1e
rf::   rf[1f] = 1f
   read op  buffer[60] = 1100007c im read operation  = 60 data = 1100007c
 eu_branch = 0 pcx = 61 pc_inc = 61
reset_ = 1
enable = 1
eu_branch = 0
 pc_im_v   = 1
 im_rf_v   = 1
 rf_eu_v   = 1
 eu_rf_wren= 1
pc_im_address = 60
im.data = 1100007c
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 1 pc_im_address = 60  im_1 = 1100007c
im_data = 1100007c
ir_rf_3 = 000001f00
ir_eu_4 = 000001e00
 eu_branch.read() = 1
 pc_im_v   = 1
 im_rf_v   = 1
 rf_eu_v   = 1
 rf_rd_addr_a = 0
 rf_rd_addr_b = 7c
 rf_dest_addr = 0
 rf_rd_data_a = 00000001f
 rf_rd_data_b = 0000003c1
 im_rf_v   = 1
 rf_eu_v = 1
 eu_rf_wren = 1
 eu_rf_wr_data  = 0000003e0
 eu_rf_wr_addr  = 00
rf::****************************************
rf::v = 1
rf::instructionReg = 1100007c
rf::reset_ = 1
rf::rd_addr_a = 00
rf::rden_a    = 1
rf::rd_addr_b = 1c
rf::rden_b    = 1
rf:0 read operation rd_addr_a = 00
rf:all read operation rd_addr_b = 1c
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 0000003e0
rf::eu_rf_wren    = 1
rf::swapbit_wr_data_a = 0
rf::swapbit_wr_addr_a = 0
rf::swapbit_wr_data_b = 0
rf::swapbit_wr_addr_b = 0
rf::swapbit_wren.writ = 0
rf::eu_rf_wren 	  = 1
rf::swap_wren 		  = 0
rf::swapbit_wren 	  = 0
rf::testbit_wren 	  = 0
rf::setbit_wren 	  = 0
rf::ldimm_ab_16_wren = 0
rf::rf_mux_in_wren_a = 0
rf::rf_mux_in_wren_b = 0
rf::enable = 1
rf::operandA = 0
rf::operandB = 0
rf::im_rf_ir.read()  = 1100007c
rf::im_rf_instructionDecoder->getInstructionReg()  = 1100007c
rf:: isInstFormatOpLas = 1
rf:: isInstFormatOpBit = 0
rf:: isInstFormatOpLdIm= 0
rf:: isInstFormatOpBr  = 0
rf:: getLdImmOperand16Field= 7c
rf:: signExtend16(im_rf_instructionDecoder->getLdImmOperand16Field ()) = 7c
rf:: rf_dest_data  = 1f
rf::im_rf_ir = 1100007c
rf::eu_rf_ir = 000001f00
rf::op_imm_a = 0
rf::op_imm_b = 7c
rf:: getOperandAImm8Field  = 0
rf:: getOperandBImm8Field  = 7c
rf::signExtend8 (op_imm_a) = 0
rf::signExtend8 (op_imm_b) = 7c
rf::signExtend16(op_imm_b) = 7c
rf::rd_data_rf_a = 0
rf::rd_data_rf_b = 1c
rf::rd_data_imm_a = 0
rf::rd_data_imm_b = 7c
rf::rd_data_imm_mux_sel_a = 0
rf::rd_data_imm_mux_sel_b = 1
rf::rd_data_imm_mux_a = 0
rf::rd_data_imm_mux_b = 7c
rf::rd_data_bypass_mux_a = 3e0
rf::rd_data_bypass_mux_b = 7c
rf::rf_eu_wr_addr = 0
rf::enable = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_a     = 00
rf::eu_rf_wr_addr_equal_rd_addr_a = 1
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_a = 1
rf::bypass_a = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_b     = 1c
rf::eu_rf_wr_addr_equal_rd_addr_b = 0
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_b = 0
rf::bypass_b = 0
rf::eu_data_a = 3e0
rf::rd_data_a = 0000003e0
rf::rd_data_b = 00000007c
rf::rf_eu_v = 1
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 0000003e0
rf::eu_rf_wren    = 1
rf::rf_stall = 0
rf::   rf[0] = 0
rf::   rf[1] = 1
rf::   rf[2] = 2
rf::   rf[3] = 3
rf::   rf[4] = 4
rf::   rf[5] = 5
rf::   rf[6] = 6
rf::   rf[7] = 7
rf::   rf[8] = 8
rf::   rf[9] = 9
rf::   rf[a] = a
rf::   rf[b] = b
rf::   rf[c] = c
rf::   rf[d] = d
rf::   rf[e] = e
rf::   rf[f] = f
rf::   rf[10] = 10
rf::   rf[11] = 11
rf::   rf[12] = 12
rf::   rf[13] = 13
rf::   rf[14] = 14
rf::   rf[15] = 15
rf::   rf[16] = 16
rf::   rf[17] = 17
rf::   rf[18] = 18
rf::   rf[19] = 19
rf::   rf[1a] = 1a
rf::   rf[1b] = 1b
rf::   rf[1c] = 1c
rf::   rf[1d] = 1d
rf::   rf[1e] = 1e
rf::   rf[1f] = 1f
executionUnit::****************************************
executionUnit:: rf_eu_v=1
executionUnit::enable =1
executionUnit:: instReg=1100007c isInstFmtLas=1 instFmt=0
executionUnit:: rf_eu_ir = 01100007c
executionUnit:: las op = ELasSub	 las op = 1
executionUnit:: src_a = 0000003e0
executionUnit:: src_b = 00000007c
executionUnit:: eu_rf_wr_data_las = 0
executionUnit:: eu_rf_wr_data_bit = 0
executionUnit:: id->dest = 0
executionUnit:: eu_rf_wr_data = 0000003e0
executionUnit:: eu_rf_wr_addr = 00
executionUnit:: eu_rf_wren             = 1
rf::****************************************
rf::v = 1
rf::instructionReg = 1100007c
rf::reset_ = 1
rf::rd_addr_a = 00
rf::rden_a    = 1
rf::rd_addr_b = 1c
rf::rden_b    = 1
rf:0 read operation rd_addr_a = 00
rf:all read operation rd_addr_b = 1c
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 000000364
rf::eu_rf_wren    = 1
rf::swapbit_wr_data_a = 0
rf::swapbit_wr_addr_a = 0
rf::swapbit_wr_data_b = 0
rf::swapbit_wr_addr_b = 0
rf::swapbit_wren.writ = 0
rf::eu_rf_wren 	  = 1
rf::swap_wren 		  = 0
rf::swapbit_wren 	  = 0
rf::testbit_wren 	  = 0
rf::setbit_wren 	  = 0
rf::ldimm_ab_16_wren = 0
rf::rf_mux_in_wren_a = 0
rf::rf_mux_in_wren_b = 0
rf::enable = 1
rf::operandA = 0
rf::operandB = 0
rf::im_rf_ir.read()  = 1100007c
rf::im_rf_instructionDecoder->getInstructionReg()  = 1100007c
rf:: isInstFormatOpLas = 1
rf:: isInstFormatOpBit = 0
rf:: isInstFormatOpLdIm= 0
rf:: isInstFormatOpBr  = 0
rf:: getLdImmOperand16Field= 7c
rf:: signExtend16(im_rf_instructionDecoder->getLdImmOperand16Field ()) = 7c
rf:: rf_dest_data  = 1f
rf::im_rf_ir = 1100007c
rf::eu_rf_ir = 000001f00
rf::op_imm_a = 0
rf::op_imm_b = 7c
rf:: getOperandAImm8Field  = 0
rf:: getOperandBImm8Field  = 7c
rf::signExtend8 (op_imm_a) = 0
rf::signExtend8 (op_imm_b) = 7c
rf::signExtend16(op_imm_b) = 7c
rf::rd_data_rf_a = 0
rf::rd_data_rf_b = 1c
rf::rd_data_imm_a = 0
rf::rd_data_imm_b = 7c
rf::rd_data_imm_mux_sel_a = 0
rf::rd_data_imm_mux_sel_b = 1
rf::rd_data_imm_mux_a = 0
rf::rd_data_imm_mux_b = 7c
rf::rd_data_bypass_mux_a = 364
rf::rd_data_bypass_mux_b = 7c
rf::rf_eu_wr_addr = 0
rf::enable = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_a     = 00
rf::eu_rf_wr_addr_equal_rd_addr_a = 1
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_a = 1
rf::bypass_a = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_b     = 1c
rf::eu_rf_wr_addr_equal_rd_addr_b = 0
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_b = 0
rf::bypass_b = 0
rf::eu_data_a = 364
rf::rd_data_a = 0000003e0
rf::rd_data_b = 00000007c
rf::rf_eu_v = 1
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 000000364
rf::eu_rf_wren    = 1
rf::rf_stall = 0
rf::   rf[0] = 0
rf::   rf[1] = 1
rf::   rf[2] = 2
rf::   rf[3] = 3
rf::   rf[4] = 4
rf::   rf[5] = 5
rf::   rf[6] = 6
rf::   rf[7] = 7
rf::   rf[8] = 8
rf::   rf[9] = 9
rf::   rf[a] = a
rf::   rf[b] = b
rf::   rf[c] = c
rf::   rf[d] = d
rf::   rf[e] = e
rf::   rf[f] = f
rf::   rf[10] = 10
rf::   rf[11] = 11
rf::   rf[12] = 12
rf::   rf[13] = 13
rf::   rf[14] = 14
rf::   rf[15] = 15
rf::   rf[16] = 16
rf::   rf[17] = 17
rf::   rf[18] = 18
rf::   rf[19] = 19
rf::   rf[1a] = 1a
rf::   rf[1b] = 1b
rf::   rf[1c] = 1c
rf::   rf[1d] = 1d
rf::   rf[1e] = 1e
rf::   rf[1f] = 1f
   read op  buffer[61] = 1100007c im read operation  = 61 data = 1100007c
 eu_branch = 0 pcx = 62 pc_inc = 62
reset_ = 1
enable = 1
eu_branch = 0
 pc_im_v   = 1
 im_rf_v   = 1
 rf_eu_v   = 1
 eu_rf_wren= 1
pc_im_address = 61
im.data = 1100007c
npc_2 = 0007c
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 1 pc_im_address = 61  im_1 = 1100007c
im_data = 1100007c
ir_rf_3 = 01100007c
ir_eu_4 = 000001f00
 eu_branch.read() = 1
 pc_im_v   = 1
 im_rf_v   = 1
 rf_eu_v   = 1
 rf_rd_addr_a = 0
 rf_rd_addr_b = 7c
 rf_dest_addr = 0
 rf_rd_data_a = 0000003e0
 rf_rd_data_b = 00000007c
 im_rf_v   = 1
 rf_eu_v = 1
 eu_rf_wren = 1
 eu_rf_wr_data  = 000000364
 eu_rf_wr_addr  = 00
rf::****************************************
rf::v = 1
rf::instructionReg = 1100007c
rf::reset_ = 1
rf::rd_addr_a = 00
rf::rden_a    = 1
rf::rd_addr_b = 1c
rf::rden_b    = 1
rf:0 read operation rd_addr_a = 00
rf:all read operation rd_addr_b = 1c
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 000000364
rf::eu_rf_wren    = 1
rf::swapbit_wr_data_a = 0
rf::swapbit_wr_addr_a = 0
rf::swapbit_wr_data_b = 0
rf::swapbit_wr_addr_b = 0
rf::swapbit_wren.writ = 0
rf::eu_rf_wren 	  = 1
rf::swap_wren 		  = 0
rf::swapbit_wren 	  = 0
rf::testbit_wren 	  = 0
rf::setbit_wren 	  = 0
rf::ldimm_ab_16_wren = 0
rf::rf_mux_in_wren_a = 0
rf::rf_mux_in_wren_b = 0
rf::enable = 1
rf::operandA = 0
rf::operandB = 0
rf::im_rf_ir.read()  = 1100007c
rf::im_rf_instructionDecoder->getInstructionReg()  = 1100007c
rf:: isInstFormatOpLas = 1
rf:: isInstFormatOpBit = 0
rf:: isInstFormatOpLdIm= 0
rf:: isInstFormatOpBr  = 0
rf:: getLdImmOperand16Field= 7c
rf:: signExtend16(im_rf_instructionDecoder->getLdImmOperand16Field ()) = 7c
rf:: rf_dest_data  = 1f
rf::im_rf_ir = 1100007c
rf::eu_rf_ir = 01100007c
rf::op_imm_a = 0
rf::op_imm_b = 7c
rf:: getOperandAImm8Field  = 0
rf:: getOperandBImm8Field  = 7c
rf::signExtend8 (op_imm_a) = 0
rf::signExtend8 (op_imm_b) = 7c
rf::signExtend16(op_imm_b) = 7c
rf::rd_data_rf_a = 0
rf::rd_data_rf_b = 1c
rf::rd_data_imm_a = 0
rf::rd_data_imm_b = 7c
rf::rd_data_imm_mux_sel_a = 0
rf::rd_data_imm_mux_sel_b = 1
rf::rd_data_imm_mux_a = 0
rf::rd_data_imm_mux_b = 7c
rf::rd_data_bypass_mux_a = 364
rf::rd_data_bypass_mux_b = 7c
rf::rf_eu_wr_addr = 0
rf::enable = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_a     = 00
rf::eu_rf_wr_addr_equal_rd_addr_a = 1
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_a = 1
rf::bypass_a = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_b     = 1c
rf::eu_rf_wr_addr_equal_rd_addr_b = 0
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_b = 0
rf::bypass_b = 0
rf::eu_data_a = 364
rf::rd_data_a = 000000364
rf::rd_data_b = 00000007c
rf::rf_eu_v = 1
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 000000364
rf::eu_rf_wren    = 1
rf::rf_stall = 0
rf::   rf[0] = 0
rf::   rf[1] = 1
rf::   rf[2] = 2
rf::   rf[3] = 3
rf::   rf[4] = 4
rf::   rf[5] = 5
rf::   rf[6] = 6
rf::   rf[7] = 7
rf::   rf[8] = 8
rf::   rf[9] = 9
rf::   rf[a] = a
rf::   rf[b] = b
rf::   rf[c] = c
rf::   rf[d] = d
rf::   rf[e] = e
rf::   rf[f] = f
rf::   rf[10] = 10
rf::   rf[11] = 11
rf::   rf[12] = 12
rf::   rf[13] = 13
rf::   rf[14] = 14
rf::   rf[15] = 15
rf::   rf[16] = 16
rf::   rf[17] = 17
rf::   rf[18] = 18
rf::   rf[19] = 19
rf::   rf[1a] = 1a
rf::   rf[1b] = 1b
rf::   rf[1c] = 1c
rf::   rf[1d] = 1d
rf::   rf[1e] = 1e
rf::   rf[1f] = 1f
executionUnit::****************************************
executionUnit:: rf_eu_v=1
executionUnit::enable =1
executionUnit:: instReg=1100007c isInstFmtLas=1 instFmt=0
executionUnit:: rf_eu_ir = 01100007c
executionUnit:: las op = ELasSub	 las op = 1
executionUnit:: src_a = 000000364
executionUnit:: src_b = 00000007c
executionUnit:: eu_rf_wr_data_las = 0
executionUnit:: eu_rf_wr_data_bit = 0
executionUnit:: id->dest = 0
executionUnit:: eu_rf_wr_data = 000000364
executionUnit:: eu_rf_wr_addr = 00
executionUnit:: eu_rf_wren             = 1
rf::****************************************
rf::v = 1
rf::instructionReg = 1100007c
rf::reset_ = 1
rf::rd_addr_a = 00
rf::rden_a    = 1
rf::rd_addr_b = 1c
rf::rden_b    = 1
rf:0 read operation rd_addr_a = 00
rf:all read operation rd_addr_b = 1c
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 0000002e8
rf::eu_rf_wren    = 1
rf::swapbit_wr_data_a = 0
rf::swapbit_wr_addr_a = 0
rf::swapbit_wr_data_b = 0
rf::swapbit_wr_addr_b = 0
rf::swapbit_wren.writ = 0
rf::eu_rf_wren 	  = 1
rf::swap_wren 		  = 0
rf::swapbit_wren 	  = 0
rf::testbit_wren 	  = 0
rf::setbit_wren 	  = 0
rf::ldimm_ab_16_wren = 0
rf::rf_mux_in_wren_a = 0
rf::rf_mux_in_wren_b = 0
rf::enable = 1
rf::operandA = 0
rf::operandB = 0
rf::im_rf_ir.read()  = 1100007c
rf::im_rf_instructionDecoder->getInstructionReg()  = 1100007c
rf:: isInstFormatOpLas = 1
rf:: isInstFormatOpBit = 0
rf:: isInstFormatOpLdIm= 0
rf:: isInstFormatOpBr  = 0
rf:: getLdImmOperand16Field= 7c
rf:: signExtend16(im_rf_instructionDecoder->getLdImmOperand16Field ()) = 7c
rf:: rf_dest_data  = 1f
rf::im_rf_ir = 1100007c
rf::eu_rf_ir = 01100007c
rf::op_imm_a = 0
rf::op_imm_b = 7c
rf:: getOperandAImm8Field  = 0
rf:: getOperandBImm8Field  = 7c
rf::signExtend8 (op_imm_a) = 0
rf::signExtend8 (op_imm_b) = 7c
rf::signExtend16(op_imm_b) = 7c
rf::rd_data_rf_a = 0
rf::rd_data_rf_b = 1c
rf::rd_data_imm_a = 0
rf::rd_data_imm_b = 7c
rf::rd_data_imm_mux_sel_a = 0
rf::rd_data_imm_mux_sel_b = 1
rf::rd_data_imm_mux_a = 0
rf::rd_data_imm_mux_b = 7c
rf::rd_data_bypass_mux_a = 2e8
rf::rd_data_bypass_mux_b = 7c
rf::rf_eu_wr_addr = 0
rf::enable = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_a     = 00
rf::eu_rf_wr_addr_equal_rd_addr_a = 1
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_a = 1
rf::bypass_a = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_b     = 1c
rf::eu_rf_wr_addr_equal_rd_addr_b = 0
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_b = 0
rf::bypass_b = 0
rf::eu_data_a = 2e8
rf::rd_data_a = 000000364
rf::rd_data_b = 00000007c
rf::rf_eu_v = 1
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 0000002e8
rf::eu_rf_wren    = 1
rf::rf_stall = 0
rf::   rf[0] = 0
rf::   rf[1] = 1
rf::   rf[2] = 2
rf::   rf[3] = 3
rf::   rf[4] = 4
rf::   rf[5] = 5
rf::   rf[6] = 6
rf::   rf[7] = 7
rf::   rf[8] = 8
rf::   rf[9] = 9
rf::   rf[a] = a
rf::   rf[b] = b
rf::   rf[c] = c
rf::   rf[d] = d
rf::   rf[e] = e
rf::   rf[f] = f
rf::   rf[10] = 10
rf::   rf[11] = 11
rf::   rf[12] = 12
rf::   rf[13] = 13
rf::   rf[14] = 14
rf::   rf[15] = 15
rf::   rf[16] = 16
rf::   rf[17] = 17
rf::   rf[18] = 18
rf::   rf[19] = 19
rf::   rf[1a] = 1a
rf::   rf[1b] = 1b
rf::   rf[1c] = 1c
rf::   rf[1d] = 1d
rf::   rf[1e] = 1e
rf::   rf[1f] = 1f
   read op  buffer[62] = 1100007c im read operation  = 62 data = 1100007c
 eu_branch = 0 pcx = 63 pc_inc = 63
reset_ = 1
enable = 1
eu_branch = 0
 pc_im_v   = 1
 im_rf_v   = 1
 rf_eu_v   = 1
 eu_rf_wren= 1
pc_im_address = 62
im.data = 1100007c
npc_2 = 0007c
npc_3 = 0007c
npc_4 = 00000
pc_im_v = 1 im_RnW = 1 pc_im_address = 62  im_1 = 1100007c
im_data = 1100007c
ir_rf_3 = 01100007c
ir_eu_4 = 01100007c
 eu_branch.read() = 1
 pc_im_v   = 1
 im_rf_v   = 1
 rf_eu_v   = 1
 rf_rd_addr_a = 0
 rf_rd_addr_b = 7c
 rf_dest_addr = 0
 rf_rd_data_a = 000000364
 rf_rd_data_b = 00000007c
 im_rf_v   = 1
 rf_eu_v = 1
 eu_rf_wren = 1
 eu_rf_wr_data  = 0000002e8
 eu_rf_wr_addr  = 00
rf::****************************************
rf::v = 1
rf::instructionReg = 1100007c
rf::reset_ = 1
rf::rd_addr_a = 00
rf::rden_a    = 1
rf::rd_addr_b = 1c
rf::rden_b    = 1
rf:0 read operation rd_addr_a = 00
rf:all read operation rd_addr_b = 1c
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 0000002e8
rf::eu_rf_wren    = 1
rf::swapbit_wr_data_a = 0
rf::swapbit_wr_addr_a = 0
rf::swapbit_wr_data_b = 0
rf::swapbit_wr_addr_b = 0
rf::swapbit_wren.writ = 0
rf::eu_rf_wren 	  = 1
rf::swap_wren 		  = 0
rf::swapbit_wren 	  = 0
rf::testbit_wren 	  = 0
rf::setbit_wren 	  = 0
rf::ldimm_ab_16_wren = 0
rf::rf_mux_in_wren_a = 0
rf::rf_mux_in_wren_b = 0
rf::enable = 1
rf::operandA = 0
rf::operandB = 0
rf::im_rf_ir.read()  = 1100007c
rf::im_rf_instructionDecoder->getInstructionReg()  = 1100007c
rf:: isInstFormatOpLas = 1
rf:: isInstFormatOpBit = 0
rf:: isInstFormatOpLdIm= 0
rf:: isInstFormatOpBr  = 0
rf:: getLdImmOperand16Field= 7c
rf:: signExtend16(im_rf_instructionDecoder->getLdImmOperand16Field ()) = 7c
rf:: rf_dest_data  = 1f
rf::im_rf_ir = 1100007c
rf::eu_rf_ir = 01100007c
rf::op_imm_a = 0
rf::op_imm_b = 7c
rf:: getOperandAImm8Field  = 0
rf:: getOperandBImm8Field  = 7c
rf::signExtend8 (op_imm_a) = 0
rf::signExtend8 (op_imm_b) = 7c
rf::signExtend16(op_imm_b) = 7c
rf::rd_data_rf_a = 0
rf::rd_data_rf_b = 1c
rf::rd_data_imm_a = 0
rf::rd_data_imm_b = 7c
rf::rd_data_imm_mux_sel_a = 0
rf::rd_data_imm_mux_sel_b = 1
rf::rd_data_imm_mux_a = 0
rf::rd_data_imm_mux_b = 7c
rf::rd_data_bypass_mux_a = 2e8
rf::rd_data_bypass_mux_b = 7c
rf::rf_eu_wr_addr = 0
rf::enable = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_a     = 00
rf::eu_rf_wr_addr_equal_rd_addr_a = 1
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_a = 1
rf::bypass_a = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_b     = 1c
rf::eu_rf_wr_addr_equal_rd_addr_b = 0
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_b = 0
rf::bypass_b = 0
rf::eu_data_a = 2e8
rf::rd_data_a = 0000002e8
rf::rd_data_b = 00000007c
rf::rf_eu_v = 1
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 0000002e8
rf::eu_rf_wren    = 1
rf::rf_stall = 0
rf::   rf[0] = 0
rf::   rf[1] = 1
rf::   rf[2] = 2
rf::   rf[3] = 3
rf::   rf[4] = 4
rf::   rf[5] = 5
rf::   rf[6] = 6
rf::   rf[7] = 7
rf::   rf[8] = 8
rf::   rf[9] = 9
rf::   rf[a] = a
rf::   rf[b] = b
rf::   rf[c] = c
rf::   rf[d] = d
rf::   rf[e] = e
rf::   rf[f] = f
rf::   rf[10] = 10
rf::   rf[11] = 11
rf::   rf[12] = 12
rf::   rf[13] = 13
rf::   rf[14] = 14
rf::   rf[15] = 15
rf::   rf[16] = 16
rf::   rf[17] = 17
rf::   rf[18] = 18
rf::   rf[19] = 19
rf::   rf[1a] = 1a
rf::   rf[1b] = 1b
rf::   rf[1c] = 1c
rf::   rf[1d] = 1d
rf::   rf[1e] = 1e
rf::   rf[1f] = 1f
executionUnit::****************************************
executionUnit:: rf_eu_v=1
executionUnit::enable =1
executionUnit:: instReg=1100007c isInstFmtLas=1 instFmt=0
executionUnit:: rf_eu_ir = 01100007c
executionUnit:: las op = ELasSub	 las op = 1
executionUnit:: src_a = 0000002e8
executionUnit:: src_b = 00000007c
executionUnit:: eu_rf_wr_data_las = 0
executionUnit:: eu_rf_wr_data_bit = 0
executionUnit:: id->dest = 0
executionUnit:: eu_rf_wr_data = 0000002e8
executionUnit:: eu_rf_wr_addr = 00
executionUnit:: eu_rf_wren             = 1
rf::****************************************
rf::v = 1
rf::instructionReg = 1100007c
rf::reset_ = 1
rf::rd_addr_a = 00
rf::rden_a    = 1
rf::rd_addr_b = 1c
rf::rden_b    = 1
rf:0 read operation rd_addr_a = 00
rf:all read operation rd_addr_b = 1c
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 00000026c
rf::eu_rf_wren    = 1
rf::swapbit_wr_data_a = 0
rf::swapbit_wr_addr_a = 0
rf::swapbit_wr_data_b = 0
rf::swapbit_wr_addr_b = 0
rf::swapbit_wren.writ = 0
rf::eu_rf_wren 	  = 1
rf::swap_wren 		  = 0
rf::swapbit_wren 	  = 0
rf::testbit_wren 	  = 0
rf::setbit_wren 	  = 0
rf::ldimm_ab_16_wren = 0
rf::rf_mux_in_wren_a = 0
rf::rf_mux_in_wren_b = 0
rf::enable = 1
rf::operandA = 0
rf::operandB = 0
rf::im_rf_ir.read()  = 1100007c
rf::im_rf_instructionDecoder->getInstructionReg()  = 1100007c
rf:: isInstFormatOpLas = 1
rf:: isInstFormatOpBit = 0
rf:: isInstFormatOpLdIm= 0
rf:: isInstFormatOpBr  = 0
rf:: getLdImmOperand16Field= 7c
rf:: signExtend16(im_rf_instructionDecoder->getLdImmOperand16Field ()) = 7c
rf:: rf_dest_data  = 1f
rf::im_rf_ir = 1100007c
rf::eu_rf_ir = 01100007c
rf::op_imm_a = 0
rf::op_imm_b = 7c
rf:: getOperandAImm8Field  = 0
rf:: getOperandBImm8Field  = 7c
rf::signExtend8 (op_imm_a) = 0
rf::signExtend8 (op_imm_b) = 7c
rf::signExtend16(op_imm_b) = 7c
rf::rd_data_rf_a = 0
rf::rd_data_rf_b = 1c
rf::rd_data_imm_a = 0
rf::rd_data_imm_b = 7c
rf::rd_data_imm_mux_sel_a = 0
rf::rd_data_imm_mux_sel_b = 1
rf::rd_data_imm_mux_a = 0
rf::rd_data_imm_mux_b = 7c
rf::rd_data_bypass_mux_a = 26c
rf::rd_data_bypass_mux_b = 7c
rf::rf_eu_wr_addr = 0
rf::enable = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_a     = 00
rf::eu_rf_wr_addr_equal_rd_addr_a = 1
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_a = 1
rf::bypass_a = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_b     = 1c
rf::eu_rf_wr_addr_equal_rd_addr_b = 0
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_b = 0
rf::bypass_b = 0
rf::eu_data_a = 26c
rf::rd_data_a = 0000002e8
rf::rd_data_b = 00000007c
rf::rf_eu_v = 1
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 00000026c
rf::eu_rf_wren    = 1
rf::rf_stall = 0
rf::   rf[0] = 0
rf::   rf[1] = 1
rf::   rf[2] = 2
rf::   rf[3] = 3
rf::   rf[4] = 4
rf::   rf[5] = 5
rf::   rf[6] = 6
rf::   rf[7] = 7
rf::   rf[8] = 8
rf::   rf[9] = 9
rf::   rf[a] = a
rf::   rf[b] = b
rf::   rf[c] = c
rf::   rf[d] = d
rf::   rf[e] = e
rf::   rf[f] = f
rf::   rf[10] = 10
rf::   rf[11] = 11
rf::   rf[12] = 12
rf::   rf[13] = 13
rf::   rf[14] = 14
rf::   rf[15] = 15
rf::   rf[16] = 16
rf::   rf[17] = 17
rf::   rf[18] = 18
rf::   rf[19] = 19
rf::   rf[1a] = 1a
rf::   rf[1b] = 1b
rf::   rf[1c] = 1c
rf::   rf[1d] = 1d
rf::   rf[1e] = 1e
rf::   rf[1f] = 1f
   read op  buffer[63] = 1100007c im read operation  = 63 data = 1100007c
 eu_branch = 0 pcx = 64 pc_inc = 64
reset_ = 1
enable = 1
eu_branch = 0
 pc_im_v   = 1
 im_rf_v   = 1
 rf_eu_v   = 1
 eu_rf_wren= 1
pc_im_address = 63
im.data = 1100007c
npc_2 = 0007c
npc_3 = 0007c
npc_4 = 00000
pc_im_v = 1 im_RnW = 1 pc_im_address = 63  im_1 = 1100007c
im_data = 1100007c
ir_rf_3 = 01100007c
ir_eu_4 = 01100007c
 eu_branch.read() = 1
 pc_im_v   = 1
 im_rf_v   = 1
 rf_eu_v   = 1
 rf_rd_addr_a = 0
 rf_rd_addr_b = 7c
 rf_dest_addr = 0
 rf_rd_data_a = 0000002e8
 rf_rd_data_b = 00000007c
 im_rf_v   = 1
 rf_eu_v = 1
 eu_rf_wren = 1
 eu_rf_wr_data  = 00000026c
 eu_rf_wr_addr  = 00
rf::****************************************
rf::v = 1
rf::instructionReg = 1100007c
rf::reset_ = 1
rf::rd_addr_a = 00
rf::rden_a    = 1
rf::rd_addr_b = 1c
rf::rden_b    = 1
rf:0 read operation rd_addr_a = 00
rf:all read operation rd_addr_b = 1c
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 00000026c
rf::eu_rf_wren    = 1
rf::swapbit_wr_data_a = 0
rf::swapbit_wr_addr_a = 0
rf::swapbit_wr_data_b = 0
rf::swapbit_wr_addr_b = 0
rf::swapbit_wren.writ = 0
rf::eu_rf_wren 	  = 1
rf::swap_wren 		  = 0
rf::swapbit_wren 	  = 0
rf::testbit_wren 	  = 0
rf::setbit_wren 	  = 0
rf::ldimm_ab_16_wren = 0
rf::rf_mux_in_wren_a = 0
rf::rf_mux_in_wren_b = 0
rf::enable = 1
rf::operandA = 0
rf::operandB = 0
rf::im_rf_ir.read()  = 1100007c
rf::im_rf_instructionDecoder->getInstructionReg()  = 1100007c
rf:: isInstFormatOpLas = 1
rf:: isInstFormatOpBit = 0
rf:: isInstFormatOpLdIm= 0
rf:: isInstFormatOpBr  = 0
rf:: getLdImmOperand16Field= 7c
rf:: signExtend16(im_rf_instructionDecoder->getLdImmOperand16Field ()) = 7c
rf:: rf_dest_data  = 1f
rf::im_rf_ir = 1100007c
rf::eu_rf_ir = 01100007c
rf::op_imm_a = 0
rf::op_imm_b = 7c
rf:: getOperandAImm8Field  = 0
rf:: getOperandBImm8Field  = 7c
rf::signExtend8 (op_imm_a) = 0
rf::signExtend8 (op_imm_b) = 7c
rf::signExtend16(op_imm_b) = 7c
rf::rd_data_rf_a = 0
rf::rd_data_rf_b = 1c
rf::rd_data_imm_a = 0
rf::rd_data_imm_b = 7c
rf::rd_data_imm_mux_sel_a = 0
rf::rd_data_imm_mux_sel_b = 1
rf::rd_data_imm_mux_a = 0
rf::rd_data_imm_mux_b = 7c
rf::rd_data_bypass_mux_a = 26c
rf::rd_data_bypass_mux_b = 7c
rf::rf_eu_wr_addr = 0
rf::enable = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_a     = 00
rf::eu_rf_wr_addr_equal_rd_addr_a = 1
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_a = 1
rf::bypass_a = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_b     = 1c
rf::eu_rf_wr_addr_equal_rd_addr_b = 0
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_b = 0
rf::bypass_b = 0
rf::eu_data_a = 26c
rf::rd_data_a = 00000026c
rf::rd_data_b = 00000007c
rf::rf_eu_v = 1
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 00000026c
rf::eu_rf_wren    = 1
rf::rf_stall = 0
rf::   rf[0] = 0
rf::   rf[1] = 1
rf::   rf[2] = 2
rf::   rf[3] = 3
rf::   rf[4] = 4
rf::   rf[5] = 5
rf::   rf[6] = 6
rf::   rf[7] = 7
rf::   rf[8] = 8
rf::   rf[9] = 9
rf::   rf[a] = a
rf::   rf[b] = b
rf::   rf[c] = c
rf::   rf[d] = d
rf::   rf[e] = e
rf::   rf[f] = f
rf::   rf[10] = 10
rf::   rf[11] = 11
rf::   rf[12] = 12
rf::   rf[13] = 13
rf::   rf[14] = 14
rf::   rf[15] = 15
rf::   rf[16] = 16
rf::   rf[17] = 17
rf::   rf[18] = 18
rf::   rf[19] = 19
rf::   rf[1a] = 1a
rf::   rf[1b] = 1b
rf::   rf[1c] = 1c
rf::   rf[1d] = 1d
rf::   rf[1e] = 1e
rf::   rf[1f] = 1f
executionUnit::****************************************
executionUnit:: rf_eu_v=1
executionUnit::enable =1
executionUnit:: instReg=1100007c isInstFmtLas=1 instFmt=0
executionUnit:: rf_eu_ir = 01100007c
executionUnit:: las op = ELasSub	 las op = 1
executionUnit:: src_a = 00000026c
executionUnit:: src_b = 00000007c
executionUnit:: eu_rf_wr_data_las = 0
executionUnit:: eu_rf_wr_data_bit = 0
executionUnit:: id->dest = 0
executionUnit:: eu_rf_wr_data = 00000026c
executionUnit:: eu_rf_wr_addr = 00
executionUnit:: eu_rf_wren             = 1
rf::****************************************
rf::v = 1
rf::instructionReg = 1100007c
rf::reset_ = 1
rf::rd_addr_a = 00
rf::rden_a    = 1
rf::rd_addr_b = 1c
rf::rden_b    = 1
rf:0 read operation rd_addr_a = 00
rf:all read operation rd_addr_b = 1c
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 0000001f0
rf::eu_rf_wren    = 1
rf::swapbit_wr_data_a = 0
rf::swapbit_wr_addr_a = 0
rf::swapbit_wr_data_b = 0
rf::swapbit_wr_addr_b = 0
rf::swapbit_wren.writ = 0
rf::eu_rf_wren 	  = 1
rf::swap_wren 		  = 0
rf::swapbit_wren 	  = 0
rf::testbit_wren 	  = 0
rf::setbit_wren 	  = 0
rf::ldimm_ab_16_wren = 0
rf::rf_mux_in_wren_a = 0
rf::rf_mux_in_wren_b = 0
rf::enable = 1
rf::operandA = 0
rf::operandB = 0
rf::im_rf_ir.read()  = 1100007c
rf::im_rf_instructionDecoder->getInstructionReg()  = 1100007c
rf:: isInstFormatOpLas = 1
rf:: isInstFormatOpBit = 0
rf:: isInstFormatOpLdIm= 0
rf:: isInstFormatOpBr  = 0
rf:: getLdImmOperand16Field= 7c
rf:: signExtend16(im_rf_instructionDecoder->getLdImmOperand16Field ()) = 7c
rf:: rf_dest_data  = 1f
rf::im_rf_ir = 1100007c
rf::eu_rf_ir = 01100007c
rf::op_imm_a = 0
rf::op_imm_b = 7c
rf:: getOperandAImm8Field  = 0
rf:: getOperandBImm8Field  = 7c
rf::signExtend8 (op_imm_a) = 0
rf::signExtend8 (op_imm_b) = 7c
rf::signExtend16(op_imm_b) = 7c
rf::rd_data_rf_a = 0
rf::rd_data_rf_b = 1c
rf::rd_data_imm_a = 0
rf::rd_data_imm_b = 7c
rf::rd_data_imm_mux_sel_a = 0
rf::rd_data_imm_mux_sel_b = 1
rf::rd_data_imm_mux_a = 0
rf::rd_data_imm_mux_b = 7c
rf::rd_data_bypass_mux_a = 1f0
rf::rd_data_bypass_mux_b = 7c
rf::rf_eu_wr_addr = 0
rf::enable = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_a     = 00
rf::eu_rf_wr_addr_equal_rd_addr_a = 1
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_a = 1
rf::bypass_a = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_b     = 1c
rf::eu_rf_wr_addr_equal_rd_addr_b = 0
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_b = 0
rf::bypass_b = 0
rf::eu_data_a = 1f0
rf::rd_data_a = 00000026c
rf::rd_data_b = 00000007c
rf::rf_eu_v = 1
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 0000001f0
rf::eu_rf_wren    = 1
rf::rf_stall = 0
rf::   rf[0] = 0
rf::   rf[1] = 1
rf::   rf[2] = 2
rf::   rf[3] = 3
rf::   rf[4] = 4
rf::   rf[5] = 5
rf::   rf[6] = 6
rf::   rf[7] = 7
rf::   rf[8] = 8
rf::   rf[9] = 9
rf::   rf[a] = a
rf::   rf[b] = b
rf::   rf[c] = c
rf::   rf[d] = d
rf::   rf[e] = e
rf::   rf[f] = f
rf::   rf[10] = 10
rf::   rf[11] = 11
rf::   rf[12] = 12
rf::   rf[13] = 13
rf::   rf[14] = 14
rf::   rf[15] = 15
rf::   rf[16] = 16
rf::   rf[17] = 17
rf::   rf[18] = 18
rf::   rf[19] = 19
rf::   rf[1a] = 1a
rf::   rf[1b] = 1b
rf::   rf[1c] = 1c
rf::   rf[1d] = 1d
rf::   rf[1e] = 1e
rf::   rf[1f] = 1f
   read op  buffer[64] = 1100007c im read operation  = 64 data = 1100007c
 eu_branch = 0 pcx = 65 pc_inc = 65
reset_ = 1
enable = 1
eu_branch = 0
 pc_im_v   = 1
 im_rf_v   = 1
 rf_eu_v   = 1
 eu_rf_wren= 1
pc_im_address = 64
im.data = 1100007c
npc_2 = 0007c
npc_3 = 0007c
npc_4 = 00000
pc_im_v = 1 im_RnW = 1 pc_im_address = 64  im_1 = 1100007c
im_data = 1100007c
ir_rf_3 = 01100007c
ir_eu_4 = 01100007c
 eu_branch.read() = 1
 pc_im_v   = 1
 im_rf_v   = 1
 rf_eu_v   = 1
 rf_rd_addr_a = 0
 rf_rd_addr_b = 7c
 rf_dest_addr = 0
 rf_rd_data_a = 00000026c
 rf_rd_data_b = 00000007c
 im_rf_v   = 1
 rf_eu_v = 1
 eu_rf_wren = 1
 eu_rf_wr_data  = 0000001f0
 eu_rf_wr_addr  = 00
rf::****************************************
rf::v = 1
rf::instructionReg = 1100007c
rf::reset_ = 1
rf::rd_addr_a = 00
rf::rden_a    = 1
rf::rd_addr_b = 1c
rf::rden_b    = 1
rf:0 read operation rd_addr_a = 00
rf:all read operation rd_addr_b = 1c
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 0000001f0
rf::eu_rf_wren    = 1
rf::swapbit_wr_data_a = 0
rf::swapbit_wr_addr_a = 0
rf::swapbit_wr_data_b = 0
rf::swapbit_wr_addr_b = 0
rf::swapbit_wren.writ = 0
rf::eu_rf_wren 	  = 1
rf::swap_wren 		  = 0
rf::swapbit_wren 	  = 0
rf::testbit_wren 	  = 0
rf::setbit_wren 	  = 0
rf::ldimm_ab_16_wren = 0
rf::rf_mux_in_wren_a = 0
rf::rf_mux_in_wren_b = 0
rf::enable = 1
rf::operandA = 0
rf::operandB = 0
rf::im_rf_ir.read()  = 1100007c
rf::im_rf_instructionDecoder->getInstructionReg()  = 1100007c
rf:: isInstFormatOpLas = 1
rf:: isInstFormatOpBit = 0
rf:: isInstFormatOpLdIm= 0
rf:: isInstFormatOpBr  = 0
rf:: getLdImmOperand16Field= 7c
rf:: signExtend16(im_rf_instructionDecoder->getLdImmOperand16Field ()) = 7c
rf:: rf_dest_data  = 1f
rf::im_rf_ir = 1100007c
rf::eu_rf_ir = 01100007c
rf::op_imm_a = 0
rf::op_imm_b = 7c
rf:: getOperandAImm8Field  = 0
rf:: getOperandBImm8Field  = 7c
rf::signExtend8 (op_imm_a) = 0
rf::signExtend8 (op_imm_b) = 7c
rf::signExtend16(op_imm_b) = 7c
rf::rd_data_rf_a = 0
rf::rd_data_rf_b = 1c
rf::rd_data_imm_a = 0
rf::rd_data_imm_b = 7c
rf::rd_data_imm_mux_sel_a = 0
rf::rd_data_imm_mux_sel_b = 1
rf::rd_data_imm_mux_a = 0
rf::rd_data_imm_mux_b = 7c
rf::rd_data_bypass_mux_a = 1f0
rf::rd_data_bypass_mux_b = 7c
rf::rf_eu_wr_addr = 0
rf::enable = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_a     = 00
rf::eu_rf_wr_addr_equal_rd_addr_a = 1
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_a = 1
rf::bypass_a = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_b     = 1c
rf::eu_rf_wr_addr_equal_rd_addr_b = 0
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_b = 0
rf::bypass_b = 0
rf::eu_data_a = 1f0
rf::rd_data_a = 0000001f0
rf::rd_data_b = 00000007c
rf::rf_eu_v = 1
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 0000001f0
rf::eu_rf_wren    = 1
rf::rf_stall = 0
rf::   rf[0] = 0
rf::   rf[1] = 1
rf::   rf[2] = 2
rf::   rf[3] = 3
rf::   rf[4] = 4
rf::   rf[5] = 5
rf::   rf[6] = 6
rf::   rf[7] = 7
rf::   rf[8] = 8
rf::   rf[9] = 9
rf::   rf[a] = a
rf::   rf[b] = b
rf::   rf[c] = c
rf::   rf[d] = d
rf::   rf[e] = e
rf::   rf[f] = f
rf::   rf[10] = 10
rf::   rf[11] = 11
rf::   rf[12] = 12
rf::   rf[13] = 13
rf::   rf[14] = 14
rf::   rf[15] = 15
rf::   rf[16] = 16
rf::   rf[17] = 17
rf::   rf[18] = 18
rf::   rf[19] = 19
rf::   rf[1a] = 1a
rf::   rf[1b] = 1b
rf::   rf[1c] = 1c
rf::   rf[1d] = 1d
rf::   rf[1e] = 1e
rf::   rf[1f] = 1f
executionUnit::****************************************
executionUnit:: rf_eu_v=1
executionUnit::enable =1
executionUnit:: instReg=1100007c isInstFmtLas=1 instFmt=0
executionUnit:: rf_eu_ir = 01100007c
executionUnit:: las op = ELasSub	 las op = 1
executionUnit:: src_a = 0000001f0
executionUnit:: src_b = 00000007c
executionUnit:: eu_rf_wr_data_las = 0
executionUnit:: eu_rf_wr_data_bit = 0
executionUnit:: id->dest = 0
executionUnit:: eu_rf_wr_data = 0000001f0
executionUnit:: eu_rf_wr_addr = 00
executionUnit:: eu_rf_wren             = 1
rf::****************************************
rf::v = 1
rf::instructionReg = 1100007c
rf::reset_ = 1
rf::rd_addr_a = 00
rf::rden_a    = 1
rf::rd_addr_b = 1c
rf::rden_b    = 1
rf:0 read operation rd_addr_a = 00
rf:all read operation rd_addr_b = 1c
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 000000174
rf::eu_rf_wren    = 1
rf::swapbit_wr_data_a = 0
rf::swapbit_wr_addr_a = 0
rf::swapbit_wr_data_b = 0
rf::swapbit_wr_addr_b = 0
rf::swapbit_wren.writ = 0
rf::eu_rf_wren 	  = 1
rf::swap_wren 		  = 0
rf::swapbit_wren 	  = 0
rf::testbit_wren 	  = 0
rf::setbit_wren 	  = 0
rf::ldimm_ab_16_wren = 0
rf::rf_mux_in_wren_a = 0
rf::rf_mux_in_wren_b = 0
rf::enable = 1
rf::operandA = 0
rf::operandB = 0
rf::im_rf_ir.read()  = 1100007c
rf::im_rf_instructionDecoder->getInstructionReg()  = 1100007c
rf:: isInstFormatOpLas = 1
rf:: isInstFormatOpBit = 0
rf:: isInstFormatOpLdIm= 0
rf:: isInstFormatOpBr  = 0
rf:: getLdImmOperand16Field= 7c
rf:: signExtend16(im_rf_instructionDecoder->getLdImmOperand16Field ()) = 7c
rf:: rf_dest_data  = 1f
rf::im_rf_ir = 1100007c
rf::eu_rf_ir = 01100007c
rf::op_imm_a = 0
rf::op_imm_b = 7c
rf:: getOperandAImm8Field  = 0
rf:: getOperandBImm8Field  = 7c
rf::signExtend8 (op_imm_a) = 0
rf::signExtend8 (op_imm_b) = 7c
rf::signExtend16(op_imm_b) = 7c
rf::rd_data_rf_a = 0
rf::rd_data_rf_b = 1c
rf::rd_data_imm_a = 0
rf::rd_data_imm_b = 7c
rf::rd_data_imm_mux_sel_a = 0
rf::rd_data_imm_mux_sel_b = 1
rf::rd_data_imm_mux_a = 0
rf::rd_data_imm_mux_b = 7c
rf::rd_data_bypass_mux_a = 174
rf::rd_data_bypass_mux_b = 7c
rf::rf_eu_wr_addr = 0
rf::enable = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_a     = 00
rf::eu_rf_wr_addr_equal_rd_addr_a = 1
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_a = 1
rf::bypass_a = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_b     = 1c
rf::eu_rf_wr_addr_equal_rd_addr_b = 0
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_b = 0
rf::bypass_b = 0
rf::eu_data_a = 174
rf::rd_data_a = 0000001f0
rf::rd_data_b = 00000007c
rf::rf_eu_v = 1
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 000000174
rf::eu_rf_wren    = 1
rf::rf_stall = 0
rf::   rf[0] = 0
rf::   rf[1] = 1
rf::   rf[2] = 2
rf::   rf[3] = 3
rf::   rf[4] = 4
rf::   rf[5] = 5
rf::   rf[6] = 6
rf::   rf[7] = 7
rf::   rf[8] = 8
rf::   rf[9] = 9
rf::   rf[a] = a
rf::   rf[b] = b
rf::   rf[c] = c
rf::   rf[d] = d
rf::   rf[e] = e
rf::   rf[f] = f
rf::   rf[10] = 10
rf::   rf[11] = 11
rf::   rf[12] = 12
rf::   rf[13] = 13
rf::   rf[14] = 14
rf::   rf[15] = 15
rf::   rf[16] = 16
rf::   rf[17] = 17
rf::   rf[18] = 18
rf::   rf[19] = 19
rf::   rf[1a] = 1a
rf::   rf[1b] = 1b
rf::   rf[1c] = 1c
rf::   rf[1d] = 1d
rf::   rf[1e] = 1e
rf::   rf[1f] = 1f
   read op  buffer[65] = 1100007c im read operation  = 65 data = 1100007c
 eu_branch = 0 pcx = 66 pc_inc = 66
reset_ = 1
enable = 1
eu_branch = 0
 pc_im_v   = 1
 im_rf_v   = 1
 rf_eu_v   = 1
 eu_rf_wren= 1
pc_im_address = 65
im.data = 1100007c
npc_2 = 0007c
npc_3 = 0007c
npc_4 = 00000
pc_im_v = 1 im_RnW = 1 pc_im_address = 65  im_1 = 1100007c
im_data = 1100007c
ir_rf_3 = 01100007c
ir_eu_4 = 01100007c
 eu_branch.read() = 1
 pc_im_v   = 1
 im_rf_v   = 1
 rf_eu_v   = 1
 rf_rd_addr_a = 0
 rf_rd_addr_b = 7c
 rf_dest_addr = 0
 rf_rd_data_a = 0000001f0
 rf_rd_data_b = 00000007c
 im_rf_v   = 1
 rf_eu_v = 1
 eu_rf_wren = 1
 eu_rf_wr_data  = 000000174
 eu_rf_wr_addr  = 00
rf::****************************************
rf::v = 1
rf::instructionReg = 1100007c
rf::reset_ = 1
rf::rd_addr_a = 00
rf::rden_a    = 1
rf::rd_addr_b = 1c
rf::rden_b    = 1
rf:0 read operation rd_addr_a = 00
rf:all read operation rd_addr_b = 1c
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 000000174
rf::eu_rf_wren    = 1
rf::swapbit_wr_data_a = 0
rf::swapbit_wr_addr_a = 0
rf::swapbit_wr_data_b = 0
rf::swapbit_wr_addr_b = 0
rf::swapbit_wren.writ = 0
rf::eu_rf_wren 	  = 1
rf::swap_wren 		  = 0
rf::swapbit_wren 	  = 0
rf::testbit_wren 	  = 0
rf::setbit_wren 	  = 0
rf::ldimm_ab_16_wren = 0
rf::rf_mux_in_wren_a = 0
rf::rf_mux_in_wren_b = 0
rf::enable = 1
rf::operandA = 0
rf::operandB = 0
rf::im_rf_ir.read()  = 1100007c
rf::im_rf_instructionDecoder->getInstructionReg()  = 1100007c
rf:: isInstFormatOpLas = 1
rf:: isInstFormatOpBit = 0
rf:: isInstFormatOpLdIm= 0
rf:: isInstFormatOpBr  = 0
rf:: getLdImmOperand16Field= 7c
rf:: signExtend16(im_rf_instructionDecoder->getLdImmOperand16Field ()) = 7c
rf:: rf_dest_data  = 1f
rf::im_rf_ir = 1100007c
rf::eu_rf_ir = 01100007c
rf::op_imm_a = 0
rf::op_imm_b = 7c
rf:: getOperandAImm8Field  = 0
rf:: getOperandBImm8Field  = 7c
rf::signExtend8 (op_imm_a) = 0
rf::signExtend8 (op_imm_b) = 7c
rf::signExtend16(op_imm_b) = 7c
rf::rd_data_rf_a = 0
rf::rd_data_rf_b = 1c
rf::rd_data_imm_a = 0
rf::rd_data_imm_b = 7c
rf::rd_data_imm_mux_sel_a = 0
rf::rd_data_imm_mux_sel_b = 1
rf::rd_data_imm_mux_a = 0
rf::rd_data_imm_mux_b = 7c
rf::rd_data_bypass_mux_a = 174
rf::rd_data_bypass_mux_b = 7c
rf::rf_eu_wr_addr = 0
rf::enable = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_a     = 00
rf::eu_rf_wr_addr_equal_rd_addr_a = 1
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_a = 1
rf::bypass_a = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_b     = 1c
rf::eu_rf_wr_addr_equal_rd_addr_b = 0
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_b = 0
rf::bypass_b = 0
rf::eu_data_a = 174
rf::rd_data_a = 000000174
rf::rd_data_b = 00000007c
rf::rf_eu_v = 1
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 000000174
rf::eu_rf_wren    = 1
rf::rf_stall = 0
rf::   rf[0] = 0
rf::   rf[1] = 1
rf::   rf[2] = 2
rf::   rf[3] = 3
rf::   rf[4] = 4
rf::   rf[5] = 5
rf::   rf[6] = 6
rf::   rf[7] = 7
rf::   rf[8] = 8
rf::   rf[9] = 9
rf::   rf[a] = a
rf::   rf[b] = b
rf::   rf[c] = c
rf::   rf[d] = d
rf::   rf[e] = e
rf::   rf[f] = f
rf::   rf[10] = 10
rf::   rf[11] = 11
rf::   rf[12] = 12
rf::   rf[13] = 13
rf::   rf[14] = 14
rf::   rf[15] = 15
rf::   rf[16] = 16
rf::   rf[17] = 17
rf::   rf[18] = 18
rf::   rf[19] = 19
rf::   rf[1a] = 1a
rf::   rf[1b] = 1b
rf::   rf[1c] = 1c
rf::   rf[1d] = 1d
rf::   rf[1e] = 1e
rf::   rf[1f] = 1f
executionUnit::****************************************
executionUnit:: rf_eu_v=1
executionUnit::enable =1
executionUnit:: instReg=1100007c isInstFmtLas=1 instFmt=0
executionUnit:: rf_eu_ir = 01100007c
executionUnit:: las op = ELasSub	 las op = 1
executionUnit:: src_a = 000000174
executionUnit:: src_b = 00000007c
executionUnit:: eu_rf_wr_data_las = 0
executionUnit:: eu_rf_wr_data_bit = 0
executionUnit:: id->dest = 0
executionUnit:: eu_rf_wr_data = 000000174
executionUnit:: eu_rf_wr_addr = 00
executionUnit:: eu_rf_wren             = 1
rf::****************************************
rf::v = 1
rf::instructionReg = 1100007c
rf::reset_ = 1
rf::rd_addr_a = 00
rf::rden_a    = 1
rf::rd_addr_b = 1c
rf::rden_b    = 1
rf:0 read operation rd_addr_a = 00
rf:all read operation rd_addr_b = 1c
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 0000000f8
rf::eu_rf_wren    = 1
rf::swapbit_wr_data_a = 0
rf::swapbit_wr_addr_a = 0
rf::swapbit_wr_data_b = 0
rf::swapbit_wr_addr_b = 0
rf::swapbit_wren.writ = 0
rf::eu_rf_wren 	  = 1
rf::swap_wren 		  = 0
rf::swapbit_wren 	  = 0
rf::testbit_wren 	  = 0
rf::setbit_wren 	  = 0
rf::ldimm_ab_16_wren = 0
rf::rf_mux_in_wren_a = 0
rf::rf_mux_in_wren_b = 0
rf::enable = 1
rf::operandA = 0
rf::operandB = 0
rf::im_rf_ir.read()  = 1100007c
rf::im_rf_instructionDecoder->getInstructionReg()  = 1100007c
rf:: isInstFormatOpLas = 1
rf:: isInstFormatOpBit = 0
rf:: isInstFormatOpLdIm= 0
rf:: isInstFormatOpBr  = 0
rf:: getLdImmOperand16Field= 7c
rf:: signExtend16(im_rf_instructionDecoder->getLdImmOperand16Field ()) = 7c
rf:: rf_dest_data  = 1f
rf::im_rf_ir = 1100007c
rf::eu_rf_ir = 01100007c
rf::op_imm_a = 0
rf::op_imm_b = 7c
rf:: getOperandAImm8Field  = 0
rf:: getOperandBImm8Field  = 7c
rf::signExtend8 (op_imm_a) = 0
rf::signExtend8 (op_imm_b) = 7c
rf::signExtend16(op_imm_b) = 7c
rf::rd_data_rf_a = 0
rf::rd_data_rf_b = 1c
rf::rd_data_imm_a = 0
rf::rd_data_imm_b = 7c
rf::rd_data_imm_mux_sel_a = 0
rf::rd_data_imm_mux_sel_b = 1
rf::rd_data_imm_mux_a = 0
rf::rd_data_imm_mux_b = 7c
rf::rd_data_bypass_mux_a = f8
rf::rd_data_bypass_mux_b = 7c
rf::rf_eu_wr_addr = 0
rf::enable = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_a     = 00
rf::eu_rf_wr_addr_equal_rd_addr_a = 1
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_a = 1
rf::bypass_a = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_b     = 1c
rf::eu_rf_wr_addr_equal_rd_addr_b = 0
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_b = 0
rf::bypass_b = 0
rf::eu_data_a = f8
rf::rd_data_a = 000000174
rf::rd_data_b = 00000007c
rf::rf_eu_v = 1
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 0000000f8
rf::eu_rf_wren    = 1
rf::rf_stall = 0
rf::   rf[0] = 0
rf::   rf[1] = 1
rf::   rf[2] = 2
rf::   rf[3] = 3
rf::   rf[4] = 4
rf::   rf[5] = 5
rf::   rf[6] = 6
rf::   rf[7] = 7
rf::   rf[8] = 8
rf::   rf[9] = 9
rf::   rf[a] = a
rf::   rf[b] = b
rf::   rf[c] = c
rf::   rf[d] = d
rf::   rf[e] = e
rf::   rf[f] = f
rf::   rf[10] = 10
rf::   rf[11] = 11
rf::   rf[12] = 12
rf::   rf[13] = 13
rf::   rf[14] = 14
rf::   rf[15] = 15
rf::   rf[16] = 16
rf::   rf[17] = 17
rf::   rf[18] = 18
rf::   rf[19] = 19
rf::   rf[1a] = 1a
rf::   rf[1b] = 1b
rf::   rf[1c] = 1c
rf::   rf[1d] = 1d
rf::   rf[1e] = 1e
rf::   rf[1f] = 1f
   read op  buffer[66] = 1100007c im read operation  = 66 data = 1100007c
 eu_branch = 0 pcx = 67 pc_inc = 67
reset_ = 1
enable = 1
eu_branch = 0
 pc_im_v   = 1
 im_rf_v   = 1
 rf_eu_v   = 1
 eu_rf_wren= 1
pc_im_address = 66
im.data = 1100007c
npc_2 = 0007c
npc_3 = 0007c
npc_4 = 00000
pc_im_v = 1 im_RnW = 1 pc_im_address = 66  im_1 = 1100007c
im_data = 1100007c
ir_rf_3 = 01100007c
ir_eu_4 = 01100007c
 eu_branch.read() = 1
 pc_im_v   = 1
 im_rf_v   = 1
 rf_eu_v   = 1
 rf_rd_addr_a = 0
 rf_rd_addr_b = 7c
 rf_dest_addr = 0
 rf_rd_data_a = 000000174
 rf_rd_data_b = 00000007c
 im_rf_v   = 1
 rf_eu_v = 1
 eu_rf_wren = 1
 eu_rf_wr_data  = 0000000f8
 eu_rf_wr_addr  = 00
rf::****************************************
rf::v = 1
rf::instructionReg = 1100007c
rf::reset_ = 1
rf::rd_addr_a = 00
rf::rden_a    = 1
rf::rd_addr_b = 1c
rf::rden_b    = 1
rf:0 read operation rd_addr_a = 00
rf:all read operation rd_addr_b = 1c
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 0000000f8
rf::eu_rf_wren    = 1
rf::swapbit_wr_data_a = 0
rf::swapbit_wr_addr_a = 0
rf::swapbit_wr_data_b = 0
rf::swapbit_wr_addr_b = 0
rf::swapbit_wren.writ = 0
rf::eu_rf_wren 	  = 1
rf::swap_wren 		  = 0
rf::swapbit_wren 	  = 0
rf::testbit_wren 	  = 0
rf::setbit_wren 	  = 0
rf::ldimm_ab_16_wren = 0
rf::rf_mux_in_wren_a = 0
rf::rf_mux_in_wren_b = 0
rf::enable = 1
rf::operandA = 0
rf::operandB = 0
rf::im_rf_ir.read()  = 1100007c
rf::im_rf_instructionDecoder->getInstructionReg()  = 1100007c
rf:: isInstFormatOpLas = 1
rf:: isInstFormatOpBit = 0
rf:: isInstFormatOpLdIm= 0
rf:: isInstFormatOpBr  = 0
rf:: getLdImmOperand16Field= 7c
rf:: signExtend16(im_rf_instructionDecoder->getLdImmOperand16Field ()) = 7c
rf:: rf_dest_data  = 1f
rf::im_rf_ir = 1100007c
rf::eu_rf_ir = 01100007c
rf::op_imm_a = 0
rf::op_imm_b = 7c
rf:: getOperandAImm8Field  = 0
rf:: getOperandBImm8Field  = 7c
rf::signExtend8 (op_imm_a) = 0
rf::signExtend8 (op_imm_b) = 7c
rf::signExtend16(op_imm_b) = 7c
rf::rd_data_rf_a = 0
rf::rd_data_rf_b = 1c
rf::rd_data_imm_a = 0
rf::rd_data_imm_b = 7c
rf::rd_data_imm_mux_sel_a = 0
rf::rd_data_imm_mux_sel_b = 1
rf::rd_data_imm_mux_a = 0
rf::rd_data_imm_mux_b = 7c
rf::rd_data_bypass_mux_a = f8
rf::rd_data_bypass_mux_b = 7c
rf::rf_eu_wr_addr = 0
rf::enable = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_a     = 00
rf::eu_rf_wr_addr_equal_rd_addr_a = 1
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_a = 1
rf::bypass_a = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_b     = 1c
rf::eu_rf_wr_addr_equal_rd_addr_b = 0
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_b = 0
rf::bypass_b = 0
rf::eu_data_a = f8
rf::rd_data_a = 0000000f8
rf::rd_data_b = 00000007c
rf::rf_eu_v = 1
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 0000000f8
rf::eu_rf_wren    = 1
rf::rf_stall = 0
rf::   rf[0] = 0
rf::   rf[1] = 1
rf::   rf[2] = 2
rf::   rf[3] = 3
rf::   rf[4] = 4
rf::   rf[5] = 5
rf::   rf[6] = 6
rf::   rf[7] = 7
rf::   rf[8] = 8
rf::   rf[9] = 9
rf::   rf[a] = a
rf::   rf[b] = b
rf::   rf[c] = c
rf::   rf[d] = d
rf::   rf[e] = e
rf::   rf[f] = f
rf::   rf[10] = 10
rf::   rf[11] = 11
rf::   rf[12] = 12
rf::   rf[13] = 13
rf::   rf[14] = 14
rf::   rf[15] = 15
rf::   rf[16] = 16
rf::   rf[17] = 17
rf::   rf[18] = 18
rf::   rf[19] = 19
rf::   rf[1a] = 1a
rf::   rf[1b] = 1b
rf::   rf[1c] = 1c
rf::   rf[1d] = 1d
rf::   rf[1e] = 1e
rf::   rf[1f] = 1f
executionUnit::****************************************
executionUnit:: rf_eu_v=1
executionUnit::enable =1
executionUnit:: instReg=1100007c isInstFmtLas=1 instFmt=0
executionUnit:: rf_eu_ir = 01100007c
executionUnit:: las op = ELasSub	 las op = 1
executionUnit:: src_a = 0000000f8
executionUnit:: src_b = 00000007c
executionUnit:: eu_rf_wr_data_las = 0
executionUnit:: eu_rf_wr_data_bit = 0
executionUnit:: id->dest = 0
executionUnit:: eu_rf_wr_data = 0000000f8
executionUnit:: eu_rf_wr_addr = 00
executionUnit:: eu_rf_wren             = 1
rf::****************************************
rf::v = 1
rf::instructionReg = 1100007c
rf::reset_ = 1
rf::rd_addr_a = 00
rf::rden_a    = 1
rf::rd_addr_b = 1c
rf::rden_b    = 1
rf:0 read operation rd_addr_a = 00
rf:all read operation rd_addr_b = 1c
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 00000007c
rf::eu_rf_wren    = 1
rf::swapbit_wr_data_a = 0
rf::swapbit_wr_addr_a = 0
rf::swapbit_wr_data_b = 0
rf::swapbit_wr_addr_b = 0
rf::swapbit_wren.writ = 0
rf::eu_rf_wren 	  = 1
rf::swap_wren 		  = 0
rf::swapbit_wren 	  = 0
rf::testbit_wren 	  = 0
rf::setbit_wren 	  = 0
rf::ldimm_ab_16_wren = 0
rf::rf_mux_in_wren_a = 0
rf::rf_mux_in_wren_b = 0
rf::enable = 1
rf::operandA = 0
rf::operandB = 0
rf::im_rf_ir.read()  = 1100007c
rf::im_rf_instructionDecoder->getInstructionReg()  = 1100007c
rf:: isInstFormatOpLas = 1
rf:: isInstFormatOpBit = 0
rf:: isInstFormatOpLdIm= 0
rf:: isInstFormatOpBr  = 0
rf:: getLdImmOperand16Field= 7c
rf:: signExtend16(im_rf_instructionDecoder->getLdImmOperand16Field ()) = 7c
rf:: rf_dest_data  = 1f
rf::im_rf_ir = 1100007c
rf::eu_rf_ir = 01100007c
rf::op_imm_a = 0
rf::op_imm_b = 7c
rf:: getOperandAImm8Field  = 0
rf:: getOperandBImm8Field  = 7c
rf::signExtend8 (op_imm_a) = 0
rf::signExtend8 (op_imm_b) = 7c
rf::signExtend16(op_imm_b) = 7c
rf::rd_data_rf_a = 0
rf::rd_data_rf_b = 1c
rf::rd_data_imm_a = 0
rf::rd_data_imm_b = 7c
rf::rd_data_imm_mux_sel_a = 0
rf::rd_data_imm_mux_sel_b = 1
rf::rd_data_imm_mux_a = 0
rf::rd_data_imm_mux_b = 7c
rf::rd_data_bypass_mux_a = 7c
rf::rd_data_bypass_mux_b = 7c
rf::rf_eu_wr_addr = 0
rf::enable = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_a     = 00
rf::eu_rf_wr_addr_equal_rd_addr_a = 1
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_a = 1
rf::bypass_a = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_b     = 1c
rf::eu_rf_wr_addr_equal_rd_addr_b = 0
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_b = 0
rf::bypass_b = 0
rf::eu_data_a = 7c
rf::rd_data_a = 0000000f8
rf::rd_data_b = 00000007c
rf::rf_eu_v = 1
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 00000007c
rf::eu_rf_wren    = 1
rf::rf_stall = 0
rf::   rf[0] = 0
rf::   rf[1] = 1
rf::   rf[2] = 2
rf::   rf[3] = 3
rf::   rf[4] = 4
rf::   rf[5] = 5
rf::   rf[6] = 6
rf::   rf[7] = 7
rf::   rf[8] = 8
rf::   rf[9] = 9
rf::   rf[a] = a
rf::   rf[b] = b
rf::   rf[c] = c
rf::   rf[d] = d
rf::   rf[e] = e
rf::   rf[f] = f
rf::   rf[10] = 10
rf::   rf[11] = 11
rf::   rf[12] = 12
rf::   rf[13] = 13
rf::   rf[14] = 14
rf::   rf[15] = 15
rf::   rf[16] = 16
rf::   rf[17] = 17
rf::   rf[18] = 18
rf::   rf[19] = 19
rf::   rf[1a] = 1a
rf::   rf[1b] = 1b
rf::   rf[1c] = 1c
rf::   rf[1d] = 1d
rf::   rf[1e] = 1e
rf::   rf[1f] = 1f
   read op  buffer[67] = 8001000d im read operation  = 67 data = 1100007c
 eu_branch = 0 pcx = 68 pc_inc = 68
reset_ = 1
enable = 1
eu_branch = 0
 pc_im_v   = 1
 im_rf_v   = 1
 rf_eu_v   = 1
 eu_rf_wren= 1
pc_im_address = 67
im.data = 1100007c
npc_2 = 0007c
npc_3 = 0007c
npc_4 = 00000
pc_im_v = 1 im_RnW = 1 pc_im_address = 67  im_1 = 1100007c
im_data = 1100007c
ir_rf_3 = 01100007c
ir_eu_4 = 01100007c
 eu_branch.read() = 1
 pc_im_v   = 1
 im_rf_v   = 1
 rf_eu_v   = 1
 rf_rd_addr_a = 0
 rf_rd_addr_b = 7c
 rf_dest_addr = 0
 rf_rd_data_a = 0000000f8
 rf_rd_data_b = 00000007c
 im_rf_v   = 1
 rf_eu_v = 1
 eu_rf_wren = 1
 eu_rf_wr_data  = 00000007c
 eu_rf_wr_addr  = 00
rf::****************************************
rf::v = 1
rf::instructionReg = 8001000d
rf::reset_ = 1
rf::rd_addr_a = 00
rf::rden_a    = 1
rf::rd_addr_b = 0d
rf::rden_b    = 1
rf:0 read operation rd_addr_a = 00
rf:all read operation rd_addr_b = 0d
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 00000007c
rf::eu_rf_wren    = 1
rf::swapbit_wr_data_a = 0
rf::swapbit_wr_addr_a = 0
rf::swapbit_wr_data_b = 0
rf::swapbit_wr_addr_b = 0
rf::swapbit_wren.writ = 0
rf::eu_rf_wren 	  = 1
rf::swap_wren 		  = 0
rf::swapbit_wren 	  = 0
rf::testbit_wren 	  = 0
rf::setbit_wren 	  = 0
rf::ldimm_ab_16_wren = 0
rf::rf_mux_in_wren_a = 0
rf::rf_mux_in_wren_b = 0
rf::enable = 1
rf::operandA = 0
rf::operandB = 0
rf::Info im_rf_instructionDecoder->isInstFormatOpLdIm ()
rf::Info: ELoadLow before rf_dest_data =  1f ldimm field = d ir =8001000d
rf::Info: after rf_dest_data =  d ldimm field = d ir =8001000d
rf::ldimm high write operation ldimm_ab_16_wr_addr = 1 ldimm_ab_16_wr_data = d
rf::im_rf_ir.read()  = 8001000d
rf::im_rf_instructionDecoder->getInstructionReg()  = 8001000d
rf:: isInstFormatOpLas = 0
rf:: isInstFormatOpBit = 0
rf:: isInstFormatOpLdIm= 1
rf:: isInstFormatOpBr  = 0
rf:: getLdImmOperand16Field= d
rf:: signExtend16(im_rf_instructionDecoder->getLdImmOperand16Field ()) = d
rf:: rf_dest_data  = d
rf::im_rf_ir = 8001000d
rf::eu_rf_ir = 01100007c
rf::op_imm_a = 0
rf::op_imm_b = d
rf:: getOperandAImm8Field  = 0
rf:: getOperandBImm8Field  = d
rf::signExtend8 (op_imm_a) = 0
rf::signExtend8 (op_imm_b) = d
rf::signExtend16(op_imm_b) = d
rf::rd_data_rf_a = 0
rf::rd_data_rf_b = d
rf::rd_data_imm_a = 0
rf::rd_data_imm_b = d
rf::rd_data_imm_mux_sel_a = 0
rf::rd_data_imm_mux_sel_b = 0
rf::rd_data_imm_mux_a = 0
rf::rd_data_imm_mux_b = d
rf::rd_data_bypass_mux_a = 7c
rf::rd_data_bypass_mux_b = d
rf::rf_eu_wr_addr = 1
rf::enable = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_a     = 00
rf::eu_rf_wr_addr_equal_rd_addr_a = 1
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_a = 1
rf::bypass_a = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_b     = 0d
rf::eu_rf_wr_addr_equal_rd_addr_b = 0
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_b = 0
rf::bypass_b = 0
rf::eu_data_a = 7c
rf::rd_data_a = 00000007c
rf::rd_data_b = 00000007c
rf::rf_eu_v = 1
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 00000007c
rf::eu_rf_wren    = 1
rf::rf_stall = 0
rf::   rf[0] = 0
rf::   rf[1] = 1
rf::   rf[2] = 2
rf::   rf[3] = 3
rf::   rf[4] = 4
rf::   rf[5] = 5
rf::   rf[6] = 6
rf::   rf[7] = 7
rf::   rf[8] = 8
rf::   rf[9] = 9
rf::   rf[a] = a
rf::   rf[b] = b
rf::   rf[c] = c
rf::   rf[d] = d
rf::   rf[e] = e
rf::   rf[f] = f
rf::   rf[10] = 10
rf::   rf[11] = 11
rf::   rf[12] = 12
rf::   rf[13] = 13
rf::   rf[14] = 14
rf::   rf[15] = 15
rf::   rf[16] = 16
rf::   rf[17] = 17
rf::   rf[18] = 18
rf::   rf[19] = 19
rf::   rf[1a] = 1a
rf::   rf[1b] = 1b
rf::   rf[1c] = 1c
rf::   rf[1d] = 1d
rf::   rf[1e] = 1e
rf::   rf[1f] = 1f
executionUnit::****************************************
executionUnit:: rf_eu_v=1
executionUnit::enable =1
executionUnit:: instReg=1100007c isInstFmtLas=1 instFmt=0
executionUnit:: rf_eu_ir = 01100007c
executionUnit:: las op = ELasSub	 las op = 1
executionUnit:: src_a = 00000007c
executionUnit:: src_b = 00000007c
executionUnit:: eu_rf_wr_data_las = 0
executionUnit:: eu_rf_wr_data_bit = 0
executionUnit:: id->dest = 0
executionUnit:: eu_rf_wr_data = 00000007c
executionUnit:: eu_rf_wr_addr = 00
executionUnit:: eu_rf_wren             = 1
rf::****************************************
rf::v = 1
rf::instructionReg = 8001000d
rf::reset_ = 1
rf::rd_addr_a = 00
rf::rden_a    = 1
rf::rd_addr_b = 0d
rf::rden_b    = 1
rf::im_rf_ir.read()  = 8001000d
rf::im_rf_instructionDecoder->getInstructionReg()  = 8001000d
rf:: isInstFormatOpLas = 0
rf:: isInstFormatOpBit = 0
rf:: isInstFormatOpLdIm= 1
rf:: isInstFormatOpBr  = 0
rf:: getLdImmOperand16Field= d
rf:: signExtend16(im_rf_instructionDecoder->getLdImmOperand16Field ()) = d
rf:: rf_dest_data  = d
rf::im_rf_ir = 8001000d
rf::eu_rf_ir = 01100007c
rf::op_imm_a = 0
rf::op_imm_b = d
rf:: getOperandAImm8Field  = 0
rf:: getOperandBImm8Field  = d
rf::signExtend8 (op_imm_a) = 0
rf::signExtend8 (op_imm_b) = d
rf::signExtend16(op_imm_b) = d
rf::rd_data_rf_a = 0
rf::rd_data_rf_b = d
rf::rd_data_imm_a = 0
rf::rd_data_imm_b = d
rf::rd_data_imm_mux_sel_a = 0
rf::rd_data_imm_mux_sel_b = 0
rf::rd_data_imm_mux_a = 0
rf::rd_data_imm_mux_b = d
rf::rd_data_bypass_mux_a = 7c
rf::rd_data_bypass_mux_b = d
rf::rf_eu_wr_addr = 1
rf::enable = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_a     = 00
rf::eu_rf_wr_addr_equal_rd_addr_a = 1
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_a = 1
rf::bypass_a = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_b     = 0d
rf::eu_rf_wr_addr_equal_rd_addr_b = 0
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_b = 0
rf::bypass_b = 0
rf::eu_data_a = 7c
rf::rd_data_a = 00000007c
rf::rd_data_b = 00000007c
rf::rf_eu_v = 1
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 000000000
rf::eu_rf_wren    = 1
rf::rf_stall = 1
rf::   rf[0] = 0
rf::   rf[1] = 1
rf::   rf[2] = 2
rf::   rf[3] = 3
rf::   rf[4] = 4
rf::   rf[5] = 5
rf::   rf[6] = 6
rf::   rf[7] = 7
rf::   rf[8] = 8
rf::   rf[9] = 9
rf::   rf[a] = a
rf::   rf[b] = b
rf::   rf[c] = c
rf::   rf[d] = d
rf::   rf[e] = e
rf::   rf[f] = f
rf::   rf[10] = 10
rf::   rf[11] = 11
rf::   rf[12] = 12
rf::   rf[13] = 13
rf::   rf[14] = 14
rf::   rf[15] = 15
rf::   rf[16] = 16
rf::   rf[17] = 17
rf::   rf[18] = 18
rf::   rf[19] = 19
rf::   rf[1a] = 1a
rf::   rf[1b] = 1b
rf::   rf[1c] = 1c
rf::   rf[1d] = 1d
rf::   rf[1e] = 1e
rf::   rf[1f] = 1f
reset_ = 1
enable = 1
eu_branch = 0
 pc_im_v   = 1
 im_rf_v   = 1
 rf_eu_v   = 1
 eu_rf_wren= 1
pc_im_address = 68
im.data = 8001000d
npc_2 = 0007c
npc_3 = 0007c
npc_4 = 00000
pc_im_v = 1 im_RnW = 1 pc_im_address = 68  im_1 = 8001000d
im_data = 8001000d
ir_rf_3 = 01100007c
ir_eu_4 = 01100007c
 eu_branch.read() = 1
 pc_im_v   = 1
 im_rf_v   = 1
 rf_eu_v   = 1
 rf_rd_addr_a = 0
 rf_rd_addr_b = d
 rf_dest_addr = 1
 rf_rd_data_a = 00000007c
 rf_rd_data_b = 00000007c
 im_rf_v   = 1
 rf_eu_v = 1
 eu_rf_wren = 1
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
rf::****************************************
rf::v = 1
rf::instructionReg = 8001000d
rf::reset_ = 1
rf::rd_addr_a = 00
rf::rden_a    = 1
rf::rd_addr_b = 0d
rf::rden_b    = 1
rf::im_rf_ir.read()  = 8001000d
rf::im_rf_instructionDecoder->getInstructionReg()  = 8001000d
rf:: isInstFormatOpLas = 0
rf:: isInstFormatOpBit = 0
rf:: isInstFormatOpLdIm= 1
rf:: isInstFormatOpBr  = 0
rf:: getLdImmOperand16Field= d
rf:: signExtend16(im_rf_instructionDecoder->getLdImmOperand16Field ()) = d
rf:: rf_dest_data  = d
rf::im_rf_ir = 8001000d
rf::eu_rf_ir = 01100007c
rf::op_imm_a = 0
rf::op_imm_b = d
rf:: getOperandAImm8Field  = 0
rf:: getOperandBImm8Field  = d
rf::signExtend8 (op_imm_a) = 0
rf::signExtend8 (op_imm_b) = d
rf::signExtend16(op_imm_b) = d
rf::rd_data_rf_a = 0
rf::rd_data_rf_b = d
rf::rd_data_imm_a = 0
rf::rd_data_imm_b = d
rf::rd_data_imm_mux_sel_a = 0
rf::rd_data_imm_mux_sel_b = 0
rf::rd_data_imm_mux_a = 0
rf::rd_data_imm_mux_b = d
rf::rd_data_bypass_mux_a = 7c
rf::rd_data_bypass_mux_b = d
rf::rf_eu_wr_addr = 1
rf::enable = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_a     = 00
rf::eu_rf_wr_addr_equal_rd_addr_a = 1
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_a = 1
rf::bypass_a = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_b     = 0d
rf::eu_rf_wr_addr_equal_rd_addr_b = 0
rf::eu_rf_wren.read() = 1
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_b = 0
rf::bypass_b = 0
rf::eu_data_a = 7c
rf::rd_data_a = 00000007c
rf::rd_data_b = 00000007c
rf::rf_eu_v = 0
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 000000000
rf::eu_rf_wren    = 1
rf::rf_stall = 1
rf::   rf[0] = 0
rf::   rf[1] = 1
rf::   rf[2] = 2
rf::   rf[3] = 3
rf::   rf[4] = 4
rf::   rf[5] = 5
rf::   rf[6] = 6
rf::   rf[7] = 7
rf::   rf[8] = 8
rf::   rf[9] = 9
rf::   rf[a] = a
rf::   rf[b] = b
rf::   rf[c] = c
rf::   rf[d] = d
rf::   rf[e] = e
rf::   rf[f] = f
rf::   rf[10] = 10
rf::   rf[11] = 11
rf::   rf[12] = 12
rf::   rf[13] = 13
rf::   rf[14] = 14
rf::   rf[15] = 15
rf::   rf[16] = 16
rf::   rf[17] = 17
rf::   rf[18] = 18
rf::   rf[19] = 19
rf::   rf[1a] = 1a
rf::   rf[1b] = 1b
rf::   rf[1c] = 1c
rf::   rf[1d] = 1d
rf::   rf[1e] = 1e
rf::   rf[1f] = 1f
executionUnit::****************************************
executionUnit:: rf_eu_v=0
executionUnit::enable =1
executionUnit:: instReg=8001000d isInstFmtLas=0 instFmt=2
executionUnit:: rf_eu_ir = 08001000d
executionUnit:: las op = NA las op = 0
executionUnit:: src_a = 00000007c
executionUnit:: src_b = 00000007c
executionUnit:: eu_rf_wr_data_las = 0
executionUnit:: eu_rf_wr_data_bit = 0
executionUnit:: id->dest = 1
executionUnit:: eu_rf_wr_data = 000000000
executionUnit:: eu_rf_wr_addr = 00
executionUnit:: eu_rf_wren             = 1
rf::****************************************
rf::v = 1
rf::instructionReg = 8001000d
rf::reset_ = 1
rf::rd_addr_a = 00
rf::rden_a    = 1
rf::rd_addr_b = 0d
rf::rden_b    = 1
rf::im_rf_ir.read()  = 8001000d
rf::im_rf_instructionDecoder->getInstructionReg()  = 8001000d
rf:: isInstFormatOpLas = 0
rf:: isInstFormatOpBit = 0
rf:: isInstFormatOpLdIm= 1
rf:: isInstFormatOpBr  = 0
rf:: getLdImmOperand16Field= d
rf:: signExtend16(im_rf_instructionDecoder->getLdImmOperand16Field ()) = d
rf:: rf_dest_data  = d
rf::im_rf_ir = 8001000d
rf::eu_rf_ir = 01100007c
rf::op_imm_a = 0
rf::op_imm_b = d
rf:: getOperandAImm8Field  = 0
rf:: getOperandBImm8Field  = d
rf::signExtend8 (op_imm_a) = 0
rf::signExtend8 (op_imm_b) = d
rf::signExtend16(op_imm_b) = d
rf::rd_data_rf_a = 0
rf::rd_data_rf_b = d
rf::rd_data_imm_a = 0
rf::rd_data_imm_b = d
rf::rd_data_imm_mux_sel_a = 0
rf::rd_data_imm_mux_sel_b = 0
rf::rd_data_imm_mux_a = 0
rf::rd_data_imm_mux_b = d
rf::rd_data_bypass_mux_a = 7c
rf::rd_data_bypass_mux_b = d
rf::rf_eu_wr_addr = 1
rf::enable = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_a     = 00
rf::eu_rf_wr_addr_equal_rd_addr_a = 1
rf::eu_rf_wren.read() = 0
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_a = 1
rf::bypass_a = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_b     = 0d
rf::eu_rf_wr_addr_equal_rd_addr_b = 0
rf::eu_rf_wren.read() = 0
rf::eu_rf_wren_int = 1
rf::rfRdAddrEqEuRfWrAddr_b = 0
rf::bypass_b = 0
rf::eu_data_a = 7c
rf::rd_data_a = 00000007c
rf::rd_data_b = 00000007c
rf::rf_eu_v = 0
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 000000000
rf::eu_rf_wren    = 0
rf::rf_stall = 1
rf::   rf[0] = 0
rf::   rf[1] = 1
rf::   rf[2] = 2
rf::   rf[3] = 3
rf::   rf[4] = 4
rf::   rf[5] = 5
rf::   rf[6] = 6
rf::   rf[7] = 7
rf::   rf[8] = 8
rf::   rf[9] = 9
rf::   rf[a] = a
rf::   rf[b] = b
rf::   rf[c] = c
rf::   rf[d] = d
rf::   rf[e] = e
rf::   rf[f] = f
rf::   rf[10] = 10
rf::   rf[11] = 11
rf::   rf[12] = 12
rf::   rf[13] = 13
rf::   rf[14] = 14
rf::   rf[15] = 15
rf::   rf[16] = 16
rf::   rf[17] = 17
rf::   rf[18] = 18
rf::   rf[19] = 19
rf::   rf[1a] = 1a
rf::   rf[1b] = 1b
rf::   rf[1c] = 1c
rf::   rf[1d] = 1d
rf::   rf[1e] = 1e
rf::   rf[1f] = 1f
   read op  buffer[68] = c100006a im read operation  = 68 data = 8001000d
rf::write operation wr_addr_a = 1
 eu_branch = 0 pcx = 69 pc_inc = 69
reset_ = 1
enable = 1
eu_branch = 0
 pc_im_v   = 1
 im_rf_v   = 1
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 68
im.data = 8001000d
npc_2 = 0000d
npc_3 = 0007c
npc_4 = 00000
pc_im_v = 1 im_RnW = 1 pc_im_address = 68  im_1 = 8001000d
im_data = 8001000d
ir_rf_3 = 08001000d
ir_eu_4 = 01100007c
 eu_branch.read() = 1
 pc_im_v   = 1
 im_rf_v   = 1
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = d
 rf_dest_addr = 1
 rf_rd_data_a = 00000007c
 rf_rd_data_b = 00000007c
 im_rf_v   = 1
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
rf::****************************************
rf::v = 1
rf::instructionReg = c100006a
rf::reset_ = 1
rf::rd_addr_a = 00
rf::rden_a    = 1
rf::rd_addr_b = 0a
rf::rden_b    = 1
rf:0 read operation rd_addr_a = 00
rf:all read operation rd_addr_b = 0a
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 000000000
rf::eu_rf_wren    = 0
rf::swapbit_wr_data_a = 0
rf::swapbit_wr_addr_a = 0
rf::swapbit_wr_data_b = 0
rf::swapbit_wr_addr_b = 0
rf::swapbit_wren.writ = 0
rf::eu_rf_wren 	  = 0
rf::swap_wren 		  = 0
rf::swapbit_wren 	  = 0
rf::testbit_wren 	  = 0
rf::setbit_wren 	  = 0
rf::ldimm_ab_16_wren = 1
rf::rf_mux_in_wren_a = 0
rf::rf_mux_in_wren_b = 0
rf::enable = 1
rf::operandA = 0
rf::operandB = 0
rf::im_rf_ir.read()  = c100006a
rf::im_rf_instructionDecoder->getInstructionReg()  = c100006a
rf:: isInstFormatOpLas = 0
rf:: isInstFormatOpBit = 0
rf:: isInstFormatOpLdIm= 0
rf:: isInstFormatOpBr  = 1
rf:: getLdImmOperand16Field= 6a
rf:: signExtend16(im_rf_instructionDecoder->getLdImmOperand16Field ()) = 6a
rf:: rf_dest_data  = d
rf::im_rf_ir = c100006a
rf::eu_rf_ir = 08001000d
rf::op_imm_a = 0
rf::op_imm_b = 6a
rf:: getOperandAImm8Field  = 0
rf:: getOperandBImm8Field  = 6a
rf::signExtend8 (op_imm_a) = 0
rf::signExtend8 (op_imm_b) = 6a
rf::signExtend16(op_imm_b) = 6a
rf::rd_data_rf_a = 0
rf::rd_data_rf_b = a
rf::rd_data_imm_a = 0
rf::rd_data_imm_b = 6a
rf::rd_data_imm_mux_sel_a = 0
rf::rd_data_imm_mux_sel_b = 0
rf::rd_data_imm_mux_a = 0
rf::rd_data_imm_mux_b = a
rf::rd_data_bypass_mux_a = 0
rf::rd_data_bypass_mux_b = a
rf::rf_eu_wr_addr = 0
rf::enable = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_a     = 00
rf::eu_rf_wr_addr_equal_rd_addr_a = 1
rf::eu_rf_wren.read() = 0
rf::eu_rf_wren_int = 0
rf::rfRdAddrEqEuRfWrAddr_a = 0
rf::bypass_a = 0
rf::eu_rf_wr_addr = 00
rf::rd_addr_b     = 0a
rf::eu_rf_wr_addr_equal_rd_addr_b = 0
rf::eu_rf_wren.read() = 0
rf::eu_rf_wren_int = 0
rf::rfRdAddrEqEuRfWrAddr_b = 0
rf::bypass_b = 0
rf::eu_data_a = 0
rf::rd_data_a = 00000007c
rf::rd_data_b = 00000000d
rf::rf_eu_v = 0
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 000000000
rf::eu_rf_wren    = 0
rf::rf_stall = 0
rf::   rf[0] = 0
rf::   rf[1] = d
rf::   rf[2] = 2
rf::   rf[3] = 3
rf::   rf[4] = 4
rf::   rf[5] = 5
rf::   rf[6] = 6
rf::   rf[7] = 7
rf::   rf[8] = 8
rf::   rf[9] = 9
rf::   rf[a] = a
rf::   rf[b] = b
rf::   rf[c] = c
rf::   rf[d] = d
rf::   rf[e] = e
rf::   rf[f] = f
rf::   rf[10] = 10
rf::   rf[11] = 11
rf::   rf[12] = 12
rf::   rf[13] = 13
rf::   rf[14] = 14
rf::   rf[15] = 15
rf::   rf[16] = 16
rf::   rf[17] = 17
rf::   rf[18] = 18
rf::   rf[19] = 19
rf::   rf[1a] = 1a
rf::   rf[1b] = 1b
rf::   rf[1c] = 1c
rf::   rf[1d] = 1d
rf::   rf[1e] = 1e
rf::   rf[1f] = 1f
executionUnit::****************************************
executionUnit:: rf_eu_v=0
executionUnit::enable =1
executionUnit:: instReg=8001000d isInstFmtLas=0 instFmt=2
executionUnit:: rf_eu_ir = 08001000d
executionUnit:: las op = NA las op = 0
executionUnit:: src_a = 00000007c
executionUnit:: src_b = 00000000d
executionUnit:: eu_rf_wr_data_las = 0
executionUnit:: eu_rf_wr_data_bit = 0
executionUnit:: id->dest = 1
executionUnit:: eu_rf_wr_data = 000000000
executionUnit:: eu_rf_wr_addr = 00
executionUnit:: eu_rf_wren             = 0
   read op  buffer[69] = e000006e im read operation  = 69 data = c100006a
rf::write operation wr_addr_a = 1
 eu_branch = 0 pcx = 6a pc_inc = 6a
reset_ = 1
enable = 1
eu_branch = 0
 pc_im_v   = 1
 im_rf_v   = 1
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 69
im.data = c100006a
npc_2 = 0000d
npc_3 = 0000d
npc_4 = 00000
pc_im_v = 1 im_RnW = 1 pc_im_address = 69  im_1 = c100006a
im_data = c100006a
ir_rf_3 = 08001000d
ir_eu_4 = 08001000d
 eu_branch.read() = 1
 pc_im_v   = 1
 im_rf_v   = 1
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 6a
 rf_dest_addr = 0
 rf_rd_data_a = 00000007c
 rf_rd_data_b = 00000000d
 im_rf_v   = 1
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
rf::****************************************
rf::v = 1
rf::instructionReg = e000006e
rf::reset_ = 1
rf::rd_addr_a = 00
rf::rden_a    = 1
rf::rd_addr_b = 0e
rf::rden_b    = 1
rf:0 read operation rd_addr_a = 00
rf:all read operation rd_addr_b = 0e
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 000000000
rf::eu_rf_wren    = 0
rf::swapbit_wr_data_a = 0
rf::swapbit_wr_addr_a = 0
rf::swapbit_wr_data_b = 0
rf::swapbit_wr_addr_b = 0
rf::swapbit_wren.writ = 0
rf::eu_rf_wren 	  = 0
rf::swap_wren 		  = 0
rf::swapbit_wren 	  = 0
rf::testbit_wren 	  = 0
rf::setbit_wren 	  = 0
rf::ldimm_ab_16_wren = 0
rf::rf_mux_in_wren_a = 0
rf::rf_mux_in_wren_b = 0
rf::enable = 1
rf::operandA = 0
rf::operandB = 0
rf::im_rf_ir.read()  = e000006e
rf::im_rf_instructionDecoder->getInstructionReg()  = e000006e
rf:: isInstFormatOpLas = 0
rf:: isInstFormatOpBit = 0
rf:: isInstFormatOpLdIm= 0
rf:: isInstFormatOpBr  = 1
rf:: getLdImmOperand16Field= 6e
rf:: signExtend16(im_rf_instructionDecoder->getLdImmOperand16Field ()) = 6e
rf:: rf_dest_data  = d
rf::im_rf_ir = e000006e
rf::eu_rf_ir = 08001000d
rf::op_imm_a = 0
rf::op_imm_b = 6e
rf:: getOperandAImm8Field  = 0
rf:: getOperandBImm8Field  = 6e
rf::signExtend8 (op_imm_a) = 0
rf::signExtend8 (op_imm_b) = 6e
rf::signExtend16(op_imm_b) = 6e
rf::rd_data_rf_a = 0
rf::rd_data_rf_b = e
rf::rd_data_imm_a = 0
rf::rd_data_imm_b = 6e
rf::rd_data_imm_mux_sel_a = 1
rf::rd_data_imm_mux_sel_b = 0
rf::rd_data_imm_mux_a = 0
rf::rd_data_imm_mux_b = e
rf::rd_data_bypass_mux_a = 0
rf::rd_data_bypass_mux_b = e
rf::rf_eu_wr_addr = 0
rf::enable = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_a     = 00
rf::eu_rf_wr_addr_equal_rd_addr_a = 1
rf::eu_rf_wren.read() = 0
rf::eu_rf_wren_int = 0
rf::rfRdAddrEqEuRfWrAddr_a = 0
rf::bypass_a = 0
rf::eu_rf_wr_addr = 00
rf::rd_addr_b     = 0e
rf::eu_rf_wr_addr_equal_rd_addr_b = 0
rf::eu_rf_wren.read() = 0
rf::eu_rf_wren_int = 0
rf::rfRdAddrEqEuRfWrAddr_b = 0
rf::bypass_b = 0
rf::eu_data_a = 0
rf::rd_data_a = 000000000
rf::rd_data_b = 00000000a
rf::rf_eu_v = 1
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 000000000
rf::eu_rf_wren    = 0
rf::rf_stall = 0
rf::   rf[0] = 0
rf::   rf[1] = d
rf::   rf[2] = 2
rf::   rf[3] = 3
rf::   rf[4] = 4
rf::   rf[5] = 5
rf::   rf[6] = 6
rf::   rf[7] = 7
rf::   rf[8] = 8
rf::   rf[9] = 9
rf::   rf[a] = a
rf::   rf[b] = b
rf::   rf[c] = c
rf::   rf[d] = d
rf::   rf[e] = e
rf::   rf[f] = f
rf::   rf[10] = 10
rf::   rf[11] = 11
rf::   rf[12] = 12
rf::   rf[13] = 13
rf::   rf[14] = 14
rf::   rf[15] = 15
rf::   rf[16] = 16
rf::   rf[17] = 17
rf::   rf[18] = 18
rf::   rf[19] = 19
rf::   rf[1a] = 1a
rf::   rf[1b] = 1b
rf::   rf[1c] = 1c
rf::   rf[1d] = 1d
rf::   rf[1e] = 1e
rf::   rf[1f] = 1f
executionUnit::****************************************
executionUnit:: rf_eu_v=1
executionUnit::enable =1
executionUnit:: instReg=c100006a isInstFmtLas=0 instFmt=3
executionUnit:: rf_eu_ir = 0c100006a
executionUnit:: las op = NA las op = 1
executionUnit:: src_a = 000000000
executionUnit:: src_b = 00000000a
executionUnit:: eu_rf_wr_data_las = 0
executionUnit:: eu_rf_wr_data_bit = 0
executionUnit:: id->dest = 0
executionUnit:: eu_rf_wr_data = 000000000
executionUnit:: eu_rf_wr_addr = 00
executionUnit:: eu_rf_wren             = 0
rf::****************************************
rf::v = 1
rf::instructionReg = e000006e
rf::reset_ = 1
rf::rd_addr_a = 00
rf::rden_a    = 1
rf::rd_addr_b = 0e
rf::rden_b    = 1
rf:0 read operation rd_addr_a = 00
rf:all read operation rd_addr_b = 0e
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 000000000
rf::eu_rf_wren    = 0
rf::swapbit_wr_data_a = 0
rf::swapbit_wr_addr_a = 0
rf::swapbit_wr_data_b = 0
rf::swapbit_wr_addr_b = 0
rf::swapbit_wren.writ = 0
rf::eu_rf_wren 	  = 0
rf::swap_wren 		  = 0
rf::swapbit_wren 	  = 0
rf::testbit_wren 	  = 0
rf::setbit_wren 	  = 0
rf::ldimm_ab_16_wren = 0
rf::rf_mux_in_wren_a = 0
rf::rf_mux_in_wren_b = 0
rf::enable = 1
rf::operandA = 0
rf::operandB = 0
rf::im_rf_ir.read()  = e000006e
rf::im_rf_instructionDecoder->getInstructionReg()  = e000006e
rf:: isInstFormatOpLas = 0
rf:: isInstFormatOpBit = 0
rf:: isInstFormatOpLdIm= 0
rf:: isInstFormatOpBr  = 1
rf:: getLdImmOperand16Field= 6e
rf:: signExtend16(im_rf_instructionDecoder->getLdImmOperand16Field ()) = 6e
rf:: rf_dest_data  = d
rf::im_rf_ir = e000006e
rf::eu_rf_ir = 08001000d
rf::op_imm_a = 0
rf::op_imm_b = 6e
rf:: getOperandAImm8Field  = 0
rf:: getOperandBImm8Field  = 6e
rf::signExtend8 (op_imm_a) = 0
rf::signExtend8 (op_imm_b) = 6e
rf::signExtend16(op_imm_b) = 6e
rf::rd_data_rf_a = 0
rf::rd_data_rf_b = e
rf::rd_data_imm_a = 0
rf::rd_data_imm_b = 6e
rf::rd_data_imm_mux_sel_a = 1
rf::rd_data_imm_mux_sel_b = 0
rf::rd_data_imm_mux_a = 0
rf::rd_data_imm_mux_b = e
rf::rd_data_bypass_mux_a = 0
rf::rd_data_bypass_mux_b = e
rf::rf_eu_wr_addr = 0
rf::enable = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_a     = 00
rf::eu_rf_wr_addr_equal_rd_addr_a = 1
rf::eu_rf_wren.read() = 0
rf::eu_rf_wren_int = 0
rf::rfRdAddrEqEuRfWrAddr_a = 0
rf::bypass_a = 0
rf::eu_rf_wr_addr = 00
rf::rd_addr_b     = 0e
rf::eu_rf_wr_addr_equal_rd_addr_b = 0
rf::eu_rf_wren.read() = 0
rf::eu_rf_wren_int = 0
rf::rfRdAddrEqEuRfWrAddr_b = 0
rf::bypass_b = 0
rf::eu_data_a = 0
rf::rd_data_a = 000000000
rf::rd_data_b = 00000000a
rf::rf_eu_v = 1
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 000000000
rf::eu_rf_wren    = 0
rf::rf_stall = 0
rf::   rf[0] = 0
rf::   rf[1] = d
rf::   rf[2] = 2
rf::   rf[3] = 3
rf::   rf[4] = 4
rf::   rf[5] = 5
rf::   rf[6] = 6
rf::   rf[7] = 7
rf::   rf[8] = 8
rf::   rf[9] = 9
rf::   rf[a] = a
rf::   rf[b] = b
rf::   rf[c] = c
rf::   rf[d] = d
rf::   rf[e] = e
rf::   rf[f] = f
rf::   rf[10] = 10
rf::   rf[11] = 11
rf::   rf[12] = 12
rf::   rf[13] = 13
rf::   rf[14] = 14
rf::   rf[15] = 15
rf::   rf[16] = 16
rf::   rf[17] = 17
rf::   rf[18] = 18
rf::   rf[19] = 19
rf::   rf[1a] = 1a
rf::   rf[1b] = 1b
rf::   rf[1c] = 1c
rf::   rf[1d] = 1d
rf::   rf[1e] = 1e
rf::   rf[1f] = 1f
   read op  buffer[6a] = bf000001 im read operation  = 6a data = e000006e
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = d pc_inc = 6b
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 1
 rf_eu_v   = 1
 eu_rf_wren= 0
pc_im_address = 6a
im.data = e000006e
npc_2 = 0006a
npc_3 = 0000d
npc_4 = 00000
pc_im_v = 1 im_RnW = 1 pc_im_address = 6a  im_1 = e000006e
im_data = e000006e
ir_rf_3 = 0c100006a
ir_eu_4 = 08001000d
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 1
 rf_eu_v   = 1
 rf_rd_addr_a = 0
 rf_rd_addr_b = 6e
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000a
 im_rf_v   = 1
 rf_eu_v = 1
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
rf::****************************************
rf::v = 0
rf::instructionReg = bf000001
rf::reset_ = 1
rf::rd_addr_a = 00
rf::rden_a    = 1
rf::rd_addr_b = 01
rf::rden_b    = 1
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 000000000
rf::eu_rf_wren    = 0
rf::swapbit_wr_data_a = 0
rf::swapbit_wr_addr_a = 0
rf::swapbit_wr_data_b = 0
rf::swapbit_wr_addr_b = 0
rf::swapbit_wren.writ = 0
rf::eu_rf_wren 	  = 0
rf::swap_wren 		  = 0
rf::swapbit_wren 	  = 0
rf::testbit_wren 	  = 0
rf::setbit_wren 	  = 0
rf::ldimm_ab_16_wren = 0
rf::rf_mux_in_wren_a = 0
rf::rf_mux_in_wren_b = 0
rf::enable = 1
rf::operandA = 0
rf::operandB = 0
rf::im_rf_ir.read()  = bf000001
rf::im_rf_instructionDecoder->getInstructionReg()  = bf000001
rf:: isInstFormatOpLas = 0
rf:: isInstFormatOpBit = 0
rf:: isInstFormatOpLdIm= 1
rf:: isInstFormatOpBr  = 0
rf:: getLdImmOperand16Field= 1
rf:: signExtend16(im_rf_instructionDecoder->getLdImmOperand16Field ()) = 1
rf:: rf_dest_data  = d
rf::im_rf_ir = bf000001
rf::eu_rf_ir = 0c100006a
rf::op_imm_a = 0
rf::op_imm_b = 1
rf:: getOperandAImm8Field  = 0
rf:: getOperandBImm8Field  = 1
rf::signExtend8 (op_imm_a) = 0
rf::signExtend8 (op_imm_b) = 1
rf::signExtend16(op_imm_b) = 1
rf::rd_data_rf_a = 0
rf::rd_data_rf_b = e
rf::rd_data_imm_a = 0
rf::rd_data_imm_b = 1
rf::rd_data_imm_mux_sel_a = 1
rf::rd_data_imm_mux_sel_b = 1
rf::rd_data_imm_mux_a = 0
rf::rd_data_imm_mux_b = 1
rf::rd_data_bypass_mux_a = 0
rf::rd_data_bypass_mux_b = 1
rf::rf_eu_wr_addr = 0
rf::enable = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_a     = 00
rf::eu_rf_wr_addr_equal_rd_addr_a = 1
rf::eu_rf_wren.read() = 0
rf::eu_rf_wren_int = 0
rf::rfRdAddrEqEuRfWrAddr_a = 0
rf::bypass_a = 0
rf::eu_rf_wr_addr = 00
rf::rd_addr_b     = 01
rf::eu_rf_wr_addr_equal_rd_addr_b = 0
rf::eu_rf_wren.read() = 0
rf::eu_rf_wren_int = 0
rf::rfRdAddrEqEuRfWrAddr_b = 0
rf::bypass_b = 0
rf::eu_data_a = 0
rf::rd_data_a = 000000000
rf::rd_data_b = 00000000e
rf::rf_eu_v = 0
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 000000000
rf::eu_rf_wren    = 0
rf::rf_stall = 0
rf::   rf[0] = 0
rf::   rf[1] = d
rf::   rf[2] = 2
rf::   rf[3] = 3
rf::   rf[4] = 4
rf::   rf[5] = 5
rf::   rf[6] = 6
rf::   rf[7] = 7
rf::   rf[8] = 8
rf::   rf[9] = 9
rf::   rf[a] = a
rf::   rf[b] = b
rf::   rf[c] = c
rf::   rf[d] = d
rf::   rf[e] = e
rf::   rf[f] = f
rf::   rf[10] = 10
rf::   rf[11] = 11
rf::   rf[12] = 12
rf::   rf[13] = 13
rf::   rf[14] = 14
rf::   rf[15] = 15
rf::   rf[16] = 16
rf::   rf[17] = 17
rf::   rf[18] = 18
rf::   rf[19] = 19
rf::   rf[1a] = 1a
rf::   rf[1b] = 1b
rf::   rf[1c] = 1c
rf::   rf[1d] = 1d
rf::   rf[1e] = 1e
rf::   rf[1f] = 1f
executionUnit::****************************************
executionUnit:: rf_eu_v=0
executionUnit::enable =1
executionUnit:: instReg=e000006e isInstFmtLas=0 instFmt=3
executionUnit:: rf_eu_ir = 0e000006e
executionUnit:: las op = NA las op = 0
executionUnit:: src_a = 000000000
executionUnit:: src_b = 00000000e
executionUnit:: eu_rf_wr_data_las = 0
executionUnit:: eu_rf_wr_data_bit = 0
executionUnit:: id->dest = 0
executionUnit:: eu_rf_wr_data = 000000000
executionUnit:: eu_rf_wr_addr = 00
executionUnit:: eu_rf_wren             = 0
NO read op  buffer[d] = 800c000c im read operation  = d data = bf000001
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 6a pc_inc = e
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = d
im.data = bf000001
npc_2 = 0006e
npc_3 = 0006a
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = d  im_1 = bf000001
im_data = bf000001
ir_rf_3 = 0e000006e
ir_eu_4 = 0c100006a
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 1
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
rf::****************************************
rf::v = 0
rf::instructionReg = 0
rf::reset_ = 1
rf::rd_addr_a = 00
rf::rden_a    = 1
rf::rd_addr_b = 00
rf::rden_b    = 1
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 000000000
rf::eu_rf_wren    = 0
rf::swapbit_wr_data_a = 0
rf::swapbit_wr_addr_a = 0
rf::swapbit_wr_data_b = 0
rf::swapbit_wr_addr_b = 0
rf::swapbit_wren.writ = 0
rf::eu_rf_wren 	  = 0
rf::swap_wren 		  = 0
rf::swapbit_wren 	  = 0
rf::testbit_wren 	  = 0
rf::setbit_wren 	  = 0
rf::ldimm_ab_16_wren = 0
rf::rf_mux_in_wren_a = 0
rf::rf_mux_in_wren_b = 0
rf::enable = 1
rf::operandA = 0
rf::operandB = 0
rf::im_rf_ir.read()  = 0
rf::im_rf_instructionDecoder->getInstructionReg()  = 0
rf:: isInstFormatOpLas = 1
rf:: isInstFormatOpBit = 0
rf:: isInstFormatOpLdIm= 0
rf:: isInstFormatOpBr  = 0
rf:: getLdImmOperand16Field= 0
rf:: signExtend16(im_rf_instructionDecoder->getLdImmOperand16Field ()) = 0
rf:: rf_dest_data  = d
rf::im_rf_ir = 0
rf::eu_rf_ir = 0e000006e
rf::op_imm_a = 0
rf::op_imm_b = 0
rf:: getOperandAImm8Field  = 0
rf:: getOperandBImm8Field  = 0
rf::signExtend8 (op_imm_a) = 0
rf::signExtend8 (op_imm_b) = 0
rf::signExtend16(op_imm_b) = 0
rf::rd_data_rf_a = 0
rf::rd_data_rf_b = e
rf::rd_data_imm_a = 0
rf::rd_data_imm_b = 0
rf::rd_data_imm_mux_sel_a = 0
rf::rd_data_imm_mux_sel_b = 0
rf::rd_data_imm_mux_a = 0
rf::rd_data_imm_mux_b = e
rf::rd_data_bypass_mux_a = 0
rf::rd_data_bypass_mux_b = e
rf::rf_eu_wr_addr = 0
rf::enable = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_a     = 00
rf::eu_rf_wr_addr_equal_rd_addr_a = 1
rf::eu_rf_wren.read() = 0
rf::eu_rf_wren_int = 0
rf::rfRdAddrEqEuRfWrAddr_a = 0
rf::bypass_a = 0
rf::eu_rf_wr_addr = 00
rf::rd_addr_b     = 00
rf::eu_rf_wr_addr_equal_rd_addr_b = 1
rf::eu_rf_wren.read() = 0
rf::eu_rf_wren_int = 0
rf::rfRdAddrEqEuRfWrAddr_b = 0
rf::bypass_b = 0
rf::eu_data_a = 0
rf::rd_data_a = 000000000
rf::rd_data_b = 000000001
rf::rf_eu_v = 0
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 000000000
rf::eu_rf_wren    = 0
rf::rf_stall = 0
rf::   rf[0] = 0
rf::   rf[1] = d
rf::   rf[2] = 2
rf::   rf[3] = 3
rf::   rf[4] = 4
rf::   rf[5] = 5
rf::   rf[6] = 6
rf::   rf[7] = 7
rf::   rf[8] = 8
rf::   rf[9] = 9
rf::   rf[a] = a
rf::   rf[b] = b
rf::   rf[c] = c
rf::   rf[d] = d
rf::   rf[e] = e
rf::   rf[f] = f
rf::   rf[10] = 10
rf::   rf[11] = 11
rf::   rf[12] = 12
rf::   rf[13] = 13
rf::   rf[14] = 14
rf::   rf[15] = 15
rf::   rf[16] = 16
rf::   rf[17] = 17
rf::   rf[18] = 18
rf::   rf[19] = 19
rf::   rf[1a] = 1a
rf::   rf[1b] = 1b
rf::   rf[1c] = 1c
rf::   rf[1d] = 1d
rf::   rf[1e] = 1e
rf::   rf[1f] = 1f
executionUnit::****************************************
executionUnit:: rf_eu_v=0
executionUnit::enable =1
executionUnit:: instReg=bf000001 isInstFmtLas=0 instFmt=2
executionUnit:: rf_eu_ir = 0bf000001
executionUnit:: las op = NA las op = f
executionUnit:: src_a = 000000000
executionUnit:: src_b = 000000001
executionUnit:: eu_rf_wr_data_las = 0
executionUnit:: eu_rf_wr_data_bit = 0
executionUnit:: id->dest = 0
executionUnit:: eu_rf_wr_data = 000000000
executionUnit:: eu_rf_wr_addr = 00
executionUnit:: eu_rf_wren             = 0
NO read op  buffer[6a] = bf000001 im read operation  = 6a data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 6e pc_inc = 6b
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 6a
im.data = 0
npc_2 = 00001
npc_3 = 0006e
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 6a  im_1 = 0
im_data = 0
ir_rf_3 = 0bf000001
ir_eu_4 = 0e000006e
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 000000001
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
rf::****************************************
rf::v = 0
rf::instructionReg = 0
rf::reset_ = 1
rf::rd_addr_a = 00
rf::rden_a    = 1
rf::rd_addr_b = 00
rf::rden_b    = 1
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 000000000
rf::eu_rf_wren    = 0
rf::swapbit_wr_data_a = 0
rf::swapbit_wr_addr_a = 0
rf::swapbit_wr_data_b = 0
rf::swapbit_wr_addr_b = 0
rf::swapbit_wren.writ = 0
rf::eu_rf_wren 	  = 0
rf::swap_wren 		  = 0
rf::swapbit_wren 	  = 0
rf::testbit_wren 	  = 0
rf::setbit_wren 	  = 0
rf::ldimm_ab_16_wren = 0
rf::rf_mux_in_wren_a = 0
rf::rf_mux_in_wren_b = 0
rf::enable = 1
rf::operandA = 0
rf::operandB = 0
rf::im_rf_ir.read()  = 0
rf::im_rf_instructionDecoder->getInstructionReg()  = 0
rf:: isInstFormatOpLas = 1
rf:: isInstFormatOpBit = 0
rf:: isInstFormatOpLdIm= 0
rf:: isInstFormatOpBr  = 0
rf:: getLdImmOperand16Field= 0
rf:: signExtend16(im_rf_instructionDecoder->getLdImmOperand16Field ()) = 0
rf:: rf_dest_data  = d
rf::im_rf_ir = 0
rf::eu_rf_ir = 0bf000001
rf::op_imm_a = 0
rf::op_imm_b = 0
rf:: getOperandAImm8Field  = 0
rf:: getOperandBImm8Field  = 0
rf::signExtend8 (op_imm_a) = 0
rf::signExtend8 (op_imm_b) = 0
rf::signExtend16(op_imm_b) = 0
rf::rd_data_rf_a = 0
rf::rd_data_rf_b = e
rf::rd_data_imm_a = 0
rf::rd_data_imm_b = 0
rf::rd_data_imm_mux_sel_a = 0
rf::rd_data_imm_mux_sel_b = 0
rf::rd_data_imm_mux_a = 0
rf::rd_data_imm_mux_b = e
rf::rd_data_bypass_mux_a = 0
rf::rd_data_bypass_mux_b = e
rf::rf_eu_wr_addr = 0
rf::enable = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_a     = 00
rf::eu_rf_wr_addr_equal_rd_addr_a = 1
rf::eu_rf_wren.read() = 0
rf::eu_rf_wren_int = 0
rf::rfRdAddrEqEuRfWrAddr_a = 0
rf::bypass_a = 0
rf::eu_rf_wr_addr = 00
rf::rd_addr_b     = 00
rf::eu_rf_wr_addr_equal_rd_addr_b = 1
rf::eu_rf_wren.read() = 0
rf::eu_rf_wren_int = 0
rf::rfRdAddrEqEuRfWrAddr_b = 0
rf::bypass_b = 0
rf::eu_data_a = 0
rf::rd_data_a = 000000000
rf::rd_data_b = 00000000e
rf::rf_eu_v = 0
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 000000000
rf::eu_rf_wren    = 0
rf::rf_stall = 0
rf::   rf[0] = 0
rf::   rf[1] = d
rf::   rf[2] = 2
rf::   rf[3] = 3
rf::   rf[4] = 4
rf::   rf[5] = 5
rf::   rf[6] = 6
rf::   rf[7] = 7
rf::   rf[8] = 8
rf::   rf[9] = 9
rf::   rf[a] = a
rf::   rf[b] = b
rf::   rf[c] = c
rf::   rf[d] = d
rf::   rf[e] = e
rf::   rf[f] = f
rf::   rf[10] = 10
rf::   rf[11] = 11
rf::   rf[12] = 12
rf::   rf[13] = 13
rf::   rf[14] = 14
rf::   rf[15] = 15
rf::   rf[16] = 16
rf::   rf[17] = 17
rf::   rf[18] = 18
rf::   rf[19] = 19
rf::   rf[1a] = 1a
rf::   rf[1b] = 1b
rf::   rf[1c] = 1c
rf::   rf[1d] = 1d
rf::   rf[1e] = 1e
rf::   rf[1f] = 1f
executionUnit::****************************************
executionUnit:: rf_eu_v=0
executionUnit::enable =1
executionUnit:: instReg=0 isInstFmtLas=1 instFmt=0
executionUnit:: rf_eu_ir = 000000000
executionUnit:: las op = ELasAdd	 las op = 0
executionUnit:: src_a = 000000000
executionUnit:: src_b = 00000000e
executionUnit:: eu_rf_wr_data_las = 0
executionUnit:: eu_rf_wr_data_bit = 0
executionUnit:: id->dest = 0
executionUnit:: eu_rf_wr_data = 000000000
executionUnit:: eu_rf_wr_addr = 00
executionUnit:: eu_rf_wren             = 0
NO read op  buffer[6e] = 80010001 im read operation  = 6e data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 1 pc_inc = 6f
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 6e
im.data = 0
npc_2 = 00000
npc_3 = 00001
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 6e  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 0bf000001
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
rf::****************************************
rf::v = 0
rf::instructionReg = 0
rf::reset_ = 1
rf::rd_addr_a = 00
rf::rden_a    = 1
rf::rd_addr_b = 00
rf::rden_b    = 1
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 000000000
rf::eu_rf_wren    = 0
rf::swapbit_wr_data_a = 0
rf::swapbit_wr_addr_a = 0
rf::swapbit_wr_data_b = 0
rf::swapbit_wr_addr_b = 0
rf::swapbit_wren.writ = 0
rf::eu_rf_wren 	  = 0
rf::swap_wren 		  = 0
rf::swapbit_wren 	  = 0
rf::testbit_wren 	  = 0
rf::setbit_wren 	  = 0
rf::ldimm_ab_16_wren = 0
rf::rf_mux_in_wren_a = 0
rf::rf_mux_in_wren_b = 0
rf::enable = 1
rf::operandA = 0
rf::operandB = 0
rf::im_rf_ir.read()  = 0
rf::im_rf_instructionDecoder->getInstructionReg()  = 0
rf:: isInstFormatOpLas = 1
rf:: isInstFormatOpBit = 0
rf:: isInstFormatOpLdIm= 0
rf:: isInstFormatOpBr  = 0
rf:: getLdImmOperand16Field= 0
rf:: signExtend16(im_rf_instructionDecoder->getLdImmOperand16Field ()) = 0
rf:: rf_dest_data  = d
rf::im_rf_ir = 0
rf::eu_rf_ir = 000000000
rf::op_imm_a = 0
rf::op_imm_b = 0
rf:: getOperandAImm8Field  = 0
rf:: getOperandBImm8Field  = 0
rf::signExtend8 (op_imm_a) = 0
rf::signExtend8 (op_imm_b) = 0
rf::signExtend16(op_imm_b) = 0
rf::rd_data_rf_a = 0
rf::rd_data_rf_b = e
rf::rd_data_imm_a = 0
rf::rd_data_imm_b = 0
rf::rd_data_imm_mux_sel_a = 0
rf::rd_data_imm_mux_sel_b = 0
rf::rd_data_imm_mux_a = 0
rf::rd_data_imm_mux_b = e
rf::rd_data_bypass_mux_a = 0
rf::rd_data_bypass_mux_b = e
rf::rf_eu_wr_addr = 0
rf::enable = 1
rf::eu_rf_wr_addr = 00
rf::rd_addr_a     = 00
rf::eu_rf_wr_addr_equal_rd_addr_a = 1
rf::eu_rf_wren.read() = 0
rf::eu_rf_wren_int = 0
rf::rfRdAddrEqEuRfWrAddr_a = 0
rf::bypass_a = 0
rf::eu_rf_wr_addr = 00
rf::rd_addr_b     = 00
rf::eu_rf_wr_addr_equal_rd_addr_b = 1
rf::eu_rf_wren.read() = 0
rf::eu_rf_wren_int = 0
rf::rfRdAddrEqEuRfWrAddr_b = 0
rf::bypass_b = 0
rf::eu_data_a = 0
rf::rd_data_a = 000000000
rf::rd_data_b = 00000000e
rf::rf_eu_v = 0
rf::eu_rf_wr_addr = 00
rf::eu_rf_wr_data = 000000000
rf::eu_rf_wren    = 0
rf::rf_stall = 0
rf::   rf[0] = 0
rf::   rf[1] = d
rf::   rf[2] = 2
rf::   rf[3] = 3
rf::   rf[4] = 4
rf::   rf[5] = 5
rf::   rf[6] = 6
rf::   rf[7] = 7
rf::   rf[8] = 8
rf::   rf[9] = 9
rf::   rf[a] = a
rf::   rf[b] = b
rf::   rf[c] = c
rf::   rf[d] = d
rf::   rf[e] = e
rf::   rf[f] = f
rf::   rf[10] = 10
rf::   rf[11] = 11
rf::   rf[12] = 12
rf::   rf[13] = 13
rf::   rf[14] = 14
rf::   rf[15] = 15
rf::   rf[16] = 16
rf::   rf[17] = 17
rf::   rf[18] = 18
rf::   rf[19] = 19
rf::   rf[1a] = 1a
rf::   rf[1b] = 1b
rf::   rf[1c] = 1c
rf::   rf[1d] = 1d
rf::   rf[1e] = 1e
rf::   rf[1f] = 1f
NO read op  buffer[1] = 80000000 im read operation  = 1 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 2
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 1
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 1  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
NO read op  buffer[0] = bf000002 im read operation  = 0 data = 0
rf::write operation wr_addr_a = 1
 eu_branch = 1 pcx = 0 pc_inc = 1
reset_ = 1
enable = 1
eu_branch = 1
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 eu_rf_wren= 0
pc_im_address = 0
im.data = 0
npc_2 = 00000
npc_3 = 00000
npc_4 = 00000
pc_im_v = 1 im_RnW = 0 pc_im_address = 0  im_1 = 0
im_data = 0
ir_rf_3 = 000000000
ir_eu_4 = 000000000
 eu_branch.read() = 0
 pc_im_v   = 1
 im_rf_v   = 0
 rf_eu_v   = 0
 rf_rd_addr_a = 0
 rf_rd_addr_b = 0
 rf_dest_addr = 0
 rf_rd_data_a = 000000000
 rf_rd_data_b = 00000000e
 im_rf_v   = 0
 rf_eu_v = 0
 eu_rf_wren = 0
 eu_rf_wr_data  = 000000000
 eu_rf_wr_addr  = 00
@4810 ns Terminating simulation
SystemC: simulation stopped by user.
