{\rtf1\ansi\deff1\adeflang1025
{\fonttbl{\f0\froman\fprq2\fcharset0 DejaVu Sans;}{\f1\froman\fprq2\fcharset0 Times New Roman;}{\f2\fnil\fprq0\fcharset0 Times{\*\falt Times New Roman};}{\f3\fnil\fprq0\fcharset0 Helvetica;}{\f4\froman\fprq2\fcharset0 Times New Roman;}{\f5\fnil\fprq2\fcharset0 DejaVu Sans;}}
{\colortbl;\red0\green0\blue0;\red128\green128\blue128;}
{\stylesheet{\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\afs20\lang1033\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033\snext1 Normal;}
{\s2\sb240\sa120\keepn\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\af5\afs28\lang1033\ltrch\dbch\af5\langfe1033\hich\f3\fs28\lang1033\loch\f3\fs28\lang1033\sbasedon1\snext3 Heading;}
{\s3\sa120\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\afs20\lang1033\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033\sbasedon1\snext3 Body Text;}
{\s4\sa120\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\afs20\lang1033\ltrch\dbch\langfe1033\hich\f2\fs20\lang1033\loch\f2\fs20\lang1033\sbasedon3\snext4 List;}
{\s5\sb120\sa120\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\afs24\lang1033\ai\ltrch\dbch\langfe1033\hich\f2\fs24\lang1033\i\loch\f2\fs24\lang1033\i\sbasedon1\snext5 caption;}
{\s6\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\afs20\lang1033\ltrch\dbch\langfe1033\hich\f2\fs20\lang1033\loch\f2\fs20\lang1033\sbasedon1\snext6 Index;}
{\s7\cf0\tqc\tx4320\tqr\tx8640{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\afs20\lang1033\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033\sbasedon1\snext7 header;}
{\s8\cf0\tqc\tx4320\tqr\tx8640{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\afs20\lang1033\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033\sbasedon1\snext8 footer;}
{\*\cs10\cf0\rtlch\af1\afs24\lang1033\ltrch\dbch\af1\langfe1033\hich\f1\fs24\lang1033\loch\f1\fs24\lang1033 Default Paragraph Font;}
}
{\info{\creatim\yr2007\mo7\dy18\hr0\min38}{\revtim\yr1601\mo1\dy1\hr0\min0}{\printim\yr1601\mo1\dy1\hr0\min0}{\comment StarWriter}{\vern6800}}\deftab720
{\*\pgdsctbl
{\pgdsc0\pgdscuse195\pgwsxn12240\pghsxn15840\marglsxn1800\margrsxn1800\margtsxn1440\margbsxn1440\pgdscnxt0 Standard;}}
{\*\pgdscno0}\paperh15840\paperw12240\margl1800\margr1800\margt1440\margb1440\sectd\sbknone\pgwsxn12240\pghsxn15840\marglsxn1800\margrsxn1800\margtsxn1440\margbsxn1440\ftnbj\ftnstart1\ftnrstcont\ftnnar\aenddoc\aftnrstcont\aftnstart1\aftnnrlc
\pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\afs22\lang1033\ltrch\dbch\langfe1033\hich\fs22\lang1033\loch\fs22\lang1033 {\rtlch \ltrch\loch\f1\fs22\lang1033\i0\b0 Chip Specification Language (CSL) and Compiler (CSLC)}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\afs22\lang1033\ltrch\dbch\langfe1033\hich\fs22\lang1033\loch\fs22\lang1033 
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\afs22\lang1033\ab\ltrch\dbch\langfe1033\hich\fs22\lang1033\b\loch\fs22\lang1033\b {\rtlch \ltrch\loch\f1\fs22\lang1033\i0\b CSL Interconnect Specification}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\afs22\lang1033\ltrch\dbch\langfe1033\hich\fs22\lang1033\loch\fs22\lang1033 {\rtlch \ltrch\loch\f1\fs22\lang1033\i0\b0 The CSL is used to capture a chip designs architectural, design implementation, and verification infrastructure details that can be described in a high level language. }
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\afs22\lang1033\ltrch\dbch\langfe1033\hich\fs22\lang1033\loch\fs22\lang1033 
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\afs22\lang1033\ltrch\dbch\langfe1033\hich\fs22\lang1033\loch\fs22\lang1033 {\rtlch \ltrch\loch\f1\fs22\lang1033\i0\b0 A chip is a set of functional units. Units have interfaces (ports), which are connected to other ports or to the pads of the chip (the system interface). The functional unit hierarchy and interconnections are described using CSL. }
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\afs22\lang1033\ltrch\dbch\langfe1033\hich\fs22\lang1033\loch\fs22\lang1033 
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\afs22\lang1033\ab\ltrch\dbch\langfe1033\hich\fs22\lang1033\b\loch\fs22\lang1033\b {\rtlch \ltrch\loch\f1\fs22\lang1033\i0\b CSL Memory Map Specification}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\afs22\lang1033\ltrch\dbch\langfe1033\hich\fs22\lang1033\loch\fs22\lang1033 {\rtlch \ltrch\loch\f1\fs22\lang1033\i0\b0 The functional units communicate with one another and with the system and software running on other chips via the interfaces. The functional  units have address maps which are written to or read from by other functional units or by software. }
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\afs22\lang1033\ltrch\dbch\langfe1033\hich\fs22\lang1033\loch\fs22\lang1033 
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\afs22\lang1033\ltrch\dbch\langfe1033\hich\fs22\lang1033\loch\fs22\lang1033 {\rtlch \ltrch\loch\f1\fs22\lang1033\i0\b0 A major problem arises when the functional and alternate models are written in different languages (unconnected tools). The use of different languages creates a need for address map constants and functions to be the same in each language. Only a specificat
ion language such as CSL can automatically generate consistent address map constants and functions. }
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\afs22\lang1033\ltrch\dbch\langfe1033\hich\fs22\lang1033\loch\fs22\lang1033 
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\afs22\lang1033\ab\ltrch\dbch\langfe1033\hich\fs22\lang1033\b\loch\fs22\lang1033\b {\rtlch \ltrch\loch\f1\fs22\lang1033\i0\b CSL enumerated typeeration Specification}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\afs22\lang1033\ltrch\dbch\langfe1033\hich\fs22\lang1033\loch\fs22\lang1033 {\rtlch \ltrch\loch\f1\fs22\lang1033\i0\b0 enumerated types which are identical to C++ enumerated types may be specified. enumerated types may be attached to signals, fields, and registers. {\rtlch\ltrch\dbch\hich\b\loch\b Significance?}}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\afs22\lang1033\ltrch\dbch\langfe1033\hich\fs22\lang1033\loch\fs22\lang1033 
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\afs22\lang1033\ab\ltrch\dbch\langfe1033\hich\fs22\lang1033\b\loch\fs22\lang1033\b {\rtlch \ltrch\loch\f1\fs22\lang1033\i0\b CSL Field Specification}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\afs22\lang1033\ltrch\dbch\langfe1033\hich\fs22\lang1033\loch\fs22\lang1033 {\rtlch \ltrch\loch\f1\fs22\lang1033\i0\b0 Fields are bit ranges that are named objects. Fields have an upper and a lower bit range index. The field has a name. Fields may be joined with other fields using a linked list like set_next or set_previous operation. Use CSL to construct of trees of field
s, which build a Hierarchical set of fields. Hierarchical fields are used in the design of instruction sets. enumerated types can be associated with fields. }
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\afs22\lang1033\ltrch\dbch\langfe1033\hich\fs22\lang1033\loch\fs22\lang1033 
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\afs22\lang1033\ab\ltrch\dbch\langfe1033\hich\fs22\lang1033\b\loch\fs22\lang1033\b {\rtlch \ltrch\loch\f1\fs22\lang1033\i0\b CSL instruction set architecture Specification}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\afs22\lang1033\ltrch\dbch\langfe1033\hich\fs22\lang1033\loch\fs22\lang1033 {\rtlch \ltrch\loch\f1\fs22\lang1033\i0\b0 Functional units and alternate models {\rtlch\ltrch\dbch\hich\b\loch\b (what is alternate?)} may execute programs which are  built from an instruction set architecture (instruction set architecture) specification written in CSL. The instruction set architecture is described using CSL. }
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\afs22\lang1033\ltrch\dbch\langfe1033\hich\fs22\lang1033\loch\fs22\lang1033 
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\afs22\lang1033\ltrch\dbch\langfe1033\hich\fs22\lang1033\loch\fs22\lang1033 {\rtlch \ltrch\loch\f1\fs22\lang1033\i0\b0 The functional units and the external model {\rtlch\ltrch\dbch\hich\b\loch\b (what is external?) }that implement the instruction set architecture, and execute programs written in  the instruction set architecture assembly language, need to use the same set of instruction formats, instructi
on field definitions and enumerated typeerated type values.  }
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\afs22\lang1033\ltrch\dbch\langfe1033\hich\fs22\lang1033\loch\fs22\lang1033 
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\afs22\lang1033\ltrch\dbch\langfe1033\hich\fs22\lang1033\loch\fs22\lang1033 {\rtlch \ltrch\loch\f1\fs22\lang1033\i0\b0 A major problem arises when the functional and alternate models are written in different  languages. The different languages require that the shared constants, which describe the width and position of each field in each instruction format and instruction a
nd associated functions, to insert and extract values to and from the instruction words in the programs being generated/compiled or read from memory and decoded be automatically generated from a specification language such as CSL. }
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\afs22\lang1033\ltrch\dbch\langfe1033\hich\fs22\lang1033\loch\fs22\lang1033 
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\afs22\lang1033\ltrch\dbch\langfe1033\hich\fs22\lang1033\loch\fs22\lang1033 {\rtlch \ltrch\loch\f1\fs22\lang1033\i0\b0 The automatic generation of an instruction set architecture in RTL and alternate model  languages eliminates inconsistencies between the functional unit and alternate models. Instruction formats and instructions are built using hierarchies of fields. enume
rated types are created to specify the opcodes and other sets of select values for an instruction set. The enumerated types area associated with a field in an instruction format or instruction. Instruction formats may be inherited by other instruction form
ats or  instructions. }
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\afs22\lang1033\ltrch\dbch\langfe1033\hich\fs22\lang1033\loch\fs22\lang1033 
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\afs22\lang1033\ab\ltrch\dbch\langfe1033\hich\fs22\lang1033\b\loch\fs22\lang1033\b {\rtlch \ltrch\loch\f1\fs22\lang1033\i0\b CSL Register Specifications}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\afs22\lang1033\ltrch\dbch\langfe1033\hich\fs22\lang1033\loch\fs22\lang1033 {\rtlch \ltrch\loch\f1\fs22\lang1033\i0\b0 CSL can be used to specify registers. The registers can be added to the CSL memory map specification. The registers can be addressed for read and/or write operations. The CSLC generates hardware which selects the registers for read and/or write operations.
 instruction set architecture's can be associated with registers. Fields in registers can be defined}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\afs22\lang1033\ltrch\dbch\langfe1033\hich\fs22\lang1033\loch\fs22\lang1033 
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\afs22\lang1033\ab\ltrch\dbch\langfe1033\hich\fs22\lang1033\b\loch\fs22\lang1033\b {\rtlch \ltrch\loch\f1\fs22\lang1033\i0\b CSL Decoder Specifications}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\afs22\lang1033\ltrch\dbch\langfe1033\hich\fs22\lang1033\loch\fs22\lang1033 {\rtlch \ltrch\loch\f1\fs22\lang1033\i0\b0 CSL can be used to specify that decoders be generated from signals, registers, fields, and instruction set architecture's. The fields can reside in signals or registers. Decoders can be generated from registers with instruction set architecture's associate
d with them. The decoders can have enable signals which qualify the decoders outputs. Decoders can be generated to decode the memory addresses using the CSL memory map specification.}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\afs22\lang1033\ltrch\dbch\langfe1033\hich\fs22\lang1033\loch\fs22\lang1033 
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\afs22\lang1033\ab\ltrch\dbch\langfe1033\hich\fs22\lang1033\b\loch\fs22\lang1033\b {\rtlch \ltrch\loch\f1\fs22\lang1033\i0\b CSL Pipeline Specifications}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\afs22\lang1033\ltrch\dbch\langfe1033\hich\fs22\lang1033\loch\fs22\lang1033 {\rtlch \ltrch\loch\f1\fs22\lang1033\i0\b0 The functional units contain logic which implements an algorithm or  instruction set architecture as a digital pipeline. Digital pipelines can be specified and generated using CSL. Pipelines contain pipe stages. The pipe stages in a pipeline share signals 
such as clock, reset, stalls, bypass, and kills. Moreover, there are signals common to the connection between each pipe stage such as data, valid, and control. }
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\afs22\lang1033\ltrch\dbch\langfe1033\hich\fs22\lang1033\loch\fs22\lang1033 
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\afs22\lang1033\ltrch\dbch\langfe1033\hich\fs22\lang1033\loch\fs22\lang1033 {\rtlch \ltrch\loch\f1\fs22\lang1033\i0\b0 In fact data, valid, and control can be modeled as three separate pipelines whose latencies, clock, reset, and stalls are connected identically in each pipeline. Branches and merges of the three different types of parallel pipelines requires careful design
 and any changes to one pipeline must be mirrored in the two other pipelines. Register leaks (data loss due to a pipeline continuing to execute when a downstream pipe stage is stalled) or register data duplication (due to failing to qualify a valid bit wit
h a down stream stall signal) are all problems faced by designers of digital pipelines. Pipeline design and subsequent changes can be simplified  by specifying the digital pipeline in a CSL specification. The specification can be checked for the above ment
ioned problems and the designer can make the necessary changes. CSL pipelines can be combined with interconnect aggregate structures (signal group) to create maintainable pipelines where the definition of the signals in the pipeline is done once in a signa
l group and the signals are then added to the pipeline from a starting pipe stage to an ending pipe stage. }
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\afs22\lang1033\ltrch\dbch\langfe1033\hich\fs22\lang1033\loch\fs22\lang1033 
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\afs22\lang1033\ab\ltrch\dbch\langfe1033\hich\fs22\lang1033\b\loch\fs22\lang1033\b {\rtlch \ltrch\loch\f1\fs22\lang1033\i0\b CSL Verification Specifications}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\afs22\lang1033\ltrch\dbch\langfe1033\hich\fs22\lang1033\loch\fs22\lang1033 {\rtlch \ltrch\loch\f1\fs22\lang1033\i0\b0 Functional units may be verified by modeling the external drivers and receivers of the functional units interface (input and output ports) using alternate models built in different languages. The stimulus and expect vectors, and state data generated by the
 alternate models are  used to verify the functional units. The software which performs the following tasks is generated by the CSLC from a CSL specification  }
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\afs22\lang1033\ltrch\dbch\langfe1033\hich\fs22\lang1033\loch\fs22\lang1033 {\rtlch \ltrch\loch\f1\fs22\lang1033\i0\b0 o vectors and state data are captured in the alternate model and sent to a file or connected to the functional unit {\*\bkmkstart DDE_LINK}t{\*\bkmkend DDE_LINK}est bench via   inter-process communications. }
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\afs22\lang1033\ltrch\dbch\langfe1033\hich\fs22\lang1033\loch\fs22\lang1033 {\rtlch \ltrch\loch\f1\fs22\lang1033\i0\b0 o the file format is understood by the compiler via the vector and state data specification. A file reader is created in the test bench and the file is read into a memory in the test bench, which is the correct size to hold the vector }
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\afs22\lang1033\ltrch\dbch\langfe1033\hich\fs22\lang1033\loch\fs22\lang1033 {\rtlch \ltrch\loch\f1\fs22\lang1033\i0\b0 o a set of signals to control reading the vector/state data memory are created }
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\afs22\lang1033\ltrch\dbch\langfe1033\hich\fs22\lang1033\loch\fs22\lang1033 {\rtlch \ltrch\loch\f1\fs22\lang1033\i0\b0 o a set of signals to connect the stimulus memory to the functional unit under test are inserted into the test bench. }
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\afs22\lang1033\ltrch\dbch\langfe1033\hich\fs22\lang1033\loch\fs22\lang1033 {\rtlch \ltrch\loch\f1\fs22\lang1033\i0\b0 o a set of signals to connect the expect memory to the output comparators are inserted into the test bench. }
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\afs22\lang1033\ltrch\dbch\langfe1033\hich\fs22\lang1033\loch\fs22\lang1033 
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\afs22\lang1033\ltrch\dbch\langfe1033\hich\fs22\lang1033\loch\fs22\lang1033 {\rtlch \ltrch\loch\f1\fs22\lang1033\i0\b0 The automatic connection of the vectors/state data generated by the alternate model to the functional unit in the test bench is fully automated. The CSL interconnect, vector, state data, and test bench specification are all defined in one language. The inc
onsistencies introduced by specifying these different components in different languages and using different tools to generate the RTL and alternate model code are avoided. }
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\afs22\lang1033\ltrch\dbch\langfe1033\hich\fs22\lang1033\loch\fs22\lang1033 
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\afs22\lang1033\ltrch\dbch\langfe1033\hich\fs22\lang1033\loch\fs22\lang1033 {\rtlch \ltrch\loch\f1\fs22\lang1033\i0\b0 Moreover, the CSLC can check the CSL interconnect, vector, state data, and test bench specification in one tool and find inconsistencies between the various specifications.  }
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\afs22\lang1033\ltrch\dbch\langfe1033\hich\fs22\lang1033\loch\fs22\lang1033 
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\afs22\lang1033\ltrch\dbch\langfe1033\hich\fs22\lang1033\loch\fs22\lang1033 {\rtlch \ltrch\loch\f1\fs22\lang1033\i0\b0 Moreover, since the CSL interconnect, vector, state data, and test bench specifications have been read into one object model in a single software program the CSL syntax supports reading objects such as the entire set of output signals from a functional uni
t using one statement. Using a signal signal which refers to a group of objects facilitates changes in the sub objects (name and width changes, additions and deletions) without having to change the upper level interface name which is used to specify that t
he output signals constitute a vector.}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\afs22\lang1033\ltrch\dbch\langfe1033\hich\fs22\lang1033\loch\fs22\lang1033 
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\afs22\lang1033\ab\ltrch\dbch\langfe1033\hich\fs22\lang1033\b\loch\fs22\lang1033\b {\rtlch \ltrch\loch\f1\fs22\lang1033\i0\b CSL FIFO Specification}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\afs22\lang1033\ltrch\dbch\langfe1033\hich\fs22\lang1033\loch\fs22\lang1033 
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\afs22\lang1033\ltrch\dbch\langfe1033\hich\fs22\lang1033\loch\fs22\lang1033 
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\afs22\lang1033\ab\ltrch\dbch\langfe1033\hich\fs22\lang1033\b\loch\fs22\lang1033\b {\rtlch \ltrch\loch\f1\fs22\lang1033\i0\b CSL Register File Specification}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\afs22\lang1033\ltrch\dbch\langfe1033\hich\fs22\lang1033\loch\fs22\lang1033 
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\afs22\lang1033\ltrch\dbch\langfe1033\hich\fs22\lang1033\loch\fs22\lang1033 
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\afs22\lang1033\ab\ltrch\dbch\langfe1033\hich\fs22\lang1033\b\loch\fs22\lang1033\b {\rtlch \ltrch\loch\f1\fs22\lang1033\i0\b CSLC generators}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\afs22\lang1033\ltrch\dbch\langfe1033\hich\fs22\lang1033\loch\fs22\lang1033 
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\afs22\lang1033\ltrch\dbch\langfe1033\hich\fs22\lang1033\loch\fs22\lang1033 {\rtlch \ltrch\loch\f1\fs22\lang1033\i0\b0 -auto router}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\afs22\lang1033\ltrch\dbch\langfe1033\hich\fs22\lang1033\loch\fs22\lang1033 {\rtlch \ltrch\loch\f1\fs22\lang1033\i0\b0 -auto mapper}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\afs22\lang1033\ltrch\dbch\langfe1033\hich\fs22\lang1033\loch\fs22\lang1033 
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\afs22\lang1033\ltrch\dbch\langfe1033\hich\fs22\lang1033\loch\fs22\lang1033 {\rtlch \ltrch\loch\f1\fs22\lang1033\i0\b0 cslc checkers}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\afs22\lang1033\ltrch\dbch\langfe1033\hich\fs22\lang1033\loch\fs22\lang1033 {\rtlch \ltrch\loch\f1\fs22\lang1033\i0\b0 -interconnect}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\afs22\lang1033\ltrch\dbch\langfe1033\hich\fs22\lang1033\loch\fs22\lang1033 {\rtlch \ltrch\loch\f1\fs22\lang1033\i0\b0 -pipeline}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\afs22\lang1033\ltrch\dbch\langfe1033\hich\fs22\lang1033\loch\fs22\lang1033 {\rtlch \ltrch\loch\f1\fs22\lang1033\i0\b0 -memory map}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\afs22\lang1033\ltrch\dbch\langfe1033\hich\fs22\lang1033\loch\fs22\lang1033 
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\afs22\lang1033\ltrch\dbch\langfe1033\hich\fs22\lang1033\loch\fs22\lang1033 {\rtlch \ltrch\loch\f1\fs22\lang1033\i0\b0 CSL types have relationships that create a system for specifying chip}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\afs22\lang1033\ltrch\dbch\langfe1033\hich\fs22\lang1033\loch\fs22\lang1033 {\rtlch \ltrch\loch\f1\fs22\lang1033\i0\b0 designs that has not been previously available in one language and}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\afs22\lang1033\ltrch\dbch\langfe1033\hich\fs22\lang1033\loch\fs22\lang1033 {\rtlch \ltrch\loch\f1\fs22\lang1033\i0\b0 compiler. }
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\afs22\lang1033\ltrch\dbch\langfe1033\hich\fs22\lang1033\loch\fs22\lang1033 
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\afs22\lang1033\ltrch\dbch\langfe1033\hich\fs22\lang1033\loch\fs22\lang1033 {\rtlch \ltrch\loch\f1\fs22\lang1033\i0\b0 signal<->field}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\afs22\lang1033\ltrch\dbch\langfe1033\hich\fs22\lang1033\loch\fs22\lang1033 
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\afs22\lang1033\ltrch\dbch\langfe1033\hich\fs22\lang1033\loch\fs22\lang1033 {\rtlch \ltrch\loch\f1\fs22\lang1033\i0\b0 field<->enumerated type}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\afs22\lang1033\ltrch\dbch\langfe1033\hich\fs22\lang1033\loch\fs22\lang1033 {\rtlch \ltrch\loch\f1\fs22\lang1033\i0\b0 field<->decoder generation}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\afs22\lang1033\ltrch\dbch\langfe1033\hich\fs22\lang1033\loch\fs22\lang1033 
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\afs22\lang1033\ltrch\dbch\langfe1033\hich\fs22\lang1033\loch\fs22\lang1033 {\rtlch \ltrch\loch\f1\fs22\lang1033\i0\b0 interconnect_connectivity_objects<->vector specification}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\afs22\lang1033\ltrch\dbch\langfe1033\hich\fs22\lang1033\loch\fs22\lang1033 
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\afs22\lang1033\ltrch\dbch\langfe1033\hich\fs22\lang1033\loch\fs22\lang1033 {\rtlch \ltrch\loch\f1\fs22\lang1033\i0\b0 fifo<->state data}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\afs22\lang1033\ltrch\dbch\langfe1033\hich\fs22\lang1033\loch\fs22\lang1033 {\rtlch \ltrch\loch\f1\fs22\lang1033\i0\b0 memory<->state data}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\afs22\lang1033\ltrch\dbch\langfe1033\hich\fs22\lang1033\loch\fs22\lang1033 {\rtlch \ltrch\loch\f1\fs22\lang1033\i0\b0 register_file<->state data}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\afs22\lang1033\ltrch\dbch\langfe1033\hich\fs22\lang1033\loch\fs22\lang1033 
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\afs22\lang1033\ltrch\dbch\langfe1033\hich\fs22\lang1033\loch\fs22\lang1033 {\rtlch \ltrch\loch\f1\fs22\lang1033\i0\b0 vector<->test bench}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\afs22\lang1033\ltrch\dbch\langfe1033\hich\fs22\lang1033\loch\fs22\lang1033 {\rtlch \ltrch\loch\f1\fs22\lang1033\i0\b0 state data<->test bench}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\afs22\lang1033\ltrch\dbch\langfe1033\hich\fs22\lang1033\loch\fs22\lang1033 
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\afs22\lang1033\ltrch\dbch\langfe1033\hich\fs22\lang1033\loch\fs22\lang1033 {\rtlch \ltrch\loch\f1\fs22\lang1033\i0\b0 memory map<->interconnect}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\afs22\lang1033\ltrch\dbch\langfe1033\hich\fs22\lang1033\loch\fs22\lang1033 {\rtlch \ltrch\loch\f1\fs22\lang1033\i0\b0 memory map<->registers}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\afs22\lang1033\ltrch\dbch\langfe1033\hich\fs22\lang1033\loch\fs22\lang1033 
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\afs22\lang1033\ltrch\dbch\langfe1033\hich\fs22\lang1033\loch\fs22\lang1033 {\rtlch \ltrch\loch\f1\fs22\lang1033\i0\b0 registers<->field}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\afs22\lang1033\ltrch\dbch\langfe1033\hich\fs22\lang1033\loch\fs22\lang1033 {\rtlch \ltrch\loch\f1\fs22\lang1033\i0\b0 registers<->instruction set architecture}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\afs22\lang1033\ltrch\dbch\langfe1033\hich\fs22\lang1033\loch\fs22\lang1033 {\rtlch \ltrch\loch\f1\fs22\lang1033\i0\b0 registers<->interconnect}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\afs22\lang1033\ltrch\dbch\langfe1033\hich\fs22\lang1033\loch\fs22\lang1033 
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\afs22\lang1033\ltrch\dbch\langfe1033\hich\fs22\lang1033\loch\fs22\lang1033 {\rtlch \ltrch\loch\f1\fs22\lang1033\i0\b0 instruction set architecture<->decoder generation}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\afs22\lang1033\ltrch\dbch\langfe1033\hich\fs22\lang1033\loch\fs22\lang1033 
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\afs22\lang1033\ltrch\dbch\langfe1033\hich\fs22\lang1033\loch\fs22\lang1033 {\rtlch \ltrch\loch\f1\fs22\lang1033\i0\b0 pipeline<->interconnect}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\afs22\lang1033\ltrch\dbch\langfe1033\hich\fs22\lang1033\loch\fs22\lang1033 {\rtlch \ltrch\loch\f1\fs22\lang1033\i0\b0 pipeline<->register file}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\afs22\lang1033\ltrch\dbch\langfe1033\hich\fs22\lang1033\loch\fs22\lang1033 {\rtlch \ltrch\loch\f1\fs22\lang1033\i0\b0 pipeline<->fifo}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\afs22\lang1033\ltrch\dbch\langfe1033\hich\fs22\lang1033\loch\fs22\lang1033 
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\afs22\lang1033\ltrch\dbch\langfe1033\hich\fs22\lang1033\loch\fs22\lang1033 {\rtlch \ltrch\loch\f1\fs22\lang1033\i0\b0 CSL features}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\afs22\lang1033\ltrch\dbch\langfe1033\hich\fs22\lang1033\loch\fs22\lang1033 {\rtlch \ltrch\loch\f1\fs22\lang1033\i0\b0 high level language for specifying the relationships between different}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\afs22\lang1033\ltrch\dbch\langfe1033\hich\fs22\lang1033\loch\fs22\lang1033 {\rtlch \ltrch\loch\f1\fs22\lang1033\i0\b0 design components}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\afs22\lang1033\ltrch\dbch\langfe1033\hich\fs22\lang1033\loch\fs22\lang1033 
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\afs22\lang1033\ltrch\dbch\langfe1033\hich\fs22\lang1033\loch\fs22\lang1033 
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\afs22\lang1033\ltrch\dbch\langfe1033\hich\fs22\lang1033\loch\fs22\lang1033 
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\afs22\lang1033\ltrch\dbch\langfe1033\hich\fs22\lang1033\loch\fs22\lang1033 
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\afs22\lang1033\ltrch\dbch\langfe1033\hich\fs22\lang1033\loch\fs22\lang1033 
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\afs22\lang1033\ltrch\dbch\langfe1033\hich\fs22\lang1033\loch\fs22\lang1033 
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\afs22\lang1033\ltrch\dbch\langfe1033\hich\fs22\lang1033\loch\fs22\lang1033 
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\afs22\lang1033\ltrch\dbch\langfe1033\hich\fs22\lang1033\loch\fs22\lang1033 
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\afs22\lang1033\ltrch\dbch\langfe1033\hich\fs22\lang1033\loch\fs22\lang1033 
\par }