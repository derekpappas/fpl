yum -y upgrade
rpm --import http://dag.wieers.com/rpm/packages/RPM-GPG-KEY.dag.txt
rpm --import http://dag.wieers.com/rpm/packages/RPM-GPG-KEY.dag.txt
rpm -K rpmforge-release-0.3.6-1.el5.rf.*.rpm
yum install yum-priorities
rpm -Uhv http://apt.sw.be/redhat/el5/en/x86_64/rpmforge/RPMS//rpmforge-release-0.3.6-1.el5.rf.x86_64.rpm
yum -y install ncftp
yum -y check-update
yum -y install perl-MIME-Lite
yum -y install perl-Readonly
yum -y install perl-HTML-Template
yum -y install libstdc++.x86_64  
yum -y install libstdc++-devel.x86_64    
yum -y install libpng libpng-devel
mkdir /opt/tools
chown -R fpl:fpl /opt/tools
chmod -R 775 /opt/tools
mkdir /storage

###########################################################################
XERCESC BUILD INSTRUCTIONS

see xercesc build instructions at 
http://xerces.apache.org/xerces-c/build-
http://xerces.apache.org/xerces-c/build-winunix-2.html#UNIX

export XERCESCROOT=<full-path-to-xerces-c-src_2_8_0>
cd $XERCESCROOT/src/xercesc
./runConfigure -plinux -cgcc -xg++ -minmem -nsocket -tnative -rpthread

aving build problems?
Read instructions at http://xerces.apache.org/xerces-c/build.html
Still cannot resolve it?
Find out if someone else had the same problem before.
Go to http://marc.theaimsgroup.com/?l=xerces-c-dev
###########################################################################
See Sun JDK BUILD INSTRUCTIONS AT 
Sun Java JDK 6
THE JAVA VERSION BELOW MAY BE DIFFERENT DEPENDENDING ON WHAT IS THE LATEST VERSION FROM SUN.

Set up rpmbuild:

vi ~/.rpmmacros
Make sure the file contents is:

%_topdir /home/<username>/rpmbuild
%_tmppath %{_topdir}/tmp
with <username> replaced with your logon name (if you are using root the path would be /root/rpmbuild).

mkdir -p ~/rpmbuild/{SOURCES,SRPMS,SPECS,RPMS,tmp,BUILD}
yum install -y rpm-build gcc gcc-c++ redhat-rpm-config jpackage-utils
Download JDK6 Update 6 (or the latest version) from java.sun.com. Get the .rpm.bin version. The file I got was called jdk-6u6-linux-i586-rpm.bin.

chmod +x jdk-6u6-linux-i586-rpm.bin
./jdk-6u6-linux-i586-rpm.bin
wget http://mirrors.dotsrc.org/jpackage/1.7/generic/non-free/RPMS/java-1.6.0-sun-compat-1.6.0.06-1jpp.i586.rpm
rpm -Uvh jdk-6u1-linux-i586.rpm java-1.6.0-sun-compat-1.6.0.01-1jpp.i586.rpm
With the JDK successfully installed (hopefully) we use Alternatives to select the Sun JDK:

/usr/sbin/alternatives --config java

Make sure the selected version is along the lines of /usr/lib/jvm/jre-1.6.0-sun/bin/java.

At this point java -version should give something like:

java version "1.6.0_06"
Java(TM) SE Runtime Environment (build 1.6.0_06-b02)
Java HotSpot(TM) Client VM (build 10.0-b22, mixed mode, sharing)
Now to add some environment variables:

vi /etc/profile.d/java.sh
Add the following:

export JAVA_HOME="/usr/java/jdk1.6.0_06"
export JAVA_PATH="$JAVA_HOME"
export PATH="$PATH:$JAVA_HOME"
Note that JAVA_HOME is not set to "/usr/java/jdk1.6.0_06/bin". I don't think this is the standard but it's an easy way to get CruiseControl to work (see here).

You will also need to restart your session for these changes to take effect or just export the variables directly to the prompt.

###########################################################################
ANT INSTALLATION
download ant 1.65
download ant-contrib <version> to /opt/tools/ant-contrib
download cpptasks <version> to /opt/tools/cpptasks

export ANT_HOME=..
cd $ANT_HOME/lib

cp /opt/tools/ant-contrib/lib/ant-contrib.jar  .
cp /opt/tools/cpptasks-1.0b4/cpptasks.jar .


###########################################################################

###########################################################################

winunix-2.html#UNIX

cat /etc/profile
cd /usr/share/ant
cd /usr/share/ant/lib
iptables -A INPUT -p tcp --dport 22 --syn -m limit --limit 1/m --limit-burst 3 -j ACCEPT
iptables -A INPUT -p tcp --dport 22 --syn -j DROP

echo NOW INSTALL BOOST BY DOWNLOADING 1.34.1 



