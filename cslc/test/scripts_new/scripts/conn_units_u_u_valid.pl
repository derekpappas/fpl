#!/usr/bin/perl

#Author Petronela
use strict;

my $path = "$ENV{WORK}/test/csl_test_gen/";
print "the path for generated tests is: $path"."conn_units_u_u_valid/ \n";

if(! defined $ENV{WORK}){
    die "[ERROR] The environment variable WORK is not set. Set it to point to TOT/se";
}

my $totDir     = $ENV{WORK};
&testDirExists($totDir);

sub testDirExists {
    my($execName) = @_;
    unless(-e "$execName") { die "[ERROR] The directory $execName does not exist!\n"; }
    
}

sub mkDir {
    my($dirName) = @_;
    unless(-e "$dirName")  { `mkdir $dirName`; }
}

sub word {
    my $val = $_[0];
    my @alpha = ('a'..'z','A'..'Z');
    my @alphanumeric = ('a'..'z','A'..'Z','0'..'9');
    my $ret = $alpha[rand @alpha];
    for(my $i=1;$i < $val; ++$i){
        $ret = $ret.$alphanumeric[rand @alphanumeric];
    }
    return $ret;
}

foreach(my $i = 1; $i <= 5; $i++) {
    my @map1 = ("b0","b1");
    my @map2 = ("c0","c1","a0","a1");
    my @map3 = ("b0","b1");
    my @map4 = ("a0","a1");
    my @map5 = ("d0","d1","e0","e1");
    my @map6 = ("c0","c1","c2");
    my @map8 = ("f0","f1");
    my @map7 = ("c0","c1");
    my @map9 = ("d0","d1");
    my @map10 = ("d0","d1","e0","e1","e2");
    my $it1;
    my $it2;
    my $it3 = "";
    my $it4 = "";
    my ($it5,$it6);
    if($i <= 2){
        foreach $it1 (@map1) {
            foreach $it2 (@map2){
                if($it1 ne $it2){
                    if($i == 1){
                        foreach $it3 (@map3){
                            foreach $it4 (@map4){
                                if($it3 ne $it4){
                                    &main($i,$it1,$it2,$it3,$it4);
                                }
                            }
                        }
                    }
                    else{
                        foreach $it5 (@map5){
                            foreach $it6 (@map1){
                                if($it5 ne $it6){
                                    &main($i,$it1,$it2,$it5,$it6);
                                }       
                            }
                        }
                    }
                }
            }
        }
    }
    else {
        foreach $it1 (@map7) {
            foreach $it2 (@map8){
                if($it1 ne $it2){
                    if($i == 3){
                        foreach $it3 (@map9){
                            foreach $it4 (@map6){
                                if($it3 ne $it4){
                                    &main($i,$it1,$it2,$it3,$it4);
                                }
                            }
                        }
                    }
                    else{
                        foreach $it5 (@map9){
                            foreach $it6 (@map7){
                                if($it5 ne $it6){
                                    &main($i,$it1,$it2,$it5,$it6);
                                }       
                            }
                        }
                    }
                }
            }
        }
    }
    
}

sub main {
    my ($i,$it1,$it2,$it3,$it4) = @_;
    my $test_name;
   
    $test_name = "conn_unit_u_u".$i."_".$it1."_".$it2."_".$it3."_".$it4."_legal.csl";
   
    &createCslFile($test_name, $i,$it1,$it2,$it3,$it4);
}
sub createCslFile {
    my($test_name, $i,$it1,$it2,$it3,$it4) = @_;
    
    my $val1 = int(rand(30)) + 1;
    my $val2 = int(rand(30)) + 1;
    my $val3 = int(rand(30)) + 1;
    my $val4 = int(rand(30)) + 1;
    my $val5 = int(rand(30)) + 1;
    my $word = &word($val1);
    my $word1 = &word($val2);
    my $word2 = &word($val1);
    my $word3 = &word($val2);
    my $word4 = &word($val3);
    my $word5 = &word($val4);
    my $word6 = &word($val5);
    &mkDir("$path/conn_units_u_u_valid");
    open(FH,">$path/conn_units_u_u_valid/$test_name");
    
    print FH "//Generated by Petronela\n";
    print FH "//testing the command connect_units for connections unit to unit --legal \n\n";
   
    if($i > 4){
        print FH "csl_interface ifca {\n";
        print FH "  csl_port p_ifca(input,$val1);\n";
        print FH "  csl_port p_ifa(input,$val2);\n";
        print FH "  csl_port p_ifta(input,$val3);\n";
        print FH "  csl_port p_iftca(output,$val4);\n";
        print FH "  csl_port pt_ifa(output,$val5);\n";
        print FH "  ifca() {\n";
        print FH "  }\n";
        print FH "};\n\n";
        print FH "csl_interface ifcb {\n";
        print FH "  csl_port p_ifca(input,$val1);\n";
        print FH "  csl_port p_ifa(input,$val2);\n";
        print FH "  csl_port p_ifta(input,$val3);\n";
        print FH "  csl_port p_iftca(output,$val4);\n";
        print FH "  csl_port pt_ifa(output,$val5);\n";
        print FH "  ifcb() {\n";
        print FH "  }\n";
        print FH "};\n\n";
        print FH "csl_signal_group sga {\n";
        print FH "  csl_signal s_sga($val1);\n";
        print FH "  csl_signal s_sa($val2);\n";
        print FH "  csl_signal s_sgga($val3);\n";
        print FH "  csl_signal s_siga($val4);\n";
        print FH "  csl_signal s_sigga($val5);\n";
        print FH "  sga() {\n";
        print FH "  }\n";
        print FH "};\n\n";
        print FH "csl_signal_group sgb {\n";
        print FH "  csl_signal s_sga($val1);\n";
        print FH "  csl_signal s_sa($val2);\n";
        print FH "  csl_signal s_sgga($val3);\n";
        print FH "  csl_signal s_siga($val4);\n";
        print FH "  csl_signal s_sigga($val5);\n";
        print FH "  sgb() {\n";
        print FH "  }\n";
        print FH "};\n\n";
    }
    print FH "csl_unit a {\n";
    print FH "  csl_port p_data(output,$val1);\n"; 
    print FH "  csl_port p_addr(output,$val1);\n";
    print FH "  csl_port p_data1(output,$val1);\n";
   
    if($i > 2) {
        print FH "  csl_signal s_data($val2);\n"; 
        print FH "  csl_signal s_addr($val2);\n";
        print FH "  csl_signal s_data1($val2);\n";
        print FH "  csl_signal s_addr1($val2);\n";
        if($i > 4){
            print FH "  ifca ifc;\n";
        }
    }
  
    print FH "  a() {\n";        
    if($i > 4){
        print FH "    ifc.set_prefix(\"$word3\");\n";
    }
    print FH "  }\n";        
    print FH "};\n";        
    print FH "\n";
    if($i >= 3){
        print FH "csl_unit f {\n";
        print FH "  csl_port p_data(output,$val1);\n"; 
        print FH "  csl_port p_addr(output,$val1);\n";
        print FH "  csl_port p_data1(output,$val1);\n";
        print FH "  csl_signal s_data($val2);\n"; 
        print FH "  csl_signal s_addr($val2);\n";
        print FH "  csl_signal s_data1($val2);\n";
        print FH "  csl_signal s_addr1($val2);\n";
        if($i > 4){
            print FH "  ifcb ifc;\n";   
        }
        print FH "  f() {\n";    
        if($i > 4){
            print FH "    ifc.set_suffix(\"$word4\");\n";
        }
        print FH "  }\n";        
        print FH "};\n";        
        print FH "\n";
    }
    print FH "csl_unit b {\n";  
    if($i <= 2){
        print FH "  a a0;\n";
        print FH "  a a1;\n";
    }
    else {
        print FH "  f f0;\n";
        print FH "  f f1;\n";
        print FH "  a a0;\n";
        print FH "  a a1;\n";
        print FH "  a a2;\n";
        if($i > 4){
            print FH "  ifca ifc;\n";
        }
    }
      
    print FH "  csl_port p_data(output,$val1);\n";
    print FH "  csl_port p_addr(output,$val1);\n";
    if($i > 2) {
        print FH "  csl_signal s_data($val2);\n"; 
        print FH "  csl_signal s_addr($val2);\n";
        print FH "  csl_signal s_data1($val2);\n";
    }
    print FH "  b() {\n";
    if($i > 4){
        print FH "    ifc.set_prefix(\"$word4\");\n";
    }
    print FH "  }\n";        
    print FH "};\n";        
    print FH "\n";
    
    print FH "csl_unit c {\n";
   # if($i <= 2){
   #     print FH "  b b0;\n";
   #     print FH "  b b1;\n";
   # }
   # else {
   #     print FH "  b b0;\n";
   #     print FH "  b b1;\n";
   #     print FH "  b b2;\n";
   #     print FH "  a a0;\n";
        if($i > 4){
            print FH "  ifcb ifc;\n";
        }
   # }
   
    print FH "  csl_port p_data(input,$val1);\n";
    print FH "  csl_port p_addr(input,$val1);\n";
    print FH "  csl_port p(input,$val1);\n";
    if($i > 2 ) {
        print FH "  csl_signal s_data($val2);\n"; 
        print FH "  csl_signal s_addr($val2);\n";
    }
    print FH "  c() {\n";
    if($i > 4){
        print FH "    ifc.set_suffix(\"$word3\");\n";
    }
    print FH "  }\n";        
    print FH "};\n";        
    print FH "\n";
    
    print FH "csl_unit d {\n";  
    if($i <= 2){
        print FH "  b b0;\n";
        print FH "  b b1;\n";
        print FH "  c c0;\n";
        print FH "  c c1;\n";
    }
    else {
        print FH "  f f0;\n";
        print FH "  f f1;\n";
        print FH "  b b0;\n";
        print FH "  b b1;\n";
        print FH "  c c0;\n";
        print FH "  c c1;\n";
        if($i > 4){
            print FH "  sga sg;\n";
        }
    }
    
    print FH "  csl_port p_data1(output,$val1);\n"; 
    print FH "  csl_port p_addr1(output,$val1);\n";
    print FH "  csl_port p1(output,$val1);\n";
    if($i > 2) {        
        print FH "  csl_signal s_data($val2);\n"; 
        print FH "  csl_signal s_addr($val2);\n";
        print FH "  csl_signal s_data1($val2);\n";
        print FH "  csl_signal s_addr1($val2);\n";
    }
    print FH "  d() {\n";
    if($i <= 2) {
        if($it2 eq "a0" || $it2 eq "a1"){
            print FH "    $it1.connect_units(c1,\"$word\");\n";
            print FH "    $it1.$it2.connect_units(c0);\n";
        }
    
       else{
           print FH "    $it1.connect_units($it2,\"$word\");\n";
       }
   }
   elsif($i > 2) {
       print FH "    $it1.connect_units($it2);\n";
       print FH "    $it1.connect_units(b1.$it2,\"$word\");\n";
   }
   if($i > 4){
       print FH "    sg.set_prefix(\"$word5\");\n"; 
   }
   
   
   print FH "  }\n";        
   print FH "};\n";        
   print FH "\n";
   
   
   print FH "csl_unit e {\n";  
   if($i <= 2){
   #    print FH "  d d0;\n";
   #    print FH "  d d1;\n";
       print FH "  b b0;\n";
       print FH "  b b1;\n";
       print FH "  c c0;\n";
   }
   elsif($i > 2) {
       print FH "  d d0;\n";
       print FH "  d d1;\n";
       print FH "  b b0;\n";
       print FH "  b b1;\n";
       print FH "  c c0;\n";
       print FH "  c c1;\n";
       print FH "  c c2;\n";
       if($i > 4){
           print FH "  sgb sg;\n";
       }
   }
   
   print FH "  csl_port p_data1(input,$val1);\n"; 
   print FH "  csl_port p_addr1(input,$val1);\n";   
   print FH "  csl_port p_data2(input,$val1);\n";
   
   if($i > 2) {
       print FH "  csl_signal s_data($val2);\n"; 
       print FH "  csl_signal s_addr($val2);\n";
   }
   print FH "  e() {\n";
   if($i == 1) {
       print FH "    c0.connect_units($it3,\"$word1\");\n";
       print FH "    c0.connect_units($it4);\n";
   }
   elsif($i == 3) {
       print FH "    $it3.connect_units($it4,\"$word1\");\n";
       print FH "    $it3.connect_units($it4);\n";
   }
   if($i > 4 ) {
       print FH "    sg.set_suffix(\"$word\");\n";
   }
   print FH "  }\n";        
   print FH "};\n";        
   print FH "\n";
   
   print FH "csl_unit top {\n";
   if($i <=2){
       print FH "  d d0;\n";
       print FH "  d d1;\n";
       print FH "  d d2;\n";
       print FH "  e e0;\n"; 
       print FH "  e e1;\n"; 
   }
   elsif($i > 2) {
       print FH "  d d0;\n";
       print FH "  d d1;\n";
       print FH "  e e0;\n"; 
       print FH "  e e1;\n"; 
       print FH "  e e2;\n";
       print FH "  a a0;\n";
       if($i > 4){
           print FH "  sga sg;\n";
       }
   }
   
   print FH "  csl_port ptop(input,$val1);\n";
   print FH "  csl_port p(input,$val1);\n";
   
   
   print FH "  top(){\n";
   if($i == 2) {
       if($it3 eq "e0" || $it3 eq "e1"){
           print FH "    $it3.connect_units(d0.$it4);\n";
           print FH "    $it3.connect_units(d0,\"$word2\");\n";
           print FH "    d2.connect_units(e0,\"$word3\");\n"; 
       }
       else {
           print FH "    $it3.connect_units(e0.$it4);\n";
       }
   }
   elsif($i >= 4) {
       print FH "    $it3.connect_units(e0.d0.$it4,\"$word2\");\n";
       print FH "    d1.connect_units(e2,\"$word3\");\n";
   }
   if($i > 4 ) {
       print FH "    sg.set_prefix(\"$word2\");\n";
   }
   print FH "  }\n";        
   print FH "};\n";        
   print FH "\n";
   
    close(FH);

}
