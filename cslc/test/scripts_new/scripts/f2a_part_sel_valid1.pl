#!/usr/bin/perl

#oanab
#f2a with part select [:] form

use strict;

print "Generated tests path : test/csl_test_gen/f2a_part_sel_valid1/\n";

if(! defined $ENV{WORK}){
    die "[ERROR] The environment variable WORK is not set. Set it to point to TOT/se";
}

my $totDir     = $ENV{WORK};
&testDirExists($totDir);

sub testDirExists {
    my($execName) = @_;
    unless(-e "$execName") { die "[ERROR] The directory $execName does not exist!\n"; }
    
}

sub mkDir {
    my($dirName) = @_;
    unless(-e "$dirName")  { `mkdir $dirName`; }
}

foreach(my $i = 1; $i <= 250; $i++) {
    &main($i);
}

sub main {
    my $i = $_[0];
    my %dir = (1,"input",
	       2,"output",
	       3,"inout");
    my $dir = $_[4];
    my $test_name = "f2a_part_sel".$i."_legal.csl";
   	&createCslFile($test_name, $i, %dir);
}

sub createCslFile {
    my ($test_name, $i, %dir) = @_;
    my $path = "$ENV{WORK}/test/csl_test_gen";
    my $k = int(rand(20)) + int(rand(20));
    my $zero = 0;
    my $one = 1;
    my $two = 2;
    my $tre = 3;
    my $val1 = int(rand(20)) + 2;
    my $val2 = int(rand(100)) + 3;
    my $val3 = int(rand(100)) + 4;
    my $l = int(rand(3))+1;
    my $m = $k + int(rand(10)) + 1;
    if($test_name=~/(_legal)/){
        &mkDir("$path/f2a_part_sel_valid1");
        open(FH,">$path/f2a_part_sel_valid1/$test_name");
    }
    elsif($test_name=~/(_illegal)/) {
        &mkDir("$path/f2a_part_sel_invalid1"); 
        open(FH,">$path/f2a_part_sel_invalid1/$test_name");
    }
    print FH "//Generated by oanab\n\n";

#bitranges
    print FH "csl_bitrange br1($val1);\n";
    print FH "csl_bitrange br2($val2);\n";
    print FH "csl_bitrange br3($val3);\n";
    print FH "csl_bitrange br4(".($val2+$val3).");\n";
   
#fields
    print FH "csl_field f2($val2);\n";
    print FH "csl_field f5(".($val1+$val2+$val3).");\n\n";

    
#sg k
    if($i > 50 && $i <= 150) {
	print FH "csl_signal_group sg$k {\n";
	print FH "  csl_signal s_a$i(br2);\n";
	print FH "  csl_signal s_b$i(br3);\n";
	print FH "  csl_signal s_c$i($val2);\n";
	print FH "  csl_signal s_d$i(br4);\n";
	print FH "  sg$k () {}\n";
	print FH "};\n\n";
    }

#sg m
    if($i > 100 && $i <= 150) {
	print FH "csl_signal_group sg$m {\n";
	print FH "  csl_signal s_x$i(br2);\n";
	print FH "  csl_signal s_y$i(br3);\n";
	print FH "  sg$k sg$k\_$zero;\n";
	print FH "  sg$k sg$k\_$one;\n";
	print FH "  sg$m () {}\n";
	print FH "};\n\n";
    }

#unit a
    print FH "csl_unit a$k {\n";
    if($i <= 50) {
	print FH "  csl_port p_x$i($dir{$l},f2);\n";
    }
    elsif($i > 50 && $i <= 150) {
	print FH "  csl_port p_a$i($dir{$l},br3);\n";
    }
    elsif($i > 150 && $i <= 200) {
	print FH "  csl_port p_x$i($dir{$l},br2);\n";
	print FH "  csl_port p_y$i($dir{$l},br1);\n";
    }
    elsif($i > 200 && $i <= 250) {
	print FH "  csl_port p_a$i(input,br3);\n";
    }
    print FH "  a$k () {\n";
    print FH "  }\n";
    print FH "};\n\n";


#unit b
    print FH "csl_unit b$k {\n";
    if($i <= 50) {
#f2a : port---spar
	print FH "  a$k a$k\_$zero(.p_x$i(s_y$i));  // f2a : port---spar\n";
	print FH "  csl_signal s_x$i(br4);\n";
	print FH "  csl_parameter par(".($val2).");\n";
	print FH "  csl_signal s_y$i(par);\n";
	print FH "  csl_port p_y$i($dir{$l},br1);\n";
#f2a : port---sig.ps
	print FH "  a$k a$k\_$one(.p_x$i(s_x$i\[".($val2+$val3-1)."\:".($val3)."\]));   // f2a : port---sig.ps\n";
    }
    elsif($i > 50 && $i <= 100) {
#f2a : port---concat expr
	print FH "  a$k a$k\_$zero(.p_a$i({sg$k\_$zero.s_a$i\[".($val2-1)."\:".($val2-1)."\],sg$k\_$zero.s_b$i\[".($val3-1)."\-\:".($val3-1)."\]}));  // f2a : port---concat expr\n";
	print FH "  sg$k sg$k\_$zero;\n";
	print FH "  csl_port p_b$i($dir{$l},f2);\n";
#f2a : port---sg.sig.ps
	print FH "  a$k a$k\_$one(.p_a$i(sg$k\_$zero.s_d$i\[".($val2+$val3-1)."\:".($val2)."\]));   // f2a : port---sg.sig.ps\n";
    }
    elsif($i > 100 && $i <= 150) {
#f2a : port---concat expr
	print FH "  a$k a$k\_$zero(.p_a$i({sg$m\_$zero.s_y$i\[".($val3-1)."\:".(1)."\] & sg$m\_$zero.sg$k\_$zero.s_b$i\[".($val3-1)."\-\:".($val3-1)."\],sg$m\_$zero.sg$k\_$zero.s_a$i\[".($val2-1)."\:".($val2-1)."\] | sg$m\_$zero.sg$k\_$zero.s_c$i\[".($val2-1)."\-\:".(1)."\]}));  // f2a : port---concat expr\n";
	print FH "  sg$m sg$m\_$zero;\n";
#f2a : port---concat expr
	print FH "  a$k a$k\_$one(.p_a$i({sg$m\_$zero.sg$k\_$one.s_d$i\[".($val2+$val3-1)."\:".($val2+2)."\],sg$m\_$zero.sg$k\_$one.s_b$i\[".($val3-1)."\],sg$m\_$zero.sg$k\_$one.s_c$i\[".($val2-1)."\]}));  // f2a : port---concat expr\n";
#f2a : port---sg.sg.sig.ps
	print FH "  a$k a$k\_$two(.p_a$i(sg$m\_$zero.sg$k\_$zero.s_d$i\[".($val2+$val3-1)."\:".($val2)."\]));   // f2a : port---sg.sg.sig.ps\n";
	print FH "  csl_port p_x$i(input,".($val2+$val3).");\n";
	print FH "  csl_port p_y$i(input,br2);\n";
    }
    elsif($i > 150 && $i <= 200) {
#f2a : port---sig.ps
	print FH "  a$k a$k\_$zero(.p_x$i(s_m$i\[".($val2+$val1+$val3-1)."\:".($val1+$val3)."\]),.p_y$i(s_m$i\[".($val2+$val1+$val3-1)."\:".($val2+$val3)."\]));  // f2a : port---sig.ps\n";
	print FH "  csl_port p_m$i($dir{$l},f5);\n";
	print FH "  csl_signal s_m$i(f5);\n";
#f2a : port---p.ps
	print FH "  a$k a$k\_$one(.p_x$i(p_m$i\[".($val2+$val1+$val3-1)."\:".($val1+$val3)."\]),.p_y$i(p_m$i\[".($val2+$val1+$val3-1)."\:".($val2+$val3)."\]));   // f2a : port---p.ps\n";
    }
    elsif($i > 200 && $i <= 250) {
	print FH "  csl_port p_b$i(inout,br4);\n";
#f2a : port---p.ps
	print FH "  a$k a$k\_$one(.p_a$i(p_b$i\[".($val2+$val3-1)."\:".($val2)."\]));   // f2a : port---p.ps\n";
    }
    print FH "  b$k () {\n";
    if($i > 50 && $i <= 100) {
	print FH "    sg$k\_$zero.s_c$i = sg$k\_$zero.s_d$i\[".($val2+$val3-1)."\:".($val3)."\];  // assign : sg.s---sg.s.ps\n";
    }
    elsif($i > 100 && $i <= 150) {
	print FH "    sg$m\_$zero.sg$k\_$one.s_a$i = sg$m\_$zero.s_x$i;  // assign : sg.sg.s---sg.s\n";
    }
    print FH "  }\n";
    print FH "};\n\n";


#unit c
    print FH "csl_unit c$k {\n";
    if($i <= 50) {
	print FH "  csl_signal s_y$i(".($val1+2*$val2).");\n";
#f2a : port---sig.ps
	print FH "  b$k b$k\_$one(.p_y$i(s_y$i\[".($val1+2*$val2-1)."\:".(2*$val2)."\]));   // f2a : port---sig.ps\n";
    }
    elsif($i > 50 && $i <= 100) {
	print FH "  b$k b$k\_$zero(.p_b$i(sg$k\_$one.s_a$i));  // f2a : port---sg.sig\n";
	print FH "  sg$k sg$k\_$one;\n";
#f2a : port---sg.sig.ps
	print FH "  b$k b$k\_$one(.p_b$i(sg$k\_$one.s_d$i\[".($val2+$val3-1)."\:".($val3)."\]));   // f2a : port---sg.sig.ps\n";
#f2a : port---concat expr
	print FH "  b$k b$k\_$two(.p_b$i({sg$k\_$one.s_b$i\[".($val3-1)."\],sg$k\_$one.s_c$i\[".($val2-1)."\-:".($val2-1)."\]}));  // f2a : port---concat expr\n";
    }
    elsif($i > 100 && $i <= 150) {
#f2a : port---sg.sg.sig
	print FH "  b$k b$k\_$zero(.p_x$i(sg$m\_$one.sg$k\_$zero.s_d$i),.p_y$i(sg$m\_$one.sg$k\_$zero.s_c$i));  // f2a : port---sg.sg.sig\n";
	print FH "  b$k b$k\_$one(.p_x$i(sg$m\_$one.sg$k\_$one.s_d$i),.p_y$i(sg$m\_$one.sg$k\_$zero.s_a$i));  // f2a : port---sg.sg.sig\n";
	print FH "  sg$m sg$m\_$one;\n";
#f2a : port---sg.sg.sig.ps
	print FH "  a$k a$k\_$one(.p_a$i(sg$m\_$one.sg$k\_$one.s_d$i\[".($val2+$val3-1)."\:".($val2)."\]));   // f2a : port---sg.sg.sig.ps\n";

    }
    elsif($i > 150 && $i <= 200) {
#f2a : port---p.ps
	print FH "  b$k b$k\_$zero(.p_m$i(p_n$i\[".(2*$val2+$val1+$val3-1)."\-\:".($val1+$val2+$val3)."\]));  // f2a : port---p.ps\n";
	print FH "  csl_port p_n$i($dir{$l},".(2*$val2+$val1+$val3).");\n";
#f2a : port---p.ps
	print FH "  b$k b$k\_$one(.p_m$i(p_n$i\[".(2*$val2+$val1+$val3-1)."\:".($val2)."\]));   // f2a : port---p.ps\n";
    }
    elsif($i > 200 && $i <= 250) {
#f2a : port---p.ps
	print FH "  b$k b$k\_$zero(.p_b$i(p_c$i\[".($val2+$val1+$val3-1)."\:".($val1)."\]));  // f2a : port---p.ps\n";
	print FH "  csl_port p_c$i(inout,".($val2+2*$val1+$val3).");\n";
#f2a : port---p.ps
	print FH "  b$k b$k\_$one(.p_b$i(p_c$i\[".($val2+2*$val1+$val3-1)."\:".(2*$val1)."\]));   // f2a : port---p.ps\n";
    }
    print FH "  c$k () {\n";
    if($i > 100 && $i <= 150) {
	print FH "    {sg$m\_$one.sg$k\_$zero.s_b$i,sg$m\_$one.sg$k\_$one.s_a$i} = {sg$m\_$one.sg$k\_$one.s_b$i,sg$m\_$one.sg$k\_$one.s_c$i};  // assign : concat---concat\n";
	print FH "    sg$m\_$one.s_x$i\[".($val2-1)."\] = sg$m\_$one.s_y$i\[".($val3-1)."\];  // assign : sg.s.ps---sg.s.ps\n";
    }
    print FH "  }\n";
    print FH "};\n\n";











}
