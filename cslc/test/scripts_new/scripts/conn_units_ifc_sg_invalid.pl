#!/usr/bin/perl

#Author Petronela
use strict;
use Switch;

my $path = "$ENV{WORK}/test/csl_test_gen/";
print "the path for generated tests is : $path"."conn_units_ifc_sg_invalid/ \n";

if(! defined $ENV{WORK}){
    die "[ERROR] The environment variable WORK is not set. Set it to point to TOT/se";
}

my $totDir     = $ENV{WORK};
&testDirExists($totDir);

sub testDirExists {
    my($execName) = @_;
    unless(-e "$execName") { die "[ERROR] The directory $execName does not exist!\n"; }
    
}

sub mkDir {
    my($dirName) = @_;
    unless(-e "$dirName")  { `mkdir $dirName`; }
}

for(my $i=1;$i<=15;++$i){
    my @map1 = ("ifca0","ifca1");
    my @map2 = ("ifcb0","ifcb1","ifcb2");
    my @map3 = ("sgc0","sgc1","sgc2");
    my @map4 = ("sgb0","sgb1");
    if($i <=5) {
        foreach my $it1(@map1){
            foreach my $it2(@map2){
                &main($i,$it1,$it2);
            }
        }
    }
    elsif ($i > 5 && $i <=10){
        foreach my $it1(@map3){
            foreach my $it2(@map4){
                &main($i,$it1,$it2);
            }
        }
    }
    else {
        foreach my $it1(@map1){
            foreach my $it2(@map2){
                foreach my $it3(@map3){
                    foreach my $it4(@map4){
                        &main($i,$it1,$it2,$it3,$it4);
                    }
                }
            }
        }
    }
}

sub main {
    my $i = $_[0];
    if($i <= 10){
        my ($i,$it1,$it2) = @_;
        my $test_name = "connect_units_ifc_sg".$i."_".$it1."_".$it2."_illegal.csl";
        &createCslFile($test_name, $i,$it1,$it2);
    }
    else{
        my ($i,$it1,$it2,$it3,$it4) = @_;
        my $test_name = "connect_units_ifc_sg".$i."_".$it1."_".$it2."_".$it3."_".$it4."_illegal.csl";
        &createCslFile($test_name, $i,$it1,$it2,$it3,$it4);
    }
    
}
sub createCslFile {
   
    my($test_name, $i,$it1,$it2,$it3,$it4) = @_;
    my $val1 = int(rand(100)) + 1;
    my $val2 = int(rand(100)) + 1;
   
    &mkDir("$path/conn_units_ifc_sg_invalid");
    open(FH,">$path/conn_units_ifc_sg_invalid/$test_name");
    
    print FH "//Generated by Petronela\n";
    print FH "//testing the method connect_units for conections ifc to signal_group, group_signal to ifc, ifc to ifc ,group_signal to group_signal \n\n";
    print FH "csl_bitrange br($val1);\n";
    print FH "csl_bitrange brt($val2);\n";
    print FH "csl_interface ifca {\n";
    if($i <= 5 ) {
        print FH "  csl_port p_ifca$i(input,$val1);\n";
        print FH "  csl_port p_ifa(input,$val1);\n";
    }
    elsif($i > 5 && $i <= 10) {
        print FH "  csl_port p_ifca$i(output,$val2);\n";
        print FH "  csl_port p_ifa(output,$val2);\n";
        print FH "  csl_port p_if(output,$val2);\n";
    }
    elsif($i > 10 ) { 
        print FH "  csl_port p_ifca$i(input,$val1);\n";
        print FH "  csl_port p_ifa(input,$val1);\n";
        print FH "  csl_port p_if(input,$val1);\n";
        print FH "  csl_port p_ifta$i(input,$val1);\n";
    }
    print FH "  ifca() {\n";
    print FH "  }\n";        
    print FH "};\n";        
    print FH "\n";
    
    print FH "csl_interface ifcb {\n";
    print FH "  ifca ifca0;\n";
    print FH "  ifca ifca1;\n";
    if($i <= 5) {
        print FH "  csl_port p_ifcb$i(input,$val1);\n";
        print FH "  csl_port p_ifb(input,$val1);\n";
        print FH "  csl_port p_if(input,$val1);\n";
    }
    elsif($i > 5 && $i <= 10) {
        print FH "  csl_port p_ifcb$i(output,$val2);\n";
        print FH "  csl_port p_ifb(output,$val2);\n";
        
    }
    elsif($i > 10) {  
        print FH "  csl_port p_ifcb$i(input,$val1);\n";
        print FH "  csl_port p_ifb(input,$val1);\n";
        print FH "  csl_port p_if(input,$val1);\n";
        print FH "  csl_port p_iftb$i(input,$val1);\n";
        print FH "  csl_port p_b(input,$val1);\n";
    }
    print FH "  ifcb() {\n";
    print FH "  }\n";        
    print FH "};\n";        
    print FH "\n";

    print FH "csl_interface ifcd {\n";
    print FH "  ifcb ifcb0;\n";
    print FH "  ifcb ifcb1;\n";
    print FH "  ifcb ifcb2;\n";
    if($i <= 5) {
        print FH "  csl_port p_ifcd$i(input,$val1);\n";
        print FH "  csl_port p_ifd(input,$val1);\n";
        print FH "  csl_port p_if(input,$val1);\n";
    }
    elsif($i > 5 && $i <= 10) {
        print FH "  csl_port p_ifcd$i(output,$val2);\n";
        print FH "  csl_port p_ifd(output,$val2);\n";
        
    }
    elsif($i > 10) {  
        print FH "  csl_port p_ifcd$i(input,$val1);\n";
        print FH "  csl_port p_ifd(input,$val1);\n";
        print FH "  csl_port p_if(input,$val1);\n";
        print FH "  csl_port p_iftd$i(input,$val1);\n";
        print FH "  csl_port p_d(input,$val1);\n";
    }

    print FH "  ifcd() {\n";
    print FH "  }\n";        
    print FH "};\n";        
    print FH "\n";
    
    print FH "csl_interface ifce {\n";
    print FH "  ifcb ifcb0;\n";
    print FH "  ifcb ifcb1;\n";
    print FH "  ifcd ifcd0;\n";
    print FH "  ifcd ifcd1;\n";
    if($i <= 5) {
        print FH "  csl_port p_ifce$i(input,$val1);\n";
        print FH "  csl_port p_ife(input,$val1);\n";
        print FH "  csl_port p_if(input,$val1);\n";
    }
    elsif($i > 5 && $i <= 10) {
        print FH "  csl_port p_ifce$i(output,$val2);\n";
        print FH "  csl_port p_ife(output,$val2);\n";
        print FH "  csl_port p_e(input,$val1);\n"
    }
    elsif($i > 10) {  
        print FH "  csl_port p_ifce$i(input,$val1);\n";
        print FH "  csl_port p_ife(input,$val1);\n";
        print FH "  csl_port p_if(input,$val1);\n";
        print FH "  csl_port p_ifte$i(input,$val1);\n";
    }

    print FH "  ifce() {\n";
    if($i <= 5){
        print FH "    ifcd0.$it2.$it1.connect_units(ifcd1.$it2);\n";
        print FH "    ifcb1.connect_units(ifcd0);\n";
    }
    elsif($i > 10){
        print FH "    ifcd1.$it2.$it1.connect_units(ifcd1.$it2);\n";
        print FH "    ifcd0.ifcb0.connect_units(ifcd1);\n";
    }
    print FH "  }\n";        
    print FH "};\n";        
    print FH "\n";
    
    print FH "csl_interface ifcf {\n";
    print FH "  ifcd ifcd0;\n";
    print FH "  ifce ifce0;\n";
    print FH "  ifce ifce1;\n";
    if($i <= 5) {
        print FH "  csl_port p_ifcf$i(input,$val1);\n";
        print FH "  csl_port p_iff(input,$val1);\n";
        print FH "  csl_port p_if(input,$val1);\n";
        print FH "  csl_port p_f(input,$val1);\n";
    }
    elsif($i > 5 && $i <= 10) {
        print FH "  csl_port p_ifcf$i(output,$val2);\n";
        print FH "  csl_port p_iff(output,$val2);\n";
        print FH "  csl_port p_iftf$i(input,$val1);\n";
        
    }
    elsif($i > 10) {  
        print FH "  csl_port p_ifcf$i(input,$val1);\n";
        print FH "  csl_port p_iff(input,$val1);\n";
        print FH "  csl_port p_if(input,$val1);\n";
        
        
    }

    print FH "  ifcf() {\n";
    if($i <= 5){
        print FH "    ifce0.ifcd0.$it2.$it1.connect_units(ifce1.ifcd1.$it2);\n";
        print FH "    ifcd1.ifcb1.connect_units(ifce2.ifcd0);\n";
    }
    elsif($i > 10){
        print FH "    ifce1.ifcd1.$it2.$it1.connect_units(ifce0.ifcd1.$it2);\n";
        print FH "    ifcd0.ifcb0.connect_units(ifce1.ifcd1);\n";
    }
    print FH "  }\n";        
    print FH "};\n";        
    print FH "\n";
    
    print FH "csl_signal_group sga {\n";
    if($i <= 5){
        print FH "  csl_signal s_sga($val1);\n";
        print FH "  csl_signal s_sa($val2);\n";
        print FH "  csl_signal s_sgga($val1);\n";
    }
    elsif($i > 5 && $i <= 10){
        print FH "  csl_signal s_siga($val1);\n";
        print FH "  csl_signal s_sigga($val2);\n";
        print FH "  csl_signal s_sta($val1);\n";
    }
    elsif($i > 10){
        print FH "  csl_signal s_sta($val2);\n";
        print FH "  csl_signal s_sitga($val2);\n";
        print FH "  csl_signal s_staa($val2);\n";
    }
    print FH "  sga() {\n";
    print FH "  }\n";
    print FH "};\n\n";
    
    print FH "csl_signal_group sgb {\n";
    print FH "  sga sga0;\n";
    print FH "  sga sga1;\n";
    if($i <= 5){
        print FH "  csl_signal s_sgb($val1);\n";
        print FH "  csl_signal s_sb($val2);\n";
    }
    elsif($i > 5 && $i <= 10){
        print FH "  csl_signal s_sggb($val1);\n";
        print FH "  csl_signal s_sigb($val1);\n";
        print FH "  csl_signal s_siggb($val2);\n";
    }
    elsif($i > 10){
        print FH "  csl_signal s_stb($val2);\n";
        print FH "  csl_signal s_sitgb($val1);\n";
        print FH "  csl_signal s_stab($val2);\n";
    }
    print FH "  sgb() {\n";
    print FH "  }\n";
    print FH "};\n\n";

    print FH "csl_signal_group sgc {\n";
    print FH "  sga sga0;\n";
    print FH "  sga sga1;\n";
    print FH "  sgb sgb1;\n";
    print FH "  sgb sgb0;\n";
    if($i <= 5){
        print FH "  csl_signal s_sgc($val1);\n";
        print FH "  csl_signal s_sc($val2);\n";
    }
    elsif($i > 5 && $i <= 10){
        print FH "  csl_signal s_sggc($val1);\n";
        print FH "  csl_signal s_sigc($val1);\n";
        print FH "  csl_signal s_siggc($val2);\n";
        print FH "  csl_signal s_stc($val2);\n";
    }
    elsif($i > 10){   
        print FH "  csl_signal s_sitgc($val1);\n";
        print FH "  csl_signal s_stac($val2);\n";
    }
    print FH "  sgc() {\n";
    print FH "  }\n";
    print FH "};\n\n";

    print FH "csl_signal_group sgd {\n";
    print FH "  sgc sgc0;\n";
    print FH "  sgc sgc1;\n";
    print FH "  sgc sgc2;\n";
    if($i <= 5){
        print FH "  csl_signal s_sgb($val1);\n";
        print FH "  csl_signal s_sb($val2);\n";
    }
    elsif($i > 5 && $i <= 10){
        print FH "  csl_signal s_sggb($val1);\n";
        print FH "  csl_signal s_sigb($val1);\n";
        print FH "  csl_signal s_siggb($val2);\n";
    }
    elsif($i > 10){
        print FH "  csl_signal s_stb($val2);\n";
        print FH "  csl_signal s_sitgb($val1);\n";
        print FH "  csl_signal s_stab($val2);\n";
    }
    print FH "  sgd() {\n";
    if($i > 5 && $i <= 10){
        print FH "    $it1.connect_units(sgc2.$it2);\n";
        print FH "    $it1.sga0.connect_units(sgc1.$it2);\n";
    }
    elsif($i > 10){
        print FH "    sgc1.$it4.connect_units($it3);\n";
        print FH "    sgc2.$it4.connect_units($it3.sga1);\n";
    }
    print FH "  }\n";
    print FH "};\n\n";

    print FH "csl_signal_group sgf {\n";
    print FH "  sgd sgd0;\n";
    print FH "  sgd sgd1;\n";
    print FH "  sgb sgb0;\n";
    print FH "  sgb sgb1;\n";
    if($i <= 5){
        print FH "  csl_signal s_sgb($val1);\n";
        print FH "  csl_signal s_sb($val2);\n";   
    }
    elsif($i > 5 && $i <= 10){
        print FH "  csl_signal s_sggb($val1);\n";
        print FH "  csl_signal s_sigb($val1);\n";
        print FH "  csl_signal s_siggb($val2);\n";
    }
    elsif($i > 10){
        print FH "  csl_signal s_stb($val2);\n";
        print FH "  csl_signal s_sitgb($val1);\n";
        print FH "  csl_signal s_stab($val2);\n";
    }
    print FH "  sgf() {\n";
    if($i > 5 && $i <= 10){
        print FH "    sgd1.$it1.connect_units(sgc2.$it2);\n";
        print FH "    sgd0.$it1.sga0.connect_units($it2);\n";
    }
    elsif($i > 10){
        print FH "    sgd0.$it3.$it4.connect_units(sgd1.$it3);\n";
        print FH "    $it4.connect_units(sgd1.$it3.sga1);\n";
    }
    print FH "  }\n";
    print FH "};\n\n";

    print FH "csl_unit top {\n";
    print FH "  sgf sgf0;\n"; 
    print FH "  sgd sgd1;\n";
    print FH "  sgd sgd2;\n";
    print FH "  ifcf ifcf0;\n";
    print FH "  ifcf ifcf1;\n";
    print FH "  ifce ifce0;\n";
    if($i <= 5) {
        print FH "  csl_port ptop(input,$val1);\n";
        print FH "  csl_port p(input,$val1);\n";
        print FH "  csl_signal s_top$i($val1);\n";
        print FH "  csl_signal stop($val1);\n";
    }
    elsif($i > 5 && $i <= 10) {
        print FH "  csl_port p_top$i(output,$val2);\n";      
        print FH "  csl_port p(output,$val2);\n";
        print FH "  csl_port ptop(output,$val2);\n";        
        print FH "  csl_signal st($val2);\n";
        print FH "  csl_signal s_top_br$i(brt);\n";
    }
    elsif($i > 10 && $i <= 30) {
        print FH "  csl_port p_top$i(input,$val1);\n";      
        print FH "  csl_port p(input,$val1);\n";
        print FH "  csl_port p_top_br$i(input,br);\n";
        print FH "  csl_signal s_top$i($val1);\n";
        print FH "  csl_signal stop($val1);\n";
    }
    print FH "  top(){\n";
  
    if($i > 10 && $i <= 15) {
        print FH "    ifcf1.ifce1.ifcd0.$it2.$it1.connect_units(sgd0.$it3);\n";
        print FH "    sgf0.$it4.connect_units(ifce0.ifcd0.$it2);\n";
        print FH "    sgd1.$it3.sga0.connect_units(ifcf0.ifcd0.$it2);\n";
        print FH "    ifce0.ifcd1.$it2.connect_units(sgd1.$it3);\n";
    }
  
    print FH "  }\n";        
    print FH "};\n";        
    print FH "\n";
   
    close(FH);
}
