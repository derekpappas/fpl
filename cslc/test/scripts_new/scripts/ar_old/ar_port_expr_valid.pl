#!/usr/bin/perl

#oanab
#connecting a ifc.p,ifc.p.ps,ifc.ifc.p,ifc.ifc.p.ps with an op expr, concat expr, rep expr
use strict;

if(! defined $ENV{WORK}){
    die "[ERROR] The environment variable WORK is not set. Set it to point to TOT/se";
}

my $totDir     = $ENV{WORK};
&testDirExists($totDir);

sub testDirExists {
    my($execName) = @_;
    unless(-e "$execName") { die "[ERROR] The directory $execName does not exist!\n"; }
    
}

sub mkDir {
    my($dirName) = @_;
    unless(-e "$dirName")  { `mkdir $dirName`; }
}

foreach(my $i = 1; $i <= 50; $i++) {
	&main($i);
}

sub main {
    my $i = $_[0];
    my $j = $_[1];
    my $m = $_[2];
    my $n = $_[3];
    $j = int(rand(20))+1; # for ifc1
    $m = int(rand(20))+2; # for ifc2
    $n = int(rand(20))+3; # for ifc3
    my %dir = (1,"input",
	       2,"output",
	       3,"inout");
    my $dir = $_[4];
    my $test_name = "ar_port_expr".$i."_legal.csl";
    if($j != $m && $j != $n && $m != $n) {
	&createCslFile($test_name, $i, $j, $m, $n, %dir);
    }
    else {
	&createCslFile($test_name, $i, $j+1, $m+2, $n+3, %dir);
    }
}

sub createCslFile {
    my ($test_name, $i, $j, $m, $n, %dir) = @_;
    my $path = "$ENV{WORK}/test/csl_test_gen/";
    my $k = int(rand(20)) + int(rand(20));
    my $zero = 0;
    my $one = 1;
    my $two = 2;
    my $tre = 3;
    my $val1 = int(rand(100))+1;
    my $val2 = int(rand(100))+1;
    my $val3 = int(rand(100))+6;
    my $l = int(rand(3))+1;
    my $hex1 = sprintf("%x",$val1);
    my $hex2 = sprintf("%x",$val2);
    my $hex3 = sprintf("%x",$val3);
    my $bin1 = sprintf("%b",$val1);
    my $bin2 = sprintf("%b",$val2);
    my $bin3 = sprintf("%b",$val3);
    my $oct1 = sprintf("%o",$val1);
    my $oct2 = sprintf("%o",$val2);
    my $oct3 = sprintf("%o",$val3);
    if($test_name=~/(_legal)/){
        &mkDir("$path/ar_port_expr_valid");
        open(FH,">$path/ar_port_expr_valid/$test_name");
    }
    elsif($test_name=~/(_illegal)/) {
        &mkDir("$path/ar_port_expr_invalid"); 
        open(FH,">$path/ar_port_expr_invalid/$test_name");
    }
    print FH "//Generated by oanab\n\n";

#declaring bitrange br1    
    if($val1 >= 7) {
	print FH "csl_bitrange br1($val1);\n\n";
    }
    else {
	$val1 = $val1 + 7;
	print FH "csl_bitrange br1($val1);\n\n";
    }
    
#declaring bitrange br2
    if($val2 >= 7) {
	print FH "csl_bitrange br2($val2);\n\n";
    }
    else {
	$val2 = $val2 + 7;
	print FH "csl_bitrange br2($val2);\n\n";
    }
 
   
#interface ifcj
    print FH "csl_interface ifc$j {\n";
    if($i <= 100) {
        print FH "  csl_port p_a$i($dir{$l},br1);\n"; 
	if($l < 3) {
	    print FH "  csl_port p_b$i($dir{$l+1},br2);\n";
	}
	else {
	    print FH "  csl_port p_b$i($dir{$l-1},br2);\n";
	}
    }                  
    else {
        print FH "  csl_port p_a$i($dir{$l},br1);\n"; 
	if($l < 3) {
	    print FH "  csl_port p_b$i($dir{$l+1},br2);\n";
	}
	else {
	    print FH "  csl_port p_b$i($dir{$l-1},br2);\n";
	}
	if($l == 1) {
	    print FH "  csl_port p_c$i($dir{$l+2},$val3);\n";
	}
	else {
	    print FH "  csl_port p_c$i($dir{$l-1},$val3);\n";
	}
    } 
    print FH "  ifc$j () {}\n";
    print FH "};\n\n";
 
   
#interface ifcm
    print FH "csl_interface ifc$m {\n";
    print FH "  csl_port p_$i($dir{$l},br1);\n";
    if($i > 450 && $i <= 175) {
	print FH "  ifc$j ifc$j\_$two;\n";
    }
    elsif($i > 350 && $i <= 425) {
	print FH "  ifc$j ifc$j\_$tre;\n";
    }
    elsif($i > 300 && $i <= 350) {
	print FH "  csl_port p_a($dir{$l},$val3);\n";
	if($l < 3) {
	    print FH "  csl_port p_b($dir{$l+1},$val2);\n";
	}
	else {
	    print FH "  csl_port p_b($dir{$l-1},$val2);\n";
	}
	if($l == 1) { 
	    print FH "  csl_port p_c($dir{$l+2},br1);\n";
	}
	else {
	    print FH "  csl_port p_c($dir{$l-1},br1);\n";
	}
	if($l == 2) {
	    print FH "  csl_port p_d($dir{$l+1},$val1);\n";
	}
	else {
	    print FH "  csl_port p_d($dir{$l},$val1);\n";
	}
    }
    print FH "  ifc$m () {}\n";
    print FH "};\n\n";

#unit a
    print FH "csl_unit a$k {\n";
    print FH "  ifc$j ifc$j\_$zero;\n";

    print FH "  a$k() {\n"; 
    print FH "  }\n";
    print FH "};\n\n"; 


#unit b    
    print FH "csl_unit b$k {\n";  
    print FH "  a$k a$k\_$zero;\n";

    print FH "  b$k() {\n";
    print FH "  }\n";
    print FH "};\n\n";        

   
#unit c 
    print FH "csl_unit c$k {\n";
    print FH "  b$k b$k\_$zero;\n";
    print FH "  csl_port p$i($dir{$l},$val2);\n";
    print FH "  csl_port p".($i+1)."($dir{$l},br2);\n";

    print FH "  c$k (){\n";
    if($i <= 50) {
	print FH "    b$k\_$zero.a$k\_$zero.ifc$j\_$zero.p_b$i.connect(p$i & p".($i+1).");\n";
    }
    print FH "  }\n";        
    print FH "};\n\n";  


#unit d
    print FH "csl_unit d$k {\n";
    print FH "  c$k c$k\_$zero;\n";
    print FH "  ifc$m ifc$m\_$zero;\n";
    print FH "  d$k () { \n";

    print FH "  }\n";
    print FH "};\n\n";



}
