#!/usr/bin/perl

#Author Monica
use strict;

if(! defined $ENV{WORK}){
    die "[ERROR] The environment variable WORK is not set. Set it to point to TOT/se";
}

my $totDir     = $ENV{WORK};
&testDirExists($totDir);

 
sub testDirExists {
    my($execName) = @_;
    unless(-e "$execName") { die "[ERROR] The directory $execName does not exist!\n"; }
    
}

sub mkDir {
    my($dirName) = @_;
    unless(-e "$dirName")  { `mkdir $dirName`; }
}

foreach(my $i = 1; $i <=42; $i++) {
    &main($i);
 
}

sub main {
    my $i = $_[0];
    my $test_name = "connect_sg_ifc_ifc1_test".$i."_legal.csl";
    &createCslFile($test_name, $i);
}
sub createCslFile {
    my($test_name, $i) = @_;
    my $path = "$ENV{WORK}/test/csl_ar_gen";
    if($i==1){
        print (" Generated path: $path/ar_connect_sg_ifc_ifc1_valid/\n");}
    my $val = int(rand(500));
    if($val == 0) { $val = 1; }
    my $val1= int(rand(200));
    if($val1== 0) { $val1= 1; }
    my $val2 = int(rand(100));
    if($val2==0) {$val2=1;}
    if($test_name=~/(_legal)/){
        &mkDir("$path/ar_connect_sg_ifc_ifc1_valid");
        open(FH,">$path/ar_connect_sg_ifc_ifc1_valid/$test_name");
    }
  
    if($i>0 && $i<=42){
    if($i > 0 && $i <=12) {
    print FH "//Generated by Monica\n";
    print FH "//Connect SG.signal--IFC.ifc1.port\n\n";
    print FH "// TEST $i;\n";
   
        print FH "csl_bitrange br1($val1);\n";
        print FH "csl_bitrange br2($val2);\n\n";
      foreach(my $j=1; $j<=$i; $j++){
        print FH "csl_interface ifc_$i$j {\n";
        foreach(my $k=1; $k<=$j; $k++){
            print FH "   csl_port p1_$j$k(input,br1);\n";
            print FH "   csl_port p2_$j$k(output,br2);\n";
        }
            if(($i>=2 && $i<=12)&&($j>1)){
                foreach(my $m=1; $m<$j; $m++){
                    print FH "   ifc_$i$m ifc_i$j$m;\n";
                    }
            }
        
    print FH "   ifc_$i$j() {\n";
    print FH "   }\n";
    print FH "};\n";
        print FH "csl_signal_group sg_$i$j {\n";
         foreach(my $k=1; $k<=$j; $k++){
            print FH "   csl_signal s1_$j$k(br1);\n";
            print FH "   csl_signal s2_$j$k(br2);\n";
        } 
    print FH "   sg_$i$j() {\n";
    print FH "   }\n";
    print FH "};\n";      
   
          if($i>=1 && $i<=12){
              if($i==$j){
              print FH "csl_unit u_$i$j {\n";
              print FH "   ifc_$i$i ifc_i$i;\n";
              print FH "   u_$i$j() {\n";    
              print FH "   }\n";
              print FH "};\n";                      
            }  
          }
           
          if($i>=1 && $i<=12){
              if($i==$j){
              print FH "csl_unit u_$i {\n";
              print FH "   sg_$i$i sg_i$i;\n"; 
              print FH "   u_$i$j u_i$i;\n";
              print FH "   u_$i() {\n";
                  
            if($i==1){
                print FH "sg_i$i.s1_$i$i.connect(u_i$i.ifc_i$i.p1_$i$i);\n";
                print FH "sg_i$i.s2_$i$i.connect(u_i$i.ifc_i$i.p2_$i$i);\n";
             }

          
            elsif($i==2){
              
              print FH "sg_i$i.s1_$i$i.connect(u_i$i.ifc_i$i.p1_$i$i);\n";
              print FH "sg_i$i.s2_$i$i.connect(u_i$i.ifc_i$i.p2_$i$i);\n"; 
          }
              elsif($i>2 && $i<=12){
      
                  foreach(my $k=$i-1; $k>=1; $k--){
                      foreach(my $m=$k-1; $m>=1; $m--){
                          print FH "  sg_i$i.s1_$i$k.connect(u_i$i.ifc_i$i.ifc_i$i$k.p1_$k$m); \n"; 
                          print FH "  sg_i$i.s2_$i$k.connect(u_i$i.ifc_i$i.ifc_i$i$k.p2_$k$m); \n";
                      }
                  }
              }
           
    print FH "   }\n";
    print FH "};\n";      
           }
          }
   
          }  
  
  }

#*******************************************************************
# sg.sig[part_select]--ifc.ifc1.port

    if($i>12 && $i <=22){
        my $o=0;
    print FH "//Generated by Monica\n";
    print FH "//Connect SG.signal[part_select]--IFC.ifc1.port\n\n";
    print FH "// TEST $i;\n";
    print FH " csl_bitrange br1($val1);\n";
    print FH " csl_bitrange br2($val2);\n";        
         
      foreach( my $j=12; $j<=$i; $j++){
          my $k=2*$j;
         print FH " csl_signal_group sg1_$j {\n";
         print FH "   csl_signal  s11_$j($k);\n";
     
         print FH " sg1_$j(){}\n";
         print FH " };\n";
         print FH " csl_interface ifc1_$j {\n";
         print FH "   csl_port p11_$j(input,$j);\n";
          print FH "   csl_port p12_$j(output,$j);\n";
         print FH "   ifc1_$j (){}\n";
         print FH " };\n";
    }
      print FH " csl_interface ifc2{\n";
      print FH "   csl_port p12 (output,br2);\n";
   foreach( my $j=12; $j<=$i; $j++){
       my $k=$j+1;
       if( $k>12){
           print FH "   ifc1_$j ifc1_i$k;\n";
          }
   }
      print FH " ifc2(){}\n";
      print FH "};\n";
    
         print FH " csl_unit u1{\n";
         print FH "   ifc2 ifc_i2;\n";
         print FH "  u1(){}\n";
         print FH " };\n";
        
         print FH " csl_unit u2{\n";
         print FH "    u1 u1_i;\n";
      foreach( my $j=12; $j<=$i; $j++){
          my $ui=$j-1;
         print FH " sg1_$j sg1_i$j;\n"; 
      }
         print FH " u2(){\n";
    foreach( my $j=12; $j<=$i; $j++){
      my $ui=$j-1;                             #upper_index
      my $li=$ui+1;                           #lower_index
      my $k=$j+1;
      my $k1=2*$j-1;
      
       if( $k>12){
         print FH " sg1_i$j.s11_$j [$o: $ui].connect(u1_i.ifci_2.ifc1_i$k.p11_$j);\n";  
         print FH " sg1_i$j.s11_$j [$li: $k1].connect(u1_i.ifci_2.ifc1_i$k.p12_$j);\n";    
     }
   }
  
       print FH "}\n";
         print FH " };\n"; 
     }
#*******************************************************************
# sg.sg1.sig[part_select]--ifc.ifc1.port

    if($i>22 && $i <=32){
        my $o=0;
    print FH "//Generated by Monica\n";
    print FH "//Connect SG.sg1.signal[part_select]--IFC.ifc1.port\n\n";
    print FH "// TEST $i;\n";
    print FH " csl_bitrange br1($val1);\n";
    print FH " csl_bitrange br2($val2);\n"; 
foreach( my $j=22; $j<=$i; $j++){
          my $k=2*$j;
         print FH " csl_signal_group sg1_$j {\n";
         print FH "   csl_signal  s11_$j($k);\n";
     
         print FH " sg1_$j(){}\n";
         print FH " };\n";

         print FH " csl_interface ifc1_$j {\n";
         print FH "   csl_port p11_$j(input,$j);\n";
         print FH "   csl_port p12_$j(output,$j);\n";
         print FH "   ifc1_$j (){}\n";
         print FH " };\n";
    }
      print FH " csl_interface ifc2{\n";
      print FH "   csl_port p12 (output,br2);\n";
   foreach( my $j=22; $j<=$i; $j++){
     #  my $k=$j+1;
     #  if( $k>22){
           print FH "   ifc1_$j ifc1_i$j;\n";
      #    }
   }
      print FH " ifc2(){}\n";
      print FH "};\n";
    
         print FH " csl_unit u1{\n";
         print FH "   ifc2 ifc_i2;\n";
         print FH "  u1(){}\n";
         print FH " };\n";

    print FH " csl_signal_group sg2{\n";
    print FH "  csl_signal s21(br1);\n";
    print FH "  csl_signal s22(br3);\n";
    foreach( my $j=22; $j<=$i; $j++){
         
         print FH " sg1_$j sg1_i$j;\n"; 
      }
    print FH " sg2(){}\n";
    print FH " };\n";

         print FH " csl_unit u2{\n";
         print FH "    u1 u1_i;\n";
         print FH "    sg2 sg2_i;\n"; 
         print FH " u2(){\n";
    foreach( my $j=22; $j<=$i; $j++){
      my $ui=$j-1;                             #upper_index
      my $li=$ui+1;                           #lower_index
    #  my $k=$j+1;
      my $k1=2*$j-1;
      
    #   if( $k>22){
         print FH " sg2_i.sg1_i$j.s11_$j [$o:$ui].connect(u1_i.ifci_2.ifc1_i$j.p11_$j);\n";  
         print FH " sg2_i.sg1_i$j.s11_$j [$li:$k1].connect(u1_i.ifci_2.ifc1_i$j.p12_$j);\n";    
   #  }
   }   
    print FH " }\n";
    print FH " };\n";
}

#*******************************************************************
# sg.sg1.sig--ifc.ifc1.port

    if($i>32 && $i <=42){
        
    print FH "//Generated by Monica\n";
    print FH "//Connect SG.sg1.signal--IFC.ifc1.port\n\n";
    print FH "// TEST $i;\n";
    print FH " csl_bitrange br1($val1);\n";
    print FH " csl_bitrange br2($val2);\n"; 
 foreach( my $j=32; $j<=$i; $j++){
       my $k=2*$j; 
         print FH " csl_signal_group sg1_$j {\n";
         print FH "   csl_signal  s11_$j($j);\n";
       print FH "   csl_signal  s12_$j($k);\n";
     
         print FH " sg1_$j(){}\n";
         print FH " };\n";
         print FH " csl_interface ifc1_$j {\n";
         print FH "   csl_port p11_$j(input,$j);\n";
         print FH "   csl_port p12_$j(output,$k);\n";
         print FH "   ifc1_$j (){}\n";
         print FH " };\n";
    }
      print FH " csl_interface ifc2{\n";
      print FH "   csl_port p12 (output,br2);\n";
   foreach( my $j=32; $j<=$i; $j++){
       
           print FH "   ifc1_$j ifc1_i$j;\n";
          
   }
      print FH " ifc2(){}\n";
      print FH "};\n";
      print FH " csl_unit u1{\n";
         print FH "   ifc2 ifc_i2;\n";
         print FH "  u1(){}\n";
         print FH " };\n";
        
    print FH " csl_signal_group sg2{\n";
    print FH "  csl_signal s21(br1);\n";
    print FH "  csl_signal s22(br2);\n";
    foreach( my $j=32; $j<=$i; $j++){
      
         print FH " sg1_$j sg1_i$j;\n"; 
     
      }
    print FH " sg2(){}\n";
    print FH " };\n";

         print FH " csl_unit u2{\n";
         print FH "    u1 u1_i;\n";
         print FH "    sg2 sg2_i;\n"; 
         print FH " u2(){\n";
    foreach( my $j=32; $j<=$i; $j++){
   #   my $k=$j+1;
    #   if( $k>32){
         print FH " sg2_i.sg1_i$j.s11_$j.connect(u1_i.ifc_i2.ifc1_i$j.p11_$j);\n";  
         print FH " sg2_i.sg1_i$j.s12_$j.connect(u1_i.ifc_i2.ifc1_i$j.p12_$j);\n";    
    # }
   }   
    print FH " }\n";
    print FH " };\n";
}
}

    close(FH);
}
