#!/usr/bin/perl

#Author Petronela
use strict;

my $path = "$ENV{WORK}/test/csl_test_gen/";
print "the path for generated tests is: $path"."ifc_prefix_suffix_valid/ \n";

if(! defined $ENV{WORK}){
    die "[ERROR] The environment variable WORK is not set. Set it to point to TOT/se";
}

my $totDir     = $ENV{WORK};
&testDirExists($totDir);

sub testDirExists {
    my($execName) = @_;
    unless(-e "$execName") { die "[ERROR] The directory $execName does not exist!\n"; }
    
}

sub mkDir {
    my($dirName) = @_;
    unless(-e "$dirName")  { `mkdir $dirName`; }
}

for(my $i = 1;$i <= 20; $i++){
    &main($i);
}

sub main {
    my $i = $_[0];
    my $test_name = "ifc_prefix_suffix_".$i."_legal.csl";
    &createCslFile($test_name, $i);
}

sub word {
    my $val = $_[0];
    my @alpha = ('a'..'z','A'..'Z');
    my @alphanumeric = ('a'..'z','A'..'Z','0'..'9');
    my $ret = $alpha[rand @alpha];
    for(my $i=1;$i < $val; ++$i){
        $ret = $ret.$alphanumeric[rand @alphanumeric];
    }
    return $ret;
}

sub createCslFile {
    my($test_name, $i) = @_;
    my $val1 = int(rand(20)) + 1;
    my $val2 = $val1 + int(rand(20)) + 1;
    my $val3 = int(rand(30)) + 1;
    my $val4 = int(rand(50)) + 1;
    my $val5 = int(rand(80)) + 1;
    my $val6 = int(rand(100)) + 1;
    my $val7 = int(rand(10)) + 2;
    my $val8 = int(rand(10)) + 2;
    my $val9 = int(rand(10)) + 2;
    my $word = &word($val7);
    my $word1 = &word($val8);
    my $word2 = &word($val9);
    my $word3 = &word($val9);
    my $word4 = &word($val8);
    my $word5 = &word($val7);
    my $word6 = &word($val1);
    my $word7 = &word($val2);
    &mkDir("$path/ifc_prefix_suffix_valid/");
    open(FH,">$path/ifc_prefix_suffix_valid/$test_name");

    print FH "//Generated by Petronela\n";  
    print FH "//testing cmd. set_prefix, no_prefix and set_suffix in interfaces \n\n";
    
    print FH "csl_interface ifca {\n";
    print FH "  csl_port p_ifca(input,$val1);\n";
    print FH "  csl_port p_ifa(input,$val2);\n";
    print FH "  csl_port p_ifta(input,$val3);\n";
    print FH "  csl_port p_iftca(output,$val4);\n";
    print FH "  csl_port pt_ifa(output,$val5);\n";
    print FH "  ifca() {\n";
    if($i >= 3){
        print FH "    set_prefix(\"$word6\");\n";
        print FH "    set_suffix(\""."_"."$word7\");\n";
    }
    print FH "  }\n";        
    print FH "};\n\n";
    
    if($i > 5){
        print FH "csl_interface ifcb {\n";
        print FH "  csl_port p_ifcb(input,$val1);\n";
        print FH "  csl_port p_ifb(input,$val4);\n";
        print FH "  csl_port pt_itb(output,$val2);\n";
        print FH "  ifca ifca0;\n";
        print FH "  ifca ifca3;\n";
        print FH "  ifcb() {\n";
        print FH "    no_prefix();\n";
        print FH "    ifca0.set_suffix(\""."_"."$word\");\n";
        print FH "  }\n";        
        print FH "};\n\n";
    }
    if($i > 10){
        print FH "csl_interface ifcd {\n";
        print FH "  csl_port p_ifcd(input,$val3);\n";
        print FH "  csl_port p_ifd(output,$val4);\n";
        print FH "  csl_port pt_itd(output,$val1);\n";
        print FH "  ifcb ifcb0;\n";
        print FH "  ifcb ifcb2;\n";
        print FH "  ifcd() {\n";
        print FH "    ifcb0.set_prefix(\""."_"."$word2\");\n";
        print FH "    ifcb0.ifca0.no_prefix();\n";
        print FH "  }\n";        
        print FH "};\n\n";
        print FH "csl_interface ifce {\n";
        print FH "  csl_port p_ifce(input,$val2);\n";
        print FH "  csl_port p_ife(output,$val3);\n";
        print FH "  csl_port pt_ite(output,$val1);\n";
        print FH "  ifcd ifcd0;\n";
        print FH "  ifce() {\n";
        print FH "    ifcd0.set_suffix(\"$word3\");\n";
        print FH "  }\n";        
        print FH "};\n\n";
    }
    if($i > 15){
        print FH "csl_interface ifcf {\n";
        print FH "  csl_port p_ifcf(input,$val2);\n";
        print FH "  csl_port p_if(output,$val1);\n";
        print FH "  ifcd ifcd1;\n";
        print FH "  ifca ifca4;\n";
        print FH "  ifcf() {\n";
        print FH "    ifcd1.set_prefix(\""."_"."$word3\");\n";
        print FH "    ifcd1.ifcb0.no_prefix();\n";
        print FH "    set_suffix(\"$word4"."_"."\");\n";   
        print FH "    ifcd1.ifcb0.ifca0.no_prefix();\n";
        print FH "  }\n";        
        print FH "};\n\n";
        print FH "csl_interface ifcg {\n";
        print FH "  csl_port p_ifcg(output,$val3);\n";
        print FH "  csl_port p_ifg(output,$val1);\n";
        print FH "  csl_port p_if(output,$val5);\n";
        print FH "  ifcf ifcf1;\n";
        print FH "  ifce ifce2;\n";
        print FH "  ifcg() {\n";
        print FH "  }\n";        
        print FH "};\n\n";
        print FH "csl_interface ifch {\n";
        print FH "  csl_port p_ifch(output,$val2);\n";
        print FH "  csl_port p_ifh(output,$val4);\n";
        print FH "  csl_port p_if(output,$val5);\n";
        print FH "  csl_port p_ig(input,$val3);\n"; 
        print FH "  ifcg ifcg0;\n";
        print FH "  ifcd ifcd2;\n";
        print FH "  ifch() {\n";
        print FH "    ifcg0.no_prefix();\n";
        print FH "    ifcg0.ifcf1.set_prefix(\"$word5\");\n";
        print FH "    ifcd2.no_prefix();\n";
        print FH "  }\n";        
        print FH "};\n\n";
        
    }
    print FH "csl_unit top {\n";
    print FH "  csl_port p_top(input,$val3);\n";
    print FH "  csl_signal s_top($val4);\n";
    print FH "  ifca ifca1;\n";
    print FH "  ifca ifca2;\n";
    if($i > 5){
        print FH "  ifcb ifcb1;\n";
        print FH "  ifcb ifcb3;\n";
        #print FH "  ifcb ifcb4;\n";
        #print FH "  ifcb ifcb5;\n";
    }
    if($i > 10){
        print FH "  ifcd ifcd1;\n";
        print FH "  ifce ifce1;\n";
    }
    if($i > 15){
        print FH "  ifcd ifcd2;\n";
        print FH "  ifcf ifcf2;\n";
        print FH "  ifcg ifcg2;\n";
        print FH "  ifch ifch0;\n";
        print FH "  ifch ifch1;\n";
    }
    print FH "  top(){\n";
    if($i < 3){
        print FH "    ifca1.set_prefix(\"$word6"."_"."\");\n";
        print FH "    ifca1.set_suffix(\"$word\");\n";
    }
    if($i >= 3){
        print FH "    ifca1.no_prefix();\n";
    }
    
    if($i > 5){
        print FH "    ifcb1.set_suffix(\""."_"."$word3\");\n";
        print FH "    ifcb1.set_prefix(\"$word2"."_"."\");\n";
        print FH "    ifcb3.set_prefix(\"$word\");\n";
        print FH "    ifcb1.ifca0.no_prefix();\n";
    }
    if($i > 10){
        print FH "    ifcd1.set_prefix(\"$word"."_"."\");\n";
        print FH "    ifce1.set_suffix(\""."_"."$word1\");\n";   
        print FH "    ifce1.ifcd0.no_prefix();\n";
        print FH "    ifce1.ifcd0.ifcb0.no_prefix();\n";
    }
    if($i > 15){
        print FH "    ifch1.ifcg0.set_suffix(\""."_"."$word5\");\n";
        print FH "    ifcg2.ifcf1.ifcd1.no_prefix();\n";
        print FH "    ifcd2.set_suffix(\""."_"."$word4\");\n";
        print FH "    ifcf2.ifcd1.ifcb2.ifca0.set_prefix(\"$word3"."_"."\");\n";
        print FH "    ifch0.ifcg0.ifce2.ifcd0.ifcb0.ifca3.no_prefix();\n";
    }
    print FH "  }\n";
    print FH "};\n";
    close(FH);
}
