//author: Ines 
//test: copy interfaces and add_instances with f2a params

csl_interface ifc {
  csl_port opc(input, 4);
  csl_port op1(input, 32);
  csl_port op2(input, 32);
  csl_port result(output, 32);
};

csl_unit addition_sub {
  ifc as_ifc;
  addition_sub(){

  }
};

csl_unit shift {
  ifc sh_ifc;
  shift(){

  }
};

csl_unit logic {
  ifc l_ifc;
  logic(){

  }
};

csl_unit arith {;
  ifc a_ifc;
  csl_signal opc(5) ;
  csl_signal result(5) ;
  csl_signal op1(reg, 32);
  csl_signal op2(reg, 32);
  addition_sub adder_substracter(.as_ifc.opc(opc), .as_ifc.op1(op1), .as_ifc.op2(op2), .as_ifc.result(result));
  shift shifter(.sh_ifc.opc(opc), .sh_ifc.op1(op1), .sh_ifc.op2(op2), .sh_ifc.result(result));

  arith(){

  }
};

csl_unit ALU {
  ifc ifc;
  csl_signal opc(5) ;
  csl_signal result(5) ;
  csl_signal op1(reg, 32);
  csl_signal op2(reg, 32);
  logic logical_unit(.l_ifc.opc(opc), .l_ifc.op1(op1),.l_ifc.op2(op2), .l_ifc.result(result));
  arith arithmet_unit(.a_ifc.opc(opc), .a_ifc.op1(op1), .a_ifc.op2(op2), .a_ifc.result(result));

  ALU() {

  }
};

