#!/usr/bin/perl

#Author Monica
use strict;

my $path = "$ENV{WORK}/test/csl_test_gen";

if(! defined $ENV{WORK}){
    die "[ERROR] The environment variable WORK is not set. Set it to point to TOT/se";
}

my $totDir     = $ENV{WORK};
&testDirExists($totDir);

sub testDirExists {
    my($execName) = @_;
    unless(-e "$execName") { die "[ERROR] The directory $execName does not exist!\n"; }
    
}

sub mkDir {
    my($dirName) = @_;
    unless(-e "$dirName")  { `mkdir $dirName`; }
}
for(my $i = 1;$i <= 40; $i++){
    &main($i);
}

sub main {
    my ($i) = @_;
    my $test_name;
   
    $test_name = "conn_unit_u_u".$i."_param_llegal.csl";
   
    &createCslFile($test_name, $i);
}
sub createCslFile {
    my($test_name, $i) = @_;
    
    my $val1 = int(rand(30)) + 1;
    my $val2 = int(rand(30)) + 1;
    my $val3 = int(rand(30)) + 1;
    my $val4 = int(rand(30)) + 1;
    my $val5 = int(rand(30)) + 1;
    my $j;
    my $k;
    my $l;
  
    &mkDir("$path/conn_units_u_u_param_valid");
    open(FH,">$path/conn_units_u_u_param_valid/$test_name");
    if($i == 1){ print "Generated path: $path/conn_units_u_u_param_valid/\n"; }


    print FH "//Generated by Monica\n";
    print FH "//testing the command connect_units for connections unit to unit with parameter --legal \n\n";

# parameter in interface without override  
    if($i > 0 && $i<=5){
        print FH "csl_interface ifca {\n";
        print FH "  csl_parameter w1($val1);\n";
        print FH "  csl_parameter w2($val2);\n";
        print FH "  csl_parameter w3($val3);\n";
        print FH "  csl_parameter w4($val4);\n";
        print FH "  csl_parameter w5($val5);\n";
        print FH "  csl_port p_ifc1(input,w1);\n";
        print FH "  csl_port p_ifc2(input,w2);\n";
        print FH "  csl_port p_ifc3(input,w3);\n";
        print FH "  csl_port p_ifc4(output,w4);\n";
        print FH "  csl_port p_ifc5(output,w5);\n";
        print FH "  ifca() {\n";
        print FH "  }\n";
        print FH "};\n\n";
        print FH "csl_interface ifcb {\n";
        print FH "  csl_port p_ifc1(output,$val1);\n";
        print FH "  csl_port p_ifc2(output,$val2);\n";
        print FH "  csl_port p_ifc3(output,$val3);\n";
        print FH "  csl_port p_ifc4(input,$val4);\n";
        print FH "  csl_port p_ifc5(input,$val5);\n";
        print FH "  ifcb() {\n";
        print FH "  }\n";
        print FH "};\n\n";
#connect c-p
        if($i <3){
        print FH " csl_unit unit_a {\n";
        print FH "   ifca ifcai;\n";
        print FH "   unit_a(){\n";
        print FH "  }\n";
        print FH "   };\n";
        print FH " csl_unit unit_b {\n";
        print FH "   ifca ifcai;\n";
        print FH "   unit_a a0;\n";
        print FH "   unit_b(){}\n";
        print FH "   };\n";
        print FH " csl_unit unit_top{\n";
        
        print FH "   ifca ifcai;\n";
        print FH "   unit_b b(.ifcai(ifcai));\n";
        print FH "   unit_top(){\n";
        print FH "   b.connect_units(b.a0);  //parent-child connection, no parameters\n";
        print FH "   }\n";
        print FH "};\n";
        }
#connect s-s
         if($i >=3 ){
        print FH " csl_unit unit_a {\n";
        print FH "   ifcb ifcai;\n";
        print FH "   unit_a(){\n";
        print FH " }\n";
        print FH "   };\n";
        print FH " csl_unit unit_b {\n";
        print FH "   ifca ifcai;\n";
        print FH "   unit_b(){\n";
        print FH "   }\n";
        print FH "   };\n";
        print FH " csl_unit unit_top{\n";
	foreach ($j=1; $j<=$i; $j++){
        print FH "   unit_a a_$j;\n";
        print FH "   unit_b b_$j;\n";
    }
        print FH "   unit_top(){\n";
	foreach ($j=1; $j<=$i; $j++){
        print FH "   a_$j.connect_units(b_$j); //sig-sig connection, no parameters\n";
    }
        print FH "   }\n";
        print FH "};\n";
        }
    }
#parameter in signal_group without override

    if($i>5 && $i<=10){

#connect p-c, c-p

        if($i<= 8){
    print FH "csl_unit unit_a {\n";
    print FH "  csl_parameter pa1($val2);\n";
    print FH "  csl_parameter pa2($val1);\n";
    print FH "  csl_parameter pa3(pa2);\n";
    print FH "  csl_port p_data(output,pa1);\n"; 
    print FH "  csl_port p_addr(output,pa2);\n";
    print FH "  csl_port p_data1(output,pa3);\n";
    print FH "  unit_a(){};\n";
    print FH "  };\n";

    print FH "csl_unit unit_b {\n";
    print FH "  csl_parameter pb1($val2);\n";
    print FH "  csl_parameter pb2($val1);\n";
    print FH "  csl_parameter pb3(pb2);\n";
    print FH "  csl_port p_data(output,pb1);\n"; 
    print FH "  csl_port p_addr(output,pb2);\n";
    print FH "  csl_port p_data1(output,pb3);\n";
    print FH "  unit_a a;\n";
    print FH "  unit_b(){};\n";
    print FH "  };\n";
    print FH "csl_unit unit_c {\n";
    print FH "  csl_port p1_data(output,$val2);\n"; 
    print FH "  csl_port p1_addr(output,$val1);\n";
    print FH "  csl_port p1_data1(output,$val1);\n";
    print FH "  csl_port p2_data(output,$val2);\n"; 
    print FH "  csl_port p2_addr(output,$val1);\n";
    print FH "  csl_port p2_data1(output,$val1);\n";
    print FH "  unit_b b1(.p_data(p1_data),.p_addr(p1_addr),.p_data1(p1_data1));\n";
    print FH "  unit_b b2(.p_data(p2_data),.p_addr(p2_addr),.p_data1(p2_data1));\n";
    print FH "  unit_c(){;\n";
    print FH "  b1.connect_units(b1.a);  //parent-child connection, parameters are used\n";
    print FH "  b2.a.connect_units(b2);  //child-parent connection, parameters are used\n";
    print FH "  }\n";
    print FH "  };\n";
    }
#connect p-c
    if($i>8){
    print FH "csl_unit unit_a {\n";
    print FH "  csl_parameter pa1($val2);\n";
    print FH "  csl_parameter pa2($val1);\n";
    print FH "  csl_parameter pa3(pa2);\n";
    print FH "  csl_port p_data(output,pa1);\n"; 
    print FH "  csl_port p_addr(output,pa2);\n";
    print FH "  csl_port p_data1(output,pa3);\n";
    print FH "  unit_a(){};\n";
    print FH "  };\n";

    print FH "csl_unit unit_b {\n";
    print FH "  csl_parameter pb1($val2);\n";
    print FH "  csl_parameter pb2($val1);\n";
    print FH "  csl_parameter pb3(pb2);\n";
    print FH "  csl_port p_data(output,pb1);\n"; 
    print FH "  csl_port p_addr(output,pb2);\n";
    print FH "  csl_port p_data1(output,pb3);\n";
    print FH " unit_a a0;\n";

    print FH "  unit_b(){};\n";
    print FH "  };\n";

    print FH " csl_unit unit_c{\n";
    print FH " unit_b b0;\n";
    print FH " unit_c (){}\n";
    print FH "};\n"; 
    print FH "csl_unit unit_d {\n";
    print FH "  csl_port pc_data(output,$val2);\n"; 
    print FH "  csl_port pc_addr(output,$val1);\n";
    print FH "  csl_port pc_data1(output,$val1);\n";
    print FH "  unit_c c0;\n";
    print FH "  unit_d(){;\n";
    print FH "  c0.b0.connect_units(c0.b0.a0);  //parent-child connection at the second level \n";
    print FH "  pc_data.connect_by_name(c0.b0.p_data);\n";
    print FH "  pc_addr.connect_by_name(c0.b0.p_addr);\n";  
    print FH "  pc_data1.connect_by_name(c0.b0.p_data1);\n";
    print FH "  }\n";
    print FH "  };\n";
    }
    }
#parameter with sg and ifc with override

    if($i>10 && $i<=15) {
       print FH "csl_interface ifca {\n";
        print FH "  csl_parameter w1(4'b0001);\n";
        print FH "  csl_parameter w2(2'b11);\n";
        print FH "  csl_parameter w3(4'hF);\n";
        print FH "  csl_parameter w4(8'hAA);\n";
        print FH "  csl_parameter w5(8'd30);\n";
        print FH "  csl_port p_ifc1(input,w1);\n";
        print FH "  csl_port p_ifc2(input,w2);\n";
        print FH "  csl_port p_ifc3(input,w3);\n";
        print FH "  csl_port p_ifc4(output,w4);\n";
        print FH "  csl_port p_ifc5(output,w5);\n";
        print FH "  ifca() {\n";
        print FH "  }\n";
        print FH "};\n\n";
      
#connect c-p,p-c
    if($i <=13){
        print FH " csl_unit unit_a{\n";
        print FH "  ifca #($val1,$val2,$val3,$val4,$val5) ifcai;\n";
        print FH "  unit_a(){}\n";
        print FH "};\n";

        print FH " csl_unit unit_b{\n";
        print FH "  ifca #($val1,$val2,$val3,$val4,$val5) ifcai;\n";
        print FH "  unit_a  a0;\n";
        print FH "  unit_b(){}\n";
        print FH "};\n";

        print FH " csl_unit unit_c{\n";
        print FH "  ifca #($val1,$val2,$val3,$val4,$val5) ifca1;\n";
        print FH "  ifca #($val1,$val2,$val3,$val4,$val5) ifca2;\n";
        print FH "  unit_b b0(.ifcai(ifca1));\n";
        print FH "  unit_b b1(.ifcai(ifca2));\n";
        print FH "  unit_c(){\n";
        print FH "  b0.connect_units(b0.a0);  //parent-child connection\n";
        print FH "  b1.connect_units(b1.a0);  //parent-child connection\n";
        print FH "  }\n";
        print FH "};\n";
    }
#connect sib-sib
       if($i >13){
        print FH " csl_unit unit_a{\n";
        print FH "  ifca #($val1,$val2) ifcai;\n";
        print FH "  unit_a(){}\n";
        print FH "};\n";
        print FH " csl_unit unit_b{\n";
        print FH "  ifca #($val1,$val2) ifcai;\n";
        print FH "  unit_b(){\n";
        print FH "  ifcai.reverse();\n";
        print FH "  }\n";
        print FH "};\n";
        print FH " csl_unit unit_c{\n";
       
	foreach($j=1; $j<=$i; $j++)
         {
        print FH "  unit_a  a_$j;\n";
        print FH "  unit_b  b_$j;\n";
        }
        print FH "  unit_c(){\n";
	foreach($j=1; $j<=$i; $j++)
         {
        print FH "  a_$j.connect_units(b_$j); // sib-sib connection, parameters are used\n";
        }
        print FH "  }\n";
        print FH "};\n";
    }
   }
# parameter used in csl_unit 
    if($i >15 && $i<=20){
        print FH "csl_unit unit_a {\n";
        print FH "  csl_parameter p1($val1);\n"; 
        print FH "  csl_parameter p2(4'd5);\n";
        print FH "  csl_parameter p3($val2);\n";
        print FH "  csl_parameter p4(23);\n";
        print FH "  csl_port p_data(output,p1);\n"; 
        print FH "  csl_port p_addr(output,p3);\n";
        print FH "  unit_a(){}\n";
        print FH "};\n";

        print FH "csl_unit unit_b {\n";
        print FH "  csl_parameter p1($val1);\n"; 
        print FH "  csl_parameter p2(4'd5);\n";
        print FH "  csl_parameter p3($val2);\n";
        print FH "  csl_parameter p4(23);\n";
        print FH "  csl_port p_data(output,p4);\n"; 
        print FH "  csl_port p_addr(output,p2);\n";
         foreach ($j =16; $j <= $i; $j++){
         print FH " unit_a #(.p4($val1),.p2($val2)) a_$j;\n";
         }
        print FH "  unit_b(){}\n";
        print FH "};\n";
        
     
         print FH " csl_unit unit_top{\n";
          foreach ($j =16; $j <=$i; $j++){
         print FH " unit_a #(.p1($val1),.p3($val2)) a_$j;\n";
         print FH " unit_b #(.p2($val2),.p4($val1)) b_$j;\n";
            }       
        print FH " unit_top(){\n";
         foreach ( $j=16; $j <=$i; $j++){
             print FH " b_$j.connect_units(b_$j.a_$j); //parent-child connection\n";
         }
        print FH "}\n";
        print FH "};\n";
    }
#parameter used in csl_unit s-s connection
   if($i >20 && $i<=30){
        print FH "csl_unit unit_a1 {\n";
        print FH "  csl_parameter p1($val1);\n"; 
        print FH "  csl_parameter p2(4'd5);\n";
        print FH "  csl_parameter p3($val2);\n";
        print FH "  csl_parameter p4(23);\n";
        print FH "  csl_port p_data(output,p1);\n"; 
        print FH "  csl_port p_addr(output,p1);\n";
        print FH "  csl_port p_data1(output,p2);\n";
        print FH "  unit_a1(){}\n";
        print FH "};\n";
        print FH "csl_unit unit_a2 {\n";
        print FH "  csl_parameter p1($val1);\n"; 
        print FH "  csl_parameter p2(4'd5);\n";
        print FH "  csl_parameter p3($val2);\n";
        print FH "  csl_parameter p4(23);\n";
        print FH "  csl_port p_data(input,p1);\n"; 
        print FH "  csl_port p_addr(input,p1);\n";
        print FH "  csl_port p_data1(input,p2);\n";
              print FH "  unit_a2(){}\n";
        print FH "};\n";
        print FH "csl_unit unit_b1 {\n";
        print FH " csl_parameter pb($val2);\n";
        print FH "  csl_parameter p1($val1);\n"; 
        print FH "  csl_parameter p2(4'd5);\n";
        print FH "  csl_parameter p3($val2);\n";
        print FH "  csl_parameter p4(23);\n"; 
my $j;     
  foreach ($j =21; $j <= $i; $j++){
         print FH " unit_a1 #(.p4($j)) a1_$j;\n";
         }
        print FH "  unit_b1(){}\n";
        print FH "};\n";
          print FH "csl_unit unit_b2 {\n";
        print FH " csl_parameter pb($val2);\n";
        print FH "  csl_parameter p1($val1);\n"; 
        print FH "  csl_parameter p2(4'd5);\n";
        print FH "  csl_parameter p3($val2);\n";
        print FH "  csl_parameter p4(23);\n";
     
  foreach ($j =21; $j <= $i; $j++){
         print FH " unit_a2 #(.p4($j)) a2_$j;\n";
         }
        print FH "  unit_b2(){}\n";
        print FH "};\n";
        
     
         print FH " csl_unit unit_top{\n";
          foreach ($j =21; $j <=$i; $j++){
         print FH " unit_b1 #(.p4($j)) b10_$j;\n";
         print FH " unit_b2 #(,,,$j)  b20_$j;\n";
            }       
        print FH " unit_top(){\n";
         foreach ( $j=21; $j <=$i; $j++){
             print FH " b10_$j.a1_$j.connect_units(b20_$j.a2_$j); //sib-sib connection\n";
         }
        print FH "}\n";
        print FH "};\n";
    } 
#parameter used in csl_unit s-s connection
   if($i >30 && $i<=40){
        print FH "csl_unit unit_a1 {\n";
        print FH "  csl_parameter p1($val1);\n"; 
        print FH "  csl_parameter p2(4'd5);\n";
        print FH "  csl_parameter p3($val2);\n";
        print FH "  csl_parameter p4(23);\n";
        print FH "  csl_port p_data(output,p1);\n"; 
        print FH "  csl_port p_addr(output,p1);\n";
        print FH "  csl_port p_data1(output,p2);\n";
        print FH "  unit_a1(){}\n";
        print FH "};\n";
        print FH "csl_unit unit_a2 {\n";
        print FH "  csl_parameter p1($val1);\n"; 
        print FH "  csl_parameter p2(4'd5);\n";
        print FH "  csl_parameter p3($val2);\n";
        print FH "  csl_parameter p4(23);\n";
        print FH "  csl_port p_data(input,p1);\n"; 
        print FH "  csl_port p_addr(input,p1);\n";
        print FH "  csl_port p_data1(input,p2);\n";
        print FH "  unit_a2(){}\n";
        print FH "};\n";

        print FH "csl_unit unit_b1 {\n";
        print FH " csl_parameter pb($val2);\n";
        print FH "  csl_parameter p1($val1);\n"; 
        print FH "  csl_parameter p2(4'd5);\n";
        print FH "  csl_parameter p3($val2);\n";
        print FH "  csl_parameter p4(23);\n"; 
    
  foreach ($j =31; $j <= $i; $j++){
         print FH " unit_a1  a1_$j;\n";
         }
        print FH "  unit_b1(){\n";
   foreach ($j =31; $j <= $i; $j++){
     print FH " a1_$j.override_parameter(p2,$j);\n";
   }
        print FH "  }\n";
        print FH "};\n";

        print FH " csl_unit unit_b2 {\n";
        print FH "  csl_parameter pb($val2);\n";
        print FH "  csl_parameter p1($val1);\n"; 
        print FH "  csl_parameter p2(4'd5);\n";
        print FH "  csl_parameter p3($val2);\n";
        print FH "  csl_parameter p4(23);\n";
     
  foreach ($j =31; $j <= $i; $j++){
         print FH " unit_a2 a2_$j;\n";
         }
        print FH "  unit_b2(){\n";
 foreach ($j =31; $j <= $i; $j++){
     print FH " a2_$j.override_parameter(p2,$j);\n";
 }

        print FH "  }\n";
        print FH "};\n";
        
     
         print FH " csl_unit unit_top{\n";
         print FH " unit_b1  b10_$i;\n";
         print FH " unit_b2  b20_$i;\n";
                   
        print FH " unit_top(){\n";
	
         foreach ( $j=31; $j <=$i; $j++){
             print FH " b10_$i.override_parameter(p2,$j);\n";
             print FH " b10_$i.a1_$j.connect_units(b20_$i.a2_$j); //sib-sig connection\n";
         }
        print FH "}\n";
        print FH "};\n";
    } 
    close(FH);
}

