#!/usr/bin/perl

#Author Monica
use strict;

if(! defined $ENV{WORK}){
    die "[ERROR] The environment variable WORK is not set. Set it to point to TOT/se";
}

my $totDir     = $ENV{WORK};
&testDirExists($totDir);

 
sub testDirExists {
    my($execName) = @_;
    unless(-e "$execName") { die "[ERROR] The directory $execName does not exist!\n"; }
    
}

sub mkDir {
    my($dirName) = @_;
    unless(-e "$dirName")  { `mkdir $dirName`; }
}

foreach(my $i = 1; $i <=70; $i++) {
    &main($i);
 
}

sub main {
    my $i = $_[0];
    my $test_name = "connect_concat_expr_ifc_test".$i."_illegal.csl";
    &createCslFile($test_name, $i);
}
sub createCslFile {
    my($test_name, $i) = @_;
    my $path = "$ENV{WORK}/test/csl_ar_gen/";
 if($i==1){
        print ("Generated path: $path/ar_connect_concat_expr_ifc_invalid/ \n");}
    my $val = int(rand(300));
    if($val == 0) { $val = 1; }
    my $val1= int(rand(200));
    if($val1== 0) { $val1= 1; }
    my $val2 = int(rand(100));
    if($val2==0) {$val2=1;}
    if($test_name=~/(_illegal)/){
        &mkDir("$path/ar_connect_concat_expr_ifc_invalid");
        open(FH,">$path/ar_connect_concat_expr_ifc_invalid/$test_name");
    }

#*********************************************************
#concat_expr.connect(ifc.port);   
    if($i>0 && $i<=10){

    print FH "//Generated by Monica\n";
    print FH "//Connect concat_expr--ifc.port\n\n";
    print FH "// INVALID TEST $i;\n";
    print FH " csl_interface ifc_1 {\n";
    my $v1= 2* $val;
    my $v2= 2* $val1 + $val;
    my $v3= $val + $val1 + $val2;
    my $v4= 5;
    print FH "   csl_port p11(input,$v1);\n";
    print FH "   csl_port p12(input,$v2);\n";
    print FH "   csl_port p13(output,$v3);\n";
    print FH "   csl_port p14(output,$v4);\n";
    print FH " ifc_1(){}\n";
    print FH " };\n";

    print FH " csl_unit unit1{\n";
    print FH "   csl_port p11(input,$val);\n";
    print FH "   csl_port p12(input,$val);\n";
    print FH "   csl_port p13(output,$val1);\n";
    print FH "   csl_port p14(output,$val1);\n";
    print FH "   csl_port p15(input,$val2);\n";
    print FH "   ifc_1 ifc1_i1;\n";
    print FH " unit1(){}\n";
    print FH " };\n";

    print FH " csl_unit unit2{\n";
    print FH "   csl_port p21(input,$val);\n";
    print FH "   csl_port p22(input,$val);\n";
    print FH "   csl_port p23(output,$val1);\n";
    print FH "   csl_port p24(output,$val1);\n";
    print FH "   unit1 u1_i1;\n";
    print FH "   unit1 u1_i2;\n";
    print FH "   ifc_1 ifc1_i2;\n";
    print FH " unit2(){\n";
    print FH " {p21,p22}.connect(u1_i1.ifc1_i1.p11);          //invalid connection: concat_expr--unit.ifc.port\n";
    print FH " {p23,p24,p21}.connect(u1_i2.ifc1_i1.p12);      //invalid connection: concat_expr--unit.ifc.port\n";    
    print FH " {3'b111,2'b00}.connect(u1_i2.ifc1_i1.p14);     //invalid connection: concat_expr--unit.ifc.port\n";
    print FH " }\n";
    print FH " };\n";

    print FH " csl_unit u_top{\n";
    print FH " csl_signal s1($val),s2($val);\n";
    print FH " csl_signal s3($val1),s4($val2);\n";
    print FH " csl_signal s5,s6,s7;\n";
   
  foreach(my $j=1; $j<=$i; $j++){
        print FH " unit2 u2_i$j;\n";
    }
    print FH " u_top(){\n";
  foreach( my $j=1; $j<=$i; $j++){
    print FH " {s1,s2}.connect(u2_i$j.ifc1_i2.p11);                   //invalid connection: concat_expr--unit.ifc.port\n"; 
    print FH " {s3,s3,s2}.connect(u2_i$j.ifc1_i2.p12);                //invalid connection: concat_expr--unit.ifc.port\n";
    print FH " {s1,s3,s4}.connect(u2_i$j.ifc1_i2.p13);                //invalid connection: concat_expr--unit.ifc.port\n";
    print FH " {1'b0, 1'b0,1'b1,2'b10}.connect(u2_i$j.ifc1_i2.p14);   //invalid connection: concat_expr--unit.ifc.port\n";
    print FH " {{3{1'b0}},2'b11}.connect(u2_i$j.u1_i1.ifc1_i1.p14);   //invalid connection: concat_expr--unit.unit.ifc.port\n";  
}
    print FH " }\n";
    print FH " };\n";
}

#*********************************************************
#concat_expr.connect(ifc.port[ps]);   
    if($i>10 && $i<=20){

    print FH "//Generated by Monica\n";
    print FH "//Connect concat_expr--ifc.port[ps]\n\n";
    print FH "// INVALID TEST $i;\n";
    print FH " csl_interface ifc_1 {\n";
    my $v1= 2* $val;
    my $v2= 2* $val1 + $val;
    my $v3= $val + $val1 + $val2;
    my $v4= 5;
    print FH "   csl_port p11(input,$v1);\n";
    print FH "   csl_port p12(input,$v2);\n";
    print FH "   csl_port p13(output,$v3);\n";
    print FH "   csl_port p14(output,$v4);\n";
    print FH " ifc_1(){}\n";
    print FH " };\n";

    print FH " csl_unit unit1{\n";
    print FH "   csl_port p11(input,$val);\n";
    print FH "   csl_port p12(input,$val);\n";
    print FH "   csl_port p13(output,$val1);\n";
    print FH "   csl_port p14(output,$val1);\n";
    print FH "   csl_port p15(input,$val2);\n";
    print FH "   ifc_1 ifc1_i1;\n";
    print FH " unit1(){}\n";
    print FH " };\n";

    my $ui1=$v1-1;
    my $ui2=$v2-1;
    my $ui3=$v3-1;
    my $ui4=$v4-1;
    my $o=0;
    print FH " csl_unit unit2{\n";
    print FH "   csl_port p21(input,$val);\n";
    print FH "   csl_port p22(input,$val);\n";
    print FH "   csl_port p23(output,$val1);\n";
    print FH "   csl_port p24(output,$val1);\n";
    print FH "   unit1 u1_i1;\n";
    print FH "   unit1 u1_i2;\n";
    print FH "   ifc_1 ifc1_i2;\n";
    print FH " unit2(){\n";
    print FH "  {p21,p22}.connect(u1_i1.ifc1_i1.p11[$o:$ui1]);         //invalid connection: concat_expr--unit.ifc.port[ps]\n";
    print FH " {p23,p24,p21}.connect(u1_i2.ifc1_i1.p12[$o:$ui2]);      //invalid connection: concat_expr--unit.ifc.port[ps]\n";    
    print FH " {3'b111,2'b00}.connect(u1_i2.ifc1_i1.p14[$o:$ui4]);     //invalid connection: concat_expr--unit.ifc.port[ps]\n";
    print FH " }\n";
    print FH " };\n";

    print FH " csl_unit u_top{\n";
    print FH " csl_signal s1($val),s2($val);\n";
    print FH " csl_signal s3($val1),s4($val2);\n";
    print FH " csl_signal s5,s6,s7;\n";
   
  foreach(my $j=11; $j<=$i; $j++){
        print FH " unit2 u2_i$j;\n";
    }
    print FH " u_top(){\n";
  foreach( my $j=11; $j<=$i; $j++){
    print FH " {s1,s2}.connect(u2_i$j.ifc1_i2.p11[$o:$ui1]);                   //invalid connection: concat_expr--unit.ifc.port[ps]\n"; 
    print FH " {s3,s3,s2}.connect(u2_i$j.ifc1_i2.p12[$o:$ui2]);                //invalid connection: concat_expr--unit.ifc.port[ps]\n";
    print FH " {s1,s3,s4}.connect(u2_i$j.ifc1_i2.p13[$o:$ui3]);                //invalid connection: concat_expr--unit.ifc.port[ps]\n";
    print FH " {1'b0, 1'b0,1'b1,2'b10}.connect(u2_i$j.ifc1_i2.p14[$o:$ui4]);   //invalid connection: concat_expr--unit.ifc.port[ps]\n";
    print FH " {{3{1'b0}},2'b11}.connect(u2_i$j.u1_i1.ifc1_i1.p14[$o:$ui4]);   //invalid connection: concat_expr--unit.unit.ifc.port[ps]\n";  
}
    print FH " }\n";
    print FH " };\n";
}

#***************************************************
#concat_expr.connect(ifc.ifc1.port);

 if($i>20 && $i<=30){
    print FH "//Generated by Monica\n";
    print FH "//Connect concat_expr--ifc.ifc1.port\n\n";
    print FH "// INVALID TEST $i;\n";
    
    print FH " csl_interface ifc_1 {\n";
    print FH "   csl_port p11(input,$val);\n";
    print FH "   csl_port p12(input,$val1);\n";
    print FH "   csl_port p13(output,$val2);\n";
    print FH "   csl_port p14(output);\n";
    print FH " ifc_1(){}\n";
    print FH " };\n";

    print FH " csl_interface ifc_2 {\n";
    print FH "   csl_port p21(input,$val);\n";
    print FH "   csl_port p22(input,$val1);\n";
    print FH "   csl_port p23(output,$val2);\n";
    print FH "   csl_port p24(output);\n";
 foreach(my $j=21; $j<=$i; $j++){
     print FH "   ifc_1 ifc1_i$j;\n";
 }
    print FH " ifc_2(){}\n";
    print FH " };\n";
    my $v1= 2* $val;
    my $v2= 2* $val1 + $val;
    my $v3= $val + $val1 + $val2;
    my $v4= 5;
   print FH " csl_unit unit1{\n";
    print FH "   csl_port p11(input,$val);\n";
    print FH "   csl_port p12(input,$val);\n";
    print FH "   csl_port p13(output,$val1);\n";
    print FH "   csl_port p14(output,$val1);\n";
    print FH "   ifc_2 ifc2_i1;\n";
    print FH " unit1(){}\n";
    print FH " };\n";

    print FH " csl_unit unit2{\n";
    print FH "   csl_port p21(input,$val);\n";
    print FH "   csl_port p22(input,$val);\n";
    print FH "   csl_port p23(output,$val1);\n";
    print FH "   csl_port p24(output,$val1);\n";
    print FH "   unit1 u1_i1;\n";
    print FH "   unit1 u1_i2;\n";
    print FH "   ifc_2 ifc2_i2;\n";
    print FH " unit2(){\n";
 foreach(my $j=21; $j<=$i; $j++){
    print FH " {p21,p22}.connect(u1_i1.ifc2_i1.ifc1_i$j.p11);      //invalid connection: concat_expr--unit.ifc.ifc1.port\n";
    print FH " {p23,p24,p21}.connect(u1_i2.ifc2_i1.ifc1_i$j.p12);  //invalid connection: concat_expr--unit.ifc.ifc1.port\n";    
    print FH " {3'b111,2'b00}.connect(u1_i2.ifc2_i1.ifc1_i$j.p14);  //invalid connection: concat_expr--unit.ifc.ifc1.port\n";
}
    print FH " }\n";
    print FH " };\n";


    print FH " csl_unit u_top{\n";
    print FH " csl_signal s1($val),s2($val);\n";
    print FH " csl_signal s3($val2),s4($val2);\n";
    print FH " csl_signal s5,s6,s7;\n";
   
  foreach(my $j=21; $j<=$i; $j++){
        print FH " unit2 u2_i$j;\n";
    }
    print FH " u_top(){\n";
  foreach( my $j=21; $j<=$i; $j++){
    print FH " {s1,s2}.connect(u2_i$j.ifc2_i2.ifc1_i$j.p11);                  //invalid connection: concat_expr--unit.ifc.ifc1.port\n"; 
    print FH " {s3,s3,s2}.connect(u2_i$j.ifc2_i2.ifc1_i$j.p12);               //invalid connection: concat_expr--unit.ifc.ifc1.port\n";
    print FH " {s1,s3,s4}.connect(u2_i$j.ifc2_i2.ifc1_i$j.p13);               //invalid connection: concat_expr--unit.ifc.ifc1.port\n";
    print FH " {1'b1, 1'b0,1'b1,2'b11}.connect(u2_i$j.ifc2_i2.ifc1_i$j.p14);  //invalid connection: concat_expr--unit.ifc.ifc1.port\n";
    print FH " {{3{1'b0}},2'b11}.connect(u2_i$j.u1_i1.ifc2_i1.ifc1_i$j.p14);  //invalid connection: concat_expr--unit.unit.ifc.ifc1.port\n";  
}
    print FH " }\n";
    print FH " };\n";
}

#***************************************************
#concat_expr.connect(ifc.ifc1.port[ps]);

 if($i>30 && $i<=40){
    print FH "//Generated by Monica\n";
    print FH "//Connect concat_expr--ifc.ifc1.port[part_select]\n\n";
    print FH "// INVALID TEST $i;\n";
    
    print FH " csl_interface ifc_1 {\n";
    print FH "   csl_port p11(input,$val);\n";
    print FH "   csl_port p12(input,$val1);\n";
    print FH "   csl_port p13(output,$val2);\n";
    print FH "   csl_port p14(output);\n";
    print FH " ifc_1(){}\n";
    print FH " };\n";

    print FH " csl_interface ifc_2 {\n";
    print FH "   csl_port p21(input,$val);\n";
    print FH "   csl_port p22(input,$val1);\n";
    print FH "   csl_port p23(output,$val2);\n";
    print FH "   csl_port p24(output);\n";
 foreach(my $j=31; $j<=$i; $j++){
     print FH "   ifc_1 ifc1_i$j;\n";
 }
    print FH " ifc_2(){}\n";
    print FH " };\n";
    my $v1= 2* $val;
    my $v2= 2* $val1 + $val;
    my $v3= $val + $val1 + $val2;
    my $v4= 5;
    print FH " csl_unit unit1{\n";
    print FH "   csl_port p11(input,$val);\n";
    print FH "   csl_port p12(input,$val);\n";
    print FH "   csl_port p13(output,$val1);\n";
    print FH "   csl_port p14(output,$val1);\n";
    print FH "   ifc_2 ifc2_i1;\n";
    print FH " unit1(){}\n";
    print FH " };\n";

    my $ui1=$v1-1;
    my $ui2=$v2-1;
    my $ui3=$v3-1;
    my $ui4=$v4-1;
    my $o=0;
    print FH " csl_unit unit2{\n";
    print FH "   csl_port p21(input,$val);\n";
    print FH "   csl_port p22(input,$val);\n";
    print FH "   csl_port p23(output,$val1);\n";
    print FH "   csl_port p24(output,$val1);\n";
    print FH "   unit1 u1_i1;\n";
    print FH "   unit1 u1_i2;\n";
    print FH "   ifc_2 ifc2_i2;\n";
    print FH " unit2(){\n";
 foreach(my $j=31; $j<=$i; $j++){
    print FH " {p21,p22}.connect(u1_i1.ifc2_i1.ifc1_i$j.p11[$o:$ui1]);      //invalid connection: concat_expr--unit.ifc.ifc1.port[ps]\n";
    print FH " {p23,p24,p21}.connect(u1_i2.ifc2_i1.ifc1_i$j.p12[$o:$ui2]);  //invalid connection: concat_expr--unit.ifc.ifc1.port[ps]\n";    
    print FH " {3'b111,2'b00}.connect(u1_i2.ifc2_i1.ifc1_i$j.p14[$o:$ui4]);  //invalid connection: concat_expr--unit.ifc.ifc1.port[ps]\n";
}
    print FH " }\n";
    print FH " };\n";


    print FH " csl_unit u_top{\n";
    print FH " csl_signal s1($val),s2($val);\n";
    print FH " csl_signal s3($val2),s4($val2);\n";
    print FH " csl_signal s5,s6,s7;\n";
   
  foreach(my $j=31; $j<=$i; $j++){
        print FH " unit2 u2_i$j;\n";
    }
    print FH " u_top(){\n";
  foreach( my $j=31; $j<=$i; $j++){
    print FH " {s1,s2}.connect(u2_i$j.ifc2_i2.ifc1_i$j.p11[$o:$ui1]);                  //invalid connection: concat_expr--unit.ifc.ifc1.port[ps]\n"; 
    print FH " {s3,s3,s2}.connect(u2_i$j.ifc2_i2.ifc1_i$j.p12[$o:$ui2]);               //invalid connection: concat_expr--unit.ifc.ifc1.port[ps]\n";
    print FH " {s1,s3,s4}.connect(u2_i$j.ifc2_i2.ifc1_i$j.p13[$o:$ui3]);               //invalid connection: concat_expr--unit.ifc.ifc1.port[ps]\n";
    print FH " {1'b1, 1'b0,1'b1,2'b11}.connect(u2_i$j.ifc2_i2.ifc1_i$j.p14[$o:$ui4]);  //invalid connection: concat_expr--unit.ifc.ifc1.port[ps]\n";
    print FH " {{3{1'b0}},2'b11}.connect(u2_i$j.u1_i1.ifc2_i1.ifc1_i$j.p14[$o:$ui4]);  //invalid connection: concat_expr--unit.unit.ifc.ifc1.port[ps]\n";  
}
    print FH " }\n";
    print FH " };\n";
}

#***************************************************************
# concat_expr.connect(op_expr);
 if($i>40 && $i<=50){
    print FH "//Generated by Monica\n";
    print FH "//Connect concat_expr--op_expr\n\n";
    print FH "// INVALID TEST $i;\n";
    my $v1= 2* $val;
    my $v2= 2* $val1 + $val;
    my $v3= $val + $val1 + $val2;
    my $v4= 5;
    print FH " csl_unit unit1{\n";
    print FH "   csl_port p11(input,$val);\n";
    print FH "   csl_port p12(input,$val);\n";
    print FH "   csl_port p13(output,$val1);\n";
    print FH "   csl_port p14(output,$val1);\n";
    foreach (my $j=41; $j<=45; $j++){
        print FH "  csl_signal s1_$j($v1);\n";
     }
     foreach (my $j=46; $j<=50; $j++){
        print FH "  csl_signal s1_$j($v2);\n";
     }
    print FH " unit1(){\n";
    foreach (my $j=41; $j<=45; $j++){
    my $k=$j+1;
    print FH " {p11,p12}.connect(s1_$j ^ s1_$k);      //invalid connection: concat_expr--op_expr\n";
    }
    foreach (my $j=46; $j<=50; $j++){
    my $k=$j+1;
    print FH " {p13,p14,p11}.connect(s1_$j ^ s1_$k); //invalid connection: concat_expr--op_expr\n";
    }
    print FH "}\n";
    print FH " };\n";
  
    print FH " csl_unit unit2{\n";
    print FH "  csl_port p21(input,$v3);\n";
    print FH "  csl_port p22(input,$v3);\n";
    print FH "  csl_port p23(output,$v4);\n";
    print FH "  csl_port p24(output,$v4);\n";
    print FH "  csl_port p25(input,$v4);\n";
      foreach (my $j=41; $j<=50; $j++){
        print FH "  csl_signal s21_$j($val1);\n";
        print FH "  csl_signal s22_$j($val2);\n";
        print FH "  csl_signal s23_$j($val);\n";
     }
    print FH " csl_signal s24(2);\n";
    print FH " unit1 u1;\n";
    print FH " unit2(){\n";
    foreach (my $j=41; $j<=50; $j++){
    print FH " {s23_$j,s21_$j,s22_$j}.connect(~(p21 | p22));  //invalid connection: concat_expr--op_expr\n";
    }
    print FH " {2'b01, 1'b0,s24}.connect(p23 ^ p24 & p25);   //invalid connection: concat_expr--op_expr\n";
    print FH "}\n";
    print FH " };\n";
}
#***************************************************************
# concat_expr.connect(concat_expr);
 if($i>50 && $i<=60){
    print FH "//Generated by Monica\n";
    print FH "//Connect concat_expr--concat_expr\n\n";
    print FH "// INVALID TEST $i;\n";

    print FH " csl_unit unit1{\n";
    print FH "   csl_port p11(input,$val);\n";
    print FH "   csl_port p12(input,$val);\n";
    print FH "   csl_port p13(output,$val1);\n";
    print FH "   csl_port p14(output,$val1);\n";
    print FH "   csl_port p16(input,$val2);\n";
    print FH "   csl_port p15(input),p17(output);\n";
    print FH "   csl_signal s11($val);\n";
    print FH "   csl_signal s12($val1);\n";
    print FH "   csl_signal s13($val2);\n";
    print FH "   csl_signal s14,s15;\n";
    print FH " unit1(){\n";
    print FH " {p11,p12,{p13,p16}}.connect({s11,s11,{s12,s13}});  //invalid connection: concat_expr--concat_expr\n";
    print FH " {p12 & p11,p13 ^ p14,p16}.connect({s11,s12,s13});  //invalid connection: concat_expr--concat_expr\n";
    print FH " {p15,p17,2'b11}.connect({s14,s15,2'b00});          //invalid connection: concat_expr--concat_expr\n";
     print FH "}\n";
    print FH " };\n";
}

#***************************************************************
# concat_expr.connect(replic_expr);
 if($i>60 && $i<=70){
    print FH "//Generated by Monica\n";
    print FH "//Connect concat_expr--replic_expr\n\n";
    print FH "// INVALID TEST $i;\n";

    print FH " csl_unit unit1{\n";
    print FH "   csl_port p11(input,$val);\n";
    print FH "   csl_port p12(input,$val);\n";
    print FH "   csl_port p13(output,$val1);\n";
    print FH "   csl_port p14(output,$val1);\n";
    print FH "   csl_port p16(input,$val2);\n";
    print FH "   csl_port p15(input),p17(output);\n";
    print FH "   csl_signal s11($val);\n";
    print FH "   csl_signal s12($val1);\n";
    print FH "   csl_signal s13($val2);\n";
    print FH "   csl_signal s14,s15;\n";
    print FH " unit1(){\n";
    print FH " {p11,p12,{p13,p14}}.connect({{2{s11}},{2{s12}}});   //invalid connection: concat_expr--replic_expr\n";
    print FH " {p12 & p11,p12 ^ p11,p12 + p11}.connect({3{s11}});  //invalid connection: concat_expr--replic_expr\n";
    print FH " {p15,p17,1'b1,1'b0}.connect({2{s14,s15}});          //invalid connection: concat_expr--replic_expr\n";
     print FH "}\n";
    print FH " };\n";
}


    close (FH);
}
