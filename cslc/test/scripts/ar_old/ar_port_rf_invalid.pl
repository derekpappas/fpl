#!/usr/bin/perl

#Author Monica
use strict;

if(! defined $ENV{WORK}){
    die "[ERROR] The environment variable WORK is not set. Set it to point to TOT/se";
}

my $totDir     = $ENV{WORK};
&testDirExists($totDir);

sub testDirExists {
    my($execName) = @_;
    unless(-e "$execName") { die "[ERROR] The directory $execName does not exist!\n"; }
    
}

sub mkDir {
    my($dirName) = @_;
    unless(-e "$dirName")  { `mkdir $dirName`; }
}

foreach(my $i = 1; $i <= 40; $i++) {
    &main($i);
}

sub main {
    my $i = $_[0];
    my $test_name = "connect_port_rf_test".$i."_illegal.csl";
    &createCslFile($test_name, $i);
}
sub createCslFile {
    my($test_name, $i) = @_;
    my $path = "$ENV{WORK}/test/csl_ar_gen/";
 if($i==1){
        print ("Generated path: $path/ar_connect_port_rf_invalid/ \n");}
    my $val = int(rand(500));
    if($val == 0) { $val = 1; }
    my $val1 =int(rand(25))+1;

    if($test_name=~/(_illegal)/){
        &mkDir("$path/ar_connect_port_rf_invalid");
        open(FH,">$path/ar_connect_port_rf_invalid/$test_name");
    }
#*************************************************
#port.connect(rf)

    if( $i<=10){
    print FH "//Generated by Monica\n";
    print FH "//Connect port--rf\n\n";
    print FH "// INVALID TEST $i;\n";

     print FH "csl_bitrange br1($val);\n";
     print FH "csl_bitrange br2($val1);\n\n";
  
    print FH " csl_enum e_width{\n";
    print FH "  data_w =$val,\n";
    print FH "  addr_w =$val1\n";
    print FH " };\n";
   
    print FH " csl_register_file rf_$i {\n";
    print FH " rf_$i(){\n";
    print FH " set_width(data_w);\n";
    print FH " set_depth(1<<addr_w);\n";
    print FH " }\n";
    print FH "};\n";

    print FH " csl_unit u_$i {\n";
    foreach( my $j=1; $j<=$i+1; $j++){
    print FH "   csl_port  p1_$j(input,$j);\n";
    print FH "   csl_port  p2_$j(output,$j);\n";
}
foreach( my $j=1; $j<=$i+1; $j++){
    print FH " rf_$i rf1_i$j;\n";
}
    print FH " u_$i(){\n";
foreach( my $j=1; $j<=$i+1; $j++){
    my $k=$j+1;
    if($k<=$i+1){
    print FH " p1_$j.connect(rf1_i$j);              //invalid connection: port--rf\n";
    print FH " p2_$j.connect(rf1_i$j);              //invalid connection: port--rf\n";
    print FH " rf1_i$j.wr_data.connect(rf1_i$k);     //invalid connection: rf.port--rf\n";
}
}
    print FH " }\n";
    print FH "};\n";

    print FH " csl_unit top_$i {\n";
     foreach( my $j=1; $j<=$i+1; $j++){
    print FH "   csl_port  pt1_$j(input,$j);\n";
    print FH "   csl_port  pt2_$j(output,$j);\n";
}
foreach( my $j=1; $j<=$i+1; $j++){
    print FH " rf_$i rf2_i$j;\n";
}
foreach( my $j=1; $j<=$i+1; $j++){
    print FH " u_$i u_i$j;\n";
}
 print FH " top_$i(){\n";
foreach( my $j=1; $j<=$i+1; $j++){
    my $k=$j+1;
    if($k<=$i+1){
    print FH " pt1_$j.connect(rf2_i$j);              //invalid connection: port--rf\n";
    print FH " pt2_$j.connect(rf2_i$j);              //invalid connection: port--rf\n";
    print FH " rf2_i$j.wr_data.connect(rf2_i$k);     //invalid connection: rf.port--rf\n";
    print FH " u_i$j.p1_$j.connect(rf2_i$j);         //invalid connection: unit.port--rf\n";
    print FH " u_i$j.p2_$j.connect(u_i$k.rf1_i$j);  //invalid connection: unit.port--unit.rf\n";
    print FH " pt1_$j.connect(u_i$j.rf1_i$j);       //invalid connection: port--unit.rf\n";
}
}
    print FH " }\n";
    print FH "};\n";
}
#*************************************************
#signal.connect(rf)

    if( $i>10 && $i<=20){
    print FH "//Generated by Monica\n";
    print FH "//Connect signal--rf\n\n";
    print FH "// INVALID TEST $i;\n";
     print FH "csl_bitrange br1($val);\n";
     print FH "csl_bitrange br2($val1);\n\n";  

    print FH " csl_enum e_width{\n";
    print FH "  data_w =$val,\n";
    print FH "  addr_w =$val1\n";
    print FH " };\n";
   
    print FH " csl_register_file rf_$i {\n";
    print FH " rf_$i(){\n";
    print FH " set_width(data_w);\n";
    print FH " set_depth(1<<addr_w);\n";
    print FH " }\n";
    print FH "};\n";

    print FH " csl_unit u_$i {\n";
    foreach( my $j=11; $j<=$i+1; $j++){
    print FH "   csl_signal  s1_$j($j);\n";
    print FH "   csl_signal  s2_$j($j);\n";
}
foreach( my $j=11; $j<=$i+1; $j++){
    print FH " rf_$i rf1_i$j;\n";
}
    print FH " u_$i(){\n";
foreach( my $j=11; $j<=$i+1; $j++){
    my $k=$j+1;
    if($k<=$i+1){
    print FH " s1_$j.connect(rf1_i$j);              //invalid connection: signal--rf\n";
    print FH " s2_$j.connect(rf1_i$j);              //invalid connection: signal--rf\n";
   
}
}
    print FH " }\n";
    print FH "};\n";

    print FH " csl_unit top_$i {\n";
     foreach( my $j=11; $j<=$i+1; $j++){
    print FH "   csl_signal  st1_$j($j);\n";
    print FH "   csl_signal  st2_$j($j);\n";
}
foreach( my $j=11; $j<=$i+1; $j++){
    print FH " rf_$i rf2_i$j;\n";
}
foreach( my $j=11; $j<=$i+1; $j++){
    print FH " u_$i u_i$j;\n";
}
 print FH " top_$i(){\n";
foreach( my $j=11; $j<=$i+1; $j++){
    my $k=$j+1;
    if($k<=$i+1){
    print FH " st1_$j.connect(rf2_i$j);              //invalid connection: signal--rf\n";
    print FH " st2_$j.connect(rf2_i$j);              //invalid connection: signal--rf\n";
    print FH " u_i$j.s1_$j.connect(rf2_i$j);         //invalid connection: unit.signal--rf\n";
    print FH " u_i$j.s2_$j.connect(u_i$k.rf1_i$j);  //invalid connection: unit.signal--unit.rf\n";
    print FH " st1_$j.connect(u_i$j.rf1_i$j);       //invalid connection: signal--unit.rf\n";
}
}
    print FH " }\n";
    print FH "};\n";
}
#*************************************************
#unit.connect(rf)
  
    if( $i>20 && $i<=30){
    print FH "//Generated by Monica\n";
    print FH "//Connect unit--rf\n\n";
    print FH "// INVALID TEST $i;\n";

     print FH "csl_bitrange br1($val);\n";
     print FH "csl_bitrange br2($val1);\n\n";  

    print FH " csl_enum e_width{\n";
    print FH "  data_w =$val,\n";
    print FH "  addr_w =$val1\n";
    print FH " };\n";
   
    print FH " csl_register_file rf_$i {\n";
    print FH " rf_$i(){\n";
    print FH " set_width(data_w);\n";
    print FH " set_depth(1<<addr_w);\n";
    print FH " }\n";
    print FH "};\n";

    print FH " csl_unit u_$i {\n";
    foreach( my $j=21; $j<=$i+1; $j++){
    print FH "   csl_port  p1_$j(input,$j);\n";
    print FH "   csl_port  p2_$j(output,$j);\n";
}
foreach( my $j=21; $j<=$i+1; $j++){
    print FH " rf_$i rf1_i$j;\n";
}
    print FH " u_$i(){\n";

    print FH " }\n";
    print FH "};\n";

    print FH " csl_unit top_$i {\n";
     foreach( my $j=21; $j<=$i+1; $j++){
    print FH "   csl_port  pt1_$j(input,$j);\n";
    print FH "   csl_port  pt2_$j(output,$j);\n";
}
foreach( my $j=21; $j<=$i+1; $j++){
    print FH " rf_$i rf2_i$j;\n";
}
foreach( my $j=21; $j<=$i+1; $j++){
    print FH " u_$i u_i$j;\n";
}
 print FH " top_$i(){\n";
foreach( my $j=21; $j<=$i+1; $j++){
    my $k=$j+1;
    if($k<=$i+1){
    print FH " u_i$j.connect(rf2_i$j);               //invalid connection: unit--rf\n";
    print FH " u_i$j.connect(u_i$k.rf1_i$j);         //invalid connection:unit--unit.rf\n";
    
}
}
    print FH " }\n";
    print FH "};\n";
}
#*************************************************
# rf.connect(rf)
 
    if( $i>30 && $i<=40){
    print FH "//Generated by Monica\n";
    print FH "//Connect rf--rf\n\n";
    print FH "// INVALID TEST $i;\n";

     print FH "csl_bitrange br1($val);\n";
     print FH "csl_bitrange br2($val1);\n\n";  

    print FH " csl_enum e_width{\n";
    print FH "  data_w =$val,\n";
    print FH "  addr_w =$val1\n";
    print FH " };\n";
   
    print FH " csl_register_file rf_$i {\n";
    print FH " rf_$i(){\n";
    print FH " set_width(data_w);\n";
    print FH " set_depth(1<<addr_w);\n";
    print FH " }\n";
    print FH "};\n";

    print FH " csl_unit u_$i {\n";
    foreach( my $j=31; $j<=$i+1; $j++){
    print FH "   csl_port  p1_$j(input,$j);\n";
    print FH "   csl_port  p2_$j(output,$j);\n";
}
foreach( my $j=31; $j<=$i+1; $j++){
    print FH " rf_$i rf1_i$j;\n";
}
    print FH " u_$i(){\n";

    print FH " }\n";
    print FH "};\n";

    print FH " csl_unit top_$i {\n";
     foreach( my $j=31; $j<=$i+1; $j++){
    print FH "   csl_port  pt1_$j(input,$j);\n";
    print FH "   csl_port  pt2_$j(output,$j);\n";
}
foreach( my $j=31; $j<=$i+1; $j++){
    print FH " rf_$i rf2_i$j;\n";
}
foreach( my $j=31; $j<=$i+1; $j++){
    print FH " u_$i u_i$j;\n";
}
 print FH " top_$i(){\n";
foreach( my $j=31; $j<=$i+1; $j++){
    my $k=$j+1;
    if($k<=$i+1){
    print FH " u_i$j.rf1_i$k.connect(rf2_i$j);               //invalid connection: unit.rf--rf\n";
    print FH " u_i$j.rf1_i$j.connect(u_i$k.rf1_i$k);         //invalid connection: unit.rf--unit.rf\n";
    print FH " rf2_i$j.connect(rf2_i$k);                     //invalid connection: rf--rf\n";
    print FH " rf2_i$j.connect(u_i$j.rf1_i$j);               //invalid connection: rf--unit.rf\n";
}
}
    print FH " }\n";
    print FH "};\n";
}
    close(FH);
}
