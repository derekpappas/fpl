#!/usr/bin/perl

#Author Anamaria
use strict;

if(! defined $ENV{WORK}){
    die "[ERROR] The environment variable WORK is not set. Set it to point to TOT/se";
}

my $totDir     = $ENV{WORK};
&testDirExists($totDir);

sub testDirExists {
    my($execName) = @_;
    unless(-e "$execName") { die "[ERROR] The directory $execName does not exist!\n"; }
    
}

sub mkDir {
    my($dirName) = @_;
    unless(-e "$dirName")  { `mkdir $dirName`; }
}


foreach (my $k = 1; $k <= 15; $k++) {
    my @a1 = ("p_a1_$k", "p_a2_$k", "p_a3_$k", "p_a4_$k", "p_b1_$k", "p_b2_$k", "p_b3_$k", "p_c1_$k", "p_c2_$k", "p_c3_$k", "p_u1_$k", "p_u2_$k", "s_a1_$k", "s_a2_$k", "s_b_$k", "s_c_$k", "s_u1_$k", "s_u2_$k");
    my @a2 = ("p_a1_$k", "p_a2_$k", "p_a3_$k", "p_a4_$k", "p_a5_$k", "s_a1_$k", "s_a2_$k", "s_u1_$k", "s_u2_$k", "s_b_$k", "s_c_$k", "p_b1_$k", "p_b2_$k", "p_b3_$k", "p_c1_$k", "p_c2_$k", "p_c3_$k", "p_u1_$k", "p_u2_$k" );
    my @a3 = ("p_a1_$k", "p_a2_$k", "s_a1_$k", "s_b_4k", "s_c_$k", "s_u1_$k", "s_u2_$k", "p_b1_$k", "p_b2_$k", "p_b3_$k", "p_c1_$k", "p_c2_$k", "p_c3_$k", "p_u1_$k", "p_u2_$k" );
    my $ctests;
    if($k <= 5) {   
        foreach my $u (@a1) {
            $ctests = $u; 
            &main($k, $ctests, $u);
        }
    }
    elsif($k > 5 && $k <= 10) {
         foreach my $u(@a2) {
            $ctests = $u; 
            &main($k, $ctests, $u);
        } "p_b1_$k", "p_b2_$k", "p_b3_$k", "p_c1_$k", "p_c2_$k", "p_c3_$k", "p_u1_$k", "p_u2_$k",
     }
    elsif($k > 10 && $k <= 15) {
         foreach my $u(@a3) {
            $ctests = $u; 
            &main($k, $ctests, $u);
        } 
     }
}
sub main {     
    my ($k, $ctests, $u) = @_; 
    my $test_name = "concat_ports_assign".$k."_".$u."_legal.csl";
    &createCslFile($test_name, $k, $ctests);
}
   
sub createCslFile {
    my($test_name, $k, $ctests) = @_;
    my $path = "$ENV{WORK}/test/generated_tests/concat_replicate/";
    my $val1 = 50;
    my $val2 = 100;
    my $val3 = 200;
    
    my $val4 = $val3 + $val2;
    my $val5 = 2*$val3;
    my $val6 = $val4 + $val5;
    my $val7 = 2*$val6;
  
    if($test_name=~/(_legal)/){
        &mkDir("$path/ar_concat_ports_assign_valid");
        open(FH,">$path/ar_concat_ports_assign_valid/$test_name");
    }
    elsif($test_name=~/(_illegal)/) {
        &mkDir("$path/ar_concat_ports_assign_invalid"); 
        open(FH,">$path/ar_concat_ports_assign_invalid/$test_name");
    }
    print FH "// Generated by  AnamariaH \n\n";
    print FH "// Assign concat_ports/signals_and_one_signal in the same unit or in different units. \n\n";

  

    print FH "csl_unit unit_a{ \n";

    if($k <= 5) {
    print FH "csl_signal s_a1_$k($val3); \n";
    print FH "csl_signal s_a2_$k($val2); \n";
    print FH "csl_port p_a1_$k(input, $val2);\n";
    print FH "csl_port p_a2_$k(input, $val2);\n";
    print FH "csl_port p_a3_$k(input, $val1);\n";
    print FH "csl_port p_a4_$k(input, $val1);\n";
  
    }
    elsif($k > 5 && $k <= 10) {"p_b1_$k", "p_b2_$k", "p_b3_$k", "p_c1_$k", "p_c2_$k", "p_c3_$k", "p_u1_$k", "p_u2_$k",
    print FH "csl_signal s_a1_$k($val4); \n";
    print FH "csl_signal s_a2_$k($val2); \n";
    print FH "csl_port p_a1_$k(input, $val2);\n";
    print FH "csl_port p_a2_$k(input, $val1);\n";
    print FH "csl_port p_a3_$k(input, $val1);\n";
    print FH "csl_port p_a4_$k(input, $val2);\n";
    print FH "csl_port p_a5_$k(output, $val2); \n";
  
    }
    elsif($k > 10 && $k <= 15) {
    print FH "csl_port p_a1_$k(input, $val2);\n";
    print FH "csl_port p_a2_$k(input, $val4);\n";
    print FH "csl_signal s_a1_$k($val5); \n";

    }

    print FH "  unit_a() { \n"; 
    if($k <= 5) { 
    print FH "    s_a1_$k = {p_a1_$k, p_a2_$k} ; \n";
    print FH "    s_a2_$k = {p_a3_$k, p_a4_$k} ; \n";
    print FH "// Assign concat_ports_and_one_signal in the same unit. \n\n";
    }
    elsif($k > 5 && $k <= 10) {
    print FH "   s_a1_$k = {p_a1_$k, p_a2_$k, p_a3_$k, p_a4_$k} ;  \n";
    print FH "   s_a2_$k = {p_a2_$k, p_a3_$k} ;  \n";
    print FH "// Assign concat_ports_and_one_signal in the same unit. \n\n";
    }
    elsif($k > 10 && $k <= 15) {
    print FH "    s_a1_$k = {p_a1_$k, p_a2_$k} ; \n";
    print FH "// Assign concat_ports_and_one_signal in the same unit. \n\n";
 
    }
    
    print FH " } \n";
    print FH "}; \n";

    print FH "csl_unit unit_b{ \n";

    print FH "csl_signal s_b_$k($val4); \n";
    print FH "csl_port p_b1_$k(input, $val3); \n";
    print FH "csl_port p_b2_$k(input, $val2); \n";
    print FH "csl_port p_b3_$k(output, $val4); \n";
   
    print FH "   unit_a a0; \n";
    print FH "   unit_b() { \n"; 
    print FH "   p_b3_$k = s_b_$k; \n";
    print FH "   s_b_$k = {p_b1_$k, p_b2_$k}; \n";
    print FH "// Assign concat_ports_and_one_signal in the same unit. \n\n";

    print FH " } \n";
    print FH "}; \n";
 
    print FH "csl_unit unit_c{ \n";
  
    print FH "csl_signal s_c_$k($val5); \n";
    print FH "csl_port p_c1_$k(input, $val3); \n";
    print FH "csl_port p_c2_$k(input, $val3); \n";
    print FH "csl_port p_c3_$k(output, $val5); \n";
   
    print FH "  unit_c() { \n";    
    print FH "    p_c3_$k = s_c_$k ; \n";
    print FH "    s_c_$k = {p_c1_$k, p_c2_$k} ; \n";
    print FH "// Assign concat_ports_and_one_signal in the same unit. \n\n";
       
    print FH "  }\n";        
    print FH "};\n"; 

    print FH "csl_unit top{ \n";
    print FH "csl_signal s_u1_$k($val6); \n";
    print FH "csl_signal s_u2_$k($val6); \n";
    print FH "csl_port p_u1_$k(input, $val3);\n";
    print FH "csl_port p_u2_$k(input, $val3);\n";
    
    print FH "   unit_b b0; \n";
    print FH "   unit_c c0; \n";
    print FH "  top() { \n"; 
    if($k <= 5) { 
    print FH "    s_u1_$k = {b0.p_b1_$k, b0.p_b2_$k, c0.p_c1_$k, c0.p_c2_$k} ; \n";
    print FH "    s_u2_$k = {b0.p_b3_$k, c0.p_c3_$k} ; \n";
    print FH "// Assign concat_ports_and_one_signal from different units. \n\n";
    }
    elsif($k > 5 && $k <= 10) {
    print FH "   s_u1_$k = {b0.a0.p_a1_$k, b0.a0.p_a2_$k, b0.a0.p_a3_$k, b0.a0.p_a4_$k, p_u1_$k, p_u2_$k} ;  \n";
    print FH "   s_u2_$k = {b0.a0.p_a5_$k, b0.p_b3_$k, c0.p_c3_$k} ;  \n";
    print FH "// Assign concat_ports_and_one_signal from different units. \n\n";
    }
    elsif($k > 10 && $k <= 15) {
    print FH "    s_u1_$k = {b0.s_b_$k, c0.s_c_$k} ; \n";
    print FH "    s_u2_$k = {b0.a0.s_a1_$k, b0.s_b_$k} ; \n";
    print FH "// Assign concat_signals_and_one_signal from different units. \n\n";
    }
    
    print FH " } \n";
    print FH "}; \n";   
    print FH "\n";
   
    close(FH);

}
