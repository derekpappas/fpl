#!/usr/bin/perl

#Author Petronela
use strict;

my $path = "$ENV{WORK}/test/csl_test_gen/";
print "the path for generated tests is: $path"."conn_pattern_concat_ifc_sg_invalid/ \n";

if(! defined $ENV{WORK}){
    die "[ERROR] The environment variable WORK is not set. Set it to point to TOT/se";
}

my $totDir     = $ENV{WORK};
&testDirExists($totDir);

sub testDirExists {
    my($execName) = @_;
    unless(-e "$execName") { die "[ERROR] The directory $execName does not exist!\n"; }
    
}

sub mkDir {
    my($dirName) = @_;
    unless(-e "$dirName")  { `mkdir $dirName`; }
}


sub word {
    my $val = $_[0];
    my @alpha = ('a'..'z','A'..'Z');
    my @alphanumeric = ('a'..'z','A'..'Z','0'..'9');
    my $ret = $alpha[rand @alpha]."zz";
    for(my $i=1;$i < $val; ++$i){
        $ret = $ret.$alphanumeric[rand @alphanumeric];
    }
    return $ret;
}

for (my $i = 1; $i <= 45; ++$i ) {
    &main($i);   
}

sub main {
    my ($i) = $_[0];
    my $test_name = "conn_pattern_concat_ifc_sg$i"."_illegal.csl";
    &createCslFile($test_name,$i);
}

sub createCslFile {
    my($test_name, $i) = @_;
    my $val = 60;
    my $val1 = int(rand($val-2)) + 1;
    my $val2 = int(rand($val-2)) + 1;
    my $val3 = $val - $val1;
    my $val4 = $val - $val2;
    my $val5 = int(rand($val/3)) + 1;
    my $val6 = int(rand($val/3)) + 1;
    my $val7 = $val - $val5 - $val6;
    my $val8 = int(rand(50)) + 1;
    my $val9 = int(rand(50)) + 1;
    my $word = &word($val1);
    my $word1 = &word($val2);
    my $word2 = &word($val1);
    my $word3 = &word($val2);
    my $word4 = &word($val3);
    my $word5 = &word($val4);
    my $word6 = &word($val5);
    my $word7 = &word($val3);
    my $word8 = &word($val5);
    my $word9 = &word($val3);
    my $word10 = &word($val4);
    my $word11 = &word($val5);
    my $word12 = &word($val3);
    my $word13 = &word($val5);
    &mkDir("$path/conn_pattern_concat_ifc_sg_invalid");
    open(FH,">$path/conn_pattern_concat_ifc_sg_invalid/$test_name");
    print FH "//Generated by Petronela\n";
    print FH "//testing the cmd connect_by_pattern for invalid connections ifc[+.ifc] to concat exp.,sg[+.sg] to concat expr. \n\n";
    print FH "csl_bitrange br($val);\n";
    print FH "csl_bitrange brt($val2);\n";
    print FH "csl_interface ifca {\n";
    if($i <= 15  ) {
        print FH "  csl_port p_ifca$i(input,$val);\n";
        print FH "  csl_port p_ifa(input,$val);\n";
    }
    elsif($i > 15 && $i <= 30) {
        print FH "  csl_port p_ifca$i(output,$val);\n";
        print FH "  csl_port p_ifa(output,$val);\n";
        print FH "  csl_port p_if(output,$val);\n";
    }
    elsif($i > 30 ) { 
        print FH "  csl_port p_ifca$i(input,$val);\n";
        print FH "  csl_port p_ifa(input,$val);\n";
        print FH "  csl_port p_if(input,$val1);\n";
        print FH "  csl_port p_ifta$i(input,$val);\n";
    }
    print FH "  ifca() {\n";
    print FH "  }\n";        
    print FH "};\n";        
    print FH "\n";
    print FH "csl_interface ifcb {\n";
    print FH "  ifca ifca0;\n";
    print FH "  ifca ifca1;\n";
    if($i <= 15 ) {
        print FH "  csl_port p_ifcb$i(input,$val);\n";
        print FH "  csl_port p_ifb(input,$val);\n";
        print FH "  csl_port p_if(input,$val);\n";
    }
    elsif($i > 15 && $i <= 30) {
        print FH "  csl_port p_ifcb$i(output,$val);\n";
        print FH "  csl_port p_ifb(output,$val);\n";
        
    }
    elsif($i > 30) {  
        print FH "  csl_port p_ifcb$i(input,$val);\n";
        print FH "  csl_port p_ifb(input,$val);\n";
        print FH "  csl_port p_if(input,$val);\n";
        print FH "  csl_port p_iftb$i(input,$val);\n";
        print FH "  csl_port p_b(input,$val);\n";
    }
    
    print FH "  ifcb() {\n";
    print FH "  }\n";        
    print FH "};\n";        
    print FH "\n";
    print FH "csl_interface ifcd {\n";
    print FH "  ifcb ifcb0;\n";
    print FH "  ifcb ifcb1;\n";
    if($i <= 15  ) {
        print FH "  csl_port p_ifcd$i(input,$val);\n";
        print FH "  csl_port p_ifd(input,$val);\n";
    }
    elsif($i > 15 && $i <= 30) {
        print FH "  csl_port p_ifcd$i(output,$val);\n";
        print FH "  csl_port p_ifd(output,$val);\n";
        print FH "  csl_port p_if(output,$val);\n";
    }
    elsif($i > 30 ) { 
        print FH "  csl_port p_ifcd$i(input,$val);\n";
        print FH "  csl_port p_ifd(input,$val);\n";
        print FH "  csl_port p_if(input,$val1);\n";
        print FH "  csl_port p_iftd$i(input,$val);\n";
    }
    print FH "  ifcd() {\n";
    print FH "  }\n";        
    print FH "};\n";        
    print FH "\n";
    print FH "csl_signal_group sga {\n";
    print FH "  csl_signal s_sga($val);\n";
    print FH "  csl_signal s_sa($val);\n";
    print FH "  csl_signal s_sgga($val);\n";
    print FH "  csl_signal s_siga($val);\n";
    print FH "  csl_signal s_sigga($val);\n";
    print FH "  sga() {\n";
    print FH "  }\n";
    print FH "};\n\n";
    print FH "csl_signal_group sgb {\n";
    print FH "  sga sga0;\n";
    print FH "  sga sga1;\n";
    print FH "  csl_signal s_sgb($val);\n";
    print FH "  csl_signal s_sb($val);\n";
    print FH "  csl_signal s_sggb($val);\n";
    print FH "  csl_signal s_sigb($val);\n";
    print FH "  csl_signal s_siggb($val);\n";
    print FH "  sgb() {\n";
    print FH "  }\n";
    print FH "};\n\n";
    print FH "csl_signal_group sgd {\n";
    print FH "  sgb sgb0;\n";
    print FH "  sgb sgb1;\n";
    print FH "  csl_signal s_sgd($val);\n";
    print FH "  csl_signal s_sd($val);\n";
    print FH "  csl_signal s_sggd($val);\n";
    print FH "  csl_signal s_sigd($val);\n";
    print FH "  csl_signal s_siggd($val);\n";
    print FH "  sgd() {\n";
    print FH "  }\n";
    print FH "};\n\n";
    print FH "csl_unit a {\n";
    print FH "  ifca ifca2;\n";
    print FH "  ifcb ifcb2;\n";
    print FH "  ifcd ifcd2;\n";
    print FH "  sga sga2;\n";
    print FH "  sgb sgb2;\n";
    print FH "  sgd sgd2;\n";
    if($i <= 15) {
        print FH "  csl_port p_a$i(input,$val1);\n"; 
        print FH "  csl_port pa(input,$val3);\n";
        print FH "  csl_port p_a_br$i(input,brt);\n";
        print FH "  csl_port p(input,$val4);\n";
        print FH "  csl_signal sa($val2);\n";
        print FH "  csl_signal s_a$i($val4);\n";
    }
    elsif($i > 15 && $i <= 30) {
        print FH "  csl_port p_a$i(output,$val6);\n"; 
        print FH "  csl_port pa(input,$val5);\n";
        print FH "  csl_port p(output,$val7);\n";
        print FH "  csl_signal s_a$i($val4);\n";
        print FH "  csl_signal s_a_br$i(brt);\n";
        print FH "  csl_signal sa($val2);\n";
    }
    elsif($i > 30) {
        print FH "  csl_port p_a$i(input,$val1);\n"; 
        print FH "  csl_port p_a_br$i(input,brt);\n";
        print FH "  csl_port pa(input,$val2);\n";
        print FH "  csl_port p(input,$val1);\n";
        print FH "  csl_signal s_a$i($val3);\n";
        print FH "  csl_signal sa($val2);\n";
    }
    print FH "  a() {\n";                
    print FH "  }\n";        
    print FH "};\n";        
    print FH "\n";
    print FH "csl_unit b {\n";  
    print FH "  a a0;\n";
    print FH "  a a1;\n";
    print FH "  ifca ifca3;\n";
    print FH "  ifcb ifcb3;\n";
    print FH "  ifcd ifcd3;\n";
    print FH "  sga sga3;\n";
    print FH "  sgb sgb3;\n";
    print FH "  sgd sgd3;\n";
    if($i <= 15) {
        print FH "  csl_port p_b$i(input,$val1);\n";
        print FH "  csl_port p(input,$val3);\n";
        print FH "  csl_port pb(input,$val8);\n";
        print FH "  csl_signal s_b_br$i($val5);\n";
        print FH "  csl_signal s_b$i($val7);\n";
        print FH "  csl_signal sb($val6);\n";
    }
    elsif($i > 15 && $i <= 30) {      
        print FH "  csl_port p_b$i(output,$val8);\n";
        print FH "  csl_port pb(output,$val4);\n";
        print FH "  csl_port p_b_br$i(output,brt);\n";
        print FH "  csl_port p(output,$val2);\n";
        print FH "  csl_signal s_b$i($val1);\n";
        
    }
    elsif($i > 30) {      
        print FH "  csl_port p_b$i(output,$val8);\n";
        print FH "  csl_port p_b_br$i(input,brt);\n";
        print FH "  csl_port p(input,$val4);\n";
        print FH "  csl_signal s_b$i($val2);\n";
        print FH "  csl_signal s_b_br$i(br);\n";
        print FH "  csl_signal sb($val3);\n";
    }
    print FH "  b() {\n";
    print FH "  }\n";        
    print FH "};\n";        
    print FH "\n";
    
    print FH "csl_unit c {\n";  
    print FH "  a a0;\n";
    print FH "  b b0;\n";
    print FH "  b b1;\n";
    print FH "  ifca ifca4;\n";
    print FH "  ifcb ifcb4;\n";
    print FH "  ifcd ifcd4;\n";
    print FH "  sga sga4;\n";
    print FH "  sgb sgb4;\n";
    print FH "  sgd sgd4;\n";
    if($i <= 15) {
        print FH "  csl_port p_c$i(input,$val5);\n";
        print FH "  csl_port pc(input,$val6);\n";
        print FH "  csl_port p_c_br$i(output,brt);\n";
        print FH "  csl_port p(input,$val7);\n";
        print FH "  csl_signal s_c$i($val2);\n";
        print FH "  csl_signal sc($val4);\n";
    }
    elsif($i > 15 && $i <= 30 ) {      
        print FH "  csl_port p_c$i(output,$val2);\n";
        print FH "  csl_port p(output,$val3);\n";
        print FH "  csl_port pc(input,$val1);\n";
        print FH "  csl_signal sc($val3);\n";
        print FH "  csl_signal s_c_br$i(brt);\n";
        print FH "  csl_signal s_c$i($val2);\n";
    }
    elsif($i > 30) {      
        print FH "  csl_port pc(input,$val8);\n";
        print FH "  csl_port p(input,$val4);\n";
        print FH "  csl_port p_c_br$i(input,brt);\n";
        print FH "  csl_signal s_c$i($val1);\n";
        print FH "  csl_signal sc($val3);\n";
    }
    print FH "  c() {\n";
    print FH "  }\n";        
    print FH "};\n";        
    print FH "\n";
    
    print FH "csl_unit d {\n";  
    print FH "  a a0;\n";
    print FH "  c c1;\n";
    print FH "  c c0;\n"; 
    print FH "  ifca ifca5;\n";
    print FH "  ifcb ifcb5;\n";
    print FH "  ifcd ifcd5;\n";
    print FH "  sga sga5;\n";
    print FH "  sgb sgb5;\n";
    print FH "  sgd sgd5;\n";
    if($i <= 15) {
        print FH "  csl_port p_d$i(input,$val3);\n"; 
        print FH "  csl_port p_d_br$i(input,br);\n";
        print FH "  csl_port p(input,$val8);\n";
        print FH "  csl_signal s_d_br$i($val);\n";
        print FH "  csl_signal s_d$i($val);\n";
    }
    elsif($i > 15 && $i <= 30) {      
        print FH "  csl_port p_d$i(output,$val1);\n";
        print FH "  csl_port p(output,$val3);\n";
        print FH "  csl_port pd(output,$val);\n";
        print FH "  csl_signal s_d$i($val9);\n";
    }
    elsif($i > 30) {      
       print FH "  csl_port p_d$i(input,$val1);\n";
       print FH "  csl_port p(input,$val3);\n";
       print FH "  csl_signal s($val2);\n";
       print FH "  csl_signal s_d$i($val7);\n";
       print FH "  csl_signal s_d_br$i($val6);\n";
       print FH "  csl_signal sd($val5);\n";
    }
    print FH "  d() {\n";
    if($i <= 15) {
        print FH "    ifca5.connect_by_pattern({c0.b0.a0.p_a$i,c0.b0.a0.pa},$word);\n";
        print FH "    sgd5.connect_by_pattern({c1.b0.a1.p,c1.b0.a1.p_a_br$i},$word1);\n";
        print FH "    c0.ifcb4.connect_by_pattern({p_c$i,pc,p},$word2);\n";
    }
    elsif($i > 15 && $i <= 30) {
        print FH "    c1.sgb4.connect_by_pattern({c0.b1.a1.pa,c0.b1.a1.p_a$i,p},$word);\n";
        print FH "    c0.ifcb4.ifca0.connect_by_pattern({p,p_d$i},$word1);\n";
        print FH "    c0.b1.ifcd3.ifcb0.ifca0.connect_by_pattern({c1.b1.a0.s_a$i,c1.b1.a0.s_a_br$i},$word2);\n";
    }
    elsif($i > 30) {
        print FH "    c0.b0.sgd3.sgb0.connect_by_pattern({c1.cp_c_br$i,c1.p},$word);\n";
        print FH "    c0.ifcd4.connect_by_pattern({s_d_br$i,s_d$i,sd},$word1);\n";
    }
    
    print FH "  }\n";        
    print FH "};\n";        
    print FH "\n";
    

    print FH "csl_unit e {\n";  
    print FH "  b b0;\n";
    print FH "  d d0;\n";
    print FH "  d d1;\n";
    print FH "  ifca ifca6;\n";
    print FH "  ifcb ifcb6;\n";
    print FH "  ifcd ifcd6;\n";
    print FH "  sga sga6;\n";
    print FH "  sgb sgb6;\n";
    print FH "  sgd sgd6;\n";
    if($i <= 15 ) {
        print FH "  csl_port p_e$i(input,$val9);\n"; 
        print FH "  csl_port p_e_br$i(input,brt);\n";   
        print FH "  csl_port p(input,$val4);\n";
        print FH "  csl_signal s_e$i($val6);\n";
        print FH "  csl_signal se($val7);\n";
        print FH "  csl_signal s_e_br$i(br);\n";
        print FH "  csl_signal s($val5);\n";
    }
    elsif($i > 15 && $i <= 30) {      
        print FH "  csl_port p_e$i(output,$val9);\n";    
        print FH "  csl_port p(output,$val4);\n";
        print FH "  csl_port p_e_br$i(output,brt);\n";
        print FH "  csl_signal s_e$i($val8);\n";
        print FH "  csl_signal s_e_br$i($val1);\n";
    }
    elsif($i > 30) {      
        print FH "  csl_port p_e$i(input,$val1);\n";
        print FH "  csl_port p(input,$val8);\n";
        print FH "  csl_port pe(input,$val3);\n";
        print FH "  csl_signal se($val3);\n";
    }
    print FH "  e() {\n";
    if($i <= 15) {
        print FH "    d0.c0.a0.ifca2.connect_by_pattern({d0.c0.b1.p_b$i,d0.c0.b1.p},$word2);\n";
        print FH "    ifcd6.ifcb0.connect_by_pattern({b0.s_b$i,b0.sb,s_b_br$i},$word3);\n";
        print FH "    b0.sga3.connect_by_pattern({s_e$i,se,s},$word4);\n";
    }
    elsif($i > 15 && $i <= 30) {
        print FH "    b0.a1.ifcd2.connect_by_pattern({d1.c1.b1.a1.s_a$i,d1.c1.b1.a1.sa},$word2);\n";
        print FH "    d1.c0.b1.sgb3.connect_by_pattern({d0.c0.b0.p_b$i,d0.c0.b0.p_b_br$i},$word3);\n";
    }
    elsif($i > 30) {
        print FH "    ifca6.connect_by_pattern({e.b0.p_b_br$i,e.b0.p},$word2);\n";
        print FH "    d1.c0.sgb4.connect_by_pattern({d1.c0.b0.p,d1.c0.b0.p_b_br$i},$word3);\n";
    }
    print FH "  }\n";        
    print FH "};\n";        
    print FH "\n";
    
    print FH "csl_unit top {\n";
    print FH "  d d0;\n";
    print FH "  e e0;\n"; 
    print FH "  d d1;\n";
    print FH "  e e1;\n";
    print FH "  ifca ifca7;\n";
    print FH "  ifcb ifcb7;\n";
    print FH "  ifcd ifcd7;\n";
    print FH "  sga sga7;\n";
    print FH "  sgb sgb7;\n";
    print FH "  sgd sgd7;\n";
    if($i <= 15) {
        print FH "  csl_port ptop(input,$val1);\n";
        print FH "  csl_port p(input,$val2);\n";
        print FH "  csl_signal s_top$i($val1);\n";
        print FH "  csl_signal stop($val2);\n";
    }
    elsif($i > 15 && $i <= 30) {
        print FH "  csl_port p_top$i(output,$val3);\n";      
        print FH "  csl_port p(output,$val9);\n";
        print FH "  csl_port ptop(output,$val1);\n"; 
        print FH "  csl_signal stop($val);\n";
        print FH "  csl_signal s_top$i($val);\n";
    }
    elsif($i > 30) {
        print FH "  csl_port p_top$i(input,$val5);\n";      
        print FH "  csl_port p(input,$val7);\n";
        print FH "  csl_port ptop(input,$val6);\n";
        print FH "  csl_signal s_top$i($val);\n";
        print FH "  csl_signal s_top_br$i(br);\n";
        print FH "  csl_signal stop($val);\n";
    }
    
    print FH "  top(){\n";
    if($i <= 15) {
        print FH "    sgb7.sga0.connect_by_pattern({d0.c0.a0.p_a_br$i,d0.c0.a0.p},$word5);\n";
        print FH "    e1.d0.c0.b0.a1.ifcd2.ifcb1.ifca1.connect_by_pattern({d0.c1.p_c$i,d0.c1.pc,d0.c1.p},$word6);\n";
        print FH "    d0.ifcb5.connect_by_pattern({e0.d0.c1.b1.a1.s_a$i,e0.d0.c1.b1.a1.sa},$word7);\n";
    }
    elsif($i > 15 && $i <= 30) {
        print FH "    e0.d0.c0.sgd4.connect_by_pattern({d1.c0.a0.p_a$i,d1.c0.a0.pa,d1.c0.a0.p},$word5);\n";
        print FH "    d0.sgb5.sga1.connect_by_pattern({e0.b0.p_b$i,e0.b0.p_b_br$i},$word6);\n";
        print FH "    e1.b0.ifcd3.connect_by_pattern({d1.c1.s_c$i,d1.c1.sc},$word7);\n";
    }
    elsif($i > 30) {
        print FH "    d1.c0.a0.ifcd2.connect_by_pattern({e0.p_e$i,pe},$word5);\n";
        print FH "    sgd7.connect_by_pattern({e1.d1.p_d$i,e1.d1.p},$word6);\n";
        print FH "    d0.c0.ifcb4.connect_by_pattern({ptop,p_top$i,p},$word7);\n";
    }
    print FH "  }\n";        
    print FH "};\n";        
    print FH "\n";
   
    close(FH);

}
