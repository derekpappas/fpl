#!/usr/bin/perl

#Author Petronela
#modified by oanab

#Test_Matrix: /test_matrices/ar_conn_by_pattern_matr.ods, 5 test cases

use strict;
use Switch;

my $path = "$ENV{WORK}/test/csl_test_gen/";

print "the path to the generated tests is : $path"."conn_pattern_ifc_sg_valid/ \n";


if(! defined $ENV{WORK}){
    die "[ERROR] The environment variable WORK is not set. Set it to point to TOT/se";
}

my $totDir     = $ENV{WORK};
&testDirExists($totDir);

sub testDirExists {
    my($execName) = @_;
    unless(-e "$execName") { die "[ERROR] The directory $execName does not exist!\n"; }
    
}

sub mkDir {
    my($dirName) = @_;
    unless(-e "$dirName")  { `mkdir $dirName`; }
}

sub word {
    my $val = $_[0];
    my @alpha = ('a'..'z','A'..'Z');
    my @alphanumeric = ('a'..'z','A'..'Z','0'..'9');
    my $ret = $alpha[rand @alpha]."zz";
    for(my $i=1;$i < $val; ++$i){
        $ret = $ret.$alphanumeric[rand @alphanumeric];
    }
    return $ret;
}



foreach(my $i = 1; $i <= 20; $i++) {
    my @map1  = ("ifca0","ifca1");
    my @map11 = ("ifcb0","ifcb1");
    my @map12 = ("ifcd0","ifcd1");
    my @map2  = ("sga0","sga1");
    my @map21 = ("sgb0","sgb1");
    my @map22 = ("sgd0","sgd1");
    if($i <= 5 ) {  
        foreach my $it1 (@map1) {
            foreach my $it2 (@map2) {
                    &main($i,$it1,$it2);
                }
        }   
    }
    
    elsif($i > 5 && $i <= 10) {
        foreach my $it1 (@map11) {
            foreach my $it2(@map21) {
                    &main($i,$it1,$it2);
                
            }
  
        }       
    }
    elsif($i > 10 && $i <= 20) {
        foreach my $it1 (@map12) {
            foreach my $it2(@map22) {
                &main($i,$it1,$it2);
            }
        }       
    }

}

sub main {
    my ($i,$it1,$it2) = @_;
    my $test_name = "connect_pattern_ifc_sg".$i."_".$it1."_".$it2."_legal.csl";
    &createCslFile($test_name, $i,$it1,$it2);
}

sub createCslFile {
    my($test_name, $i,$it1,$it2) = @_;
    my $val1 = int(rand(30)) + 1;
    my $val2 = int(rand(30)) + 1;
    my $val3 = int(rand(30)) + 1;
    my $val4 = int(rand(30)) + 1;
    my $word = &word($val1);
    my $word1 = &word($val3);
    my $word2 = &word($val3);
    my $word3 = &word($val2);
    my $word4 = &word($val1);
    my $word5 = &word($val4);
    my $word6 = &word($val1);
    my $word7 = &word($val2);
    my $word8 = &word($val4);
    my $word9 = &word($val3);
    my $word10 = &word($val4);
    my $word11 = &word($val1);
    my $word12 = &word($val3);
    my $word13 = &word($val2);
    my $word14 = &word($val4);
    my $word15 = &word($val1);
    my $word16 = &word($val3);
    my $word17 = &word($val2);
   
    &mkDir("$path/conn_pattern_ifc_sg_valid");
    open(FH,">$path/conn_pattern_ifc_sg_valid/$test_name");
    
    print FH "//Generated by Petronela\n";
    print FH "//testing the method connect_by_pattern for conections ifc to ifc, signal_group to ifc, ifc to signal_group  \n";
    print FH "//ifc to ifc.[+]ifc, signal_group to ifc.[+]ifc, ifc.[+]ifc to ifc.[+]ifc, ifc.[+]ifc to sg.[+]sg, ifc.[+]ifc to sg\n\n";

    print FH "//Test_Matrix: /test_matrices/ar_conn_by_pattern_matr.ods\n\n";

    print FH "csl_bitrange br($val1);\n";
    print FH "csl_bitrange brt($val2);\n";
    print FH "csl_interface ifca {\n";
    if($i <= 5 ) {
        print FH "  csl_port p_ifca$i(input,$val1);\n";
        print FH "  csl_port p_ifa(input,$val1);\n";
        print FH "  csl_port p_if(input,$val1);\n";
    }
    elsif($i > 5 && $i <= 10) {
        print FH "  csl_port p_ifca$i(output,$val1);\n";
        print FH "  csl_port p_ifa(output,$val1);\n";
        
    }
    elsif($i > 10 ) { 
        print FH "  csl_port p_ifca$i(input,$val1);\n";
        print FH "  csl_port p_ifa(input,$val1);\n";
        print FH "  csl_port p_if(input,$val1);\n";
        print FH "  csl_port p_ifta$i(input,$val1);\n";
    }
    print FH "  ifca() {\n";
    print FH "  }\n";        
    print FH "};\n";        
    print FH "\n";

    print FH "csl_interface ifcb {\n";

    if($i <= 5) {
	print FH "  ifca ifca0;\n";
	print FH "  ifca ifca1;\n";
        print FH "  csl_port p_ifcb$i(input,$val1);\n";
        print FH "  csl_port p_ifb(input,$val1);\n";
        print FH "  csl_port p_ib(input,$val1);\n";
    }
    elsif($i > 5 && $i <= 10) {
	print FH "  ifca ifca0;\n";
	print FH "  ifca ifca1;\n";
        print FH "  csl_port p_ifcb$i(output,$val1);\n";
        print FH "  csl_port p_ifb(output,$val1);\n";
        
    }
    elsif($i > 10) {  
	print FH "  ifca ifca0;\n";
	print FH "  ifca ifca1;\n";
        print FH "  csl_port p_ifcb$i(input,$val1);\n";
        print FH "  csl_port p_ifb(input,$val1);\n";
        print FH "  csl_port p_ib(input,$val1);\n";
        print FH "  csl_port p_iftb$i(input,$val1);\n";
    }
    print FH "  ifcb() {\n";
    print FH "  }\n";        
    print FH "};\n";        
    print FH "\n";
    
    print FH "csl_interface ifcd {\n";

    if($i <= 5 ) {
	print FH "  ifcb ifcb0;\n";
	print FH "  ifcb ifcb1;\n";
        print FH "  csl_port p_ifcd$i(input,$val1);\n";
        print FH "  csl_port p_ifd(input,$val1);\n";
        print FH "  csl_port p_id(input,$val1);\n";
    }
    elsif($i > 5 && $i <= 10) {
	print FH "  ifcb ifcb0;\n";
	print FH "  ifcb ifcb1;\n";
        print FH "  csl_port p_ifcd$i(output,$val1);\n";
        print FH "  csl_port p_ifd(output,$val1);\n";
    }
    elsif($i > 10 ) { 
	print FH "  ifcb ifcb0;\n";
	print FH "  ifcb ifcb1;\n";
        print FH "  csl_port p_ifcd$i(input,$val1);\n";
        print FH "  csl_port p_ifd(input,$val1);\n";
        print FH "  csl_port p_id(input,$val1);\n";
        print FH "  csl_port p_iftd$i(input,$val1);\n";
    }
    print FH "  ifcd() {\n";
    print FH "  }\n";        
    print FH "};\n";        
    print FH "\n";
    
    print FH "csl_interface ifce {\n";
    if($i <= 5 ) {
	print FH "  ifcd ifcd0;\n";
	print FH "  ifcd ifcd1;\n";
        print FH "  csl_port p_ifce$i(input,$val1);\n";
        print FH "  csl_port p_ife(input,$val1);\n";
        print FH "  csl_port p_ie(output,$val1);\n";
    }
    elsif($i > 5 && $i <= 10) {
	print FH "  ifcd ifcd0;\n";
	print FH "  ifcd ifcd1;\n";
        print FH "  csl_port p_ifce$i(output,$val1);\n";
        print FH "  csl_port p_ife(output,$val1);\n";
    }
    elsif($i > 10 ) { 
	print FH "  ifcd ifcd0;\n";
	print FH "  ifcd ifcd1;\n";
        print FH "  csl_port p_ifce$i(input,$val1);\n";
        print FH "  csl_port p_ife(input,$val1);\n";
        print FH "  csl_port p_ie(input,$val1);\n";
        print FH "  csl_port p_ifte$i(input,$val1);\n";
    }
    print FH "  ifce() {\n";
    print FH "  }\n";        
    print FH "};\n";        
    print FH "\n";

    print FH "csl_signal_group sga {\n";
    if($i <= 5 ) {
        print FH "  csl_signal p_ifca$i($val1);\n";
        print FH "  csl_signal p_ifa($val1);\n";
        print FH "  csl_signal p_if($val1);\n";
    }
    elsif($i > 5 && $i <= 10) {
        print FH "  csl_signal p_ifca$i($val1);\n";
        print FH "  csl_signal p_ifa($val1);\n";
    }
    elsif($i > 10 ) { 
        print FH "  csl_signal p_ifca$i($val1);\n";
        print FH "  csl_signal p_ifa($val1);\n";
        print FH "  csl_signal p_if($val1);\n";
        print FH "  csl_signal p_ifta$i($val1);\n";
    }
    print FH "  sga() {\n";
    print FH "  }\n";
    print FH "};\n\n";

    print FH "csl_signal_group sgb {\n";
    print FH "  sga sga0;\n";
    print FH "  sga sga1;\n";
    if($i <= 5 ) {
        print FH "  csl_signal p_ifcb$i($val1);\n";
        print FH "  csl_signal p_ifb($val1);\n";
        print FH "  csl_signal p_ib($val1);\n";
    }
    elsif($i > 5 && $i <= 10) {
        print FH "  csl_signal p_ifcb$i($val1);\n";
        print FH "  csl_signal p_ifb($val1);\n";
    }
    elsif($i > 10 ) { 
        print FH "  csl_signal p_ifcb$i($val1);\n";
        print FH "  csl_signal p_ifb($val1);\n";
        print FH "  csl_signal p_ib($val1);\n";
        print FH "  csl_signal p_iftb$i($val1);\n";
    }
    print FH "  sgb() {\n";
    print FH "  }\n";
    print FH "};\n\n";

    print FH "csl_signal_group sgd {\n";
    print FH "  sgb sgb0;\n";
    print FH "  sgb sgb1;\n";
    if($i <= 5 ) {
        print FH "  csl_signal p_ifcd$i($val1);\n";
        print FH "  csl_signal p_ifd($val1);\n";
        print FH "  csl_signal p_id($val1);\n";
    }
    elsif($i > 5 && $i <= 10) {
        print FH "  csl_signal p_ifcd$i($val1);\n";
        print FH "  csl_signal p_ifd($val1);\n";
    }
    elsif($i > 10 ) { 
        print FH "  csl_signal p_ifcd$i($val1);\n";
        print FH "  csl_signal p_ifd($val1);\n";
        print FH "  csl_signal p_id($val1);\n";
        print FH "  csl_signal p_iftd$i($val1);\n";
    }
    print FH "  sgd() {\n";
    print FH "  }\n";
    print FH "};\n\n";
    
    print FH "csl_signal_group sge {\n";
    print FH "  sgd sgd0;\n";
    print FH "  sgd sgd1;\n";
    if($i <= 5 ) {
        print FH "  csl_signal p_ifce$i($val1);\n";
        print FH "  csl_signal p_ife($val1);\n";
        print FH "  csl_signal p_ie($val1);\n";
    }
    elsif($i > 5 && $i <= 10) {
        print FH "  csl_signal p_ifce$i($val1);\n";
        print FH "  csl_signal p_ife($val1);\n";
    }
    elsif($i > 10 ) { 
        print FH "  csl_signal p_ifce$i($val1);\n";
        print FH "  csl_signal p_ife($val1);\n";
        print FH "  csl_signal p_ie($val1);\n";
        print FH "  csl_signal p_ifte$i($val1);\n";
    }
    print FH "  sge() {\n";
    print FH "  }\n";
    print FH "};\n\n";

    print FH "csl_unit a {\n";
    if($i <= 5){
	print FH "  ifcd ifcd2;\n";
    }
    elsif($i > 5 && $i <= 10) {
	print FH "  ifce ifce0;\n";
    }
    elsif($i > 10 && $i <= 15) {
	print FH "  ifca ifca2;\n";
	print FH "  ifcb ifcb2;\n";

    }
    elsif($i > 15 && $i <= 20) {
	print FH "  ifcb ifcb2;\n";
	print FH "  ifcd ifcd2;\n";
	print FH "  sgd sgd2;\n";
    }
    print FH "  a() {\n";
    print FH "  }\n";        
    print FH "};\n";        
    print FH "\n";

    print FH "csl_unit b {\n";  
    if($i <= 5){
	print FH "  a a0;\n";
	print FH "  a a1(.ifcd2(ifcd2));\n";
	print FH "  ifcb ifcb2;\n";
	print FH "  ifcd ifcd2;\n";
	print FH "  ifca ifca2;\n";
    }
    elsif($i > 5 && $i <= 10) {
	print FH "  a a0;\n";
	print FH "  a a1(.ifce0(ifce0));\n";
	print FH "  ifce ifce0;\n";
	print FH "  ifcb ifcb2;\n";
    }
    elsif($i > 10 && $i <= 15) {
	print FH "  a a0(.ifca2(ifca2));\n";
	print FH "  a a1(.ifcb2(ifcb3));\n";
	print FH "  ifca ifca2;\n";
	print FH "  ifcb ifcb3;\n";
    }
    elsif($i > 15 && $i <= 20) {
	print FH "  a a0;\n";
	print FH "  a a1;\n";
	print FH "  sge sge0;\n";
	print FH "  ifcd ifcd2;\n";
	print FH "  ifcb ifcb2;\n";
	print FH "  ifca ifca2;\n";
	print FH "  sgb sgb2;\n";
    }
    
    print FH "  b() {\n";
    if($i > 10 && $i <= 15) {

    }
    print FH "  }\n";        
    print FH "};\n";        
    print FH "\n";
    
    print FH "csl_unit c {\n";  
    if($i <= 5){
	print FH "  b b0;\n";
	print FH "  sga sga2;\n";
	print FH "  ifcb ifcb2;\n"; 
 	print FH "  ifcd ifcd3;\n";
    }
    elsif($i > 5 && $i <= 10) {
	print FH "  b b0(.ifce0.ifcd1(ifce0.ifcd1),.ifce0.ifcd0.ifcb1(ifce0.ifcd0.ifcb1),.ifce0.ifcd0.ifcb0.ifca1(ifce0.ifcd0.ifcb0.ifca1),.ifce0.ifcd0.p_ifcd$i(ifce0.ifcd0.p_ifcd$i),.ifce0.ifcd0.p_ifd(ifce0.ifcd0.p_ifd),.ifce0.ifcd0.ifcb0.p_ifb(ifce0.ifcd0.ifcb0.p_ifb),.ifce0.ifcd0.ifcb0.p_ifcb$i(ifce0.ifcd0.ifcb0.p_ifcb$i),.ifce0.p_ifce$i(ifce0.p_ifce$i),.ifce0.p_ife(ifce0.p_ife));\n";
                                          
	print FH "  ifcd ifcd2;\n"; 
	print FH "  sgd sgd2;\n";
	print FH "  ifce ifce0;\n";
	print FH "  ifcb ifcb2;\n"; 
    }
    elsif($i > 10 && $i <= 15) {
	print FH "  b b0(.ifcb3(ifcb0));\n";
	print FH "  b b1(.ifcb3(ifcb0),.ifca2(ifca1));\n";
	print FH "  ifcb ifcb0;\n";
	print FH "  ifca ifca1;\n";
    }
    elsif($i > 15 && $i <= 20) {
	print FH "  b b0;\n";
	print FH "  b b1;\n";
	print FH "  ifce ifce0;\n";
    }

    print FH "  c() {\n";
    if($i <= 5){
	print FH "    ifcd3.connect_by_pattern(a0.ifcd2,$word4);     //ifc-->ifc\n";
	print FH "    sga2.connect_by_pattern(b0.ifca2);             //sg --> ifc\n";

    }
    elsif($i > 5 && $i <= 10) {
	print FH "    ifce0.connect_by_pattern(a0.ifce0,$word4);\n";
        print FH "    sgd2.$it2.sga1.connect_by_pattern(b0.ifce0.ifcd0.ifcb0.ifca0,$word6);  //sg.sg -->ifc.ifc\n";
	print FH "    sgd2.p_ifcd$i = sgd2.p_ifd;\n";
	print FH "    ifcd2.ifcb0 = sgd2.sgb0;\n";
	print FH "    ifcd2.ifcb1 = sgd2.sgb1;\n";
    }
    elsif($i > 10 && $i <= 15) {
	print FH "    ifcb0.connect_by_pattern(a0.ifcb2,$word4);\n";
	print FH "    ifca1.connect_by_pattern(a1.ifca2,$word5);\n";

    }
    elsif($i > 15 && $i <= 20) {
        print FH "    b1.ifcd2.set_prefix(\"$word16\");\n";
        print FH "    b1.a0.ifcd2.set_prefix(\"$word4\");\n";
        print FH "    b0.a0.ifcb2.ifca0.set_suffix(\"$word5\");\n";
  #      print FH "    ifce0.$it1.connect_by_pattern(b1.a0.ifcd2,$word15);\n";
  #      print FH "    b0.sge0.$it2.connect_by_pattern(b0.a0.ifcb2.ifca0);\n";
    }
    print FH "  }\n";        
    print FH "};\n";        
    print FH "\n";
    
    print FH "csl_unit d {\n"; 
    if($i <= 5 ) {
	print FH "  c c0;\n";
        print FH "  ifcb ifcb3;\n";
        print FH "  ifcd ifcd3;\n";

    }
    elsif($i > 5 && $i <= 10  ) { 
	print FH "  c c1(.ifcd2.p_ifcd$i(ifcb3.p_ifcb$i),.ifcd2.p_ifd(ifcb3.p_ifb),.ifce0(ifce1),.ifcb2(ifcb3));\n";
	print FH "  c c0(.ifcb2(ifcb3));\n";
        print FH "  sga sga3;\n";
        print FH "  ifcb ifcb3;\n";
	print FH "  ifce ifce1;\n";
    }
    elsif($i > 10 && $i <= 15) {
	print FH "  c c1(.ifcb0(ifcb3),.ifca1(ifca3));\n";
	print FH "  c c0(.ifcb0(ifcb4),.ifca1(ifca4));\n";
	print FH "  ifca ifca3;\n"; 
	print FH "  ifcb ifcb3;\n";
        print FH "  ifca ifca4;\n"; 
	print FH "  ifcb ifcb4;\n";
        print FH "  sga sga4;\n";
    }
    elsif($i > 15 && $i <= 20) {
	print FH "  c c1;\n";
	print FH "  c c0;\n";
	print FH "  ifce ifce1;\n"; 
	print FH "  ifcb ifcb3;\n";
    }
 
    print FH "  d() {\n";
    if($i <= 5) {
	print FH "    ifcd3.connect_by_pattern(b0.ifcd2,$word7);\n";
	print FH "    ifcb3.connect_by_pattern(b0.ifcb2,$word8);\n";

    }
    elsif($i > 5 && $i <= 10) {
	print FH "    c0.ifcb2.connect_by_pattern(c0.b0.ifcb2);\n";
    }
    elsif($i > 10 && $i <= 15) {
	print FH "    ifca3.connect_by_pattern(b0.ifca2);\n";

    }
    elsif($i > 15 && $i <= 20) {
        print FH "    c0.b0.a0.sgd2.sgb0.sga0.set_prefix(\"$word7\");\n";
        print FH "    c0.b0.sgb2.sga0.set_suffix(\"$word8\");\n";
#        print FH "    ifce1.connect_by_pattern(sge0,$word13);      //ifc--> sg\n";
#        print FH "    ifcb3.connect_by_pattern(sgb2,$word10);      //ifc--> sg\n";
    }
    print FH "  }\n";        
    print FH "};\n";        
    print FH "\n";
    

    print FH "csl_unit e {\n";  
    if($i <= 5 ) {
	print FH "  d d0;\n";
	print FH "  ifcb ifcb4;\n";
	print FH "  ifcd ifcd4;\n";
    }
    elsif($i > 5 && $i <= 10) { 
	print FH "  d d1(.ifcb3(ifce2.ifcd0.ifcb0),.ifce1(ifce2));\n";
	print FH "  ifce ifce2;\n"; 
    }
    elsif($i > 10 && $i <= 15) {
	print FH "  d d0(.ifcb3(ifcb4),.ifca4(ifca5),.ifcb4(ifcb5));\n";
	print FH "  ifcb ifcb4;\n";
        print FH "  ifcb ifcb5;\n";
        print FH "  ifca ifca5;\n";

    }
    elsif($i > 15 && $i <= 20) {
	print FH "  b b1;\n";
	print FH "  b b0;\n";
	print FH "  c c0;\n";
	print FH "  d d0;\n";
#	print FH "  d d1;\n";
	print FH "  sga sga4;\n";
	print FH "  ifca ifca4;\n";
	print FH "  sgd sgd4;\n";
    }
    print FH "  e() {\n";
    if($i <= 5) {
	print FH "    ifcd4.connect_by_pattern(c0.ifcd3,$word9);\n";
	print FH "    ifcb4.connect_by_pattern(c0.ifcb2,$word10);\n";
    }
    elsif($i > 5 && $i <= 10) {
        print FH "    ifce2.ifcd0.$it1.ifca0.connect_by_pattern(d1.sga3,$word9);  //ifc.ifc-->sg\n";
	print FH "    ifce2.connect_by_pattern(c0.ifce0);\n";

    }
    elsif($i > 10 && $i <= 15) {
#	print FH "    sgb4.connect_by_pattern(c0.ifcb0);\n";

    }
    elsif($i > 15 && $i <= 20) {
        print FH "    d0.c0.b0.a0.ifcb2.set_suffix(\"$word9\");\n";
#       print FH "    d1.c0.b0.ifca2.set_prefix(\"$word10\");\n";
#        print FH "    ifca4.connect_by_pattern(ifca2,$word8);\n";
        print FH "    sgd4.connect_by_pattern(ifcd2,$word10);\n";
    }
    print FH "  }\n";        
    print FH "};\n";        
    print FH "\n";
    
    print FH "csl_unit top {\n";
    if($i <= 5 ) {
	print FH "  e e0(.ifcb4(sgb5),.ifcd4(ifcd5));\n";
        print FH "  ifcd ifcd5;\n";
        print FH "  sgb sgb5;\n";
	print FH "  ifcb ifcb5;\n";
    }
    elsif($i > 5 && $i <= 10  ) { 
	print FH "  e e0(.ifce2(ifce5));\n";
	print FH "  e e1(.ifce2(ifce5));\n";
        print FH "  ifce ifce5;\n";
        print FH "  ifcd ifcd5;\n";
    }
    elsif($i > 10 && $i <= 15) {
	print FH "  e e0(.ifcb4(ifcb5),.ifca5(ifca6),.ifcb5(ifcb6));\n";
        print FH "  ifca ifca5;\n";
        print FH "  ifca ifca6;\n";
	print FH "  ifcb ifcb5;\n";
        print FH "  ifcb ifcb6;\n";

    }
    elsif($i > 15 && $i <= 20) {
	print FH "  e e0;\n";
#	print FH "  e e1;\n";
	print FH "  ifcb ifcb5;\n";
#  	print FH "  ifca ifca5;\n";
        print FH "  sge sge3;\n";
    }
    print FH "  top(){\n";
    if($i <= 5) {
	print FH "    ifcd5.connect_by_pattern(d0.ifcd3);\n";
	print FH "    ifcb5.connect_by_pattern(d0.ifcb3,$word12);\n";

    }
    elsif($i > 5 && $i <= 10) {
	print FH "    ifcd5.connect_by_pattern(c0.ifcd2,$word13);\n";
       
    }
    elsif($i > 10 && $i <= 15) {
	print FH "    ifca5.connect_by_pattern(d0.ifca3,$word13);\n";
        print FH "    ifca6.connect_by_pattern(d0.sga4);\n"; 
	
    }
    elsif($i > 15 && $i <= 20) {
        print FH "    e0.d0.ifce1.set_prefix(\"$word13\");\n";
        print FH "    sge3.set_suffix(\"$word14\");\n";
        print FH "    ifcb5.connect_by_pattern(sgb2,$word10);\n";
        print FH "    sge3.connect_by_pattern(ifce0,$word11);\n";
 #       print FH "    ifca5.connect_by_pattern(sga4);\n"
    }
    print FH "  }\n";        
    print FH "};\n";        
    print FH "\n";
   
    close(FH);
}
