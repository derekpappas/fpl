#!/usr/bin/perl

#Author Petronela
use strict;

my $path = "$ENV{WORK}/test/csl_test_gen/";
print "calea catre testele generate este : $path"."conn_pattern_replication_ifc_sg_invalid1/ \n";

if(! defined $ENV{WORK}){
    die "[ERROR] The environment variable WORK is not set. Set it to point to TOT/se";
}

my $totDir     = $ENV{WORK};
&testDirExists($totDir);

sub testDirExists {
    my($execName) = @_;
    unless(-e "$execName") { die "[ERROR] The directory $execName does not exist!\n"; }
    
}

sub mkDir {
    my($dirName) = @_;
    unless(-e "$dirName")  { `mkdir $dirName`; }
}


sub word {
    my $val = $_[0];
    my @alpha = ('a'..'z','A'..'Z');
    my @alphanumeric = ('a'..'z','A'..'Z','0'..'9');
    my $ret = $alpha[rand @alpha]."zz";
    for(my $i=1;$i < $val; ++$i){
        $ret = $ret.$alphanumeric[rand @alphanumeric];
    }
    return $ret;
}

for (my $i = 1; $i <= 45; ++$i ) {
    &main($i);   
}

sub main {
    my ($i) = $_[0];
    my $test_name = "conn_pattern_replication_ifc_sg$i"."_illegal.csl";
    &createCslFile($test_name,$i);
}

sub createCslFile {
    my($test_name, $i) = @_;
    my $val = int(rand(20)) + 1;
    my $val2 = 2 * $val;
    my $val3 = 3 * $val;
    my $val4 = 4 * $val;
    my $val5 = 5 * $val;
    my $val6 = 6 * $val; 
    my $word = &word($val);
    my $word1 = &word($val2);
    my $word2 = &word($val);
    my $word3 = &word($val2);
    my $word4 = &word($val3);
    my $word5 = &word($val4);
    my $word6 = &word($val5);
    my $word7 = &word($val3);
    my $word8 = &word($val5);
    my $word9 = &word($val3);
    my $word10 = &word($val4);
    my $word11 = &word($val5);
    my $word12 = &word($val3);
    my $word13 = &word($val5);
    &mkDir("$path/conn_pattern_replication_ifc_sg_invalid1");
    open(FH,">$path/conn_pattern_replication_ifc_sg_invalid1/$test_name");
    print FH "//Generated by Petronela\n";
    print FH "//testing the cmd connect_by_pattern for connections ifc.p to replication exp.,sg.sig to replication expr. \n\n";
    print FH "csl_bitrange br($val);\n";
    print FH "csl_bitrange brt($val);\n";
    print FH "csl_interface ifca {\n";
    if($i <= 15  ) {
        print FH "  csl_port p_ifca$i(input,$val5);\n";
        print FH "  csl_port p_ifa(input,$val4);\n";
    }
    elsif($i > 15 && $i <= 30) {
        print FH "  csl_port p_ifca$i(output,$val4);\n";
        print FH "  csl_port p_ifa(output,$val3);\n";
        print FH "  csl_port p_if(output,$val3);\n";
    }
    elsif($i > 30 ) { 
        print FH "  csl_port p_ifca$i(input,$val4);\n";
        print FH "  csl_port p_ifa(input,$val5);\n";
        print FH "  csl_port p_if(input,$val6);\n";
        print FH "  csl_port p_ifta$i(input,$val3);\n";
    }
    print FH "  ifca() {\n";
    print FH "  }\n";        
    print FH "};\n";        
    print FH "\n";
    print FH "csl_interface ifcb {\n";
    print FH "  ifca ifca0;\n";
    print FH "  ifca ifca1;\n";
    if($i <= 15 ) {
        print FH "  csl_port p_ifcb$i(input,$val3);\n";
        print FH "  csl_port p_ifb(input,$val3);\n";
        print FH "  csl_port p_if(input,$val4);\n";
    }
    elsif($i > 15 && $i <= 30) {
        print FH "  csl_port p_ifcb$i(output,$val5);\n";
        print FH "  csl_port p_ifb(output,$val6);\n";
        
    }
    elsif($i > 30) {  
        print FH "  csl_port p_ifcb$i(input,$val2);\n";
        print FH "  csl_port p_ifb(input,$val3);\n";
        print FH "  csl_port p_if(input,$val4);\n";
        print FH "  csl_port p_iftb$i(input,$val5);\n";
        print FH "  csl_port p_b(input,$val6);\n";
    }
    
    print FH "  ifcb() {\n";
    print FH "  }\n";        
    print FH "};\n";        
    print FH "\n";
    print FH "csl_interface ifcd {\n";
    print FH "  ifcb ifcb0;\n";
    print FH "  ifcb ifcb1;\n";
    if($i <= 15  ) {
        print FH "  csl_port p_ifcd$i(input,$val3);\n";
        print FH "  csl_port p_ifd(input,$val4);\n";
    }
    elsif($i > 15 && $i <= 30) {
        print FH "  csl_port p_ifcd$i(output,$val3);\n";
        print FH "  csl_port p_ifd(output,$val4);\n";
        print FH "  csl_port p_if(output,$val5);\n";
    }
    elsif($i > 30 ) { 
        print FH "  csl_port p_ifcd$i(input,$val5);\n";
        print FH "  csl_port p_ifd(input,$val4);\n";
        print FH "  csl_port p_if(input,$val2);\n";
        print FH "  csl_port p_iftd$i(input,$val3);\n";
    }
    print FH "  ifcd() {\n";
    print FH "  }\n";        
    print FH "};\n";        
    print FH "\n";
    print FH "csl_signal_group sga {\n";
    print FH "  csl_signal s_sga($val2);\n";
    print FH "  csl_signal s_sa($val3);\n";
    print FH "  csl_signal s_sgga($val4);\n";
    print FH "  csl_signal s_siga($val5);\n";
    print FH "  csl_signal s_sigga($val6);\n";
    print FH "  sga() {\n";
    print FH "  }\n";
    print FH "};\n\n";
    print FH "csl_signal_group sgb {\n";
    print FH "  sga sga0;\n";
    print FH "  sga sga1;\n";
    print FH "  csl_signal s_sgb($val2);\n";
    print FH "  csl_signal s_sb($val3);\n";
    print FH "  csl_signal s_sggb($val4);\n";
    print FH "  csl_signal s_sigb($val6);\n";
    print FH "  csl_signal s_siggb($val5);\n";
    print FH "  sgb() {\n";
    print FH "  }\n";
    print FH "};\n\n";
    print FH "csl_signal_group sgd {\n";
    print FH "  sgb sgb0;\n";
    print FH "  sgb sgb1;\n";
    print FH "  csl_signal s_sgd($val2);\n";
    print FH "  csl_signal s_sd($val3);\n";
    print FH "  csl_signal s_sggd($val6);\n";
    print FH "  csl_signal s_sigd($val5);\n";
    print FH "  csl_signal s_siggd($val4);\n";
    print FH "  sgd() {\n";
    print FH "  }\n";
    print FH "};\n\n";
    print FH "csl_unit a {\n";
    print FH "  ifca ifca2;\n";
    print FH "  ifcb ifcb2;\n";
    print FH "  ifcd ifcd2;\n";
    print FH "  sga sga2;\n";
    print FH "  sgb sgb2;\n";
    print FH "  sgd sgd2;\n";
    if($i <= 15) {
        print FH "  csl_port p_a$i(input,$val);\n"; 
        print FH "  csl_port pa(input,$val);\n";
        print FH "  csl_port p_a_br$i(input,br);\n";
        print FH "  csl_port p(input,$val);\n";
        print FH "  csl_signal sa($val);\n";
    }
    elsif($i > 15 && $i <= 30) {
        print FH "  csl_port p_a$i(output,$val);\n";
        print FH "  csl_port pa(input,$val);\n";
        print FH "  csl_port p(output,$val);\n";
        print FH "  csl_signal s_a$i($val);\n";
        print FH "  csl_signal sa($val);\n";
    }
    elsif($i > 30) {
        print FH "  csl_port p_a$i(input,$val);\n"; 
        print FH "  csl_port p_a_br$i(input,brt);\n";
        print FH "  csl_port pa(input,$val);\n";
        print FH "  csl_port p(input,$val);\n";
        print FH "  csl_signal s_a$i($val);\n";
        print FH "  csl_signal sa($val);\n";
    }
    print FH "  a() {\n";                
    print FH "  }\n";        
    print FH "};\n";        
    print FH "\n";
    print FH "csl_unit b {\n";  
    print FH "  a a0;\n";
    print FH "  a a1;\n";
    print FH "  ifca ifca3;\n";
    print FH "  ifcb ifcb3;\n";
    print FH "  ifcd ifcd3;\n";
    print FH "  sga sga3;\n";
    print FH "  sgb sgb3;\n";
    print FH "  sgd sgd3;\n";
    if($i <= 15) {
        print FH "  csl_port p_b$i(input,$val);\n";
        print FH "  csl_port p(input,$val);\n";
        print FH "  csl_port pb(input,$val);\n";
        print FH "  csl_signal s_b_br$i(br);\n";
        print FH "  csl_signal s_b$i($val);\n";
        print FH "  csl_signal sb($val);\n";
    }
    elsif($i > 15 && $i <= 30) {      
        print FH "  csl_port p_b$i(output,$val);\n";
        print FH "  csl_port pb(output,$val);\n";
        print FH "  csl_port p_b_br$i(output,brt);\n";
        print FH "  csl_port p(output,$val);\n";
        print FH "  csl_signal s_b$i($val);\n";
        
    }
    elsif($i > 30) {      
        print FH "  csl_port p_b$i(output,$val);\n";
        print FH "  csl_port p_b_br$i(input,brt);\n";
        print FH "  csl_port p(input,$val);\n";
        print FH "  csl_port pb(input,$val);\n";
        print FH "  csl_signal s_b$i($val);\n";
        print FH "  csl_signal s_b_br$i(br);\n";
        print FH "  csl_signal sb($val);\n";
    }
    print FH "  b() {\n";
    print FH "  }\n";        
    print FH "};\n";        
    print FH "\n";
    
    print FH "csl_unit c {\n";  
    print FH "  a a0;\n";
    print FH "  b b0;\n";
    print FH "  b b1;\n";
    print FH "  ifca ifca4;\n";
    print FH "  ifcb ifcb4;\n";
    print FH "  ifcd ifcd4;\n";
    print FH "  sga sga4;\n";
    print FH "  sgb sgb4;\n";
    print FH "  sgd sgd4;\n";
    if($i <= 15) {
        print FH "  csl_port p_c$i(input,$val);\n";
        print FH "  csl_port pc(input,$val);\n";
        print FH "  csl_port p_c_br$i(output,brt);\n";
        print FH "  csl_port p(input,$val);\n";
        print FH "  csl_signal s_c$i($val);\n";
        print FH "  csl_signal sc($val);\n";
    }
    elsif($i > 15 && $i <= 30 ) {      
        print FH "  csl_port p_c$i(output,$val);\n";
        print FH "  csl_port p(output,$val);\n";
        print FH "  csl_port pc(input,$val);\n";
        print FH "  csl_signal sc($val);\n";
        print FH "  csl_signal s_c_br$i(brt);\n";
        print FH "  csl_signal s_c$i($val);\n";
    }
    elsif($i > 30) {      
        print FH "  csl_port pc(input,$val);\n";
        print FH "  csl_port p(input,$val);\n";
        print FH "  csl_port p_c_br$i(input,brt);\n";
        print FH "  csl_signal s_c$i($val);\n";
        print FH "  csl_signal sc($val);\n";
    }
    print FH "  c() {\n";
    print FH "  }\n";        
    print FH "};\n";        
    print FH "\n";
    
    print FH "csl_unit d {\n";  
    print FH "  a a0;\n";
    print FH "  c c1;\n";
    print FH "  c c0;\n"; 
    print FH "  ifca ifca5;\n";
    print FH "  ifcb ifcb5;\n";
    print FH "  ifcd ifcd5;\n";
    print FH "  sga sga5;\n";
    print FH "  sgb sgb5;\n";
    print FH "  sgd sgd5;\n";
    if($i <= 15) {
        print FH "  csl_port p_d$i(input,$val);\n"; 
        print FH "  csl_port p_d_br$i(input,br);\n";
        print FH "  csl_port p(input,$val);\n";
        print FH "  csl_signal s_d_br$i($val);\n";
        print FH "  csl_signal s_d$i($val);\n";
    }
    elsif($i > 15 && $i <= 30) {      
        print FH "  csl_port p_d$i(output,$val);\n";
        print FH "  csl_port p(output,$val);\n";
        print FH "  csl_port pd(output,$val);\n";
        print FH "  csl_signal s_d$i($val);\n";
    }
    elsif($i > 30) {      
       print FH "  csl_port p_d$i(input,$val);\n";
       print FH "  csl_port p(input,$val);\n";
       print FH "  csl_signal s($val);\n";
       print FH "  csl_signal s_d$i($val);\n";
       print FH "  csl_signal s_d_br$i($val);\n";
       print FH "  csl_signal sd($val);\n";
    }
    print FH "  d() {\n";
    if($i <= 15) {
        print FH "    ifca5.p_ifca$i.connect_by_pattern({5{b0.a0.p_a$i}},$word);\n";
        print FH "    sgd5.s_sggd.connect_by_pattern({3{c0.c0.a1.p,c0.b0.a0.p_a_br$i}},$word1);\n";
    }
    elsif($i > 15 && $i <= 30) {
        print FH "    c1.sgb4.s_sigb.connect_by_pattern({6{p_d$i}},$word);\n";   
        print FH "    c0.ifcb4.ifca0.p_ifca$i.connect_by_pattern({5{d.p}},$word1);\n";
    }
    elsif($i > 30) {
        print FH "    c0.b0.sgd3.sgb0.s_sb.connect_by_pattern(3{c0.pc},$word);\n";
        print FH "    c0.ifcd4.p_iftd$i.connect_by_pattern({2{s_d_br$i}},$word1);\n";
     }
    
    print FH "  }\n";        
    print FH "};\n";        
    print FH "\n";
    

    print FH "csl_unit e {\n";  
    print FH "  b b0;\n";
    print FH "  d d0;\n";
    print FH "  d d1;\n";
    print FH "  ifca ifca6;\n";
    print FH "  ifcb ifcb6;\n";
    print FH "  ifcd ifcd6;\n";
    print FH "  sga sga6;\n";
    print FH "  sgb sgb6;\n";
    print FH "  sgd sgd6;\n";
    if($i <= 15 ) {
        print FH "  csl_port p_e$i(input,$val);\n"; 
        print FH "  csl_port p_e_br$i(input,brt);\n";   
        print FH "  csl_port p(input,$val);\n";
        print FH "  csl_signal s_e$i($val);\n";
        print FH "  csl_signal se($val);\n";
        print FH "  csl_signal s_e_br$i(br);\n";
        print FH "  csl_signal s($val);\n";
    }
    elsif($i > 15 && $i <= 30) {      
        print FH "  csl_port p_e$i(output,$val);\n";    
        print FH "  csl_port p(output,$val);\n";
        print FH "  csl_port p_e_br$i(output,brt);\n";
        print FH "  csl_signal s_e$i($val);\n";
        print FH "  csl_signal s_e_br$i($val);\n";
    }
    elsif($i > 30) {      
        print FH "  csl_port p_e$i(input,$val);\n";
        print FH "  csl_port p(input,$val);\n";
        print FH "  csl_port pe(input,$val);\n";
        print FH "  csl_signal se($val);\n";
    }
    print FH "  e() {\n";
    if($i <= 15) {
        print FH "    d0.c0.a0.ifca2.p_ifa.connect_by_pattern({2{c0.b0.p_b$i,c0.b0.p}},$word3);\n";
        print FH "    ifcd6.ifcb0.p_ifcb$i.connect_by_pattern({3{c0.b1.sb}},$word4);\n";
    }
    elsif($i > 15 && $i <= 30) {
        print FH "    b0.a1.ifcd2.p_if.connect_by_pattern({5{c0.b0.a1.s_a$i}},$word3);\n";
        print FH "    d1.c0.b1.sgb3.s_sgb.connect_by_pattern({2{c0.b1.p_b$i}},$word4);\n";
    }
    elsif($i > 30) {
        print FH "    ifca6.p_if.connect_by_pattern({6{c0.b0.pb}},$word3);\n";
        print FH "    d1.c0.sgb4.s_sigb.connect_by_pattern({6{d0.c1.b1.p_b$i}},$word4);\n"; 
    }
    print FH "  }\n";        
    print FH "};\n";        
    print FH "\n";
    
    print FH "csl_unit top {\n";
    print FH "  d d0;\n";
    print FH "  e e0;\n"; 
    print FH "  d d1;\n";
    print FH "  e e1;\n";
    print FH "  ifca ifca7;\n";
    print FH "  ifcb ifcb7;\n";
    print FH "  ifcd ifcd7;\n";
    print FH "  sga sga7;\n";
    print FH "  sgb sgb7;\n";
    print FH "  sgd sgd7;\n";
    if($i <= 15) {
        print FH "  csl_port ptop(input,$val);\n";
        print FH "  csl_port p(input,$val);\n";
        print FH "  csl_signal s_top$i($val);\n";
        print FH "  csl_signal stop($val);\n";
    }
    elsif($i > 15 && $i <= 30) {
        print FH "  csl_port p_top$i(output,$val);\n";      
        print FH "  csl_port p(output,$val);\n";
        print FH "  csl_port ptop(output,$val);\n"; 
        print FH "  csl_signal stop($val);\n";
        print FH "  csl_signal s_top$i($val);\n";
    }
    elsif($i > 30) {
        print FH "  csl_port p_top$i(input,$val);\n";      
        print FH "  csl_port p(input,$val);\n";
        print FH "  csl_port ptop(input,$val);\n";
        print FH "  csl_signal s_top$i($val);\n";
        print FH "  csl_signal s_top_br$i(br);\n";
        print FH "  csl_signal stop($val);\n";
    }
    
    print FH "  top(){\n";
    if($i <= 15) {
        print FH "    sgb7.sga0.s_sigga.connect_by_pattern({3{e0.d0.bc0.b0.a0.p_a_br$i,e0.d0.c0.b0.a0.p}},$word5);\n";
        print FH "    e1.d0.c0.b0.a1.ifcd2.ifcb1.ifca1.p_ifca$i.connect_by_pattern({5{d1.c0.p_c$i}},$word6);\n";
    }
    elsif($i > 15 && $i <= 30) {
        print FH "    e0.d0.c0.sgd4.s_siggd.connect_by_pattern({4{e1.d0.a0.p_a$i}},$word5);\n";
        print FH "    d0.sgb5.sga1.s_sa.connect_by_pattern({3{e0.d0.b0.pb}},$word6);\n";
    }
    elsif($i > 30) {
        print FH "    d1.c0.a0.ifcd2.p_ifcd$i.connect_by_pattern(5{d0.p_d$i}},$word6);\n";
        print FH "    sgd7.s_sd.connect_by_pattern({3{p_top$i}},$word7);\n";
    }
    print FH "  }\n";        
    print FH "};\n";        
    print FH "\n";
   
    close(FH);

}
