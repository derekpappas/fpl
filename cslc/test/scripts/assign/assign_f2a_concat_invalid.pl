#!/usr/bin/perl

#Author Anamaria
use strict;

if(! defined $ENV{WORK}){
    die "[ERROR] The environment variable WORK is not set. Set it to point to TOT/se";
}

my $totDir     = $ENV{WORK};
&testDirExists($totDir);

sub testDirExists {
    my($execName) = @_;
    unless(-e "$execName") { die "[ERROR] The directory $execName does not exist!\n"; }
    
}

sub mkDir {
    my($dirName) = @_;
    unless(-e "$dirName")  { `mkdir $dirName`; }
}


    my @a1 = ("test_tip_1");
    my @a2 = ("test_tip_2");
    my @a3 = ("test_tip_3");
    my @a4 = ("test_tip_4");
    my $ctests;
foreach(my $k = 0; $k <= 20; $k++){
    if($k <= 5) {   
        foreach my $u (@a1) {
            $ctests = $u; 
            &main($k, $ctests, $u);
        }
    }
    elsif($k > 5 && $k <= 10) {
         foreach my $u(@a2) {
            $ctests = $u; 
            &main($k, $ctests, $u);
        } 
     }
    elsif($k > 10 && $k <= 15) {
         foreach my $u(@a3) {
            $ctests = $u; 
            &main($k, $ctests, $u);
        } 
     }
    elsif($k > 15 && $k <= 20) {
         foreach my $u(@a4) {
            $ctests = $u; 
            &main($k, $ctests, $u);
        } 
     }
}
sub main {     
    my ($k, $ctests, $u) = @_; 
    my $test_name = "assign_f2a_concat".$k."_illegal.csl";
    &createCslFile($test_name, $k, $ctests);
}
   
sub createCslFile {
    my($test_name, $k, $ctests) = @_;
    my $path = "$ENV{WORK}/test/csl_test_gen/";
    my $val1 = 4;
    my $val2 = 2;
     
    my $val3 = 2 * $val1;
    my $val4 = 2 * $val3;
    my $val5 = $val1 + $val4 ;
    
    if($test_name=~/(_legal)/){
        &mkDir("$path/assign_f2a_concat_valid");
        open(FH,">$path/assign_f2a_concat_valid/$test_name");
    }
    elsif($test_name=~/(_illegal)/) {
        &mkDir("$path/assign_f2a_concat_invalid"); 
        open(FH,">$path/assign_f2a_concat_invalid/$test_name");
    }
    print FH "// Generated by  AnamariaH \n";
    print FH "// Test cases from test matrix: assign_test_matrix.odg \n\n";

  

   print FH "csl_interface ifc1{ \n";
   if($k <= 5){  
      print FH "csl_port p1_$k(input,$val1);\n";
      print FH "csl_port p2_$k(output,$val1);\n";
      print FH "csl_port p3_$k(input,$val3);\n";
      print FH "csl_port p4_$k(output,$val4);\n";
   }
   elsif($k > 5 && $k <= 10){
      print FH "csl_port p1_$k(input,$val1);\n";
      print FH "csl_port p2_$k(input,$val2);\n";
      print FH "csl_port p3_$k(output,$val3);\n";
      print FH "csl_port p4_$k(output,$val1);\n";
   }
   elsif($k > 10 && $k <= 15){
       print FH "csl_port p1_$k(input,$val4);\n";
       print FH "csl_port p2_$k(output,$val3);\n";
       print FH "csl_port p3_$k(output,$val1);\n";
       print FH "csl_port p4_$k(input,$val1);\n";
   }
   elsif($k > 15 && $k <= 20){
       print FH "csl_port p1_$k(input,$val5);\n";
       print FH "csl_port p2_$k(output,$val2);\n";
       print FH "csl_port p3_$k(output,$val1);\n";
   }
   print FH " ifc1(){} \n";
   print FH "}; \n";

  print FH "csl_interface ifc2{ \n";
  print FH " ifc1 inter10; \n";
   if($k <= 5){  
      print FH "csl_port p1_$k(input,$val3);\n";
      print FH "csl_port p2_$k(input,$val2);\n";
      print FH "csl_port p3_$k(output,$val5);\n";
   }
   elsif($k > 5 && $k <= 10){
      print FH "csl_port p1_$k(input,$val1);\n";
      print FH "csl_port p2_$k(input,$val3);\n";
      print FH "csl_port p3_$k(output,$val4);\n";
   }
   elsif($k > 10 && $k <= 15){
       print FH "csl_port p1_$k(output,$val1);\n";
       print FH "csl_port p2_$k(output,$val2);\n";
       print FH "csl_port p3_$k(input,$val1); \n";
   }
   elsif($k > 15 && $k <= 20){
       print FH "csl_port p1_$k(input,$val4);\n";
       print FH "csl_port p2_$k(input,$val3);\n";
       print FH "csl_port p3_$k(output,$val1);\n";
   }
   print FH " ifc2(){} \n";
   print FH "}; \n";

   print FH "csl_interface ifc3{ \n";
   print FH "csl_port p1_$k(output,$val1);\n";
   print FH "csl_port p2_$k(output,$val1);\n";
   print FH "  ifc3(){} \n";
   print FH "}; \n";

   print FH "csl_interface ifc4{ \n";
   print FH " ifc3 inter30; \n";
   print FH " ifc1 inter11; \n";
   print FH " ifc4(){} \n";
   print FH "}; \n";

   print FH "csl_signal_group sg1{ \n";
   if($k <= 5){  
      print FH "csl_signal s1_$k($val1);\n";
      print FH "csl_signal s2_$k($val1);\n";
      print FH "csl_signal s3_$k($val3);\n";
   }
   elsif($k > 5 && $k <= 10){
      print FH "csl_signal s1_$k($val1);\n";
      print FH "csl_signal s2_$k($val4);\n";
      print FH "csl_signal s3_$k($val2);\n";
   }
   elsif($k > 10 && $k <= 15){
       print FH "csl_signal s1_$k($val3);\n";
       print FH "csl_signal s2_$k($val2);\n";
       print FH "csl_signal s3_$k($val1);\n";
   }
   elsif($k > 15 && $k <= 20){
       print FH "csl_signal s1_$k($val3);\n";
       print FH "csl_signal s2_$k($val2);\n";
   }

   print FH " sg1(){} \n";
   print FH "}; \n";

   print FH "csl_signal_group sg2{ \n";
   print FH " sg1 sgn10; \n";
   if($k <= 5){ 
      print FH "csl_signal s1_$k($val2);\n";
      print FH "csl_signal s2_$k($val1);\n";
   }
   elsif($k > 5 && $k <= 10){
      print FH "csl_signal s1_$k($val3);\n";
      print FH "csl_signal s2_$k($val1);\n";
    
   }
   elsif($k > 10 && $k <= 15){
       print FH "csl_signal s1_$k($val1);\n";
       print FH "csl_signal s2_$k($val4);\n";
       print FH "csl_signal s3_$k($val2);\n";
   }
   elsif($k > 15 && $k <= 20){
       print FH "csl_signal s1_$k($val1);\n";
       print FH "csl_signal s2_$k($val2);\n";
       print FH "csl_signal s3_$k($val4);\n";
   }
   print FH " sg2(){} \n";
   print FH "}; \n";

   print FH "csl_signal_group sg3{ \n";
   print FH "csl_signal s1_$k($val1); \n";
   print FH "csl_signal s2_$k($val2); \n";
   print FH " sg3(){} \n";
   print FH "}; \n";

   print FH "csl_signal_group sg4{ \n";
   print FH " sg3 sgn30; \n";
   print FH " sg2 sgn22; \n";
   print FH " sg4(){} \n";
   print FH "}; \n";





   print FH "csl_unit unit_a{ \n";
   print FH "   ifc2 inter2; \n";
   print FH "   sg1 sgn1;\n";
   if($k <= 5){  
      print FH "csl_port p1_$k(input,$val2);\n";
      print FH "csl_signal s1_$k($val1);\n";
    }
   elsif($k > 5 && $k <= 10){
        print FH " csl_port p1_$k(output,$val3);\n";
        print FH " ifc3 inter3; \n";
	print FH " ifc4 inter4; \n";
        print FH " sg3 sgn3; \n";
        print FH " sg4 sgn4; \n";
    }
    elsif($k > 10 && $k <= 15){
    print FH " ifc4 inter42; \n";
    print FH "csl_port p1_$k(input,$val2);\n";
    }
    elsif($k > 15 && $k <= 20){
    print FH "csl_port p1_$k(output,$val1); \n";
    print FH "ifc1 inter12; \n";
    print FH "sg3 sgn32;\n";
    }
    print FH "  unit_a() { \n"; 
    if($k <= 5) { 
    print FH "    inter2.p1_$k = {{inter2.p2_$k , inter2.inter10.p1_$k} , p1_$k} ; \n";
    print FH "    inter2.p3_$k = {inter2.inter10.p4_$k, inter2.inter10.p2_$k} ; \n";
    print FH "    inter2.p1_$k = {{inter2.p2_$k [1], sgn1.s2_$k [1:0]},{s1_$k [3:2], inter2.inter10.p1_$k [3], inter2.inter10.p3_$k [6:7]}};\n";
    print FH "    inter2.p3_$k = {{s1_$k, sgn1.s1_$k},{sgn1.s3_$k, sgn1.s2_$k}}; \n";
    print FH "    inter2.p1_$k = {{inter2.p2_$k, sgn1.s2_$k}, inter2.p2_$k}; \n";
    print FH "    inter2.p3_$k = {{inter2.inter10.p4_$k [15:8], inter2.p2_$k [1:0]},{sgn1.s2_$k [2:1], sgn1.s3 [7:0]}};\n";
    print FH "// Assign ifc_p_concat. \n \n";
    }
    elsif($k > 5 && $k <= 10) {
    print FH "   inter2.p3_$k = {inter3, inter4.inter30} ;  \n";
    print FH "   inter2.p2_$k = {sgn3, sgn1.s3_$k} ;  \n";
    print FH "   inter2.p2_$k = {sgn4.sgn30, inter2.inter10.p2_$k} ;  \n";
    print FH "   inter2.p1_$k = {(inter2.inter10.p2_$k && sgn3.s1_$k),(sgn4.sgn3.s1_$k || sgn1.s3_$k)}; \n";
    print FH "   inter2.p2_$k = {{2{sgn4.sgn3.s1_$k}},{2{inter2.inter10.p2_$k}}}; \n";
    print FH "   inter2.p3_$k = {(inter4.inter3 && inter2.inter10.p3_$k),(sgn4.sgn22.s1_$k ^ inter4.inter3)}; \n";
    print FH " //Assign ifc_p_concat. \n \n";
    }
    elsif($k > 10 && $k <= 15) { 
    print FH "    inter2.inter10.p1_$k = {{sgn1.s3_$k, sgn1.s1_$k [6:1], sgn1.s2_$k [1:0]}, inter42.inter11.p4_$k} ; \n";
    print FH "    inter42.inter11.p2_$k = {inter2.inter10.p3_$k, inter2.p1_$k} ; \n";
    print FH "    inter2.inter10.p1_$k = {{p1_$k, sgn1.s1_$k, inter42.inter11.p4_$k},sgn1.s2_$k [1:0]}; \n";
    print FH "// Assign ifc_ifc_p_concat. \n \n";
    }
    elsif($k > 15 && $k <= 20) {
    print FH "    inter2.inter10.p1_$k = {{(sgn1.s1_$k [7:1] && inter12.p3_$k), sgn1.s1_$k},{(sgn1.s2_$k [1:0] || inter12.p3_k [0:1]), sgn32}} ; \n";
    print FH "    inter2.inter10.p2_$k = {(p1_$k [2] && inter12.p2_$k [0]), sgn32.s1_$k [3]}; \n";
    print FH "// Assign ifc_ifc_p_concat. \n \n";
    }
    print FH " } \n";
    print FH "}; \n";



    
    print FH "csl_unit unit_b{ \n";
    print FH "  ifc1 inter1;\n";
    print FH "  sg2 sgn2;\n";
    if($k <= 5) {
    print FH "csl_signal s1_$k($val1); \n";
    print FH "csl_port p1_$k(output, $val1);\n";
    }
    elsif($k > 5 && $k <= 10) {
    print FH "csl_signal s1_$k($val3);\n";
    print FH "csl_port p1_$k(input, $val1);\n";
    print FH " unit_a a1(.inter3.p1_$k(inter1.p4_$k),.inter4.inter11.p1_$k(p1_$k),.inter3(sgn2.s1_$k),.p1_$k(s1_$k)); \n";
    print FH " unit_a a2(.inter2.p2_$k(sgn2.s1_$k || s1_$k),.inter4.inter3.p1_$k(inter1.p4_$k)); \n";
    print FH " // F2a ifc_p/ifc_p or ifc_ifc_p/p or sg_sg_s/sg_s or ifc/sg_s .\n";
    }
    elsif($k > 10 && $k <= 15) {
    print FH "  ifc2 inter22;\n";
    print FH "  sg3 sgn32;\n";
    print FH "csl_port p1_$k(output, $val2);\n";
    print FH " unit_a a1(.inter42.inter30.p1_$k({inter1.p3_$k}),.inter42.inter11.p1_$k({{inter22.p3_$k, sgn2.s1_$k},{inter1.p4_$k, inter22.inter10.p1_$k [8:5]}}),.inter42.inter11.p2_$k({{p1_$k, inter22.p2_$k},{inter1.p3_$k [0:1], sgn2.s2_$k [10:11]}}));\n";
    }
    elsif($k > 15 && $k < 20) {
    print FH " sg4 sgn41; \n";
    print FH "csl_port p1_$k(input,$val2);\n";
    }
    print FH "   unit_b() { \n"; 
    if($k <= 5) {    
    print FH "    inter1.p4_$k = {{inter1.p3_$k, p1_$k}, p1_$k} ; \n";
    print FH "    inter1.p3_$k = {sgn2.sgn10.s1_$k, sgn2.sgn10.s2_$k} ; \n";
    print FH "    inter1.p1_$k = {{inter1.p3_$k [2:1], sgn2.sgn10.s3_$k [6]}, s1_$k [1]};\n";
    print FH "    inter1.p4_$k = {{p1_$k [3:1], inter1.p2_$k [2:0]},{sgn2.sgn10.s3_$k [5:0], sgn2.s2_$k}};\n";
    print FH "// Assign ifc_p_concat. \n \n";
    }
    elsif($k > 15 && $k < 20) {
   print FH "    sgn41.sgn30.s1_$k = {{inter1.p1_$k [5:6] || p1_$k},{sgn2.sgn10.s2}} ; \n";
   print FH "    sgn41.sgn22.s3_$k = {{inter1.p2_$k, 2'b11, sgn2.s2_$k},{sgn2.s1_$k [3:1] && sgn2.s3_$k [12:10]},{inter1.p3_$k, sgn2.sgn10.s1_$k [7:5]}}; \n";
  print FH "// Assign sg.sg.signal_expression_concat. \n \n";
    }
    print FH " } \n";
    print FH "}; \n";
 




    print FH "csl_unit unit_top{ \n";
    print FH " ifc2 inter21; \n";
    print FH " sg2 sgn21;\n";
    if($k <= 5) {
    print FH "csl_signal s_top_$k($val3); \n";
    print FH "  unit_b b0; \n";
    print FH "  unit_a a0; \n";
    }
    elsif($k > 5 && $k <= 10) {
    print FH "csl_port s_top_$k(output, $val1);\n";
    print FH " ifc4 inter41; \n";
    print FH " sg3 sgn31; \n";
    print FH " unit_b b1(.inter1.p3_$k({sgn21.s2_$k, s_top_$k}),.a1.inter2.p3_$k({sgn21.s1_$k, inter41.inter3})); \n";
    print FH " unit_b b2(.a1.inter4.inter3.p2_$k({inter41.inter11.p4_$k [1:0], inter21.p3_$k [12:11]}),.a2.inter4.inter11.p1_$k(sgn21.s1_$k [7:4]),.a1.inter4.inter11.p1_$k({inter21.p2_$k [3:0]}),.a1.inter4.inter3({inter21.p2_$k [3:0]})); \n";
    print FH "// F2a ifc_p_concat.\n";
    }
    elsif($k > 10 && $k <= 15) {
    print FH "unit_b b1(.a1.inter42.inter30.p1_$k({{inter21.p2_$k || sgn21.s3_$k},{inter21.p1_$k [1:0] && sgn21.sgn10.s2_$k}}),.inter22.inter10.p1_$k({{sgn21.s1_$k && inter21.p3_$k},{inter21.p3_$k [1:0], sgn21.sgn10.s2_$k},{sgn21.sgn10.s1_$k ^ sgn21.s2_$k [7:0]}})); \n"; 
    }
   elsif($k > 15 && $k <= 20) {
       print FH " unit_b b1; \n";
       print FH " unit_a a1; \n";
   }
    print FH "  unit_top() { \n";  
    if($k <= 5) {    
    print FH "   inter21.p1_$k = {{a0.p1_$k, b0.s1_$k [5:2]}, a0.inter2.p2_$k} ; \n";
    print FH "   inter21.p3_$k = {{b0.p1_$k, b0.inter1.p2_$k,a0.inter2.inter10.p2_$k},{b0.sgn2.s2_$k, b0.sgn2.sgn10.s1_$k}};\n";
    print FH "   inter21.p3_$k = {{sgn21.s2_$k, s_top_$k},{a0.inter2.p3_$k [5:0], a0.sgn1.s3_$k [1:0]},b0.inter1.p4_$k [11:10]}; \n";
    print FH "// Assign ifc_p_concat. \n \n";

    }
    elsif($k > 15 && $k <= 20) {
    print FH "    b1.sgn41.sgn30.s1_$k = {{inter21.p2_$k [1:0], sgn21.s2_$k}} ; \n";
    print FH "    a1.inter2.p1_$k = {{inter21.inter10.p1_$k [15:10] && sgn21.sgn10.s1_$k [5:0]},{b1.sgn41.sgn22.s1_$k || b1.sgn41.sgn30 [3:0]},{b1.p1_$k, inter21.p2_$k [13:10]}};\n";
    print FH "// Assign sg.sg.signal/ifc.p_expression_concat. \n \n";
    }   
    print FH "  }\n";        
    print FH "};\n";        
    print FH "\n";
   
    close(FH);

}
