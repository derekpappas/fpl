#!/usr/bin/perl

#oanab

use strict;

if(! defined $ENV{WORK}){
    die "[ERROR] The environment variable WORK is not set. Set it to point to TOT/se";
}

my $totDir     = $ENV{WORK};
&testDirExists($totDir);

sub testDirExists {
    my($execName) = @_;
    unless(-e "$execName") { die "[ERROR] The directory $execName does not exist!\n"; }
    
}

sub mkDir {
    my($dirName) = @_;
    unless(-e "$dirName")  { `mkdir $dirName`; }
}

foreach(my $i = 1; $i <= 300; $i++) {
    &main($i);
}

sub main {
    my $i = $_[0];
    my %dir = (1,"input",
	       2,"output",
	       3,"inout");
    my $dir = $_[4];
    my $test_name = "assign_ps_cc_repl".$i."_illegal.csl";
   	&createCslFile($test_name, $i, %dir);
}

sub createCslFile {
    my ($test_name, $i, %dir) = @_;
    my $path = "$ENV{WORK}/test/csl_test_gen/";
    my $k = int(rand(20)) + int(rand(20));
    my $zero = 0;
    my $one = 1;
    my $two = 2;
    my $tre = 3;
    my $val1 = int(rand(20)) + 2;
    my $val2 = int(rand(100)) + 3;
    my $val3 = int(rand(100)) + 4;
    my $l = int(rand(3))+1;
    my $m = $k + int(rand(10)) + 1;
    if($test_name=~/(_legal)/){
        &mkDir("$path/assign_part_sel_valid1");
        open(FH,">$path/assign_part_sel_valid1/$test_name");
    }
    elsif($test_name=~/(_illegal)/) {
        &mkDir("$path/assign_ps_cc_repl_invalid"); 
        open(FH,">$path/assign_ps_cc_repl_invalid/$test_name");
    }
    print FH "//Generated by oanab\n\n";
   print FH "//Test cases from: assign_test_matrix.odg, part_select_matrix.odg\n"; 
    print FH "csl_bitrange br1($val1);\n";
    print FH "csl_bitrange br2($val2);\n";
    print FH "csl_bitrange br3($val3);\n";
    print FH "csl_bitrange br4(".($val2+$val3).");\n\n";


 
#unit a
    print FH "csl_unit a$k {\n";
    if($i <= 50) {
	print FH "  csl_port p_x$i($dir{$l},br3);\n";
	print FH "  csl_port p_a$i($dir{$l},".(2*$val2+$val1).");\n";
    }
    elsif($i > 50 && $i <= 100) {
	print FH "  csl_port p_m$i($dir{$l},".(2*$val1+3*$val2).");\n";
	print FH "  csl_port p_n$i($dir{$l},".($val1+$val2).");\n";
    }
    elsif($i > 100 && $i <= 150) {
	print FH "  csl_signal s_x$i(".(2*$val3+$val2).");\n";
	print FH "  csl_signal s_y$i(".(2*$val2+$val1).");\n";
    }
    elsif($i > 150 && $i <= 200) {
	print FH "  csl_port p_m$i($dir{$l},".(2*$val1+2*$val2).");\n";
	print FH "  csl_port p_a$i(input,".($val2+$val1).");\n";
	print FH "  csl_port p_b$i(input,".($val3+$val1).");\n";
    }
    elsif($i > 200 && $i <= 250) {
	print FH "  csl_port p_z$i($dir{$l},".(4*$val1+2*$val3).");\n";
    }
    elsif($i > 250 && $i <= 300) {
	print FH "  csl_signal s_a$i(br4);\n";
	print FH "  csl_signal s_b$i(".($val2+2*$val1).");\n";
	print FH "  csl_signal s_x$i(".(2*$val3+$val2).");\n";
	print FH "  csl_signal s_y$i(".($val1+2*$val2+$val3).");\n";
    }
    print FH "  a$k () {\n";
    if($i <= 50) {
	print FH "    {2'b10,3'b001} = p_x$i;  // assign between concat expr and port\n";
    }
    elsif($i > 50 && $i <= 100) {
	print FH "    {1'b1,3'b110} = p_m$i\[".(2*$val1+3*$val2)."\:".(2*$val2)."\];  // assign between concat expr and p.ps\n";
    }
    elsif($i > 100 && $i <= 150) {
	print FH "    {4'b0001,3'b111} = s_x$i\[".(2*$val3+$val2)."\:".($val3+1)."\] | s_y$i\[".($val2+2*$val1)."\:".(2*$val1+1)."\];  // assign between concat expr and op expr\n";
    }
    elsif($i > 150 && $i <= 200) {
	print FH "    {2{p_a$i\[".($val2+$val1)."\:".($val1+1)."\],p_b$i\[".($val3+$val1)."\:".($val3+1)."\]}} = p_m$i;  // assign between repl expr and port\n";
    }
    elsif($i > 250 && $i <= 300) {
	print FH "    {2{s_a$i\[".($val2+$val3-1)."\:".($val2+$val3-1)."\],s_b$i\[".($val2+2*$val1)."\:".(2*$val1+2)."\]}} = s_x$i\[".($val3+$val2)."\:".($val3+1)."\] & s_y$i\[".($val1+2*$val2)."\:".($val1+$val2+1)."\];  // assign between repl expr and op expr\n";
    }
    print FH "  }\n";
    print FH "};\n\n";


#unit b
    print FH "csl_unit b$k {\n";
    print FH "  a$k a$k\_$zero;\n";
    if($i > 50 && $i <= 100) {
	print FH "  csl_port p_x$i($dir{$l},".($val3+3*$val1).");\n";
    }
    elsif($i > 100 && $i <= 150) {
	print FH "  csl_signal s_a$i(br4);\n";
	print FH "  csl_signal s_b$i(".($val3+2*$val2).");\n";
    }
    elsif($i > 150 && $i <= 200) {
	print FH "  csl_port p_a$i($dir{$l},".(3*$val3+3*$val1).");\n";
    }
    elsif($i > 200 && $i <= 250) {
	print FH "  csl_port p_x$i($dir{$l},".(3*$val1+2*$val3).");\n";
	print FH "  csl_signal s_x$i(br1);\n";
	print FH "  csl_signal s_y$i(".($val3+2*$val2).");\n";
    }
    elsif($i > 250 && $i <= 300) {
	print FH "  csl_port p_a$i(input,".($val1+2*$val2).");\n";
	print FH "  csl_port p_b$i(input,br3);\n";
	print FH "  csl_port p_c$i(input,".($val3+$val1).");\n";
	print FH "  csl_signal s_a$i(".($val3+$val2+2*$val1).");\n";
	print FH "  csl_signal s_b$i(".(2*$val2+$val1).");\n";
    }
    print FH "  b$k () {\n";
    if($i <= 50) {
	print FH "    {7'b1001110,1'b1} = a$k\_$zero.p_a$i;  // assign between concat expr and port\n";
    }
    elsif($i > 50 && $i <= 100) {
	print FH "    {2'b01,3'b101} = p_x$i\[".($val3+3*$val1)."\:".($val1+1)."\];  // assign between concat expr and p.ps\n";
    }
    elsif($i > 100 && $i <= 150) {
	print FH "    {1'b0,3'b110} = {s_a$i\[".(3)."\],s_b$i\[".($val3+$val2)."\:".($val2+2)."\]};  // assign between concat expr and concat expr\n";
    }
    elsif($i > 200 && $i <= 250) {
	print FH "    {3{s_x$i\[".(2)."\],s_y\[".($val3+2*$val2)."\:".($val2)."\]}} = p_x$i\[".(3*$val1+2*$val3)."\:".($val1+$val3)."\];  // assign between repl expr and p.ps\n";
    }
    elsif($i > 250 && $i <= 300) {
	print FH "    {3{s_a$i\[".($val3+$val2+2*$val1)."\:".($val2+$val1)."\],s_b$i\[".(2*$val2+$val1)."\:".($val2+$val1)."\]}} = {p_a$i\[".($val1+2*$val2)."\:".($val2)."\],p_b$i\[".($val3)."\:".($val3)."\],p_c$i\[".($val3+$val1)."\:".(1)."\]};  // assign between repl expr and concat expr\n";
    }
    print FH "  }\n";
    print FH "};\n\n";
    
    
#unit c
    print FH "csl_unit c$k {\n";
    print FH "  b$k b$k\_$zero;\n";
    if($i <= 50) {
	print FH "  csl_port p_a$i($dir{$l},".(2*$val2+$val1).");\n";
    } 
    elsif($i > 100 && $i <= 150) {
	print FH "  csl_port p_a$i(input,".(2*$val2+$val1).");\n";
	print FH "  csl_port p_b$i(input,".($val2+2*$val1).");\n";
    }
    elsif($i > 150 && $i <= 200) {
	print FH "  csl_signal s_x$i(".($val3+3*$val2).");\n";
	print FH "  csl_signal s_y$i(".(2*$val2+$val1).");\n";
    }
    elsif($i > 200 && $i <= 250) {
	print FH "  csl_signal s_a$i(".($val3+3*$val2).");\n";
	print FH "  csl_signal s_b$i(".($val2+$val3).");\n";
    }
    elsif($i > 250 && $i <= 300) {
	print FH "  csl_port p_a$i(input,".(3*$val1+2*$val3).");\n";
	print FH "  csl_signal s_x$i(br4);\n";
	print FH "  csl_signal s_y$i(".($val1+2*$val2).");\n";
    }
    print FH "  c$k () {\n";
    if($i <= 50) {
	print FH "    {2'b00,3'b101,1'b1} = p_a$i;  // assign between concat expr and port\n";
    }
    elsif($i > 50 && $i <= 100) {
	print FH "    {3'b001,4'b1001} = b$k\_$zero.a$k\_$zero.p_n$i\[".($val2+$val1)."\:".($val2+1)."\];  // assign between concat expr and p.ps\n";
    }
    elsif($i > 100 && $i <= 150) {
	print FH "    {3'b101,4'b0011} = {2{p_a$i\[".(2*$val2+$val1)."\:".($val2+$val1)."\],p_b$i\[".($val2+2*$val1)."\:".($val2+$val1)."\]}};  // assign between concat expr and repl expr\n";
    }
    elsif($i > 150 && $i <= 200) {
	print FH "    {3{s_x$i\[".($val3+3*$val2)."\:".(2*$val2+1)."\],s_y$i\[".(2*$val2+$val1)."\:".(2*$val2+1)."\]}} = b$k\_$zero.p_a$i;  // assign between repl expr and port\n";
    }
    elsif($i > 200 && $i <= 250) {
	print FH "    {2{s_a$i\[".(5)."\],s_b$i\[".($val2+$val3)."\:".(2)."\]}} = b$k\_$zero.a$k\_$zero.p_z$i\[".(4*$val1+2*$val3)."\:".(2*$val1+1)."\];  // assign between repl expr and p.ps\n";
    }
    elsif($i > 250 && $i <= 300) {
	print FH "    {2{s_x$i\[".($val2)."\:".(1)."\],s_y$i\[".($val1+2*$val2)."\:".($val1+$val2)."\]}} = {3{p_a$i\[".(3*$val1+2*$val3)."\:".($val1+$val3)."\]}};  // assign between repl expr and repl expr\n";
    }
    print FH "  }\n";
    print FH "};\n\n";











}
