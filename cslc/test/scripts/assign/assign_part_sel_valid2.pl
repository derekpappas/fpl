#!/usr/bin/perl

#oanab
#assign with part select [-:] form

use strict;

print "Generated tests path : test/csl_test_gen/assign_part_sel_valid2/\n";

if(! defined $ENV{WORK}){
    die "[ERROR] The environment variable WORK is not set. Set it to point to TOT/se";
}

my $totDir     = $ENV{WORK};
&testDirExists($totDir);

sub testDirExists {
    my($execName) = @_;
    unless(-e "$execName") { die "[ERROR] The directory $execName does not exist!\n"; }
    
}

sub mkDir {
    my($dirName) = @_;
    unless(-e "$dirName")  { `mkdir $dirName`; }
}

foreach(my $i = 1; $i <= 250; $i++) {
    &main($i);
}

sub main {
    my $i = $_[0];
    my %dir = (1,"input",
	       2,"output",
	       3,"inout");
    my $dir = $_[4];
    my $test_name = "assign_part_sel".$i."_legal.csl";
   	&createCslFile($test_name, $i, %dir);
}

sub createCslFile {
    my ($test_name, $i, %dir) = @_;
    my $path = "$ENV{WORK}/test/csl_test_gen/";
    my $k = int(rand(20)) + int(rand(20));
    my $zero = 0;
    my $one = 1;
    my $two = 2;
    my $tre = 3;
    my $val1 = int(rand(20)) + 4;
    my $val2 = int(rand(100)) + 5;
    my $val3 = int(rand(100)) + 6;
    my $l = int(rand(3))+1;
    my $m = $k + int(rand(10)) + 1;
    if($test_name=~/(_legal)/){
        &mkDir("$path/assign_part_sel_valid2");
        open(FH,">$path/assign_part_sel_valid2/$test_name");
    }
    elsif($test_name=~/(_illegal)/) {
        &mkDir("$path/assign_part_sel_invalid1"); 
        open(FH,">$path/assign_part_sel_invalid1/$test_name");
    }
    print FH "//Generated by oanab\n\n";
     print FH "//Test cases from: assign_test_matrix.odg, part_select_matrix.odg\n"; 
#bitranges
    print FH "csl_bitrange br1($val1);\n";
    print FH "csl_bitrange br2($val2);\n";
    print FH "csl_bitrange br3($val3);\n";
    print FH "csl_bitrange br4(".($val2+$val3).");\n";
    print FH "csl_bitrange br5(".($val1+$val3).");\n";
    print FH "csl_bitrange br6(".($val2+$val1).");\n\n";

#fields
#    print FH "csl_field f3(".($val3-1).",0);\n";
#    print FH "csl_field f5(".($val1+$val3-1).",0);\n";
#    print FH "csl_field f6(".($val2+$val1-1).",0);\n\n";


#ifc k
    if($i <= 100) {
	print FH "csl_interface ifc$k {\n";
	print FH "  csl_port s_a$i(input,br2);\n";
	print FH "  csl_port s_b$i(output,br3);\n";
	print FH "  csl_port s_c$i(output,$val2);\n";
	print FH "  csl_port s_d$i(input,br4);\n";
	print FH "  ifc$k () {}\n";
	print FH "};\n\n";
    }
    

#ifc m
    if($i <= 100) {
	print FH "csl_interface ifc$m {\n";
	print FH "  csl_port s_x$i(input,br2);\n";
	print FH "  csl_port s_y$i(output,br3);\n";
	print FH "  ifc$k ifc$k\_$zero;\n";
	print FH "  ifc$k ifc$k\_$one;\n";
	print FH "  ifc$m () {}\n";
	print FH "};\n\n";
    }



#sg k
    if($i <= 100) {
	print FH "csl_signal_group sg$k {\n";
	print FH "  csl_signal s_a$i(br2);\n";
	print FH "  csl_signal s_b$i(br3);\n";
	print FH "  csl_signal s_c$i($val2);\n";
	print FH "  csl_signal s_d$i(br4);\n";
	print FH "  sg$k () {}\n";
	print FH "};\n\n";
    }
    

#sg m
    if($i <= 100) {
	print FH "csl_signal_group sg$m {\n";
	print FH "  csl_signal s_x$i(br2);\n";
	print FH "  csl_signal s_y$i(br3);\n";
	print FH "  sg$k sg$k\_$zero;\n";
	print FH "  sg$k sg$k\_$one;\n";
	print FH "  sg$m () {}\n";
	print FH "};\n\n";
    }

    
#unit a
    print FH "csl_unit a$k {\n";
    if($i <= 50) {
	print FH "  csl_signal s_x$i(br3);\n";
	print FH "  csl_port p_a$i(input,br4);\n";
	print FH "  csl_port p_b$i(input,br1);\n";
    }
    elsif($i > 50 && $i <= 100) {
	print FH "  ifc$k ifc$k\_$zero;\n";
	print FH "  sg$k sg$k\_$one;\n";
	print FH "  csl_signal s_x$i(br4);\n";
	print FH "  csl_signal s_y$i(br5);\n";
    }
    elsif($i > 100 && $i <= 150) {
	print FH "  csl_port p_m$i(input,br3);\n";
	print FH "  csl_signal s_a$i(br4);\n";
	print FH "  csl_signal s_b$i(".($val1+$val3).");\n";
    }
    elsif($i > 150 && $i <= 200) {
	print FH "  csl_port p_z$i(inout,".(2*$val1+$val3).");\n";
	print FH "  csl_signal s_x$i(br4);\n";
	print FH "  csl_signal s_y$i(br5);\n";
    }
    elsif($i > 200 && $i <= 250) {
	print FH "  csl_port p_x$i(input,".(2*$val1+$val3).");\n";
	print FH "  csl_port p_y$i(input,".(2*$val1).");\n";
	print FH "  csl_signal s_x$i(br6);\n";
	print FH "  csl_signal s_y$i(br5);\n";
    }
    print FH "  a$k () {\n";
#assign between concat expr and sig
    if($i <= 50) {
	print FH "    {p_a$i\[".($val2+$val3-1)."\-\:".($val3-1)."\],p_b$i\[2\]} = s_x$i;  // assign between concat expr and sig\n";
    }
#assign between concat expr and sg.sig.ps
    elsif($i > 50 && $i <= 100) {
	print FH "    {s_x$i\[".($val2+$val3-1)."\-\:".(3)."\],s_y$i\[".($val1+$val3-1)."\-\:".($val3-3)."\]} = sg$k\_$one.s_d$i\[".($val2+$val3-1)."\-\:".($val3)."\];  // assign between concat expr and sg.sig.ps\n";
	print FH "    sg$k\_$one.s_a$i = {s_x$i\[".($val2+$val3-1)."\-\:".($val2-2)."\],sg$k\_$one.s_c$i\[".($val2-1)."\],sg$k\_$one.s_b$i\[".($val3-1)."\]};  // assign : sg.sig--concat\n";
    }
#assign between concat expr and port
    elsif($i > 100 && $i <= 150) {
	print FH "    {s_a$i\[".($val3-1)."\-\:".(1)."\],s_b$i\[".($val1+$val3-1)."\-\:".($val3-1)."\]} = p_m$i;  // assign between concat expr and port\n";
    }
#assign between concat expr and p.ps
    elsif($i > 150 && $i <= 200) {
	print FH "    {s_x$i\[".(2)."\-\:".(1)."\],s_y$i\[".($val1+$val3-1)."\:".($val3+1)."\]} = p_z$i\[".(2*$val1+$val3-1)."\-\:".($val1)."\];  // assign between concat expr and p.ps\n";
    }
#assign between concat expr and op expr
    elsif($i > 200 && $i <= 250) {
	print FH "    {s_x$i\[".($val2+$val1-1)."\:".($val2)."\],s_y$i\[".($val1+$val3-1)."\-\:".($val1)."\]} = p_x$i\[".(2*$val1+$val3-1)."\-\:".(2*$val1)."\] | p_y$i\[".(2*$val1-1)."\-\:".(2*$val1)."\];  // assign between concat expr and op expr\n";
    }
    print FH "  }\n";
    print FH "};\n\n";


#unit b
    print FH "csl_unit b$k {\n";
    if($i <= 50) {
	print FH "  a$k a$k\_$zero;\n";
	print FH "  sg$k sg$k\_$one;\n";
	print FH "  csl_signal s_a$i(br4);\n";
	print FH "  csl_signal s_b$i(".($val1+$val3).");\n";
    }
    elsif($i > 50 && $i <= 100) {
	print FH "  a$k a$k\_$zero(.ifc$k\_$zero(sg$m\_$zero.sg$k\_$zero));\n";
	print FH "  sg$m sg$m\_$zero;\n";
	print FH "  csl_port p_a$i(input,br4);\n";
	print FH "  csl_port p_b$i(input,br1);\n";
	print FH "  csl_port p_c$i(input,br2);\n";
    }
    elsif($i > 100 && $i <= 150) {
	print FH "  a$k a$k\_$zero;\n";
	print FH "  csl_port p_b$i(input,$val3);\n";
	print FH "  csl_port p_c$i(input,br2);\n";
	print FH "  csl_port p_n$i(output,br2);\n";
    }
    elsif($i > 150 && $i <= 200) {
	print FH "  a$k a$k\_$zero;\n";
	print FH "  csl_port p_x$i(input,br4);\n";
	print FH "  csl_signal s_x$i($val3);\n";
	print FH "  csl_signal s_y$i(br6);\n";
    }
    elsif($i > 200 && $i <= 250) {
	print FH "  a$k a$k\_$zero;\n";
	print FH "  csl_signal s_a$i(br4);\n";
	print FH "  csl_signal s_b$i(".($val2+2*$val3).");\n";
	print FH "  csl_signal s_c$i(br5);\n";
    }
    print FH "  b$k () {\n";
#assign between concat expr and sg.sig
    if($i <= 50) {
	print FH "    {s_a$i\[".(2)."\-\:".(2)."\],s_b$i\[".($val1+$val3-1)."\-\:".($val3-2)."\]} = sg$k\_$one.s_b$i;  // assign between concat expr and sg.sig\n";
	print FH "    sg$k\_$one.s_d$i = {sg$k\_$one.s_a$i & sg$k\_$one.s_c$i, s_b$i\[".($val1+$val3-1)."\:".($val1)."\]};  // assign : sg.sig---concat\n";
    }
#assign between concat expr and sg.sg.sig.ps
    elsif($i > 50 && $i <= 100) {
	print FH "    {p_a$i\[".($val2+$val3-1)."\-\:".($val2-3)."\],p_b$i\[".($val1-1)."\-\:".(1)."\],p_c$i\[".(2)."\-\:".(1)."\]} = sg$m\_$zero.sg$k\_$one.s_c$i\[".($val2-1)."\-\:".($val2-1)."\];  // assign between concat expr and sg.sg.sig.ps\n";
	print FH "    sg$m\_$zero.sg$k\_$one.s_d$i = {sg$m\_$zero.sg$k\_$one.s_a$i | sg$m\_$zero.s_x$i, sg$m\_$zero.sg$k\_$one.s_b$i & sg$m\_$zero.s_y$i};  // assign : sg.sg.sig---concat\n";
    }
#assign between concat expr and port
    elsif($i > 100 && $i <= 150) {
	print FH "    {p_b$i\[".($val3-2)."\-\:".(1)."\],p_c$i\[".($val2-1)."\-\:".($val2-1)."\]} = p_n$i;  // assign between concat expr and port\n";
    }
#assign between concat expr and p.ps
    elsif($i > 150 && $i <= 200) {
	print FH "    {s_x$i\[".($val3-1)."\-\:".($val3-1)."\],s_y$i\[3\]} = p_x$i\[".($val3-1)."\-\:".($val3)."\];  // assign between concat expr and p.ps\n";
    }
#assign between concat expr and repl expr
    elsif($i > 200 && $i <= 250) {
	print FH "    {s_b$i\[".($val2+2*$val3-1)."\-\:".(2*$val3)."\],s_c$i\[".($val1+$val3-1)."\-\:".($val3)."\]} = {3{s_a$i\[".($val3+2)."\-\:".($val3)."\]}};  // assign between concat expr and repl expr\n";
    }
    print FH "  }\n";
    print FH "};\n\n";


#unit c
    print FH "csl_unit c$k {\n";
    print FH "  b$k b$k\_$zero;\n";
    if($i <= 50) {
	print FH "  sg$m sg$m\_$zero;\n";
	print FH "  ifc$m ifc$m\_$zero;\n";
	print FH "  csl_port p_a$i(input,br4);\n";
	print FH "  csl_port p_b$i(input,br1);\n";
    }
    elsif($i > 50 && $i <= 100) {
	print FH "  csl_signal s_m$i(".(2*$val1+3*$val3).");\n";
	print FH "  csl_signal s_x$i(br5);\n";
	print FH "  csl_signal s_y$i(br2);\n";
    }
    elsif($i > 100 && $i <= 150) {
	print FH "  csl_port p_a$i(inout,br4);\n";
	print FH "  csl_signal s_a$i(".($val3+2*$val2).");\n";
	print FH "  csl_signal s_b$i(br2);\n";
    }
    elsif($i > 150 && $i <= 200) {
	print FH "  csl_signal s_x$i(".($val3+2*$val2).");\n";
	print FH "  csl_signal s_y$i(br2);\n";
	print FH "  csl_port p_y$i(output,".(2*$val1).");\n";
    }
    elsif($i > 200 && $i <= 250) {
	print FH "  csl_signal s_m$i(".(2*$val1+$val3).");\n";
	print FH "  csl_signal s_n$i(".($val3+2*$val2).");\n";
	print FH "  csl_signal s_p$i(br2);\n";
	print FH "  csl_signal s_o$i(".(2*$val1+3*$val2).");\n";
    }
    print FH "  c$k () {\n";
#assign between concat expr ans sg.sg.sig
    if($i <= 50) {
	print FH "    {p_a$i\[".($val2+$val3-1)."\-\:".($val2-1)."\],p_b$i\[1\]} = sg$m\_$zero.sg$k\_$one.s_a$i;  // assign between concat expr ans sg.sg.sig\n";
	print FH "    ifc$m\_$zero.ifc$k\_$zero = sg$m\_$zero.sg$k\_$zero;  // assign : ifc.ifc---sg.sg\n";
	print FH "    ifc$m\_$zero.s_y$i = sg$m\_$zero.s_y$i;  // assign : ifc.p---sg.s\n";
	print FH "    sg$m\_$zero.s_x$i = {ifc$m\_$zero.s_x$i\[2\],ifc$m\_$zero.ifc$k\_$one.s_a$i\[".($val2-1)."\-\:".($val2-1)."\]};  // assign : sg.sig---ifc.p\n";
	print FH "    {ifc$m\_$zero.ifc$k\_$one.s_b$i,ifc$m\_$zero.ifc$k\_$one.s_c$i} = {sg$m\_$zero.sg$k\_$one.s_b$i,sg$m\_$zero.sg$k\_$one.s_c$i};  // assign : concat---concat\n";
	print FH "    sg$m\_$zero.sg$k\_$one.s_d$i = ifc$m\_$zero.ifc$k\_$one.s_d$i;  // assign : sg.sg.sig---ifc.ifc.p\n";
    }
#assign between concat expr and sig.ps
    elsif($i > 50 && $i <= 100) {
	print FH "    {s_x$i\[".($val3+$val1-1)."\-\:".($val3-1)."\],s_y$i\[2\]} = s_m$i\[".(2*$val3-1)."\-\:".($val3)."\];  // assign between concat expr and sig.ps\n";
    }
#assign between concat expr and port
    elsif($i > 100 && $i <= 150) {
	print FH "    {s_a$i\[".($val3+$val2-2)."\-\:".($val3)."\],s_b$i\[".($val2-1)."\-\:".($val2)."\]} = p_a$i;  // assign between concat expr and port\n";
    }
#assign between concat expr and p.ps
    elsif($i > 150 && $i <= 200) {
	print FH "    {s_x$i\[".($val3+$val2-1)."\-\:".(2)."\],s_y$i\[".($val2-1)."\]} = p_y$i\[".(2*$val1-2)."\-\:".(3)."\];  // assign between concat expr and p.ps\n";
    }
#assign between concat expr and concat expr
    elsif($i > 200 && $i <= 250) {
	print FH "    {s_m$i\[".($val1+$val3-1)."\-\:".($val1)."\],s_n$i\[".($val3+$val2-1)."\-\:".($val2)."\]} = {s_p$i\[".($val2-1)."\:".($val2-1)."\],s_o$i\[".(2*$val1+2*$val2-1)."\-\:".($val1+$val2-1)."\]};  // assign between concat expr and concat expr\n";
    }
    print FH "  }\n";
    print FH "};\n\n";











}
