#!/usr/bin/perl

#Author Monica
use strict;

if(! defined $ENV{WORK}){
    die "[ERROR] The environment variable WORK is not set. Set it to point to TOT/se";
}

my $totDir     = $ENV{WORK};
&testDirExists($totDir);

sub testDirExists {
    my($execName) = @_;
    unless(-e "$execName") { die "[ERROR] The directory $execName does not exist!\n"; }
    
}

sub mkDir {
    my($dirName) = @_;
    unless(-e "$dirName")  { `mkdir $dirName`; }
}

for(my $i = 1;$i <= 75; $i++){
    &main($i);
}

sub main {
    my ($i) = $_[0];
    my $test_name = "unit_parameter_".$i."_illegal.csl";
    &createCslFile($test_name, $i);
}

sub binar {
    my $val11 = int(rand(7)) + 2;
    my $val12 = 1;
    for(my $v = 1; $v < $val11; $v++){
        $val12 = $val12 * 10;
    }
    my $val13 = int(rand($val11)) - 1;
    my $val14 = 1;
    for(my $s = 1; $s < $val13; $s++){
        $val14 = $val14 * 10;
    }
    $val12 = $val12 + $val14;
    my @array=($val11,$val12);
    return @array;
}
sub createCslFile {
    my($test_name, $i,$var) = @_;
    my $path = "$ENV{WORK}/test/csl_test_gen";
    my $val1 = int(rand(20)) + 1;
    my $val2 = $val1 + int(rand(20)) + 1;
    my $val3 = int(rand(30)) + 1;
    my $val4 = int(rand(50)) + 1;
    my $val5 = int(rand(80)) + 1;
    my $val10 = int(rand(100)) + 1;
    my ($val6,$val7) = &binar; 
    my ($val8,$val9) = &binar;
    my ($val11,$val12) = &binar; 
    my ($val13,$val14) = &binar;
    my ($val15,$val16) = &binar;
    my ($val17,$val18) = &binar;
    my ($val19,$val20) = &binar;
    my $val22 = int(rand(3)) + 2;
    my $val21 = sprintf("%.".$val22."x",$val5);
    $val22 = $val22 * 4;
    my $val23 = int(rand(3)) + 2;
    my $val24 = sprintf("%.".$val23."x",$val10);
    $val23 = $val23 * 4;
    if($i == 1){ print "Generated path: $path/unit_parameter_invalid\n"; }
    &mkDir("$path/unit_parameter_invalid/");
    open(FH,">$path/unit_parameter_invalid/$test_name");

    if($i<=75){
    print FH "//Generated by Monica\n";
    print FH "//illegal test with parameter in units\n\n";
    print FH "csl_unit a {\n";
    print FH "  csl_parameter a_x($val1);\n";
    print FH "  csl_parameter a_y($val3);\n";
    print FH "  csl_parameter a_z($val5);\n";
    print FH "  csl_port pa(input,a_x);\n";
    print FH "  csl_port p_a(input,a_y);\n";
    print FH "  csl_port pta(input,a_z);\n";
    if($i > 30 ){
        print FH "  csl_parameter a_t($val8 \'b$val9);\n";
        print FH "  csl_port pt_a(output,a_t);\n";
    }
    print FH "  a(){}\n";
    print FH "};\n\n";
    if($i <= 5 ) {
        print FH " csl_parameter g_1($val5);   //error: wrong place of declaration for parameter\n";
        print FH "csl_unit b {\n";
        print FH "  csl_parameter b_x($val4);\n";
        print FH "  csl_port p_b(input,b_x);\n";
        print FH "  csl_port pb(input,b_x);\n";
        print FH "  a #(.a_y($val4),.a_z(g_1)) a0(.p_a(p_b));\n";
        print FH "  b(){}\n";
        print FH "};\n\n";
    print FH "csl_unit top {\n";
    print FH "  csl_parameter top_x($val2);\n";
    print FH "  csl_port p_top(input,$val1);\n";
    print FH "  csl_signal s_top($val3);\n";
    print FH "  a #(.a_x($val1)) a0;\n";
    print FH "  a #($val2) a1(.pa(p_top));\n";
    print FH "  a #(.a_z($val3)) a2(.pta(s_top));\n";
    print FH " top(){}\n";
    print FH "  };\n";
    }
 if($i > 5 && $i <=10) {
        print FH "csl_unit b {\n";
        print FH "  csl_parameter b_x($val4);\n";
        print FH "  csl_port p_b(input,b_x);\n";
        print FH "  csl_port pb(input,b_x);\n";
        print FH "  a #(.a_y($val4),.a_z(g_1)) a0(.p_a(p_b));\n";
        print FH "  b(){}\n";
        print FH "};\n\n";
    print FH "csl_unit top {\n";
    print FH "  csl_parameter top_x($val2);\n";
    print FH "  csl_port p_top(input,a_x);       //error: parameter a_x is from other unit\n";
    print FH "  csl_signal s_top($val3);\n";
    print FH "  a #(.a_x($val1)) a0;\n";
    print FH "  a #($val2) a1(.pa(p_top));\n";
    print FH "  csl_parameter top_y($val4);\n";
    print FH "  csl_port pt(output,top_y);\n";
    print FH "  b #(.b_z($val4)) b0(.pb(pt)); \n";
    print FH " top(){}\n";
    print FH "  };\n";
    }

if($i > 10 && $i <=15) {
        print FH "csl_unit b {\n";
        print FH "  csl_parameter b_x($val4);\n";
        print FH "  csl_port p_b(input,b_x);\n";
        print FH "  csl_port pb(input,b_x);\n";
        print FH "  a #(.a_y($val4),.a_z(g_1)) a0(.p_a(p_b));\n";
        print FH "  b(){}\n";
        print FH "};\n\n";
    print FH "csl_unit top {\n";
    print FH "  csl_parameter top_x($val2);\n";
    print FH "  csl_port p_top(input,$val1); \n";
    print FH "  csl_signal s_top($val3);\n";
    print FH "  a #(.a_x($val1)) a0;\n";
    print FH "  a #($val2) a1(.pa(p_top));\n";
    print FH "  csl_parameter top_y($val4);\n";
    print FH "  csl_port pt(output,top_y);\n";
    print FH "  b #(.b_z($val4),6) b0(.pb(pt));   //error: for one parameter is used f2a and for other is used the order \n";
    print FH " top(){}\n";
    print FH "  };\n";
    }
    if($i > 15 && $i <= 20) {
        print FH " csl_parameter g_2($val5);   //error: wrong place of declaration for parameter\n";
        print FH " csl_bitrange br1(g_2);      // error: use parameter for bitrange value\n";
        print FH "csl_unit c{\n";
        print FH "  csl_parameter c_x(g_2);     //error: use a global parameter  \n";
        print FH "  csl_parameter c_y($val2);\n";
        print FH "  csl_parameter c_z($val4);\n";
        print FH "  csl_parameter c_t($val1);\n";
        print FH "  csl_port p_c(output,c_x);\n";
        print FH "  csl_port pc(output,c_z);\n";
        print FH "  csl_port pt_c(output,$val4);\n";
        print FH "  c(){\n";
        print FH "    pt_c.set_width(br1);\n";
        print FH "  }\n";
        print FH "};\n\n";
    print FH "csl_unit top {\n";
    print FH "  csl_parameter top_x($val2);\n";
    print FH "  csl_port p_top(input,$val1);\n";
    print FH "  csl_signal s_top($val3);\n";
    print FH "  a #(.a_x($val2)) a0;\n";
     print FH "  csl_parameter top_z($val2);  \n";
     print FH "  csl_parameter top_t($val1);\n";
     print FH "  csl_port ptop(output,top_z);\n";
     print FH "  csl_signal stop(top_t);\n";
     print FH "  c #($val2,$val3,,$val4) c0(.p_c(ptop));\n";
    print FH " top(){}\n";
    print FH "  };\n";
    }

    if($i > 20 && $i <= 25) {
        print FH " csl_parameter g_1($val5);   //error: wrong place of declaration for parameter\n";
        print FH " csl_enum e{\n";
        print FH "  e1=g_1,                   //error: enum item with parameter value\n";
        print FH "  e2=0   \n";
        print FH "};\n";
         print FH "csl_unit c{\n";
        print FH "  csl_parameter c_x($val1);\n";
        print FH "  csl_parameter c_y($val2);\n";
        print FH "  csl_parameter c_z($val4);\n";
        print FH "  csl_parameter c_t($val1);\n";
        print FH "  csl_port p_c(output,c_x);\n";
        print FH "  csl_port pc(output,c_z);\n";
        print FH "  csl_port pt_c(output,$val4);\n";
        print FH "  c(){\n";
        print FH "    pt_c.set_width(br1);\n";
        print FH "  }\n";
        print FH "};\n\n";
        print FH "csl_unit d {\n";
        print FH "  a a3;\n";
        print FH "  c c2;\n";
        print FH "  csl_parameter d_x($val1);\n";
        print FH "  csl_port p_d(input,d_x);\n";
        print FH "  d(){\n";
        print FH "    a3.override_parameter(a_x,$val5);\n";
        print FH "    c2.override_parameter(c_t,$val3);\n";
        print FH "  }\n";
        print FH "};\n\n";
        print FH "csl_unit top {\n";
        print FH "  csl_parameter top_x($val2);\n";
        print FH "  csl_port p_top(input,$val1);\n";
        print FH "  csl_signal s_top($val3);\n";
        print FH "  csl_port pt_top(input,$val2);\n";
        print FH "  d #($val2) d0(.p_d(pt_top));\n";
        print FH " top(){}\n";
         print FH "  };\n";
  }
 if($i > 25 && $i <= 30) {
       
         print FH "csl_unit c{\n";
        print FH "  csl_parameter c_x($val1);\n";
        print FH "  csl_parameter c_y($val2);\n";
        print FH "  csl_parameter c_z($val4);\n";
        print FH "  csl_parameter c_t($val1);\n";
        print FH "  csl_port p_c(output,c_x);\n";
        print FH "  csl_port pc(output,c_z);\n";
        print FH "  csl_port pt_c(output,$val4);\n";
        print FH "  c(){\n";
        print FH "    pt_c.set_width(br1);\n";
        print FH "  }\n";
        print FH "};\n\n";
        print FH "csl_unit d {\n";
        print FH "  a a3;\n";
        print FH "  c c2;\n";
        print FH "  csl_parameter d_x($val1);\n";
        print FH "  csl_port p_d(input,d_x);\n";
        print FH "  d(){\n";
        print FH "    a3.override_parameter($val5);     // error: is missing the parameter \n";
        print FH "    c2.override_parameter(c_t,$val3);\n";
        print FH "  }\n";
        print FH "};\n\n";
        print FH "csl_unit top {\n";
        print FH "  csl_parameter top_x($val2);\n";
        print FH "  csl_port p_top(input,$val1);\n";
        print FH "  csl_signal s_top($val3);\n";
        print FH "  csl_port pt_top(input,$val2);\n";
        print FH "  d #($val2) d0(.p_d(pt_top));\n";
        print FH " top(){}\n";
         print FH "  };\n";
  }
  
    if($i > 30 && $i <= 35 ) {
        print FH "csl_unit b {\n";
        print FH "  csl_parameter b_x($val1,$val2);\n";
        print FH "  csl_parameter b_y($val4,$val3);\n";
        print FH "  csl_parameter b_z($val2,$val4);\n";
        print FH "  csl_port p_b(output,b_y);\n";
        print FH "  csl_port pb(input,b_z);\n";
        print FH "  b(){\n";
        print FH "  override_parameter(b_y,6);               //error: call not allowed in scope\n";
        print FH "  }\n";
        print FH "};\n\n";
        print FH "csl_unit top {\n";
        print FH "  csl_parameter top_x($val2);\n";
        print FH "  csl_port p_top(input,$val1);\n";
        print FH "  csl_signal s_top($val3);\n";
        print FH "  a  a0;\n";
     print FH "  csl_parameter top_z($val2);  \n";
     print FH "  csl_parameter top_t($val1);\n";
     print FH "  csl_port ptop(output,top_z);\n";
     print FH "  csl_signal stop(top_t);\n";
        print FH "  b #($val11 \'b$val12) b0(.p_b(ptop));\n";
        print FH "  b #(.b_x($val8 \'b$val9)) b1(.pb(a0.pt_a));\n"; 
    print FH " top(){}\n";
    print FH "  };\n";
   }
    if($i > 35 && $i <= 40) {
        print FH "csl_unit c {\n";
        print FH "  csl_parameter c_x($val2,$val3);\n";
        print FH "  csl_parameter c_z($val3,0);          //error: number of bits =0\n";
        print FH "  csl_parameter c_y($val1);\n";
        print FH "  csl_parameter c_t($val4);\n";
        print FH "  csl_parameter c_s(c_x);\n";
        print FH "  csl_parameter c_v($val5);\n";
        print FH "  csl_parameter c_r(c_y);\n";
        print FH "  csl_parameter c_l($val10);\n";
        print FH "  csl_port p_c(input,c_z);\n";
        print FH "  csl_port pc(input,c_x);\n";
        print FH "  csl_port p_ct(input,c_t);\n";
        print FH "  csl_port p_cv(output,c_v);\n";
        print FH "  csl_port p_cs(output,c_s);\n";
        print FH "  csl_port p_cr(output,c_r);\n";
        print FH "  csl_port p_cl(output,c_l);\n";
        print FH "  a #(.a_z(c_v)) a0(.pta(p_c));\n";
        print FH "  c(){}\n";
        print FH "};\n";
       print FH "csl_unit top {\n";
        print FH "  csl_parameter top_x($val2);\n";
        print FH "  csl_port p_top(input,$val1);\n";
        print FH "  csl_signal s_top($val3);\n";
        print FH "  csl_port pt_top(input,$val2);\n";
         print FH "  csl_signal stop(top_y);\n";
        print FH "  csl_parameter top_t($val2);\n";
        print FH "  csl_parameter top_s($val4);\n";
        print FH "  csl_parameter top_v(top_t);\n";
        print FH "  csl_parameter top_r(val1);\n";
        print FH "  csl_parameter top_l($val3);\n";
        print FH "  csl_port p_topt(output,top_t);\n";
        print FH "  csl_port p_topv(output,top_v);\n";
        print FH "  csl_port p_tops(output,top_s);\n";
        print FH "  csl_port p_topr(output,top_r);\n";
        print FH "  csl_port p_topl(output,top_l);\n";
        print FH "  c #($val3) c0(.pc(stop));\n";
        print FH "  c #(.c_t(c_x),.c_v($val2),.c_r($val4),.c_s($val3),.c_l($val1)) c1(.p_ct(p_topt),.p_cv(p_topv),.p_cr(p_topl),.p_cl(p_topr),.p_cs(p_tops));\n";
        print FH " top(){\n";
        print FH "    c0.override_parameter(c_l);     // error: is missing the override value \n"; 
        print FH " }\n";
        print FH "  };\n";
    }
    if($i > 40 && $i<= 45) {
        print FH "csl_unit b {\n";
        print FH "  csl_parameter b_x($val6 \'b$val7);\n";
        print FH "  csl_parameter b_z($val15 \'b$val16);\n";
        print FH "  csl_port pb(output,b_z);\n";
        print FH "  csl_port p_b(output,b_x);\n";
        print FH "  b(){};\n";
        print FH "};\n\n";
        print FH "csl_unit c {\n";
        print FH "  csl_parameter c_x($val17 \'b$val18);\n";
        print FH "  csl_parameter c_y($val19 \'b$val20);\n";
        print FH "  csl_parameter c_z($val22\_$val21);       //error: wrong format for parameter\n";
        print FH "  csl_port p_c(input,c_x);\n";
        print FH "  csl_port pc(output,c_y);\n";
        print FH "  csl_port pt_c(output,c_z);\n";
        print FH "  c(){\n";
        print FH "  }\n";    
        print FH "};\n\n";
     print FH "csl_unit top {\n";
    print FH "  csl_parameter top_x($val2);\n";
    print FH "  csl_port p_top(input,$val1);\n";
    print FH "  csl_signal s_top($val3);\n";
    print FH "  a #(.a_x($val1)) a0;\n";
    print FH "  csl_parameter top_t($val11 \'b$val12);\n";
        print FH "  csl_port ptop(output,top_t);\n";
        print FH "  b #($val11 \'b$val12) b0(.p_b(ptop));\n";
        print FH "  b #(.b_x($val8 \'b$val9)) b1(.pb(a0.pt_a));\n"; 
        print FH "  csl_parameter top_z($val2);  \n";
        
        print FH "  csl_signal stop(top_t);\n";
        print FH "  c #($val2,$val3,,$val4) c0(.p_c(ptop));\n";
         print FH " top(){}\n";
         print FH "  };\n";
   
 }
    if($i>45 && $i<=50){
     print FH "csl_unit b {\n";
        print FH "  csl_parameter b_x($val1,$val2);\n";
        print FH "  csl_parameter b_y($val4,$val3);\n";
        print FH "  csl_parameter b_z($val2,$val4);\n";
        print FH "  csl_port p_b(output,b_y);\n";
        print FH "  csl_port pb(input,b_z);\n";
        print FH "  b(){\n";
        print FH "  }\n";
        print FH "};\n\n";
    print FH "csl_unit top {\n";
    print FH "  csl_parameter top_x($val2);\n";
    print FH "  csl_port p_top(input);\n";
    print FH "  csl_signal s_top($val3);\n";
    print FH "  a  a0;\n";
        print FH "  csl_parameter top_y($val4);\n";
        print FH "  csl_port pt(output,top_y);\n";
        print FH "  b #(.b_z($val4),top_y) b0(.pb(pt));   //error: for one parameter is used f2a and for other is used the order \n";
        print FH " top(){}\n";
         print FH "  };\n";
  }
    if($i > 50 && $i <= 55){
     print FH "csl_unit c {\n";
        print FH "  csl_parameter c_x($val17 \'b$val18);\n";
        print FH "  csl_parameter c_y($val19 \'b$val20);\n";
        print FH "  csl_parameter c_z($val22);\n";
        print FH "  csl_port p_c(input,c_x);\n";
        print FH "  csl_port pc(output,c_y);\n";
        print FH "  csl_port pt_c(output,c_z);\n";
        print FH " a a1;\n";
        print FH "  c(){\n";
        print FH "  }\n";    
        print FH "};\n\n";
        print FH " csl_unit top{\n";
        print FH "  csl_parameter top_z($val2);  \n";
        print FH "  csl_parameter top_t($val1);\n";
        print FH "  csl_port ptop(output,top_z);\n";
        print FH "  csl_signal stop(top_t);\n";
        print FH "  c #($val2,$val3,,$val4) c0(.p_c(ptop));\n";
        print FH "  c #(,,,$val1,,) c1(.pt_c(stop));            //error: too many actual values for parameters\n";    
        print FH " top(){}\n";
         print FH "  };\n";  
  }
   
    if($i > 55 && $i <= 60){
         print FH "csl_unit b {\n";
        print FH "  csl_parameter b_x($val1,$val2);\n";
        print FH "  csl_parameter b_y($val4,$val3);\n";
        print FH "  csl_parameter b_z($val2,$val4);\n";
        print FH "  csl_port p_b(output,b_y);\n";
        print FH "  csl_port pb(input,b_z);\n";
        print FH "  b(){\n";
        print FH "  }\n";
        print FH "};\n\n";
    print FH "csl_unit top {\n";
    print FH "  csl_parameter top_x($val2);\n";
    print FH "  csl_port p_top(input);\n";
    print FH "  csl_signal s_top($val3);\n";
    print FH "  a  a0;\n";
        print FH "  csl_parameter top_y($val3, );      //error: there is no bits specification\n";
        print FH "  csl_port ptop(output,top_y);\n";
        print FH "  csl_port pt_top(input,top_x);\n";
        print FH "  b #(,,$val2) b0(.p_b(ptop),.pb(pt_top));\n";
        print FH " top(){}\n";
        print FH "};\n";
}
 if($i > 60 && $i <= 65){
         print FH "csl_unit b {\n";
        print FH "  csl_parameter b_x($val1,$val2);\n";
        print FH "  csl_parameter b_y($val4,b_y);              //error: another parameter is used for width\n";
        print FH "  csl_parameter b_z($val2,$val4);\n";
        print FH "  csl_port p_b(output,b_y);\n";
        print FH "  csl_port pb(input,b_z);\n";
        print FH "  b(){\n";
        print FH "  }\n";
        print FH "};\n\n";
    print FH "csl_unit top {\n";
    print FH "  csl_parameter top_x($val2);\n";
    print FH "  csl_port p_top(input);\n";
    print FH "  csl_signal s_top($val3);\n";
    print FH "  a  a0;\n";
        print FH "  csl_parameter top_y($val3,10 );\n";
        print FH "  csl_port ptop(output,top_y);\n";
        print FH "  csl_port pt_top(input,top_x);\n";
        print FH "  b #(,,$val2) b0(.p_b(ptop),.pb(pt_top));\n";
        print FH " top(){}\n";
        print FH "};\n";
}
 if($i > 65 && $i <= 70){
         print FH "csl_unit b {\n";
        print FH "  csl_parameter b_x($val1,$val2);\n";
        print FH "  csl_parameter b_y(b_x,$val3);            //error: another parameter is used for value\n";
        print FH "  csl_parameter b_z($val2,$val4);\n";
        print FH "  csl_port p_b(output,b_y);\n";
        print FH "  csl_port pb(input,b_z);\n";
        print FH "  b(){\n";
        print FH "  }\n";
        print FH "};\n\n";
    print FH "csl_unit top {\n";
    print FH "  csl_parameter top_x($val2);\n";
    print FH "  csl_port p_top(input);\n";
    print FH "  csl_signal s_top($val3);\n";
    print FH "  a  a0;\n";
        print FH "  csl_parameter top_y($val3, );      //error: there is no bits specification\n";
        print FH "  csl_port ptop(output,top_y);\n";
        print FH "  csl_port pt_top(input,top_x);\n";
        print FH "  b #(,,$val2) b0(.p_b(ptop),.pb(pt_top));\n";
        print FH " top(){}\n";
        print FH "};\n";
}
 if($i > 70 && $i <= 75){
         print FH "csl_unit b {\n";
        print FH "  csl_parameter b_x($val1,$val2);\n";
        print FH "  csl_parameter b_y($val4,$val3);\n";
        print FH "  csl_parameter b_z(b_x,b_y);               //error: parameters used doe width and value\n";
        print FH "  csl_port p_b(output,b_y);\n";
        print FH "  csl_port pb(input,b_z);\n";
        print FH "  b(){\n";
        print FH "  }\n";
        print FH "};\n\n";
    print FH "csl_unit top {\n";
    print FH "  csl_parameter top_x($val2);\n";
    print FH "  csl_port p_top(input);\n";
    print FH "  csl_signal s_top($val3);\n";
    print FH "  a  a0;\n";
        print FH "  csl_parameter top_y($val3);      \n";
        print FH "  csl_port ptop(output,top_y);\n";
        print FH "  csl_port pt_top(input,top_x);\n";
        print FH "  b #(,,$val2) b0(.p_b(ptop),.pb(pt_top));\n";
        print FH " top(){}\n";
        print FH "};\n";
}
}
    close(FH);
}
