#!/usr/bin/perl

use strict;

use Switch;               # the switch/case command
use File::Find;           # traversing the directory tree
use File::Basename;       # retrieving the basename of a directory
use File::Path;           # mkpath command

my $ENUM         = "enum_";
my $cslEnum      = "csl_enum";
my $enumName     = "e";
my $enumItemName = "ei_";
my $possible     = 'abcdefghijkmnpqrstuvwxyz123456789ABCDEFGHJKLMNPQRSTUVWXYZ';

my $ITEMS_NO     = 10;
my $BASE_BIN     = 2;
my $BASE_OCT     = 8;
my $BASE_DEC     = 10;
my $BASE_HEX     = 16;
#my $BASE_ANY     = 10;

my $testDate     = `date "+%d/%m/%G, %T"`;
my $start_time   = time();
my $testName     = "";
my $enumItemsNo;
my $noVerNo;
my $eiValue;

&gen_enum();

sub printHeader{
    my $testName = $_[0];

    print FH "//Test generated by AncaO\n";
    print FH "//Test cases from : csl_enum_matr.odg\n"; 
    print FH "//Test name: $testName\n";
    print FH "//Date: $testDate\n";
    print FH "//csl_enum with verilog numbers is created";
}

sub mkDir {
    my($dirName) = @_;
    unless(-e "$dirName")  { `mkdir $dirName`; }
    #print "[INFO] Created directory $dirName\n";
}

sub createCSLfile{
    $testName = $_[0];

    &mkDir("$ENV{WORK}/test/csl_test_gen/enum_ei_eq_ei_valid");
    open( FH, ">$ENV{WORK}/test/csl_test_gen/enum_ei_eq_ei_valid/$testName");
   
    &printHeader($testName);
    print FH "\n";
    print FH "$cslEnum e {\n";
#    print FH "  $enumName() {\n";
}

sub closeCSLfile{
#    print FH "   }\n";
    print FH "};\n";       
}

sub gen_enum{
#valid
    my $_enumItemsNo;
    my $__enumItemsNo;
    for( my $enumItemsNo = 2; $enumItemsNo < $ITEMS_NO; $enumItemsNo++) {
        $testName = $ENUM . "ei_eq_ei_no_val_$enumItemsNo" . "_legal.csl";
        if($enumItemsNo==2){
            print ("Generated path:$ENV{WORK}/test/csl_test_gen/enum_ei_eq_ei_valid \n");
        }
        &createCSLfile($testName);
        print FH "     $enumItemName" . "0,\n";
        print FH "     $enumItemName" . "1" . " = $enumItemName" . "0";
        if($enumItemsNo <= 2){
            print FH "\n";
        }
        else {
            print FH ",\n";
        }

        for( $_enumItemsNo = 2; $_enumItemsNo < $enumItemsNo; $_enumItemsNo++) {
            print FH "     $enumItemName" . $_enumItemsNo . " = " ;
            for( $__enumItemsNo = 0; $__enumItemsNo < $_enumItemsNo-1; $__enumItemsNo++) {
                print FH "$enumItemName" . $__enumItemsNo . " + ";
            }
            print FH "$enumItemName" . $__enumItemsNo;
            if($_enumItemsNo == $enumItemsNo-1 && $__enumItemsNo == $_enumItemsNo-1) {
                print FH "\n";
            }
            else {
                print FH ",\n ";
            }
        }
       
        closeCSLfile($testName);
    }

    my $finish_time  = time(); #statistics on the time elapsed from the start of the regression until it's end
    my $elapsed_time = $finish_time - $start_time;
    my $day          = int $elapsed_time/86400;
    my $hour         = int $elapsed_time%86400/3600;
    my $min          = int $elapsed_time%3600/60;
    my $sec          = $elapsed_time-$day*86400-$hour*3600-$min*60;
#    print "min = $min\n";
#    print "sec = $sec\n";
}
