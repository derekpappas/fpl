#!/usr/bin/perl

#oanab

use strict;

if(! defined $ENV{WORK}){
    die "[ERROR] The environment variable WORK is not set. Set it to point to TOT/se";
}

print "Generated tests path : inter_not_gen_rtl_invalid3/\n";

my $totDir     = $ENV{WORK};
&testDirExists($totDir);

sub testDirExists {
    my($execName) = @_;
    unless(-e "$execName") { die "[ERROR] The directory $execName does not exist!\n"; }
    
}

sub mkDir {
    my($dirName) = @_;
    unless(-e "$dirName")  { `mkdir $dirName`; }
}

foreach(my $i = 1; $i <= 350; $i++) {
    &main($i);
}

sub main {
    my $i = $_[0];
    my %dir = (1,"input",
	       2,"output",
	       3,"inout");
    my $dir = $_[4];
    my $test_name = "inter_not_gen_rtl".$i."_illegal.csl";
   	&createCslFile($test_name, $i, %dir);
}

sub createCslFile {
    my ($test_name, $i, %dir) = @_;
    my $path = "$ENV{WORK}/test/csl_test_gen/";
    my $k = int(rand(20)) + int(rand(20));
    my $zero = 0;
    my $one = 1;
    my $two = 2;
    my $tre = 3;
    my $val1 = int(rand(20))+1;
    my $val2 = int(rand(100))+2;
    my $val3 = int(rand(100))+3;
    my $l = int(rand(3))+1;
    if($test_name=~/(_legal)/){
        &mkDir("$path/inter_not_gen_rtl_valid2");
        open(FH,">$path/inter_not_gen_rtl_valid2/$test_name");
    }
    elsif($test_name=~/(_illegal)/) {
        &mkDir("$path/inter_not_gen_rtl_invalid3"); 
        open(FH,">$path/inter_not_gen_rtl_invalid3/$test_name");
    }
    print FH "//Generated by oanab\n";
    print FH "//Test cases from: do_not_gen_rtl_test_matr.odg \n\n";

#register reg
    if($i <= 25 || $i > 75 && $i <= 100 || $i > 150 && $i <= 175) {
	print FH "csl_register reg$k {\n";
	print FH "  reg$k () {\n";
	print FH "    set_width($val2);\n";
	print FH "    set_type(register);\n";
	if($i <= 25 || $i > 75 && $i <= 100) {
	    print FH "    do_not_gen_rtl();\n";
	}
	print FH "  }\n";
	print FH "};\n\n";
    }

#register rreg
    if($i > 225 && $i <= 250) {
	print FH "csl_register rreg$k {\n";
	print FH "  rreg$k () {\n";
	print FH "    set_width($val2);\n";
	print FH "    set_type(register);\n";
	print FH "  }\n";
	print FH "};\n\n";
    }

#fifo f
    if($i > 25 && $i <= 50 || $i > 100 && $i <= 125 || $i > 175 && $i <= 225) {
	print FH "csl_fifo f$k {\n";
	print FH "  f$k () {\n";
	print FH "    set_width($val1);\n";
	print FH "    set_depth(".($val2+$val1).");\n";
	if($i > 25 && $i <= 50 || $i > 100 && $i <= 125) {
	    print FH "    do_not_gen_rtl();\n";
	}
	print FH "  }\n";
	print FH "};\n\n";
    }

#register file rf
    if($i > 25 && $i <= 50 || $i > 100 && $i <= 125 || $i > 150 && $i <= 175) {
	print FH "csl_register_file rf$k {\n";
	print FH "  rf$k () {\n";
	print FH "    set_width($val3);\n";
	print FH "    set_depth(".($val2+$val3).");\n";
	if($i > 25 && $i <= 50 || $i > 100 && $i <= 125) {
	    print FH "    do_not_gen_rtl();\n";
	}
	print FH "  }\n";
	print FH "};\n\n";
}

#register file rrf
    if($i > 225 && $i <= 250) {
	print FH "csl_register_file rrf$k {\n";
	print FH "  rrf$k () {\n";
	print FH "    set_width($val2);\n";
	print FH "    set_depth(".($val2+$val3).");\n";
	print FH "  }\n";
	print FH "};\n\n";
}


#memory mem
    if($i > 50 && $i <= 75 || $i > 125 && $i <= 150 || $i > 175 && $i <= 225) {
	print FH "csl_memory mem$k {\n";
	print FH "  mem$k () {\n";
	print FH "    set_width($val2);\n";
	print FH "    set_depth(".($val2+$val1).");\n";
	if($i > 50 && $i <= 75 || $i > 125 && $i <= 150) {
	    print FH "    do_not_gen_rtl();\n";
	}
	print FH "  }\n";
	print FH "};\n\n";
    }

#interface ifc
    if($i > 275 && $i <= 350) {
	print FH "csl_interface ifc$k {\n";
	print FH "  csl_port p_x$i($dir{$l},$val2);\n";
	if($l < 3) {
	    print FH "  csl_port p_y$i($dir{$l+1},$val3);\n";
	}
	else {
	    print FH "  csl_port p_y$i($dir{$l-1},$val3);\n";
	}
	if($l == 1) {
	    print FH "  csl_port p_z$i($dir{$l+2},$val1);\n";
	}
	else {
	    print FH "  csl_port p_z$i($dir{$l-1},$val1);\n";
	}
	print FH "  ifc$k () {\n";
	if($i > 275 && $i <= 300) {
	    print FH "    do_not_gen_rtl();\n";
	}
	print FH "  }\n";
	print FH "};\n\n";
    }

#signal group sg
    if($i > 275 && $i <= 350) {
	print FH "csl_signal_group sg$k {\n";
	print FH "  csl_signal s_x$i($val2);\n";
	print FH "  csl_signal s_y$i($val3);\n";
	print FH "  csl_signal s_z$i($val1);\n";
	print FH "  sg$k () {\n";
	if($i > 275 && $i <= 300) {
	    print FH "    do_not_gen_rtl();\n";
	}
	print FH "  }\n";
	print FH "};\n\n";
    }

#unit a
    print FH "csl_unit a$k {\n";
    print FH "  csl_signal s$i($val2);\n";
    if($i > 50 && $i <= 75) {
	print FH "  mem$k mem$k\_$zero;\n";
    }
    elsif($i > 125 && $i <= 150) {
	print FH "  mem$k mem$k\_$one;\n";
    }
    elsif($i > 150 && $i <= 175) {
	print FH "  reg$k reg$k\_$one;\n";
    }
    elsif($i > 225 && $i <= 250) {
	print FH "  rrf$k rrf$k\_$zero;\n";
    }
    elsif($i > 300 && $i <= 350) {
	print FH "  ifc$k ifc$k\_$one;\n";
    }
    print FH "  a$k () {\n";
    if($i > 75 && $i <= 100) {
	print FH "    do_not_gen_rtl();\n";
    }
    elsif($i > 150 && $i <= 175) {
	print FH "    reg$k\_$one.do_not_gen_rtl();\n";
    }
    elsif($i > 225 && $i <= 250) {
	print FH "    rrf$k\_$zero.do_not_gen_rtl();\n";
    }
    elsif($i > 300 && $i <= 350) {
	print FH "    ifc$k\_$one.do_not_gen_rtl();\n";
    }
    print FH "  }\n";
    print FH "};\n\n";


#unit b
    print FH "csl_unit b$k {\n";
    print FH "  a$k a$k\_$zero;\n";
    if($i > 25 && $i <= 50) {
	print FH "  rf$k rf$k\_$zero;\n";
	print FH "  f$k f$k\_$zero;\n";
    }
    elsif($i > 75 && $i <= 100 || $i > 125 && $i <= 150) {
	print FH "  csl_port p_a$i(input,$val2);\n";
	print FH "  csl_port p_b$i(output,$val3);\n";
	print FH "  csl_port clk(input);\n";
    }
    elsif($i > 100 && $i <= 125) {
	print FH "  rf$k rf$k\_$zero;\n";
	print FH "  f$k f$k\_$zero;\n";
	print FH "  csl_port p_a$i(input,$val2);\n";
	print FH "  csl_port p_b$i(output,$val3);\n";
	print FH "  csl_port clk(input);\n";
    }
    elsif($i > 175 && $i <= 200) {
	print FH "  f$k f$k\_$two;\n";
	print FH "  mem$k mem$k\_$two;\n";
    }
    elsif($i > 200 && $i <= 225) {
	print FH "  mem$k mem$k\_$one;\n";
	print FH "  csl_port p_a$i(input,$val2);\n";
	print FH "  csl_port p_b$i(output,$val3);\n";
	print FH "  csl_port clk(input);\n";
    }
    elsif($i > 225 && $i <= 250) {
	print FH "  rreg$k rreg$k\_$zero;\n";
	print FH "  csl_port p_a$i(input,$val2);\n";
	print FH "  csl_port p_b$i(output,$val3);\n";
	print FH "  csl_port clk(input);\n";
    }
    elsif($i > 250 && $i <= 350) {
	print FH "  csl_port p_a$i(input,$val2);\n";
	print FH "  csl_port p_b$i(output,$val3);\n";
	print FH "  csl_port clk(input);\n";
    }
    print FH "  b$k () {\n";
    if($i <= 25) {
	print FH "    do_not_gen_rtl();\n";
    }
    elsif($i > 50 && $i <= 75) {
	print FH "    a$k\_$zero.do_not_gen_rtl();\n";
    }
    elsif($i > 75 && $i <= 150 || $i > 250 && $i <= 350) {
	print FH "    clk.set_attr(clock);\n";
    }
    elsif($i > 175 && $i <= 200) {
	print FH "    f$k\_$two.do_not_gen_rtl();\n";
	print FH "    mem$k\_$two.do_not_gen_rtl();\n";
    }
    elsif($i > 200 && $i <= 225) {
	print FH "    mem$k\_$one.do_not_gen_rtl();\n";
	print FH "    clk.set_attr(clock);\n";
    }
    elsif($i > 225 && $i <= 250) {
	print FH "    rreg$k\_$zero.do_not_gen_rtl();\n";
	print FH "    clk.set_attr(clock);\n";
    }
    print FH "  }\n";
    print FH "};\n\n";


#unit c
    print FH "csl_unit c$k {\n";
    print FH "  b$k b$k\_$zero;\n";
    if($i <= 25 || $i > 75 && $i <= 100) {
	print FH "  reg$k reg$k\_$zero;\n";
    }
    elsif($i > 150 && $i <= 175) {
	print FH "  rf$k rf$k\_$one;\n";
    }
    elsif($i > 200 && $i <= 225) {
	print FH "  f$k f$k\_$one;\n";
    }
    elsif($i > 275 && $i <= 300) {
	print FH "  ifc$k ifc$k\_$zero;\n";
	print FH "  sg$k sg$k\_$zero;\n";
    }
    elsif($i > 300 && $i <= 350) {
	print FH "  sg$k sg$k\_$one;\n";
    }
    print FH "  c$k () {\n";
    if($i > 125 && $i <= 150) {
	print FH "    b$k\_$zero.do_not_gen_rtl();\n";
    }
    elsif($i > 150 && $i <= 175) {
	print FH "    rf$k\_$one.do_not_gen_rtl();\n";
    }
    elsif($i > 200 && $i <= 225) {
	print FH "    f$k\_$one.do_not_gen_rtl();\n";
    }
    elsif($i > 300 && $i <= 350) {
	print FH "    sg$k\_$one.do_not_gen_rtl();\n";
    }
    print FH "  }\n";
    print FH "};\n\n";


#mem map pag
    if($i <= 75 || $i > 150 && $i <= 200 || $i > 250 && $i <= 275) {
	print FH "csl_memory_map_page mpg$k {\n";
	print FH "  mpg$k () {\n";
	print FH "    set_unit_name(a$k);\n";
	print FH "    add_address_range(0,$val2);\n";
	print FH "  }\n";
	print FH "};\n\n";
    }

#mem map
    if($i <= 75 || $i > 150 && $i <= 200 || $i > 250 && $i <= 275) {
	print FH "csl_memory_map mmap$k {\n";
	print FH "  mmap$k () {\n";
	print FH "    set_type(hierarchical);\n";
	print FH "    do_not_gen_rtl();\n";
	print FH "  }\n";
	print FH "};\n\n";
    }


#stim vector
    if($i > 75 && $i <= 150 || $i > 200 && $i <= 350) {
	print FH "csl_vector stim_vect$k {\n";
	print FH "  stim_vect$k () {\n";
	print FH "    set_unit_name(b$k);\n";
	if($i > 75 && $i <= 150 || $i > 200 && $i <= 275) {
	    print FH "    do_not_gen_rtl();\n";
	}
	print FH "    set_direction(input);\n";
	print FH "  }\n";
	print FH "};\n\n";
    }

#exp vector
    if($i > 75 && $i <= 150 || $i > 200 && $i <= 350) {
	print FH "csl_vector exp_vect$k {\n";
	print FH "  exp_vect$k () {\n";
	print FH "    set_unit_name(b$k);\n";
	if($i > 75 && $i <= 150 || $i > 200 && $i <= 275) {
	    print FH "    do_not_gen_rtl();\n";
	}
	print FH "    set_direction(output);\n";
	print FH "  }\n";
	print FH "};\n\n";
    }

#testbench tb
    if($i > 75 && $i <= 150 || $i > 200 && $i <= 350) {
	print FH "csl_testbench tb$k {\n";
	print FH "  csl_signal clk(reg);\n";
	if($i > 75 && $i <= 150 || $i > 200 && $i <= 350) {
	    print FH "  b$k b$k\_$one;\n";
	}
	print FH "  tb$k () {\n";
	print FH "    clk.set_attr(clock);\n";
	print FH "    add_logic(clock,clk,10,ps);\n";
	if($i > 250 && $i <= 350) {
	    print FH "    do_not_gen_rtl();\n";
	}
	print FH "  }\n";
	print FH "};\n\n";
    }










}
