#!/usr/bin/perl

#oanab
#connect_by_name() with param : par obj with const ps and par obj with const ps, const obj with par ps and par obj with const ps, par obj with par ps and par obj with const ps

use strict;

print "Generated tests path : test/csl_test_gen/ar_conn_name_param_valid5/\n";

if(! defined $ENV{WORK}){
    die "[ERROR] The environment variable WORK is not set. Set it to point to TOT/se";
}

my $totDir     = $ENV{WORK};
&testDirExists($totDir);

sub testDirExists {
    my($execName) = @_;
    unless(-e "$execName") { die "[ERROR] The directory $execName does not exist!\n"; }
    
}

sub mkDir {
    my($dirName) = @_;
    unless(-e "$dirName")  { `mkdir $dirName`; }
}

foreach(my $i = 1; $i <= 250; $i++) {
    &main($i);
}

sub main {
    my $i = $_[0];
    my $j = $_[1];
    my $m = $_[2];
    my $n = $_[3];
    $j = int(rand(20))+1; 
    $m = int(rand(20))+2; 
    $n = int(rand(20))+3; 
    my %dir = (1,"input",
	       2,"output",
	       3,"inout");
    my $dir = $_[4];
    my $test_name = "ar_conn_name_param".$i."_legal.csl";
    if($j != $m) {
	&createCslFile($test_name, $i, $j, $m, $n, %dir);
    }
    else {
	&createCslFile($test_name, $i, $j+1, $m+2, $n+3, %dir);
    }
}
sub createCslFile {
    my($test_name, $i, $j, $m, $n, %dir) = @_;
    my $path = "$ENV{WORK}/test/csl_test_gen/";
    my $k = int(rand(20)) + int(rand(20));
    my $zero = 0;
    my $one = 1;
    my $two = 2;
    my $tre = 3;
    my $val1 = int(rand(100))+2;
    my $val2 = int(rand(100))+1;
    my $val3 = int(rand(100))+8;
    my $l = int(rand(3))+1;
    if($test_name=~/(_legal)/){
        &mkDir("$path/ar_conn_name_param_valid5");
        open(FH,">$path/ar_conn_name_param_valid5/$test_name");
    }
    elsif($test_name=~/(_illegal)/) {
        &mkDir("$path/ar_conn_name_param_invalid1"); 
        open(FH,">$path/ar_conn_name_param_invalid1/$test_name");
    }
    print FH "//Generated by oanab\n\n";

#bitranges
    print FH "csl_bitrange br1($val1);\n\n";

    print FH "csl_bitrange br2($val2);\n\n";
    
    print FH "csl_bitrange br3($val3);\n\n";

#ifcj
    print FH "csl_interface ifc$j {\n";
    if($i <= 100) {
	print FH "  csl_parameter par_m$i(".($val1+$val2).");\n";
	print FH "  csl_port p_m$i(output,par_m$i);\n";
	print FH "  csl_parameter par_n$i(".($val3+$val2).");\n";
	print FH "  csl_port p_n$i(input,par_n$i);\n";
    }
    elsif($i > 100 && $i <= 150) {
	print FH "  csl_parameter par1(".($val1+$val2+$val3-1).");\n";
	print FH "  csl_parameter par2(".($val2).");\n";
	print FH "  csl_port p_m$i(output,".($val1+2*$val2+$val3).");\n";
	print FH "  csl_port p_n$i(input,par2);\n";
	print FH "  csl_port p_o$i(input,".($val1+$val2+$val3).");\n";
    }
    elsif($i > 150 && $i <= 200) {
	print FH "  csl_parameter par_m$i(".($val1+$val2).");\n";
	print FH "  csl_port p_m$i(output,par_m$i);\n";
	print FH "  csl_parameter par_n$i(".($val3+$val2).");\n";
	print FH "  csl_port p_n$i(input,par_n$i);\n";
    }
    elsif($i > 200 && $i <= 250) {
	print FH "  csl_parameter par1(".($val1+$val2-1).");\n";
	print FH "  csl_parameter par2(".($val1).");\n";
	print FH "  csl_parameter par_m$i(".($val1+$val2).");\n";
	print FH "  csl_port p_m$i(output,par_m$i);\n";
	print FH "  csl_parameter par_n$i(".($val3+$val2+$val1).");\n";
	print FH "  csl_port p_n$i(input,par_n$i);\n";
    }
    print FH "  ifc$j () {\n";
    print FH "  }\n";
    print FH "};\n\n";

#sgj
    print FH "csl_signal_group sg$j {\n";
    if($i <= 100 || $i > 150 && $i <= 200) {
	print FH "  csl_parameter par_m$i(".($val1+$val2+$val3).");\n";
	print FH "  csl_signal p_m$i(par_m$i);\n";
	print FH "  csl_parameter par_n$i(".($val1+$val2).");\n";
	print FH "  csl_signal p_n$i(par_n$i);\n";
    }
    elsif($i > 100 && $i <= 150) {
	print FH "  csl_parameter par_m$i(".($val1+$val2+$val3).");\n";
	print FH "  csl_signal p_m$i(par_m$i);\n";
	print FH "  csl_parameter par1(".($val2+$val3-1).");\n";
	print FH "  csl_parameter par2(".($val2).");\n";
	print FH "  csl_signal p_n$i(".($val1+$val2).");\n";
	print FH "  csl_signal p_o$i(".($val2+$val3).");\n";
    }
    elsif($i > 200 && $i <= 250) {
	print FH "  csl_parameter par1(".($val3+$val2-1).");\n";
	print FH "  csl_parameter par2(".($val2).");\n";
	print FH "  csl_parameter par_m$i(".($val1+$val2+$val3).");\n";
	print FH "  csl_signal p_m$i(par_m$i);\n";
	print FH "  csl_parameter par_n$i(".($val3+$val2).");\n";
	print FH "  csl_signal p_n$i(par_n$i);\n";
    }
    print FH "  sg$j () {\n";
    print FH "  }\n";
    print FH "};\n\n";


#unit a
    print FH "csl_unit a$k {\n";
    if($i <= 50) {
	print FH "  ifc$j ifc$j\_$one;\n";
	print FH "  csl_parameter par_c$i(".($val1+$val2).");\n";
	print FH "  csl_port p_c$i(output,par_c$i);\n";
	print FH "  sg$j sg$j\_$zero;\n";
    }
    elsif($i > 50 && $i <= 100) {
	print FH "  csl_parameter par1(".($val1+$val2-1).");\n";
	print FH "  csl_parameter par2(".($val2).");\n";
	print FH "  csl_signal s_x$i(".($val1+$val2).");\n";
	print FH "  ifc$j ifc$j\_$zero;\n";
	print FH "  sg$j sg$j\_$one;\n";
    }
    elsif($i > 100 && $i <= 150) {
	print FH "  csl_parameter par_c$i(".($val1+$val2).");\n";
	print FH "  csl_signal s_c$i(par_c$i);\n";
	print FH "  csl_parameter par_d$i(".($val1+$val2+$val3).");\n";
	print FH "  csl_port p_d$i(input,par_d$i);\n";
	print FH "  ifc$j ifc$j\_$one;\n";
    }
    elsif($i > 150 && $i <= 200) {
	print FH "  csl_parameter par1(".($val1+$val2-1).");\n";
	print FH "  csl_parameter par2(".($val2).");\n";
	print FH "  csl_parameter par_a$i(".($val1+$val2).");\n";
	print FH "  csl_port p_a$i(input,par_a$i);\n";
	print FH "  csl_port p_b$i(input,par_a$i);\n";
	print FH "  sg$j sg$j\_$zero;\n";
    }
    elsif($i > 200 && $i <= 250) {
	print FH "  ifc$j ifc$j\_$zero;\n";
	print FH "  ifc$j ifc$j\_$one;\n";
	print FH "  csl_parameter par_a$i(".($val1+$val3).");\n";
	print FH "  csl_port p_a$i(input,par_a$i);\n";
    }
    print FH "  a$k () {\n";
    if($i <= 50) {
	print FH "    sg$j\_$zero.p_n$i\[".($val1+$val2-1)."\:".($val1)."\] = ifc$j\_$one.p_n$i\[".($val2+$val3-1)."\:".($val3)."\];  // assign : sg.spar---ifc.ppar\n";
    }
    elsif($i > 50 && $i <= 100) {
	print FH "    s_x$i = sg$j\_$one.p_m$i\[".($val1+$val2+$val3-1)."\:".($val3)."\];  // assign : sig---sg.spar.ps\n";
    }
    elsif($i > 150 && $i <= 200) {
	print FH "    sg$j\_$zero.p_m$i\[".($val1+$val2+$val3-1)."\:".($val3)."\] = p_a$i;\n";
    }
    print FH "  }\n";
    print FH "};\n\n";

#unit b
    print FH "csl_unit b$k {\n";
    if($i <= 50) {
	print FH "  a$k a$k\_$zero(.ifc$j\_$one.p_m$i(p_c$i\[".($val1+$val2+$val3-1)."\:".($val3)."\]));\n";
	print FH "  csl_parameter par_a$i(".($val1+$val2+$val3).");\n";
	print FH "  csl_port p_a$i(input,par_a$i);\n";
	print FH "  csl_port p_b$i(input,par_a$i);\n";
	print FH "  csl_port p_c$i(output,par_a$i);\n";
	print FH "  ifc$j ifc$j\_$one;\n";
    }
    elsif($i > 50 && $i <= 100) {
	print FH "  a$k a$k\_$zero(.ifc$j\_$zero.p_n$i(s_y$i));\n";
	print FH "  csl_parameter par3(".($val3+$val2-1).");\n";
	print FH "  csl_parameter par4(".($val3).");\n";
	print FH "  csl_signal s_y$i(".($val3+$val2).");\n";
	print FH "  csl_port p_y$i(input,".($val1+$val2+$val3).");\n";
	print FH "  csl_port p_z$i(output,".($val2+$val3).");\n";
	print FH "  csl_parameter par_c$i(".($val1+$val2+$val3).");\n";
	print FH "  csl_port p_c$i(output,par_c$i);\n";
	print FH "  ifc$j ifc$j\_$one;\n";
    }
    elsif($i > 100 && $i <= 150) {
	print FH "  a$k a$k\_$zero(.ifc$j\_$one.p_n$i(sg$j\_$one.p_m$i\[".($val1+$val2+$val3-1)."\-\:par2\]));\n";
	print FH "  a$k a$k\_$one(.ifc$j\_$one.p_n$i(sg$j\_$one.p_n$i\[".($val1+$val2-1)."\:".($val1)."\]));\n";
	print FH "  sg$j sg$j\_$one;\n";
    }
    elsif($i > 150 && $i <= 200) {
	print FH "  a$k a$k\_$zero;\n";
	print FH "  csl_parameter par1(".($val3+$val2-1).");\n";
	print FH "  csl_parameter par2(".($val3).");\n";
	print FH "  csl_parameter par_y$i(".($val3+$val2+$val1).");\n";
	print FH "  csl_signal s_x$i(par_y$i);\n";
	print FH "  csl_signal s_y$i(par_y$i);\n";
	print FH "  csl_port p_c$i(output,par_y$i);\n";
	print FH "  csl_port p_d$i(input,par_y$i);\n";
    }
    elsif($i > 200 && $i <= 250) {
	print FH "  a$k a$k\_$zero(.ifc$j\_$zero.p_m$i(ifc$j\_$zero.p_m$i),.ifc$j\_$one.p_m$i(ifc$j\_$zero.p_m$i));\n";
	print FH "  ifc$j ifc$j\_$zero;\n";
	print FH "  sg$j sg$j\_$one;\n";
    }
    print FH "  b$k () {\n";
#connect_by_name : ppar.ps---sg.spar.ps (PC)
    if($i <= 50) {
	print FH "    p_a$i\[".($val1+$val2+$val3-1)."\:".($val3)."\].connect_by_name(a$k\_$zero.sg$j\_$zero.p_m$i\[".($val1+$val2+$val3-1)."\:".($val3)."\]);  // ppar.ps---sg.spar.ps (PC)\n";
    }
#connect_by_name : p.pspar---sg.spar.ps (PC)
    elsif($i > 50 && $i <= 100) {
	print FH "    p_z$i\[par3\:par4\].connect_by_name(a$k\_$zero.sg$j\_$one.p_n$i\[".($val1+$val2-1)."\-\:".($val2)."\]);  // p.pspar---sg.spar.ps (PC)\n";
    }
#connect_by_name : ifc.p.pspar---ppar.ps (SS)
    elsif($i > 100 && $i <= 150) {
	print FH "    a$k\_$zero.ifc$j\_$one.p_m$i\[par1\:par2\].connect_by_name(a$k\_$one.p_d$i\[".($val1+$val2+$val3-1)."\:".($val2)."\]);  // ifc.p.pspar---ppar.ps (SS)\n";
    }
#connect_by_name : ppar.pspar---spar.ps (CP) and ppar.pspar---sg.spar.ps (PC)
    elsif($i > 150 && $i <= 200) {
	print FH "    a$k\_$zero.p_a$i\[par1\:par2\].connect_by_name(s_x$i\[".($val1+$val3-1)."\-\:".($val1)."\]);  // ppar.pspar---spar.ps (CP)\n";
	print FH "    p_d$i\[par1\:par2\].connect_by_name(a$k\_$zero.sg$j\_$zero.p_n$i\[".($val1+$val2-1)."\:".($val1)."\]);  // ppar.pspar---sg.spar.ps (PC)\n";
    }
#connect_by_name : ifc.ppar.pspar---sg.spar.ps (CP) and sg.spar.pspar---ifc.ppar.ps (PC)
    elsif($i > 200 && $i <= 250) {
	print FH "    a$k\_$zero.ifc$j\_$zero.p_n$i\[par1\:par1\].connect_by_name(sg$j\_$one.p_m$i\[".($val1)."\]);  // ifc.ppar.pspar---sg.spar.ps (CP)\n";
	print FH "    sg$j\_$one.p_n$i\[par1\:par2\].connect_by_name(a$k\_$zero.ifc$j\_$one.p_n$i\[".($val1+$val3-1)."\:".($val1)."\]);  // sg.spar.pspar---ifc.ppar.ps (PC)\n";
    }
    print FH "  }\n";
    print FH "};\n\n";

#unit c
    print FH "csl_unit c$k {\n";
    if($i <= 50) {
	print FH "  b$k b$k\_$zero(.ifc$j\_$one.p_n$i(ifc$j\_$zero.p_n$i));\n";
	print FH "  ifc$j ifc$j\_$zero;\n";
	print FH "  csl_parameter par_a$i(".($val1+$val2).");\n";
	print FH "  csl_signal s_a$i(par_a$i);\n";
	print FH "  sg$j sg$j\_$zero;\n";
    }
    elsif($i > 50 && $i <= 100) {
	print FH "  b$k b$k\_$zero(.ifc$j\_$one.p_m$i(p_y$i\[par1\:par2\]));\n";
	print FH "  csl_parameter par_a$i(".($val1+$val2+$val3).");\n";
	print FH "  csl_port p_a$i(input,par_a$i);\n";
	print FH "  csl_parameter par1(".($val3+$val2+$val1-1).");\n";
	print FH "  csl_parameter par2(".($val3).");\n";
	print FH "  csl_port p_y$i(output,".($val1+$val2+$val3).");\n";
    }
    elsif($i > 100 && $i <= 150) {
	print FH "  b$k b$k\_$zero;\n";
#	print FH "  ifc$j ifc$j\_$two;\n";
	print FH "  ifc$j ifc$j\_$zero;\n";
    }
    elsif($i > 150 && $i <= 200) {
	print FH "  b$k b$k\_$zero;\n";
	print FH "  csl_parameter par_a$i(".($val1+$val2).");\n";
	print FH "  csl_port p_a$i(input,par_a$i);\n";
	print FH "  a$k a$k\_$one;\n";
	print FH "  ifc$j ifc$j\_$one;\n";
    }
    elsif($i > 200 && $i <= 250) {
	print FH "  b$k b$k\_$zero(.ifc$j\_$zero.p_n$i(ifc$j\_$one.p_n$i));\n";
	print FH "  csl_parameter par_a$i(".($val1+$val2).");\n";
	print FH "  csl_signal s_a$i(par_a$i);\n";
	print FH "  ifc$j ifc$j\_$one;\n";
    }
    print FH "  c$k () {\n";
#connect_by_name : ppar.ps---ifc.ppar.ps (PC) and ifc.ppar.ps---spar.ps (CP) and sg.spar.ps---ppar.ps (PC)
    if($i <= 50) {
	print FH "    b$k\_$zero.p_b$i\[".($val1+$val2-1)."\:".($val1)."\].connect_by_name(b$k\_$zero.a$k\_$zero.ifc$j\_$one.p_n$i\[".($val2+$val3-1)."\:".($val3)."\]);  // ppar.ps---ifc.ppar.ps (PC)\n";
	print FH "    b$k\_$zero.ifc$j\_$one.p_m$i\[".($val1+$val2-1)."\:".($val2)."\].connect_by_name(s_a$i\[".($val1+$val2-1)."\-\:".($val1)."\]);  // ifc.ppar.ps---spar.ps (CP)\n";
	print FH "    sg$j\_$zero.p_n$i\[".($val1)."\:".($val1)."\].connect_by_name(b$k\_$zero.a$k\_$zero.p_c$i\[".($val1)."\]);  // sg.spar.ps---ppar.ps (PC)\n";
	print FH "    sg$j\_$zero.p_m$i\[".($val1+$val2+$val3-1)."\:".($val3)."\] = s_a$i;  // assign : sg.spar.ps---spar\n";
    }
#connect_by_name : s.pspar---ppar.ps (CP) and s.pspar---ifc.ppar.ps (PC)
    elsif($i > 50 && $i <= 100) {
	print FH "    b$k\_$zero.a$k\_$zero.s_x$i\[par1\:par2\].connect_by_name(p_a$i\[".($val1+$val3-1)."\:".($val3)."\]);  // s.pspar---ppar.ps (CP)\n";
	print FH "    b$k\_$zero.s_y$i\[par3\:par4\].connect_by_name(b$k\_$zero.a$k\_$zero.ifc$j\_$zero.p_m$i\[".($val1+$val2-1)."\:".($val1)."\]);  // s.pspar---ifc.ppar.ps (PC)\n";
    }
#connect_by_name : ifc.p.pspar---spar.ps (PC) and ifc.p.pspar---ifc.ppar.ps (CP)
    elsif($i > 100 && $i <= 150) {
	print FH "    ifc$j\_$zero.p_o$i\[par1\-\:par2\].connect_by_name(b$k\_$zero.a$k\_$zero.s_c$i\[".($val1+$val2-1)."\:".($val1)."\]);  // ifc.p.pspar---spar.ps (PC)\n";
	print FH "    b$k\_$zero.a$k\_$zero.ifc$j\_$one.p_o$i\[par1\:par1\].connect_by_name(ifc$j\_$zero.p_n$i\[".($val2-1)."\],ifc);  // ifc.p.pspar---ifc.ppar.ps (CP)\n";
    }
#connect_by_name : spar.pspar---ppar.ps (CP) and ppar.pspar---ppar.ps (SS)
    elsif($i > 150 && $i <= 200) {
	print FH "    b$k\_$zero.s_y$i\[par1\:par2\].connect_by_name(p_a$i\[".($val1+$val2-1)."\:".($val1)."\]);  // spar.pspar---ppar.ps (CP)\n";
	print FH "    a$k\_$one.p_b$i\[par1\:par2\].connect_by_name(b$k\_$zero.p_c$i\[".($val2+$val1-1)."\:".($val2)."\]);  // ppar.pspar---ppar.ps (SS)\n";
    }
#connect_by_name : ifc.ppar.pspar---spar.ps (CP) and sg.spar.pspar---ppar.ps (PC)
    elsif($i > 200 && $i <= 250) {
	print FH "    b$k\_$zero.ifc$j\_$zero.p_m$i\[par1\:par2\].connect_by_name(s_a$i\[".($val1+$val2-1)."\:".($val1)."\]);  // ifc.ppar.pspar---spar.ps (CP)\n";
	print FH "    b$k\_$zero.sg$j\_$one.p_n$i\[par1\:par2\].connect_by_name(b$k\_$zero.a$k\_$zero.p_a$i\[".($val1+$val3-1)."\:".($val1)."\]);  // sg.spar.pspar---ppar.ps (PC)\n";
    }
    print FH "  }\n";
    print FH "};\n\n";

#unit d
    print FH "csl_unit d$k {\n";
    if($i <= 50) {
	print FH "  c$k c$k\_$zero;\n";
	print FH "  csl_parameter par_s$i(".($val1+$val3).");\n";
	print FH "  csl_signal s_s$i(par_s$i);\n";
    }
    elsif($i > 50 && $i <= 100) {
	print FH "  c$k c$k\_$zero;\n";
	print FH "  csl_parameter par_n$i(".($val1+$val2).");\n";
	print FH "  csl_signal s_n$i(par_n$i);\n";
	print FH "  csl_parameter par1(".($val3+$val1-1).");\n";
	print FH "  csl_parameter par2(".($val1).");\n";
	print FH "  csl_port p_c$i(input,".($val1+$val2+$val3).");\n";
    }
    elsif($i > 100 && $i <= 150) {
	print FH "  c$k c$k\_$zero;\n";
	print FH "  sg$j sg$j\_$zero;\n";
	print FH "  csl_parameter par_n$i(".($val1+$val3).");\n";
	print FH "  csl_port p_n$i(input,par_n$i);\n";
    }
    elsif($i > 150 && $i <= 200) {
	print FH "  c$k c$k\_$zero(.ifc$j\_$one.p_n$i(ifc$j\_$zero.p_n$i));\n";
	print FH "  ifc$j ifc$j\_$zero;\n";
	print FH "  csl_parameter par1(".($val1+$val2-1).");\n";
	print FH "  csl_parameter par2(".($val2).");\n";
	print FH "  csl_parameter par_x$i(".($val1+$val2).");\n";
	print FH "  csl_port p_x$i(output,par_x$i);\n";
	print FH "  csl_signal s_m$i(".($val1+$val2).");\n";
    }
    elsif($i > 200 && $i <= 250) {
	print FH "  c$k c$k\_$zero(.ifc$j\_$one.p_n$i(ifc$j\_$two.p_n$i));\n";
	print FH "  csl_parameter par_x$i(".($val1+$val2).");\n";
	print FH "  csl_port p_x$i(input,par_x$i);\n";
	print FH "  ifc$j ifc$j\_$two;\n";
    }
    print FH "  d$k () {\n";
#connect_by_name : spar.ps---ifc.ppar.ps (PC) and ifc.ppar.ps---ppar.ps (PC)
    if($i <= 50) {
	print FH "    s_s$i\[".($val1+$val3-1)."\:".($val1)."\].connect_by_name(c$k\_$zero.ifc$j\_$zero.p_n$i\[".($val2+$val3-1)."\:".($val2)."\]);  // spar.ps---ifc.ppar.ps (PC)\n";
	print FH "    c$k\_$zero.ifc$j\_$zero.p_m$i\[".($val1+$val2-1)."\:".($val1)."\].connect_by_name(c$k\_$zero.b$k\_$zero.p_c$i\[".($val1+$val2+$val3-1)."\:".($val1+$val3)."\]);  // ifc.ppar.ps---ppar.ps (PC)\n";
    }
#connect_by_name : p.pspar---spar.ps (CP) and p.pspar---ppar.ps (PC) and p.pspar---ifc.ppar.ps (PC)
    elsif($i > 50 && $i <= 100) {
	print FH "    c$k\_$zero.b$k\_$zero.p_y$i\[par3\:par4\].connect_by_name(s_n$i\[".($val1+$val2-1)."\-\:".($val2)."\]);  // p.pspar---spar.ps (CP)\n";
	print FH "    c$k\_$zero.p_y$i\[par1\:par2\].connect_by_name(c$k\_$zero.b$k\_$zero.p_c$i\[".($val1+$val2+$val3-1)."\:".($val3)."\]);  // p.pspar---ppar.ps (PC)\n";
	print FH "    p_c$i\[par1\:par2\].connect_by_name(c$k\_$zero.b$k\_$zero.ifc$j\_$one.p_n$i\[".($val2+$val3-1)."\:".($val2)."\]);  // p.pspar---ifc.ppar.ps (PC)\n";
    }
#connect_by_name : ifc.p.pspar---sg.spar.ps (CP) and sg.s.pspar---ppar.ps (CP) and sg.s.pspar---ifc.ppar.ps (PC)
    elsif($i > 100 && $i <= 150) {
	print FH "    sg$j\_$zero.p_n$i\[".($val1+$val2-1)."\:".($val2)."\] = p_n$i\[".($val1+$val3-1)."\-\:".($val1)."\];\n";
	print FH "    c$k\_$zero.ifc$j\_$zero.p_m$i\[par1\:par2\].connect_by_name(sg$j\_$zero.p_m$i\[".($val1+$val3-1)."\:".(0)."\]);  // ifc.p.pspar---sg.spar.ps (CP)\n";
	print FH "    c$k\_$zero.b$k\_$zero.sg$j\_$one.p_o$i\[par1\:par2\].connect_by_name(p_n$i\[".($val1+$val3-1)."\:".($val1)."\]);  // sg.s.pspar---ppar.ps (CP)\n";
	print FH "    sg$j\_$zero.p_o$i\[par2].connect_by_name(c$k\_$zero.ifc$j\_$zero.p_n$i\[".($val2-1)."\:".($val2-1)."\]);  // sg.s.pspar---ifc.ppar.ps (PC)\n";
    }
#connect_by_name : spar.pspar---ifc.ppar.ps (CP) and ppar.pspar---ifc.ppar.ps (PC)
    elsif($i > 150 && $i <= 200) {
	print FH "    ifc$j\_$zero.p_m$i = s_m$i;\n";
	print FH "    c$k\_$zero.b$k\_$zero.s_x$i\[par1\:par2\].connect_by_name(ifc$j\_$zero.p_n$i\[".($val2+$val3-1)."\:".($val3)."\]);  // spar.pspar---ifc.ppar.ps (CP)\n";
	print FH "    p_x$i\[par1\-\:par2\].connect_by_name(c$k\_$zero.ifc$j\_$one.p_m$i\[".($val1+$val2-1)."\:".($val1)."\]);  // ppar.pspar---ifc.ppar.ps (PC)\n";
    }
#connect_by_name : ifc.ppar.pspar---ppar.ps (CP) and ifc.ppar.pspar---ifc.ppar.ps (PC)
    elsif($i > 200 && $i <= 250) {
	print FH "    c$k\_$zero.ifc$j\_$one.p_n$i\[par1\:par2\].connect_by_name(p_x$i\[".($val1+$val2-1)."\-\:".($val2)."\]);  // ifc.ppar.pspar---ppar.ps (CP)\n";
	print FH "    ifc$j\_$two.p_m$i\[par1\:par2\].connect_by_name(c$k\_$zero.ifc$j\_$one.p_m$i\[".($val1+$val2-1)."\:".($val1)."\]);  // ifc.ppar.pspar---ifc.ppar.ps (PC)\n";
    }
    print FH "  }\n";
    print FH "};\n\n";











}
