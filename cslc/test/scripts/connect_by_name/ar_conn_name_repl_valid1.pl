#!/usr/bin/perl

#Author Monica
#modified by oanab - not finished
#Test_Matrix: /test_matrices/ar_conn_by_name_matr.ods, 4 test cases

use strict;

if(! defined $ENV{WORK}){
    die "[ERROR] The environment variable WORK is not set. Set it to point to TOT/se";
}

my $totDir     = $ENV{WORK};
&testDirExists($totDir);

 
sub testDirExists {
    my($execName) = @_;
    unless(-e "$execName") { die "[ERROR] The directory $execName does not exist!\n"; }
    
}

sub mkDir {
    my($dirName) = @_;
    unless(-e "$dirName")  { `mkdir $dirName`; }
}

foreach(my $i = 1; $i <=60; $i++) {
    &main($i);
 
}

sub main {
    my $i = $_[0];
    my $test_name = "ar_conn_name_repl".$i."_legal.csl";
    &createCslFile($test_name, $i);
}
sub createCslFile {
    my($test_name, $i) = @_;
    my $path = "$ENV{WORK}/test/csl_test_gen";
   if($i==1){
        print (" Generated path: $path/ar_conn_name_repl_valid1/\n");}
    my $val = int(rand(500));
    if($val == 0) { $val = 1; }
    my $val1= int(rand(200));
    if($val1== 0) { $val1= 1; }
    my $val2 = int(rand(100));
    if($val2==0) {$val2=1;}
    if($test_name=~/(_legal)/){
        &mkDir("$path/ar_conn_name_repl_valid1");
        open(FH,">$path/ar_conn_name_repl_valid1/$test_name");
    }
  
    print FH "//Generated by Monica\n\n";
   print FH "//Test_Matrix: /test_matrices/ar_conn_by_name_matr.ods\n\n";
    print FH "//Connect SG.signal/SG.sg.sig--replicate_expr\n\n";
    print FH "// VALID TEST $i;\n";

#sg.sig.connect({n {x1,x2,x3,...}});    
    if($i>0 && $i<=10){
        my $v1=$val + $val;
        print FH "csl_signal_group sg1{\n";
        print FH "  csl_signal s11($val);\n";
        print FH "  csl_signal s12(4);\n";
        print FH "  csl_signal s13($val1);\n";
        print FH "  csl_signal s14($val2);\n";
        print FH "  csl_signal s15($v1);\n";
	foreach (my $j=1; $j<=$i; $j++){
	    print FH "  csl_signal s1_$j($j);\n";
	}
        print FH "    sg1(){\n";
        print FH "   }\n";
        print FH " };\n";

        print FH " csl_unit u1{\n";
        print FH "  csl_port p11(input,$val);\n";
        print FH "  csl_port p12(input);\n";
        print FH "  csl_port p13(input,$val1);\n";
#        print FH "  csl_port p14(output);\n";
        
#        foreach (my $j=1; $j<=$i; $j++){
#	    print FH "  csl_port p1_$j(input,$j);\n";
#        }
        print FH "  sg1 sg1_i;\n";
        print FH "  u1(){\n";
	print FH "    sg1_i.s13 = p13;\n";
	print FH "    sg1_i.s11 = p11;\n";
	print FH "  }\n";
        print FH "};\n";
	
        print FH " csl_unit u2{\n";
        print FH "  csl_port p21(input,$val);\n";
        print FH "  csl_port p22(input);\n";
        print FH "  csl_port p23(input,$val1);\n";
	print FH "  csl_port p24(output);\n";
	foreach (my $j=1; $j<=$i; $j++){
	    print FH "  csl_port p2_$j(output);\n";
	}
	print FH "  u1 u1_i(.p11(p21),.p12(p22),.p13(p23));\n";
	print FH "  u2(){\n";
        print FH "    u1_i.sg1_i.s12.connect_by_name({4 {p22}});\n";
        print FH "    u1_i.sg1_i.s14.connect_by_name({$val2 {p24}});\n";
        print FH "    u1_i.sg1_i.s15.connect_by_name({2 {p21}});\n";
	foreach (my $j=1; $j<=$i; $j++){
	    print FH  "    u1_i.sg1_i.s1_$j.connect_by_name({$j {p2_$j}});\n";
	} 
        print FH "  }\n";
        print FH "};\n";
    }
    
 
    if ($i>10 &&  $i<=20){
	my $v1=$val + $val;
	my $v2=$val1 + $val1;
	my $v3=$val2 + $val2 + $val2;
        print FH "csl_signal_group sg1{\n";
        print FH "  csl_signal s11($val);\n";
        print FH "  csl_signal s12(4);\n";
        print FH "  csl_signal s13($v1);\n";
        print FH "  csl_signal s14($v2);\n";
        print FH "  csl_signal s15($v3);\n";
	foreach (my $j=10; $j<=$i; $j++){
	    print FH "  csl_signal s1_$j($j);\n";
	}
        print FH "    sg1(){\n";
        print FH "   }\n";
        print FH " };\n";
	
        print FH " csl_unit u1{\n";
        print FH "  csl_port p13(input,$val);\n";
        print FH "  csl_port p15(output,4);\n";
	print FH "  sg1 sg1_i1;\n";
        print FH " u1(){\n";
	print FH "    sg1_i1.s11 = p13;\n";
	print FH "    p15 = sg1_i1.s12;\n";
	print FH "  }\n";
        print FH "};\n";
	
        print FH " csl_unit u2{\n";
        print FH "  csl_port p21(input,$val);\n";
        print FH "  csl_port p22(input,$val1);\n";
#	print FH "  csl_port p23(input,$val);\n";
	print FH "  csl_port p24(input,$val2);\n";
	foreach (my $j=10; $j<=$i; $j++){
	    print FH "  csl_port p_$j(input);\n";
	}
        print FH "  u1 u1_i;\n";
	print FH " u2(){\n";
        print FH "    u1_i.sg1_i1.s13.connect_by_name({2 {p21}});\n";
        print FH "    u1_i.sg1_i1.s14.connect_by_name({2 {p22}});\n";
        print FH "    u1_i.sg1_i1.s15.connect_by_name({3 {p24}});\n";
	foreach (my $j=10; $j<=$i; $j++){
	    print FH  "    u1_i.sg1_i1.s1_$j.connect_by_name({$j {p_$j}});\n";
	} 
        print FH "  }\n";
        print FH "};\n";
	
	print FH " csl_unit u3{\n";
	print FH "  csl_port p31(input,$val);\n";
	print FH "  csl_port p32(input,$val1);\n";
	print FH "  csl_port p33(output);\n";
	print FH "  csl_port p34(input,$val2);\n";
	print FH "  csl_port p35(input,$val);\n";
	print FH "  sg1 sg1_i2;\n";
	print FH "  u2 u2_i(.p21(sg1_i2.s11),.p22(sg1_i2.s14\[".(2*$val1-1)."\:".($val1)."\]),.p24(sg1_i2.s15\[".(3*$val2-1)."\-\:".($val2)."\])";
	foreach (my $j=10; $j<=$i; $j++){
	    print FH ",.p_$j(sg1_i2.s1_$j\[".($j-1)."\])";
	}
	print FH ");\n";
	
	print FH "  u3(){\n";
	print FH "    u2_i.u1_i.sg1_i1.s13.connect_by_name({2 {p31}});\n";
	print FH "    u2_i.u1_i.sg1_i1.s14.connect_by_name({2 {p32}});\n";
	print FH "    u2_i.u1_i.sg1_i1.s15.connect_by_name({3 {p34}});\n";
	print FH "    u2_i.u1_i.sg1_i1.s13.connect_by_name({2 {p35}});\n";
	print FH "    u2_i.u1_i.sg1_i1.s12.connect_by_name({4 {p33}});\n";
	print FH "    sg1_i2.s12\[3\] = sg1_i2.s13\[".($v1-1)."\-\:".(1)."\];\n";
	print FH "  }\n";
	print FH " };\n";
	
    }

 
   if ($i>20 &&  $i<=30){

       my $v1=3* ($val + $val1);
       my $v2=2* ($val1 + $val2);
       my $v3=2* ($val + $val1 + $val2);
       print FH "csl_signal_group sg1{\n";
#       print FH "  csl_signal s11($val);\n";
       print FH "  csl_signal s12(4);\n";
       print FH "  csl_signal s13($v1);\n";
       print FH "  csl_signal s14($v2);\n";
       print FH "  csl_signal s15($v3);\n";
       
       print FH "    sg1(){\n";
       print FH "   }\n";
       print FH " };\n";
       
       print FH " csl_unit u1{\n";
       print FH "  csl_port p11(input,$val2);\n";
       print FH "  csl_port p12(input);\n";
       print FH "  csl_port p13(input,$val);\n";
#       print FH "  csl_port p14(output);\n";
       print FH "  csl_port p15(input,$val1);\n";
       
       print FH " u1(){}\n";
       print FH "};\n";
       
       print FH " csl_unit u2{\n";
       print FH "  csl_port p21(input,$val);\n";
       print FH "  csl_port p22(input,$val1);\n";
       print FH "  csl_port p23(input);\n";
       print FH "  csl_port p24(input,$val2);\n";
       
       print FH "  sg1 sg1_i1;\n";
       print FH "  u1 u1_i(.p12(p23));\n";
       
       print FH "  u2(){\n";
       
       print FH "  }\n";
       print FH "};\n";
       
       print FH " csl_unit u3{\n";
       print FH "  csl_port p31(input,$val);\n";
       print FH "  csl_port p32(input,$val1);\n";
       print FH "  csl_port p33(input);\n";
       print FH "  csl_port p34(input,$val2);\n";
       print FH "  u2 u2_i(.p23(p33));\n";
       print FH "  sg1 sg1_i2;\n";
       
       print FH "  u3(){\n";
       print FH "    sg1_i2.s13.connect_by_name({3 {u2_i.u1_i.p13,u2_i.u1_i.p15}});\n";
       print FH "    sg1_i2.s13.connect_by_name({3 {u2_i.p21,u2_i.p22}});\n";
       
       print FH "    sg1_i2.s15.connect_by_name({2 {u2_i.p21,u2_i.p22,u2_i.p24}});\n";
       print FH "    sg1_i2.s15.connect_by_name({2 {u2_i.u1_i.p13,u2_i.u1_i.p15,u2_i.u1_i.p11}});\n";
       
       print FH "    u2_i.sg1_i1.s13.connect_by_name({2 {u2_i.u1_i.p11,u2_i.u1_i.p13,u2_i.u1_i.p15}});\n";
       print FH "    u2_i.sg1_i1.s12.connect_by_name({4 {p33}});\n";
       print FH "    u2_i.sg1_i1.s14.connect_by_name({2 {p32,p34}});\n";
       print FH "    u2_i.sg1_i1.s14.connect_by_name({2 {u2_i.u1_i.p15,u2_i.u1_i.p11}});\n";
       print FH "    sg1_i2.s12\[2\] = p33;\n";
       print FH "    sg1_i2.s14\[".($val1+$val2-1)."\:".($val2)."\] = p32;\n";
       print FH "  }\n";
       print FH " };\n";
       
   }

# sg.sg.sig.connect({n{x1,x2,....}});
    if($i>30 && $i<=40){
	my $v1= 2* $val;
	my $v2= 2* ($val1 + $val2);
	my $v3= 3* ($val + 1 + $val1);
	my $v4= 2* ($val + $val1);
        print FH "csl_signal_group sg1{\n";
        print FH "  csl_signal s12(4);\n";
        print FH "  csl_signal s14($val2);\n";
        print FH "  csl_signal s15($v1);\n";
	foreach (my $j=30; $j<=$i; $j++){
	    print FH "  csl_signal s1_$j($j);\n";
	}
        print FH "    sg1(){\n";
        print FH "   }\n";
        print FH " };\n";
	
        print FH " csl_signal_group sg2{\n";
        print FH "   csl_signal s21($v4);\n";
        print FH "   csl_signal s22($v2);\n";
        print FH "   csl_signal s23($v3);\n";
	foreach (my $j=30; $j<=$i; $j++){
	    print FH "   sg1 sg1i_$j;\n";
	} 
        print FH "    sg2(){\n";
        print FH "   }\n";
        print FH " };\n";  
	
        print FH " csl_unit u1{\n";
        print FH "    csl_port p11(input,$val2);\n";
        print FH "    csl_port p12(input);\n";
	print FH "    csl_port p13(input,$val);\n";
        print FH "    csl_port p14(output);\n";
        print FH " sg2 sg2_i1;\n";
        foreach (my $j=30; $j<=$i; $j++){
	    print FH "    csl_port p1_$j(input);\n";
        }
        print FH " u1(){\n";
	foreach (my $j=30; $j<=$i; $j++){
	    print FH "    sg2_i1.sg1i_$j.s15\[".($v1-1)."\-\:".(2)."\] = {sg2_i1.sg1i_$j.s12\[2\],sg2_i1.sg1i_$j.s14\[".($val2-1)."\:".($val2-1)."\]};\n";
	}
	print FH "   }\n";
        print FH "};\n";
	
        print FH " csl_unit u2{\n";
        print FH "    csl_port p21(input,$val);\n";
        print FH "    csl_port p22(input,$val1);\n";
        print FH "    csl_port p23(input);\n";
        print FH "    csl_port p24(input,$val2);\n";
	print FH "//Test_Matrix: /test_matrices/ar_conn_by_name_matr.ods\n\n";
        print FH " sg2 sg2_i2;\n";
        print FH " u1 u1_i(.p11(p24));\n";
	
        print FH " u2(){\n";
	foreach (my $j=30; $j<=$i; $j++){
	    print FH "    sg2_i2.sg1i_$j.s12.connect_by_name({4 {u1_i.p12}});\n";
	    print FH "    sg2_i2.sg1i_$j.s14.connect_by_name({$val2 {u1_i.p14}});\n";
	    print FH "    sg2_i2.sg1i_$j.s15.connect_by_name({2 {u1_i.p13}});\n";
	}
	foreach (my $j=30; $j<=$i; $j++){
	    print FH  "    sg2_i2.sg1i_$j.s1_$j.connect_by_name({$j {u1_i.p1_$j}});\n";
	}
	print FH "    sg2_i1.s23 = {sg2_i1.s21,sg2_i1.s22\[".($v2-1)."\:".($v2-1)."\]};\n";
	print FH  "    u1_i.sg2_i1.s21.connect_by_name({2 {p21,p22}});\n";
	print FH  "    u1_i.sg2_i1.s22.connect_by_name({2 {p22,p24}});\n";
	print FH  "    u1_i.sg2_i1.s23.connect_by_name({3 {p21,p23,p22}});\n";
	
        print FH "  }\n";
        print FH "};\n";
    }
 
#******************************************
#sg.sig[part_select].connect(replicate_expr);

    if($i >40 && $i<=50){
	my $v1=3* ($val + $val);
	my $v2=2* ($val1 + $val1);
	my $v3=2* ($val2 + $val2 + $val2);
        print FH "csl_signal_group sg1{\n";
        print FH "  csl_signal s11($val);\n";
        print FH "  csl_signal s12(4);\n";
        print FH "  csl_signal s13($v1);\n";
        print FH "  csl_signal s14($v2);\n";
        print FH "  csl_signal s15($v3);\n";
     
        print FH "    sg1(){\n";
        print FH "   }\n";
        print FH " };\n";

        print FH " csl_unit u1{\n";
        print FH "    csl_port p11(input,$val2);\n";
        print FH "    csl_port p12(input);\n";
        print FH "    csl_port p13(input,$val);\n";
        print FH "    csl_port p14(output);\n";
        print FH "    csl_port p15(output,$val1);\n";
        print FH " sg1 sg1_i1;\n";
        
        print FH " u1(){}\n";
        print FH "};\n";
      
        print FH " csl_unit u2{\n";
        print FH "    csl_port p21(input,$val);\n";
        print FH "    csl_port p22(input,$val1);\n";
        print FH "    csl_port p23(input);\n";
        print FH "    csl_port p24(input,$val2);\n";
	
        print FH " sg1 sg1_i2;\n";
        print FH " u1 u1_i;\n";
	
        print FH " u2(){\n";
        print FH " sg1_i2.s13.connect_by_name({2 {u1_i.p13}});\n";
        print FH " sg1_i2.s14.connect_by_name({2 {u1_i.p15}});\n";
        print FH " sg1_i2.s15.connect_by_name({3 {u1_i.p11}});\n";
	
        print FH "  }\n";
        print FH "};\n";
	
	print FH " csl_unit u3{\n";
	print FH "    csl_port p31(input,$val);\n";
	print FH "    csl_port p32(input,$val1);\n";
	print FH "    csl_port p33(input);\n";
	print FH "    csl_port p34(input,$val2);\n";
	print FH " u2 u2_i;\n";
	print FH " sg1 sg1_i3;\n";
	
	my $o=0;
	my $ui1=$val-1;
	my $ui2=3;
	my $ui3=$v1-1;
	my $ui4=$v2-1;
	my $ui5=$v3-1;
	print FH " u3(){\n";
	
	print FH " u2_i.sg1_i2.s13[$ui3:$o].connect_by_name({2 {u2_i.u1_i.p13,u2_i.u1_i.p15,u2_i.u1_i.p11}});\n";
	print FH " u2_i.sg1_i2.s12[$ui2:$o].connect_by_name({4 {p33}});\n";
	print FH " u2_i.sg1_i2.s14[$ui4:$o].connect_by_name({2 {p32,p34}});\n";
	print FH " u2_i.sg1_i2.s14[$ui4:$o].connect_by_name({2 {u2_i.u1_i.p15,u2_i.u1_i.p11}});\n";
	
	print FH " u2_i.u1_i.sg1_i1.s13[$ui3:$o].connect_by_name({2 {u2_i.p21,u2_i.p22,u2_i.p24}});\n";
	print FH " u2_i.u1_i.sg1_i1.s12[$ui2:$o].connect_by_name({4 {p33}});\n";
	print FH " u2_i.u1_i.sg1_i1.s14[$ui4:$o].connect_by_name({2 {u2_i.p22,u2_i.p24}});\n";
	print FH " u2_i.u1_i.sg1_i1.s14[$ui4:$o].connect_by_name({2 {p32,p34}});\n";
	print FH "  }\n";
	print FH " };\n";
	
    }
    
#******************************************
#sg.sg1.sig[part_select].connect(replicate_expr);

    if($i >50 && $i<=60){
	my $v1=2* ($val1 + $val1);
	my $v2=3* ($val2 + $val2);
	my $v3=2* ($val + $val1 + $val2);
        print FH "csl_signal_group sg1{\n";
        print FH "  csl_signal s11($v3);\n";
        print FH "  csl_signal s12(4);\n";
        print FH "  csl_signal s13($v1);\n";
        print FH "  csl_signal s14($v1);\n";
        print FH "  csl_signal s15($v2);\n";
     
        print FH "    sg1(){\n";
        print FH "   }\n";
        print FH " };\n";

	print FH " csl_signal_group sg2{\n";
        print FH "   csl_signal s21($v1);\n";
        print FH "   csl_signal s22($v2);\n";
        print FH "   csl_signal s23($v3);\n";
	foreach (my $j=51; $j<=$i; $j++){
	    print FH "   sg1 sg1i_$j;\n";
	} 
        print FH "    sg2(){\n";
        print FH "   }\n";
        print FH " };\n"; 
 
        print FH " csl_unit u1{\n";
        
	foreach (my $j=51; $j<=$i; $j++){
	    print FH "    csl_port p11_$j(input,$val2);\n";
	    print FH "    csl_port p12_$j(input,$val2);\n";
	    print FH "    csl_port p13_$j(input,$val1);\n";
	    print FH "    csl_port p14_$j(output);\n";
	    print FH "    csl_port p15_$j(input,$val1);\n";
	}
        print FH " sg2 sg2_i1;\n";
        
        print FH " u1(){}\n";
        print FH "};\n";
      
        print FH " csl_unit u2{\n";
	foreach (my $j=51; $j<=$i; $j++){
	    print FH "    csl_port p21_$j(input,$val1);\n";
	    print FH "    csl_port p22_$j(input,$val1);\n";
	    print FH "    csl_port p23_$j(input);\n";
	    print FH "    csl_port p24_$j(input,$val2);\n";
	    print FH "    csl_port p25_$j(input,$val2);\n";
	}
        print FH " sg2 sg2_i2;\n";
        print FH " u1 u1_i;\n";
	
        print FH " u2(){\n";
	foreach (my $j=51; $j<=$i; $j++){
	    print FH "   sg2_i2.sg1i_$j.s15.connect_by_name({6 {u1_i.p11_$j}});\n";
	    print FH "   sg2_i2.sg1i_$j.s13.connect_by_name({4 {u1_i.p13_$j}});\n";
	    print FH "   sg2_i2.sg1i_$j.s14.connect_by_name({4 {u1_i.p15_$j}});\n";
	}
	print FH "  }\n";
        print FH "};\n";
	
	print FH " csl_unit u3{\n";
	foreach (my $j=51; $j<=$i; $j++){
	    print FH "    csl_port p31_$j(input,$val);\n";
	    print FH "    csl_port p32_$j(input,$val1);\n";
	    print FH "    csl_port p33_$j(input);\n";
	    print FH "    csl_port p34_$j(input,$val2);\n";
	    print FH "    csl_port p35_$j(input,$val2);\n";
	}
	print FH " u2 u2_i;\n";
	print FH " sg2 sg2_i3;\n";
	
	my $o=0;
	my $ui1=$val-1;
	my $ui2=3;
	my $ui3=$v1-1;
	my $ui4=$v2-1;
	my $ui5=$v3-1;
	print FH " u3(){\n";
	foreach (my $j=51; $j<=$i; $j++){
	    print FH "    sg2_i3.sg1i_$j.s13[$ui3:$o].connect_by_name({2 {u2_i.u1_i.p13_$j,u2_i.u1_i.p15_$j}});\n";
	    print FH "    sg2_i3.sg1i_$j.s13[$ui3:$o].connect_by_name({2 {u2_i.p21_$j,u2_i.p22_$j}});\n";
	    print FH "    sg2_i3.sg1i_$j.s15[$ui4:$o].connect_by_name({3 {u2_i.p24_$j,u2_i.p25_$j}});\n";
	    print FH "    sg2_i3.sg1i_$j.s15[$ui4:$o].connect_by_name({2 {u2_i.u1_i.p11_$j,u2_i.u1_i.p12_$j}});\n";

	    print FH "    u2_i.sg2_i2.sg1i_$j.s13[$ui3:$o].connect_by_name({2 {u2_i.u1_i.p13_$j,u2_i.u1_i.p15_$j\[".($val1-1)."\:".(1)."\],u2_i.u1_i.p11_$j\[".($val2-1)."\]}});\n";
	    print FH "    u2_i.sg2_i2.sg1i_$j.s12[$ui2:$o].connect_by_name({4 {p33_$j}});\n";
	    print FH "    u2_i.sg2_i2.sg1i_$j.s14[$ui4:$o].connect_by_name({2 {p34_$j,p35_$j}});\n";
	    print FH "    u2_i.sg2_i2.sg1i_$j.s14[$ui4:$o].connect_by_name({2 {u2_i.u1_i.p11_$j,u2_i.u1_i.p12_$j\[".($val2-1)."\-\:".($val2-2)."\],u2_i.u1_i.p13_$j\[".(0)."\],u2_i.u1_i.p15_$j\[".($val1-1)."\:".($val1-1)."\]}});\n";

	    print FH "    u2_i.u1_i.sg2_i1.sg1i_$j.s12[$ui2:$o].connect_by_name({2 {p33_$j,p33_$j}});\n";
	    print FH "    u2_i.u1_i.sg2_i1.sg1i_$j.s14[$ui4:$o].connect_by_name({2 {u2_i.p22_$j,u2_i.p22_$j}});\n";
	    print FH "    u2_i.u1_i.sg2_i1.sg1i_$j.s11.connect_by_name({2 {p31_$j,p32_$j,p34_$j}});\n";
	}
      	print FH "  }\n";
	print FH " };\n";
	
    }
    
    

    
    close (FH);
}
