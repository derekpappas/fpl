#!/usr/bin/perl

#Author Petronela
#modified by oanab
use strict;

if(! defined $ENV{WORK}){
    die "[ERROR] The environment variable WORK is not set. Set it to point to TOT/se";
}

my $totDir     = $ENV{WORK};
&testDirExists($totDir);

sub testDirExists {
    my($execName) = @_;
    unless(-e "$execName") { die "[ERROR] The directory $execName does not exist!\n"; }
    
}

sub mkDir {
    my($dirName) = @_;
    unless(-e "$dirName")  { `mkdir $dirName`; }
}

my @lower = (0,5,9,17,29);
my @upper = (43,54,63,78,92);

for (my $i = 1; $i <= 5; ++$i ) {
    foreach my $l(@lower) {
        foreach my $u(@upper) { 
            &main($i,$l,$u);
        }
    }
}

sub main {
    my ($i,$l, $u) = @_;
    my $test_name = "ar_conn_name_concat$i"."_".$l."_".$u."_legal.csl";
    &createCslFile($test_name,$i, $l, $u);
}

sub createCslFile {
    my($test_name, $i,$l, $u) = @_;
    my $path = "$ENV{WORK}/test/csl_test_gen/";
    my $w = $u - $l + 1;
    my $val1 = int(rand($w)) + 1;
    my $val2 = int(rand($w)) + 1;
    my $val3 = $w - $val1;
    my $val4 = $w - $val2;
    my $val5 = int(rand($w/3)) + 1;
    my $val6 = int(rand($w/3)) + 1;
    my $val7 = $w - $val5 - $val6;
    my $val8 = $u + int(rand(50)) + 1;
    my $val9 = $u + int(rand(50)) + 1;
    &mkDir("$path/ar_conn_name_concat_valid1");
    open(FH,">$path/ar_conn_name_concat_valid1/$test_name");
    print FH "//Generated by Petronela\n";
    print FH "//connections for port to concat exp.,signal to concat expr., port[part select] to concat expr., signal[part select] to concat expr.\n\n";
    print FH "csl_bitrange br($w);\n";
    print FH "csl_bitrange brt($val2);\n";
    print FH "csl_unit a {\n";
    if($i <= 2) {
#        print FH "  csl_port p_a$i(input,$val1);\n"; 
        print FH "  csl_port pa(input,$val2);\n";
        print FH "  csl_port p_a_br$i(input,brt);\n";
        print FH "  csl_port p(input,$val4);\n";
        print FH "  csl_signal sa($val2);\n";
        print FH "  csl_signal s_a$i($val4);\n";
    }
    elsif($i > 2 && $i <= 4) {
        print FH "  csl_port p_a$i(output,$val6);\n"; 
        print FH "  csl_port pa(input,$val5);\n";
        print FH "  csl_port p(output,$val7);\n";
        print FH "  csl_signal s_a$i($val4);\n";
        print FH "  csl_signal s_a_br$i(brt);\n";
        print FH "  csl_signal sa($val2);\n";
    }
    elsif($i > 4) {
        print FH "  csl_port p_a$i(input,$val1);\n"; 
#        print FH "  csl_port p_a_br$i(input,brt);\n";
#        print FH "  csl_port pa(input,$val2);\n";
        print FH "  csl_port p(input,$val1);\n";
#        print FH "  csl_signal s_a$i($val3);\n";
#        print FH "  csl_signal sa($val2);\n";
    }
    print FH "  a() {\n";   
    if($i <= 2) {
	print FH "    s_a$i = p;\n";
	print FH "    sa = pa;\n";
    }
    elsif($i > 2 && $i <= 4) {
	print FH "    s_a_br$i = sa;\n";
    }
    print FH "  }\n";        
    print FH "};\n";        
    print FH "\n";
    print FH "csl_unit b {\n";  
    if($i <= 2) {
        print FH "  csl_port p_b$i(input,$val1);\n";
        print FH "  csl_port p(input,$val3);\n";
        print FH "  csl_port pb(input,$val8);\n";
        print FH "  csl_signal s_b_br$i($val5);\n";
        print FH "  csl_signal s_b$i($val7);\n";
        print FH "  csl_signal sb($val6);\n";
    }
    elsif($i > 2 && $i <= 4) {      
        print FH "  csl_port p_b$i(output,$val8);\n";
        print FH "  csl_port pb(output,$val4);\n";
        print FH "  csl_port p_b_br$i(output,brt);\n";
        print FH "  csl_port p(output,$val2);\n";
#        print FH "  csl_signal s_b$i($w);\n";
        
    }
    elsif($i > 4) {      
        print FH "  csl_port p_b$i(output,$val8);\n";
        print FH "  csl_port p_b_br$i(input,brt);\n";
#        print FH "  csl_port p(input,$val4);\n";
        print FH "  csl_signal s_b$i($val4);\n";
#        print FH "  csl_signal s_b_br$i(br);\n";
        print FH "  csl_signal sb($val3);\n";
    }
    print FH "  b() {\n";
    if($i <= 2) {
	print FH "    s_b_br$i = {sb\[".($val6-1)."\:".(1)."\],s_b$i\[".($val7-1)."\]};\n";
    }
    elsif($i > 4) { 
	print FH "    sb = s_b$i;\n";
    }
    print FH "  }\n";        
    print FH "};\n";        
    print FH "\n";
    
    print FH "csl_unit c {\n";  
    if($i <= 2) {
        print FH "  csl_port p_c$i(input,$val5);\n";
        print FH "  csl_port pc(input,$val6);\n";
        print FH "  csl_port p_c_br$i(input,brt);\n";
        print FH "  csl_port p(input,$val7);\n";
#        print FH "  csl_signal s_c$i($val2);\n";
#        print FH "  csl_signal sc($val4);\n";
    }
    elsif($i > 2 && $i <= 4) {      
        print FH "  csl_port p_c$i(output,$val2);\n";
        print FH "  csl_port p(output,$val3);\n";
        print FH "  csl_port pc(input,$val1);\n";
        print FH "  csl_signal sc($val3);\n";
#        print FH "  csl_signal s_c_br$i(brt);\n";
        print FH "  csl_signal s_c$i($val2);\n";
    }
    elsif($i > 4) {      
        print FH "  csl_port pc(input,$val8);\n";
        print FH "  csl_port p(input,$val4);\n";
        print FH "  csl_port p_c_br$i(input,brt);\n";
#        print FH "  csl_signal s_c$i($val1);\n";
#        print FH "  csl_signal sc($val3);\n";
    }
    print FH "  c() {\n";
    if($i > 2 && $i <= 4) { 
	print FH "    sc\[".($val3-1)."\] = s_c$i\[".($val2-1)."\-\:".(1)."\];\n";
    }
    print FH "  }\n";        
    print FH "};\n";        
    print FH "\n";
    
    print FH "csl_unit d {\n";  
    if($i <= 2) {
	print FH "  a a0(.pa(p_d$i));\n";
	print FH "  b b0(.p_b$i(sd),.p(s_d_br$i\[".($w-1)."\:".($val1)."\]),.pb(p));\n";
	print FH "  c c0(.p_c_br$i(p_d_br$i));\n"; 
        print FH "  csl_port p_d$i(input,$val2);\n"; 
        print FH "  csl_port p_d_br$i(input,brt);\n";
        print FH "  csl_port p(input,$val8);\n";
        print FH "  csl_signal s_d_br$i($w);\n";
        print FH "  csl_signal s_d$i($val4);\n";
	print FH "  csl_signal sd($val1);\n";
    }
    elsif($i > 2 && $i <= 4) {   
	print FH "  a a0;\n";
	print FH "  b b0(.p(sd$i),.pb(sd));\n";
#	print FH "  b b0(.p(sd$i),.pb(sd),.p_b_br$i(sd$i));\n";
#	print FH "  c c0;\n"; 
        print FH "  csl_port p_d$i(output,$val1);\n";
        print FH "  csl_port p(output,$val3);\n";
        print FH "  csl_port pd(output,$w);\n";
        print FH "  csl_signal s_d$i($val9);\n";
	print FH "  csl_signal sd($val4);\n";
	print FH "  csl_signal sd$i($val2);\n";
    }
    elsif($i > 4) {  
	print FH "  a a0(.p_a$i(p_d$i));\n";
	print FH "  b b0(.p_b_br$i(p_d$i));\n";
	print FH "  c c0(.pc(sd$i));\n"; 
	print FH "  csl_port p_d$i(input,$val1);\n";
	print FH "  csl_port p(input,$val3);\n";
	print FH "  csl_signal s($w);\n";
	print FH "  csl_signal s_d$i($val7);\n";
	print FH "  csl_signal s_d_br$i($val6);\n";
	print FH "  csl_signal sd($val5);\n";
	print FH "  csl_signal sd$i($val8);\n";
    }
    print FH "  d() {\n";
    if($i <= 2) {
        print FH "    s_d$i.connect_by_name({a0.p});\n";
        print FH "    p_d_br$i.connect_by_name({a0.p_a_br$i});\n";
        print FH "    p[$u:$l].connect_by_name({c0.p_c$i,c0.pc,c0.p});\n";
    }
    elsif($i > 2 && $i <= 4) {
        print FH "    s_d$i"."[$u:$l].connect_by_name({a0.pa,a0.p_a$i,a0.p});\n";
        print FH "    b0.p_b".$i."[$u-:".($val3+$val1)."].connect_by_name({p,p_d$i});\n";
        print FH "    pd[$u:$l].connect_by_name({a0.s_a$i,a0.s_a_br$i});\n";
    }
    elsif($i > 4) {
        print FH "    s.connect_by_name({c0.p_c_br$i,c0.p});\n";
        print FH "    c0.pc[$u:$l].connect_by_name({s_d_br$i,s_d$i,sd});\n";
    }
    
    print FH "  }\n";        
    print FH "};\n";        
    print FH "\n";
    

    print FH "csl_unit e {\n";  
    if($i <= 2) {
	print FH "  csl_port p_e$i(input,$val9);\n"; 
#        print FH "  csl_port p_e_br$i(input,brt);\n";   
        print FH "  csl_port p(input,$val4);\n";
        print FH "  csl_signal s_e$i($val6);\n";
        print FH "  csl_signal se($val7);\n";
        print FH "  csl_signal s_e_br$i(br);\n";
        print FH "  csl_signal s($val5);\n";
	print FH "  b b1;\n";
    }
    elsif($i > 2 && $i <= 4) {
	print FH "  csl_port p_e$i(output,$val9);\n";    
        print FH "  csl_port p(output,$val4);\n";
        print FH "  csl_port p_e_br$i(output,brt);\n";
        print FH "  csl_signal s_e$i($val8);\n";
#	print FH "  csl_signal se($val7);\n";
        print FH "  csl_signal s_e_br$i($val1);\n";
#	print FH "  csl_signal s($val5);\n";
#	print FH "  csl_signal s$i($val6);\n";
	print FH "  csl_signal s_e($val3);\n";
#	print FH "  a a1(.pa(s),.p(se),.p_a$i(s$i));\n";
	print FH "  a a1;\n";
	print FH "  b b1(.pb(p),.p(p_e_br$i),.p_b_br$i(p_e_br$i));\n";
	print FH "  c c1(.p_c$i(p_e_br$i),.p(s_e),.pc(s_e_br$i));\n";
    }
    elsif($i > 4) {
	print FH "  csl_port p_e$i(input,$val1);\n";
        print FH "  csl_port p(input,$val8);\n";
#        print FH "  csl_port pe(input,$val3);\n";
        print FH "  csl_signal se($w);\n";
	print FH "  b b1(.p_b_br$i(p_e$i));\n";
    }
    print FH "  e() {\n";
    if($i <= 2) {
        print FH "    s_e_br$i.connect_by_name({b1.p_b$i,b1.p});\n";
        print FH "    p_e$i"."[$u:$l].connect_by_name({b1.s_b$i,b1.sb,b1.s_b_br$i});\n";
        print FH "    b1.pb[$u:$l].connect_by_name({s_e$i,se,s});\n";
    }
    elsif($i > 2 && $i <= 4) {
        print FH "    p_e$i"."[$u:$l].connect_by_name({a1.s_a$i,a1.sa});\n";
        print FH "    s_e$i.connect_by_name({b1.p_b$i});\n";
    }
    elsif($i > 4) {
        print FH "    p[$u:$l].connect_by_name({b1.p_b_br$i,b1.p});\n";
        print FH "    se.connect_by_name({b1.p,b1.p_b_br$i});\n";
    }
    print FH "  }\n";        
    print FH "};\n";        
    print FH "\n";
    
    print FH "csl_unit top {\n";
    if($i <= 2) {
	print FH "  d d0(.p_d$i(p),.p_d_br$i(s_top_br$i));\n";
	print FH "  e e0(.p_e$i(p_top$i));\n";
        print FH "  csl_port ptop(input,$val1);\n";
        print FH "  csl_port p(input,$val2);\n";
	print FH "  csl_port p_top$i(input,$val9);\n";
        print FH "  csl_signal s_top$i($w);\n";
        print FH "  csl_signal stop($w);\n";
	print FH "  csl_signal s_top_br$i(brt);\n";
    }
    elsif($i > 2 && $i <= 4) {
	print FH "  d d0(.p_d$i(ptop),.p(p_top$i));\n";
	print FH "  e e0(.p_e$i(p),.p(s),.p_e_br$i(ptop));\n";
        print FH "  csl_port p_top$i(output,$val3);\n";      
        print FH "  csl_port p(output,$val9);\n";
        print FH "  csl_port ptop(output,$val1);\n"; 
        print FH "  csl_signal stop($w);\n";
        print FH "  csl_signal s_top$i($w);\n";
	print FH "  csl_signal s($val4);\n";
    }
    elsif($i > 4) {
	print FH "  d d0(.p_d$i(s),.p(stop));\n";
	print FH "  e e0(.p_e$i(s),.p(s_top$i));\n";
        print FH "  csl_port p_top$i(input,$val5);\n";      
        print FH "  csl_port p(input,$val7);\n";
        print FH "  csl_port ptop(input,$val6);\n";
        print FH "  csl_signal s_top$i($val8);\n";
        print FH "  csl_signal s_top_br$i(br);\n";
        print FH "  csl_signal stop($val3);\n";
	print FH "  csl_signal s($val1);\n";
    }
    
    print FH "  top(){\n";
    if($i <= 2) {
        print FH "    stop.connect_by_name({d0.a0.p_a_br$i,d0.a0.p});\n";
        print FH "    s_top$i.connect_by_name({d0.c0.p_c$i,d0.c0.pc,d0.c0.p});\n";
        print FH "    d0.p"."[$u:$l].connect_by_name({d0.a0.s_a$i,d0.a0.sa});\n";
    }
    elsif($i > 2 && $i <= 4) {
        print FH "    s_top$i.connect_by_name({e0.a1.p_a$i,e0.a1.pa,e0.a1.p});\n";
        print FH "    stop.connect_by_name({d0.b0.p_b$i,d0.b0.p_b_br$i});\n";
        print FH "    p[$u:$l].connect_by_name({e0.c1.s_c$i,e0.c1.sc});\n";
    }
    elsif($i > 4) {
        print FH "    s_top_br$i.connect_by_name({e0.p_e$i,e0.pe});\n";
        print FH "    s_top_br$i.connect_by_name({d0.p_d$i,d0.p});\n";
        print FH "    d0.b0.p_b$i"."[$u:$l].connect_by_name({ptop,p_top$i,p});\n";
    }
    print FH "  }\n";        
    print FH "};\n";        
    print FH "\n";
   
    close(FH);

}
