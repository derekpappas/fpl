csl_enum eo {
	xt = 79,
	yl = 94,
	gk = 47,
	um = 84,
	wg = 95,
	qu = 8,
	sn = 10,
	ja = 57,
	fe = 69,
	ex = 88,
	tq = 7,
	uu = 68,
	yb = 0,
	ne = 4
};
csl_enum et {
	uc = 88,
	qu = 83,
	pw = 35,
	hm = 39,
	jg = 96,
	uc = 22
};
csl_enum bn {
	pm = 87,
	nw = 41,
	ss = 0,
	wm = 67,
	lu = 24,
	jl = 68,
	vx = 42,
	rc = 19,
	rn = 6,
	gi = 62,
	kv = 39,
	ht = 79,
	ks = 55,
	bf = 72,
	ue = 19,
	sk = 57,
	rg = 22,
	jm = 17,
	bh = 11
};
csl_isa md{
    md( ){
     set_decoder_name( "jy");
     set_decoder_out_name_prefix( "xx");
     set_decoder_out_name_suffix( "dh");
     generate_decoder( qe);
     print( isa.txt);
  }
}
;
csl_fifo pw{
   pw( ){
     add_logic( stall);
     add_logic( output_rd_addr);
  }
}
;
csl_memory_map_page yd{
    yd( ){
     set_data_word_width( 7);
  }
}
;
csl_memory_map_page na{
    na( ){
     add_address_range( 5, 1);
     set_address_increment( 7);
     set_next_address( 8);
     get_lower_bound( );
     set_endianess( big_endianlittle_endian);
     get_endianess( );
     set_symbol_max_lenght( );
     get_symbol_lenght( );
  }
}
;
csl_memory_map br{
  na fv;
  yd mc;
  yd qy;
    br( ){
     auto_gen_memory_map( );
     set_top_unit( gffc);
     set_type( page);
     set_suffix( kw);
     get_suffix( );
  }
}
;
csl_register av{
    av( ){
     set_range( {[2:8], [7:7]});
     index_data_pair( br, 5);
     constant( 6);
     add_logic( serial_input);
     add_logic( rd_en);
     add_logic( wr_en);
     reset_value( 1);
     set_start_value( 49);
     stop_at_end_value( );
  }
}
;
csl_register jl{
    jl( ){
     set_width( 5);
     get_width( );
     set_depth( 1);
     add_logic( read_valid);
     set_const_value( 9);
  }
}
;
