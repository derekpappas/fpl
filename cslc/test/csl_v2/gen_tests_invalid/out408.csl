csl_enum yc {
	ou,
	io,
	gp,
	kc,
	pe,
	me,
	ey,
	lu
};
csl_enum hl {
	dd = 12,
	cc = 69,
	fd = 99,
	ru = 17
};
csl_enum dp {
	xe,
	ro,
	ya,
	fh,
	sp,
	ki,
	ww,
	od,
	xa,
	yf
};
csl_isa_instruction_format bs{
    bs( ){
     set_width( 7);
     generate_decoder( yj);
  }
}
;
csl_isa cc{
    cc( ){
     set_decoder_name( "vy");
     set_decoder_out_name_prefix( "iv");
     set_decoder_out_name_suffix( "ol");
     generate_decoder( plyjcx);
     print( isa.txt);
  }
}
;
csl_fifo tb{
   tb( ){
     set_dimension( 3, 6);
     add_logic( parallel_input, all);
  }
}
;
csl_memory_map_page xe{
    xe( ){
     add_address_range( 4, 5);
     set_next_address( 8);
     get_next_address( );
     add_reserved_address_range( 5, 6);
     get_lower_bound( );
     get_upper_bound( );
     set_data_word_width( 7);
     set_aligment( 8);
     get_aligment( );
     set_symbol_max_lenght( );
  }
}
;
csl_memory_map_page ro{
  xe uy;
    ro( ){
     set_address_increment( 7);
     get_address_increment( );
     get_next_address( );
     set_aligment( 6);
     set_endianess( little_endian);
     get_endianess( );
     get_symbol_lenght( );
  }
}
;
csl_memory_map_page si{
  xe xd;
  ro oo;
  xe po;
  xe sf;
  ro tx;
    si( ){
     add_address_range( 6, 5);
     get_upper_bound( );
     set_aligment( 4);
  }
}
;
csl_memory_map du{
    du( ){
     auto_gen_memory_map( );
si.si.set_access_rights_enum( xero); 
     set_data_word_width( 3);
     get_data_word_width( );
     set_prefix( hq);
     set_suffix( rw);
  }
}
;
csl_register cj{
    cj( ){
     set_type( SEMA);
     reset_value( 1);
     add_logic( gray_output);
  }
}
;
csl_register ga{
    ga( ){
     add_logic( read_valid);
     set_const_value( 5);
  }
}
;
