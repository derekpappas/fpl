csl_enum qf {
	li,
	ff,
	ck,
	gp,
	vo,
	ec,
	vg,
	xi,
	wf,
	bd,
	ax,
	en,
	bt,
	vy
};
csl_enum fp {
	et,
	xj,
	ya,
	wf,
	su,
	wy,
	ws,
	fx,
	ec
};
csl_enum df {
	if = 4,
	gm = 39,
	vh = 93,
	ir = 39,
	io = 29,
	hm = 10
};
csl_isa_instruction_format fq{
    fq( ){
     set_width( 2);
     generate_decoder( ib);
  }
}
;
csl_isa_instruction ms : fq{
    ms( ){
    set_asm_mnemonic( br);
  }
}
;
csl_isa ep{
  ms ba;
  ms cv;
  ms pu;
  ms tt;
  ms oq;
  ms dt;
  ms ef;
  ms pg;
    ep( ){
     set_decoder_name( "gi");
     set_decoder_out_name_prefix( "qy");
     set_decoder_out_name_suffix( "ae");
     generate_decoder( udyl);
  }
}
;
csl_memory_map_page yi{
    yi( ){
     get_address_increment( );
     set_next_address( 0);
     get_next_address( );
     set_access_rights( none, none);
     get_upper_bound( );
     set_data_word_width( 8);
     set_aligment( 7);
     get_aligment( );
     set_endianess( little_endianbig_endian);
     get_endianess( );
     set_symbol_max_lenght( );
  }
}
;
csl_memory_map_page aq{
    aq( ){
     set_next_address( 8);
     set_data_word_width( 5);
  }
}
;
csl_memory_map_page lw{
  yi qu;
  yi lu;
  aq jw;
    lw( ){
     add_address_range( 2, 6);
     set_address_increment( 8);
     set_next_address( 9);
     get_next_address( );
     add( aq);
     get_upper_bound( );
     set_data_word_width( 9);
     get_endianess( );
     get_symbol_lenght( );
  }
}
;
csl_memory_map np{
    np( ){
     set_top_unit( udyl);
     set_type( hierach);
lw.set_access_rights_enum( yilw); 
     set_data_word_width( 6);
     get_data_word_width( );
     set_prefix( rd);
  }
}
;
csl_register xr{
    xr( ){
     set_width( 3);
     add_logic( serial_output);
     set_lock_enable_bit( 9);
     set_start_value( 9);
  }
}
;
csl_register wq{
    wq( ){
     set_depth( 5);
     add_logic( bypass);
  }
}
;
