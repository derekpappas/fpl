csl_enum tx {
	lq,
	tn,
	xe,
	nd,
	mp,
	dr,
	nm,
	uj
};
csl_enum wf {
	vt
};
csl_enum em {
	pe,
	mo,
	xt,
	tr,
	uf,
	io,
	uj,
	ui,
	oj,
	au,
	bp
};
csl_isa nx{
    nx( ){
     set_decoder_name( "gr");
     set_decoder_out_name_suffix( "jd");
     generate_decoder( coshxi);
  }
}
;
csl_fifo gv{
   gv( ){
     add_logic( rd_words, 2);
     add_logic( string_through, 7);
     add_logic( output_wr_addr);
  }
}
;
csl_memory_map_page ee{
    ee( ){
     add_address_range( 0, 5);
     get_address_increment( );
     get_next_address( );
     set_access_rights( access_write, none);
     add_reserved_address_range( 4, 5);
     get_lower_bound( );
     get_upper_bound( );
     set_data_word_width( 9);
     get_data_word_wodth( );
     set_aligment( 1);
     get_endianess( );
     set_symbol_max_lenght( );
  }
}
;
csl_memory_map_page xt{
    xt( ){
     set_address_increment( 0);
     get_next_address( );
     add_reserved_address_range( 3, 1);
     add( ee);
     get_lower_bound( );
     set_data_word_width( 9);
     get_data_word_wodth( );
     set_aligment( 5);
     set_endianess( big_endian);
     get_endianess( );
  }
}
;
csl_memory_map_page ob{
  ee eh;
  xt tt;
  ee pu;
  xt um;
    ob( ){
     set_address_increment( 4);
  }
}
;
csl_memory_map ud{
  ob sn;
  ob uc;
  ee ut;
  xt xv;
  ob fs;
    ud( ){
     auto_gen_memory_map( );
     set_top_unit( mtxi);
     set_type( hierach);
     set_data_word_width( 4);
     get_data_word_width( );
     set_prefix( sa);
     set_suffix( ul);
  }
}
;
csl_register jq{
    jq( ){
     set_count_amount( 2);
     set_start_value( 23);
     stop_at_end_value( );
     add_logic( cnt_dir_signal);
  }
}
;
csl_register hc{
    hc( ){
     create_rtl_module( );
     set_const_value( 3);
     add_logic( bypass);
  }
}
;
