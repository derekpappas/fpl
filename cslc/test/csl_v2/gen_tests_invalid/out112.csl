csl_enum ls {
	en,
	bg,
	ot
};
csl_enum ty {
	gx = 79,
	er = 70,
	ad = 77,
	bg = 78,
	ip = 95,
	ya = 71,
	id = 67,
	so = 47,
	tf = 24,
	dp = 63,
	kr = 29,
	lo = 74,
	fm = 58
};
csl_enum wv {
	ir,
	vo,
	pa,
	ir,
	fk,
	xo,
	cx
};
csl_isa_instruction_format dm{
    dm( ){
     set_width( 3);
     generate_decoder( yr);
  }
}
;
csl_isa gm{
    gm( ){
     set_decoder_name( "fa");
     set_decoder_out_name_prefix( "wc");
     set_decoder_out_name_suffix( "xm");
     generate_decoder( mdktyr);
     print( isa.txt);
  }
}
;
csl_fifo xs{
   xs( ){
     add_logic( programable_depth, 7);
  }
}
;
csl_memory_map_page tl{
    tl( ){
     get_address_increment( );
     set_next_address( 1);
     get_upper_bound( );
     set_data_word_width( 9);
     get_data_word_wodth( );
     set_endianess( big_endian);
     get_endianess( );
  }
}
;
csl_memory_map_page af{
  tl wn;
  tl kq;
    af( ){
     add_address_range( 2, 8);
     get_address_increment( );
     set_next_address( 1);
     get_next_address( );
     add_reserved_address_range( 0, 2);
     add( xs, "ng");
     get_lower_bound( );
     get_data_word_wodth( );
     set_aligment( 8);
     set_endianess( little_endianlittle_endian);
     set_symbol_max_lenght( );
     get_symbol_lenght( );
  }
}
;
csl_memory_map_page og{
    og( ){
     set_address_increment( 0);
     get_address_increment( );
     set_next_address( 6);
     get_next_address( );
     set_access_rights( access_write, access_read_write);
     add_reserved_address_range( 7, 0);
     get_lower_bound( );
     set_data_word_width( 2);
     set_aligment( 8);
     get_aligment( );
     set_endianess( little_endian);
  }
}
;
csl_memory_map ik{
    ik( ){
     set_type( flat);
tl.set_access_rights_enum( afog); 
     set_data_word_width( 3);
     get_data_word_width( );
     set_suffix( uc);
  }
}
;
csl_register tp{
    tp( ){
     index_data_pair( ik, 9);
     constant( 9);
     init_value( 1);
     set_value( 4);
     set_lock_enable_bit( 3);
     set_count_amount( 7);
     add_logic( cnt_dir_signal);
     add_logic( dec_signal);
  }
}
;
csl_register ap{
    ap( ){
     set_depth( 9);
     get_depth( );
     add_logic( read_valid);
     set_const_value( 0);
     add_logic( bypass);
  }
}
;
