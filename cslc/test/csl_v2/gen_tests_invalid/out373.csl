csl_enum ud {
	wl
};
csl_enum tp {
	kv,
	xp,
	bd,
	qv,
	ej
};
csl_enum bt {
	aw,
	te,
	cd,
	tf,
	td,
	sk
};
csl_isa_instruction_format co{
    co( ){
     set_width( 8);
     generate_decoder( tlcpwg);
  }
}
;
csl_isa ai{
    ai( ){
     set_decoder_name( "dl");
     set_decoder_out_name_suffix( "ec");
     generate_decoder( pc);
  }
}
;
csl_fifo uu{
   uu( ){
     add_logic( string_through, 1);
  }
}
;
csl_memory_map_page ib{
    ib( ){
     set_address_increment( 1);
     get_address_increment( );
     get_next_address( );
     set_access_rights( access_write, none);
     add_reserved_address_range( 9, 3);
     get_lower_bound( );
     get_upper_bound( );
     set_data_word_width( 6);
     set_aligment( 6);
     get_aligment( );
     set_endianess( little_endianlittle_endian);
     get_endianess( );
     set_symbol_max_lenght( );
     get_symbol_lenght( );
  }
}
;
csl_memory_map_page vb{
    vb( ){
     set_address_increment( 5);
     get_address_increment( );
     get_next_address( );
     set_access_rights( access_read, access_read);
     add( ib);
     get_lower_bound( );
     get_upper_bound( );
     set_data_word_width( 2);
     get_data_word_wodth( );
     set_aligment( 3);
     get_aligment( );
     get_endianess( );
     set_symbol_max_lenght( );
     get_symbol_lenght( );
  }
}
;
csl_memory_map_page wd{
    wd( ){
     add_address_range( 2, 1);
     set_access_rights( access_read, access_read);
     add( vb);
     set_aligment( 0);
     get_aligment( );
     set_endianess( little_endian);
     get_symbol_lenght( );
  }
}
;
csl_memory_map hc{
    hc( ){
     set_type( page);
  }
}
;
csl_register bu{
    bu( ){
  }
}
;
csl_register dn{
    dn( ){
     create_rtl_module( );
     add_logic( bypass);
  }
}
;
