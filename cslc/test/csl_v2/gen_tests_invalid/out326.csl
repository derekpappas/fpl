csl_enum lt {
	ln = 15,
	mt = 89,
	hn = 10,
	uu = 87
};
csl_enum nb {
	es = 52,
	ls = 70,
	qd = 21
};
csl_isa_instruction_format tr{
    tr( ){
     generate_decoder( esum);
  }
}
;
csl_isa xj{
    xj( ){
     set_decoder_name( "wu");
     set_decoder_out_name_prefix( "fa");
     set_decoder_out_name_suffix( "mu");
     generate_decoder( ummg);
     print( isa.txt);
  }
}
;
csl_fifo ax{
   ax( ){
     add_logic( async_fifo);
     add_logic( wr_hold, 0);
     add_logic( stall_wr_side);
     add_logic( rd_credit);
  }
}
;
csl_memory_map_page de{
    de( ){
     set_next_address( 5);
     set_endianess( little_endian);
  }
}
;
csl_memory_map_page cm{
  de br;
  de ka;
    cm( ){
     add_address_range( 0, 2);
     set_address_increment( 8);
     get_address_increment( );
     set_next_address( 8);
     set_access_rights( access_read, access_read);
     add_reserved_address_range( 8, 2);
     get_upper_bound( );
     set_endianess( little_endianlittle_endian);
     get_endianess( );
     set_symbol_max_lenght( );
  }
}
;
csl_memory_map_page my{
    my( ){
     add_address_range( 4, 9);
     set_address_increment( 6);
     get_next_address( );
     get_lower_bound( );
     get_data_word_wodth( );
     get_endianess( );
     get_symbol_lenght( );
  }
}
;
csl_memory_map ie{
  de jk;
  de od;
  my as;
  cm py;
    ie( ){
     auto_gen_memory_map( );
decmmy.     set_type( hierach);
decmmy.set_access_rights_enum( cmmy); 
     set_prefix( ws);
     get_prefix( );
     set_suffix( vs);
  }
}
;
csl_register ud{
    ud( ){
     set_atribute( shadow);
     add_logic( neg_output);
     add_logic( rd_en);
     set_value( 1);
     reset_value( 9);
     set_start_value( 9);
  }
}
;
csl_register id{
    id( ){
     set_width( 9);
     add_logic( read_valid);
     create_rtl_module( );
  }
}
;
