csl_enum tq {
	ma = 86,
	ko = 85,
	an = 20,
	pj = 52,
	bb = 28,
	xv = 51,
	xk = 24,
	hr = 28,
	vx = 21
};
csl_enum kv {
	hm,
	de,
	jg,
	fi,
	ab,
	ao,
	em
};
csl_isa_instruction_format pp{
    pp( ){
     set_width( 4);
     generate_decoder( lk);
  }
}
;
csl_isa pw{
    pw( ){
     set_decoder_name( "fd");
     set_decoder_out_name_prefix( "qb");
     set_decoder_out_name_suffix( "je");
     print( isa.txt);
  }
}
;
csl_fifo fs{
   fs( ){
     add_logic( programable_depth, 6);
     add_logic( credit);
  }
}
;
csl_memory_map_page dp{
    dp( ){
     set_next_address( 8);
     add_reserved_address_range( 4, 1);
     set_data_word_width( 7);
     get_data_word_wodth( );
     get_aligment( );
     get_endianess( );
     set_symbol_max_lenght( );
     get_symbol_lenght( );
  }
}
;
csl_memory_map_page fn{
    fn( ){
     add_address_range( 6, 3);
     set_address_increment( 6);
     get_address_increment( );
     set_access_rights( none, access_read);
     get_aligment( );
     get_symbol_lenght( );
  }
}
;
csl_memory_map_page mf{
  dp uy;
  fn mg;
  dp rd;
  fn id;
    mf( ){
     add_address_range( 3, 2);
     get_address_increment( );
     get_next_address( );
     get_aligment( );
     set_endianess( big_endian);
     get_endianess( );
  }
}
;
csl_memory_map ey{
  dp se;
  fn qf;
  mf fw;
  dp dv;
  fn dh;
  mf tm;
    ey( ){
     auto_gen_memory_map( );
     set_top_unit( ex);
     set_data_word_width( 0);
     set_suffix( vm);
     get_suffix( );
  }
}
;
csl_register yh{
    yh( ){
     set_type( INT);
     add_logic( rd_en);
     add_logic( wr_en);
     set_value( 5);
     stop_at_end_value( );
  }
}
;
csl_register ib{
    ib( ){
     set_width( 3);
     get_width( );
     set_depth( 8);
     add_logic( read_valid);
     create_rtl_module( );
     set_const_value( 3);
     add_logic( bypass);
  }
}
;
