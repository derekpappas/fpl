csl_enum qn {
	og = 24,
	vy = 12,
	tk = 45
};
csl_enum ns {
	sb,
	qa,
	py,
	tv,
	wu,
	yb,
	ii,
	ck,
	gk,
	ws,
	oq,
	gd
};
csl_enum yf {
	cu,
	ps,
	qk,
	vj,
	mn,
	ig,
	kh,
	bl,
	ij,
	tn,
	uc,
	at,
	up,
	kd,
	um,
	ia,
	hy,
	ux,
	ls,
	iy
};
csl_isa_instruction_format lp{
    lp( ){
     set_width( 7);
     generate_decoder( rdtwch);
  }
}
;
csl_isa ax{
    ax( ){
     set_decoder_name( "kl");
     set_decoder_out_name_suffix( "os");
     generate_decoder( rdtw);
  }
}
;
csl_fifo fb{
   fb( ){
     add_logic( pushback);
     add_logic( stall_wr_side);
  }
}
;
csl_memory_map_page tq{
    tq( ){
     add_address_range( 2, 4);
     set_access_rights( access_read, none);
     add_reserved_address_range( 9, 2);
     set_symbol_max_lenght( );
  }
}
;
csl_memory_map_page me{
  tq oh;
  tq cb;
  tq wk;
    me( ){
     get_address_increment( );
     get_next_address( );
     add( fb, "ou");
     get_upper_bound( );
     set_data_word_width( 4);
     set_aligment( 6);
     get_symbol_lenght( );
  }
}
;
csl_memory_map_page xv{
    xv( ){
     get_next_address( );
     add( fb, "ft");
     get_lower_bound( );
     set_data_word_width( 2);
     get_data_word_wodth( );
     get_endianess( );
     set_symbol_max_lenght( );
     get_symbol_lenght( );
  }
}
;
csl_memory_map yg{
    yg( ){
     auto_gen_memory_map( );
     set_type( page);
     set_data_word_width( 8);
     get_data_word_width( );
     set_suffix( ww);
  }
}
;
csl_register xf{
    xf( ){
     set_range( [9:3]);
     add_logic( neg_output);
     add_logic( wr_en);
     set_end_value( 7);
     stop_at_end_value( );
     add_logic( inc_signal);
     add_logic( dec_signal);
  }
}
;
csl_register kp{
    kp( ){
     set_width( 0);
     get_width( );
     set_depth( 1);
     create_rtl_module( );
     set_const_value( 2);
  }
}
;
