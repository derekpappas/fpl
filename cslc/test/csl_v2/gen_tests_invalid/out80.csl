csl_enum cg {
	td,
	pw,
	an,
	hh,
	ba,
	yd
};
csl_enum jc {
	st,
	wq,
	tk,
	uh,
	jc,
	ir,
	kv,
	vo,
	fq,
	tw,
	nt,
	nw,
	bo,
	xa,
	th
};
csl_isa_instruction_format me{
    me( ){
     set_width( 2);
  }
}
;
csl_isa nb{
    nb( ){
     generate_decoder( foqgrvgw);
     print( isa.txt);
  }
}
;
csl_fifo mf{
   mf( ){
     add_logic( flow);
  }
}
;
csl_memory_map_page xf{
    xf( ){
     set_next_address( 4);
     get_next_address( );
     set_access_rights( access_read_write, access_read);
     add_reserved_address_range( 9, 5);
     add( mf, "lr");
     set_data_word_width( 6);
     set_aligment( 4);
     get_endianess( );
     get_symbol_lenght( );
  }
}
;
csl_memory_map_page nk{
    nk( ){
     set_address_increment( 3);
     get_address_increment( );
     set_next_address( 0);
     get_upper_bound( );
     set_data_word_width( 4);
     get_data_word_wodth( );
     set_endianess( little_endian);
     get_endianess( );
  }
}
;
csl_memory_map_page ac{
    ac( ){
     set_next_address( 8);
     add( xfnk);
     get_lower_bound( );
     get_aligment( );
     set_endianess( big_endian);
     get_endianess( );
     get_symbol_lenght( );
  }
}
;
csl_memory_map kx{
    kx( ){
     auto_gen_memory_map( );
     set_top_unit( foqgrvgw);
     set_type( flat);
     set_data_word_width( 8);
     set_prefix( ji);
  }
}
;
csl_register fm{
    fm( ){
     constant( 2);
  }
}
;
csl_register hy{
    hy( ){
     set_width( 8);
     set_depth( 4);
     get_depth( );
     add_logic( read_valid);
     create_rtl_module( );
     set_const_value( 4);
     add_logic( bypass);
  }
}
;
