csl_enum sa {
	br,
	kw,
	ox,
	xq,
	he,
	rm,
	rx,
	pv,
	qq,
	xy
};
csl_enum tv {
	tr,
	po,
	hg,
	rc,
	gs,
	ws,
	pn,
	tq,
	fb
};
csl_enum uw {
	oo,
	xg,
	lq,
	wl,
	ps,
	il,
	la,
	au,
	it,
	ar,
	nw,
	mf
};
csl_isa_instruction_format so{
    so( ){
     set_width( 6);
     generate_decoder( uo);
  }
}
;
csl_isa_instruction pw : so{
    pw( ){
    set_asm_mnemonic( csl_list "iw", "ux", "ou");
  }
}
;
csl_isa hf{
    hf( ){
     set_decoder_name( "th");
     set_decoder_out_name_prefix( "nh");
     set_decoder_out_name_suffix( "sq");
     generate_decoder( nvtw);
     print( isa.txt);
  }
}
;
csl_fifo id{
   id( ){
  }
}
;
csl_memory_map_page be{
    be( ){
     get_data_word_wodth( );
     get_endianess( );
  }
}
;
csl_memory_map_page nd{
    nd( ){
     get_address_increment( );
     set_next_address( 6);
     get_next_address( );
     add( id, "nc", 3);
     get_lower_bound( );
     get_upper_bound( );
     get_aligment( );
     set_endianess( little_endianlittle_endian);
     set_symbol_max_lenght( );
     get_symbol_lenght( );
  }
}
;
csl_memory_map_page bp{
  be gf;
  nd au;
    bp( ){
     add_address_range( 7, 7);
     set_next_address( 3);
     get_next_address( );
     set_access_rights( access_read_write, access_read_write);
     add( bend);
     get_lower_bound( );
     get_upper_bound( );
     set_data_word_width( 8);
     set_aligment( 5);
     get_aligment( );
     set_endianess( big_endianlittle_endian);
     get_endianess( );
     set_symbol_max_lenght( );
  }
}
;
csl_memory_map dh{
    dh( ){
     set_type( page);
bendbp.set_access_rights_enum( be); 
     set_data_word_width( 0);
     get_data_word_width( );
     set_suffix( eb);
  }
}
;
csl_register hk{
    hk( ){
     set_range( [3:4]);
     set_width( 6);
     add_logic( neg_output);
     reset_value( 6);
     set_count_amount( 9);
     set_count_direction( 3);
     set_end_value( 8);
     stop_at_end_value( );
     add_logic( inc_signal);
  }
}
;
csl_register cc{
    cc( ){
     set_width( 3);
     get_width( );
     set_depth( 0);
     add_logic( bypass);
  }
}
;
