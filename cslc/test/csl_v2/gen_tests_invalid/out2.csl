csl_enum mi {
	aw = 0,
	nf = 58,
	fh = 59,
	xq = 66,
	hs = 8
};
csl_enum mj {
	vc,
	of,
	dc,
	pn,
	xn,
	li,
	df,
	yk,
	hm,
	ui,
	ji,
	pq,
	rn,
	kb,
	iy
};
csl_enum mg {
	bc,
	mg,
	ge,
	te,
	rh,
	ou
};
csl_isa_instruction_format mk{
    mk( ){
     set_width( 2);
  }
}
;
csl_isa dx{
    dx( ){
     set_decoder_name( "dk");
     generate_decoder( qsat);
  }
}
;
csl_fifo gv{
   gv( ){
     add_logic( wr_words, 6);
     add_logic( stall_rd_side);
  }
}
;
csl_memory_map_page js{
    js( ){
     set_address_increment( 9);
     get_address_increment( );
     set_next_address( 2);
     set_access_rights( none, access_read);
     get_lower_bound( );
     get_upper_bound( );
     set_data_word_width( 8);
     get_data_word_wodth( );
     set_aligment( 4);
     get_aligment( );
     set_endianess( big_endian);
     get_symbol_lenght( );
  }
}
;
csl_memory_map_page dg{
  js qi;
  js xs;
  js uv;
    dg( ){
     set_next_address( 2);
     get_lower_bound( );
     get_upper_bound( );
     set_data_word_width( 9);
     get_data_word_wodth( );
     set_symbol_max_lenght( );
     get_symbol_lenght( );
  }
}
;
csl_memory_map_page pa{
  js og;
  dg kc;
  dg bm;
    pa( ){
     add_address_range( 7, 6);
     set_address_increment( 2);
     set_next_address( 8);
     set_access_rights( access_write, access_read);
     add_reserved_address_range( 0, 3);
     get_upper_bound( );
     set_data_word_width( 1);
     set_aligment( 9);
     set_endianess( little_endianbig_endian);
     set_symbol_max_lenght( );
  }
}
;
csl_memory_map ap{
    ap( ){
     auto_gen_memory_map( );
     set_top_unit( qsat);
     set_data_word_width( 3);
     get_data_word_width( );
     set_suffix( ey);
     get_suffix( );
  }
}
;
csl_register fq{
    fq( ){
     set_type( LFSR);
     index_data_pair( ap, 3);
     set_atribute( read_write);
     add_logic( serial_output);
     add_logic( rd_en);
     add_logic( wr_en);
     reset_value( 7);
     add_logic( gray_output);
     stop_at_end_value( );
     add_logic( cnt_dir_signal);
  }
}
;
csl_register mp{
    mp( ){
     set_width( 0);
     get_width( );
     add_logic( read_valid);
     create_rtl_module( );
     set_const_value( 5);
     add_logic( bypass);
  }
}
;
