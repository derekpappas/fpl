csl_enum ak {
	fx,
	dr,
	te,
	vc,
	co,
	fu
};
csl_enum qh {
	kc,
	vc,
	md,
	nn,
	lp,
	ap,
	hq
};
csl_enum th {
	bc = 49,
	hg = 27,
	tc = 50,
	kr = 35,
	ep = 8,
	hl = 95,
	ka = 45,
	sv = 49,
	ep = 28,
	xr = 18,
	sn = 8,
	hh = 37,
	eh = 10,
	wl = 64
};
csl_isa_instruction_format kj{
    kj( ){
     set_width( 6);
     generate_decoder( yt);
  }
}
;
csl_isa tf{
    tf( ){
     set_decoder_name( "fb");
     set_decoder_out_name_prefix( "oh");
     set_decoder_out_name_suffix( "cx");
     generate_decoder( lfnhdk);
     print( isa.txt);
  }
}
;
csl_fifo fe{
   fe( ){
  }
}
;
csl_memory_map_page fc{
    fc( ){
     set_next_address( 6);
     add_reserved_address_range( 7, 5);
     get_lower_bound( );
     get_data_word_wodth( );
     set_aligment( 1);
     get_aligment( );
     get_endianess( );
  }
}
;
csl_memory_map_page qk{
  fc fq;
    qk( ){
     set_data_word_width( 0);
  }
}
;
csl_memory_map_page yg{
  fc vd;
  fc an;
  qk pi;
    yg( ){
     add_address_range( 4, 4);
     set_address_increment( 4);
     set_next_address( 7);
     get_next_address( );
     set_access_rights( none, none);
     add_reserved_address_range( 2, 1);
     add( fc);
     get_upper_bound( );
     get_data_word_wodth( );
     get_endianess( );
     set_symbol_max_lenght( );
     get_symbol_lenght( );
  }
}
;
csl_memory_map il{
    il( ){
     set_type( hierach);
fcqkyg.set_access_rights_enum( qk); 
     set_suffix( yr);
     get_suffix( );
  }
}
;
csl_register xq{
    xq( ){
     add_logic( inc_signal);
  }
}
;
csl_register pl{
    pl( ){
     add_logic( read_valid);
     add_logic( bypass);
  }
}
;
