csl_enum yt {
	si,
	hx,
	fm,
	to,
	yk,
	lm,
	hm,
	vy,
	gw
};
csl_enum tq {
	mm,
	ci,
	wm,
	qj,
	pq,
	di,
	bk,
	ig,
	yc
};
csl_enum ux {
	oi = 44,
	mx = 78,
	wj = 17,
	xd = 41,
	it = 44,
	tu = 44,
	hy = 41,
	eg = 97,
	lu = 2
};
csl_isa_instruction_format sh{
    sh( ){
     set_width( 2);
     generate_decoder( iues);
  }
}
;
csl_isa_instruction ca : sh{
    ca( ){
    set_asm_mnemonic( );
  }
}
;
csl_isa_instruction ot : sh{
    ot( ){
    set_asm_mnemonic( rd);
  }
}
;
csl_isa ah{
    ah( ){
     set_decoder_name( "kq");
     set_decoder_out_name_prefix( "wx");
     set_decoder_out_name_suffix( "vh");
     generate_decoder( iuesqa);
     print( isa.txt);
  }
}
;
csl_fifo id{
   id( ){
  }
}
;
csl_memory_map_page hc{
    hc( ){
     get_next_address( );
     add_reserved_address_range( 2, 5);
     set_data_word_width( 7);
     get_data_word_wodth( );
     set_aligment( 8);
     get_endianess( );
     set_symbol_max_lenght( );
  }
}
;
csl_memory_map_page si{
    si( ){
     get_next_address( );
     set_access_rights( access_write, access_write);
     add( id, "fn", );
     get_data_word_wodth( );
     get_aligment( );
     set_symbol_max_lenght( );
  }
}
;
csl_memory_map_page ma{
  hc ih;
  si ls;
  hc dg;
  si yh;
  hc dt;
    ma( ){
     set_address_increment( 3);
     get_address_increment( );
     set_access_rights( access_read_write, access_read);
     get_lower_bound( );
     set_data_word_width( 5);
     get_data_word_wodth( );
     get_endianess( );
     set_symbol_max_lenght( );
  }
}
;
csl_memory_map ab{
    ab( ){
     auto_gen_memory_map( );
     set_top_unit( iuates);
     set_type( page);
     set_suffix( vy);
     get_suffix( );
  }
}
;
csl_register ea{
    ea( ){
     set_range( [5:5]);
     set_address( ab, );
     constant( 6);
     get_atributes( );
     add_logic( neg_output);
     add_logic( wr_en);
     set_value( 9);
     set_lock_enable_bit( 5);
     set_count_amount( 1);
     stop_at_end_value( );
     add_logic( dec_signal);
  }
}
;
csl_register yw{
    yw( ){
     set_width( 1);
     get_width( );
     set_depth( 3);
     add_logic( read_valid);
     create_rtl_module( );
     set_const_value( 0);
     add_logic( bypass);
  }
}
;
