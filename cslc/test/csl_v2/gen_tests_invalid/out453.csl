csl_enum yp {
	ek,
	la,
	qw,
	hs,
	yn,
	tf,
	of,
	lw,
	cj
};
csl_enum ol {
	pp = 94,
	dx = 46,
	cw = 85,
	fi = 82,
	fh = 59,
	aj = 75,
	rl = 76,
	mk = 61,
	kt = 25,
	em = 10,
	jx = 82,
	ra = 41
};
csl_isa_instruction_format kx{
    kx( ){
     set_width( 1);
     generate_decoder( ibdlwg);
  }
}
;
csl_isa yk{
    yk( ){
     set_decoder_name( "nr");
     set_decoder_out_name_prefix( "nl");
     set_decoder_out_name_suffix( "ok");
     generate_decoder( sydl);
  }
}
;
csl_fifo rd{
   rd( ){
     add_logic( almost_full, 8);
  }
}
;
csl_memory_map_page yl{
    yl( ){
     add_address_range( 2, 1);
     set_address_increment( 0);
     set_next_address( 2);
     get_next_address( );
     set_access_rights( none, access_write);
     add_reserved_address_range( 8, 4);
     get_lower_bound( );
     get_upper_bound( );
     get_data_word_wodth( );
     get_endianess( );
     get_symbol_lenght( );
  }
}
;
csl_memory_map_page mq{
  yl ai;
  yl ts;
    mq( ){
     get_address_increment( );
     get_next_address( );
     add_reserved_address_range( 7, 8);
     get_data_word_wodth( );
     set_aligment( 8);
     get_aligment( );
     set_endianess( big_endian);
  }
}
;
csl_memory_map_page wy{
    wy( ){
     set_address_increment( 6);
     get_address_increment( );
     set_next_address( 3);
     set_access_rights( access_read_write, access_write);
     add_reserved_address_range( 6, 0);
     add( rd, "jm", 2);
     get_lower_bound( );
     get_data_word_wodth( );
     set_aligment( 4);
     get_aligment( );
     set_endianess( little_endianlittle_endian);
     set_symbol_max_lenght( );
  }
}
;
csl_memory_map gg{
  wy cj;
  yl cq;
  mq hq;
  wy am;
  mq cu;
  wy vv;
    gg( ){
     set_top_unit( dl);
     set_type( page);
mqwy.set_access_rights_enum( wy); 
     set_data_word_width( 8);
     get_data_word_width( );
     set_prefix( pn);
     set_suffix( hi);
  }
}
;
csl_register wa{
    wa( ){
     set_range( {[7:1], [3:3]});
     add_logic( serial_output);
     add_logic( rd_en);
     set_count_amount( 3);
     set_end_value( 6);
     set_start_value( 68);
     stop_at_end_value( );
     add_logic( cnt_dir_signal);
  }
}
;
csl_register ea{
    ea( ){
     set_const_value( 0);
     add_logic( bypass);
  }
}
;
