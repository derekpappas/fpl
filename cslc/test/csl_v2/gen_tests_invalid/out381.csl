csl_enum fh {
	mn = 23,
	el = 79,
	tw = 62,
	fw = 54,
	ot = 91,
	wm = 17,
	xg = 73,
	xk = 94,
	qs = 21,
	jc = 98,
	cw = 67
};
csl_enum wa {
	xy = 75,
	hb = 14,
	en = 85,
	kq = 83,
	bo = 19,
	fv = 74,
	ok = 19,
	ud = 15,
	er = 97,
	re = 35,
	yp = 78
};
csl_enum qr {
	ia,
	tm,
	yt,
	na,
	su,
	dy,
	io,
	sm,
	dx,
	kt,
	kf,
	yq
};
csl_isa_instruction_format du{
    du( ){
     set_width( 7);
     generate_decoder( ookqsh);
  }
}
;
csl_isa pn{
    pn( ){
     set_decoder_out_name_suffix( "mh");
     generate_decoder( shtj);
     print( isa.txt);
  }
}
;
csl_fifo hf{
   hf( ){
     set_physical_implementation( SRAM);
     add_logic( sync_fifo);
     add_logic( string_through, 9);
     add_logic( almost_full, 1);
  }
}
;
csl_memory_map_page hx{
    hx( ){
     add_address_range( 3, 5);
     set_address_increment( 6);
     get_address_increment( );
     set_next_address( 4);
     add_reserved_address_range( 2, 1);
     get_upper_bound( );
     get_data_word_wodth( );
     set_aligment( 2);
     get_aligment( );
     set_endianess( big_endianlittle_endian);
     get_endianess( );
     set_symbol_max_lenght( );
  }
}
;
csl_memory_map_page df{
    df( ){
     add_address_range( 8, 2);
     get_address_increment( );
     get_lower_bound( );
     set_data_word_width( 6);
     set_aligment( 9);
  }
}
;
csl_memory_map_page on{
    on( ){
     add_address_range( 7, 0);
     set_address_increment( 0);
     get_address_increment( );
     set_next_address( 5);
     get_next_address( );
     set_access_rights( access_read_write, none);
     get_lower_bound( );
     set_data_word_width( 4);
     set_aligment( 5);
     set_symbol_max_lenght( );
     get_symbol_lenght( );
  }
}
;
csl_memory_map xl{
  hx dy;
  df rl;
  on op;
  hx xg;
  df vx;
  on qq;
    xl( ){
     auto_gen_memory_map( );
     set_type( page);
dfon.set_access_rights_enum( hxdf); 
     set_prefix( yc);
     get_prefix( );
     set_suffix( nb);
  }
}
;
csl_register nx{
    nx( ){
     set_atribute( shadow);
     add_logic( serial_input);
     add_logic( rd_en);
     reset_value( 7);
     set_end_value( 8);
     set_start_value( 4);
  }
}
;
csl_register ca{
    ca( ){
     set_width( 5);
     get_width( );
     add_logic( read_valid);
     create_rtl_module( );
     set_const_value( 4);
  }
}
;
