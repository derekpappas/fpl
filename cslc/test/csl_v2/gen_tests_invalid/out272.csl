csl_enum sj {
	kv,
	eh,
	fj
};
csl_enum bk {
	gi,
	ay,
	uj,
	eh,
	fa,
	ae,
	tm,
	yg,
	dt,
	jh,
	ye,
	ql
};
csl_enum bu {
	tg = 72,
	fw = 78,
	qn = 76,
	ht = 40,
	oc = 10,
	ds = 25,
	lk = 64,
	sl = 9,
	om = 30,
	ap = 83,
	sd = 34,
	jf = 14,
	mk = 17,
	jf = 99,
	wk = 27,
	ds = 79,
	sk = 68,
	rm = 34,
	xa = 56,
	go = 94
};
csl_isa_instruction_format vn{
    vn( ){
     set_width( 7);
     generate_decoder( anmq);
  }
}
;
csl_isa gp{
    gp( ){
     set_decoder_name( "ct");
     set_decoder_out_name_prefix( "kl");
     set_decoder_out_name_suffix( "oo");
     generate_decoder( mq);
     print( isa.txt);
  }
}
;
csl_fifo vg{
   vg( ){
     add_logic( stall_rd_side);
     add_logic( output_rd_addr);
  }
}
;
csl_memory_map_page ls{
    ls( ){
     set_address_increment( 1);
     set_next_address( 5);
     get_next_address( );
     add_reserved_address_range( 2, 9);
     get_lower_bound( );
     get_upper_bound( );
     set_data_word_width( 3);
     set_aligment( 3);
     get_aligment( );
     get_endianess( );
  }
}
;
csl_memory_map_page st{
    st( ){
     add_address_range( 9, 2);
     set_address_increment( 4);
     get_address_increment( );
     set_next_address( 5);
     get_next_address( );
     set_access_rights( access_read, access_read);
     get_lower_bound( );
     get_upper_bound( );
     get_data_word_wodth( );
     set_endianess( big_endian);
  }
}
;
csl_memory_map_page br{
    br( ){
     set_access_rights( none, none);
     add_reserved_address_range( 2, 5);
     add( lsst);
     get_lower_bound( );
     set_aligment( 4);
     get_aligment( );
     set_endianess( little_endianlittle_endian);
     set_symbol_max_lenght( );
     get_symbol_lenght( );
  }
}
;
csl_memory_map gf{
  st xi;
  br lw;
  ls nf;
  st uo;
  st en;
    gf( ){
     set_top_unit( anetrumq);
.     set_suffix( uv);
  }
}
;
csl_register yq{
    yq( ){
     set_range( {[6:4], [3:7], [8:0], [0:3], [4:0]});
     add_logic( serial_input);
     add_logic( rd_en);
     init_value( 4);
     add_logic( gray_output);
     set_start_value( 27);
     stop_at_end_value( );
  }
}
;
csl_register qe{
    qe( ){
     set_width( 1);
     get_width( );
     create_rtl_module( );
     set_const_value( 9);
     add_logic( bypass);
  }
}
;
