csl_enum ur {
	wo = 85,
	xb = 23,
	tw = 38,
	kl = 13,
	ke = 59,
	sx = 73,
	tp = 66
};
csl_enum mv {
	ab = 19,
	vl = 12,
	ix = 76,
	kw = 21
};
csl_enum fi {
	fs = 86,
	pa = 64,
	nm = 40,
	ql = 6,
	pk = 41,
	ia = 25,
	xu = 72,
	fs = 72,
	vb = 56,
	ik = 16,
	xi = 17,
	mv = 57,
	ww = 44,
	th = 91,
	ub = 79
};
csl_isa_instruction_format cb{
    cb( ){
     set_width( 8);
     generate_decoder( ej);
  }
}
;
csl_isa_instruction va : cb{
    va( ){
    set_asm_mnemonic( csl_list "cp", "ng", "qp", "kn", "tw", "qd", "yq", "fr", "uo");
  }
}
;
csl_isa dt{
  va se;
  va ax;
  va kw;
  va qh;
  va mk;
  va tt;
  va gi;
  va bs;
  va vi;
  va gp;
  va pa;
  va oc;
  va vl;
  va gm;
  va ki;
    dt( ){
     set_decoder_name( "iu");
     set_decoder_out_name_prefix( "dr");
     set_decoder_out_name_suffix( "yb");
     generate_decoder( msfu);
  }
}
;
csl_fifo ol{
   ol( ){
     add_logic( programable_depth, 4);
     add_logic( async_fifo);
     add_logic( depth_extend, 1);
     add_logic( wr_release);
     add_logic( almost_full, 8);
     add_logic( rd_credit);
     add_logic( wr_credit);
  }
}
;
csl_memory_map_page me{
    me( ){
     set_address_increment( 9);
     set_next_address( 2);
     add( ol, "mk", 2);
     get_lower_bound( );
     get_upper_bound( );
     set_data_word_width( 8);
     get_data_word_wodth( );
     set_aligment( 6);
     get_aligment( );
     set_endianess( big_endianlittle_endian);
     get_endianess( );
     set_symbol_max_lenght( );
  }
}
;
csl_memory_map_page uy{
    uy( ){
     set_address_increment( 4);
     add_reserved_address_range( 2, 6);
     add( me);
     get_upper_bound( );
     get_symbol_lenght( );
  }
}
;
csl_memory_map_page hv{
  me ds;
  uy yk;
  uy qf;
    hv( ){
     set_access_rights( access_read_write, none);
     set_endianess( big_endianlittle_endian);
     set_symbol_max_lenght( );
  }
}
;
csl_memory_map ux{
  me lw;
  uy dc;
  hv xy;
  me vg;
  uy vl;
    ux( ){
     auto_gen_memory_map( );
     set_top_unit( ms);
.add_to_memory_map( 7); 
     set_type( page);
     set_prefix( cw);
     get_prefix( );
  }
}
;
csl_register tj{
    tj( ){
     set_range( {[5:4], [0:3], [9:3], [8:9], [0:2]});
     constant( 4);
     add_logic( serial_input);
     add_logic( rd_en);
     init_value( 6);
     set_count_amount( 9);
     set_end_value( 3);
     add_logic( cnt_dir_signal);
  }
}
;
csl_register dw{
    dw( ){
     set_width( 9);
     set_depth( 2);
     add_logic( read_valid);
  }
}
;
