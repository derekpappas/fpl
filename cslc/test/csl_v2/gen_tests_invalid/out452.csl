csl_enum lm {
	qo,
	hr,
	mi,
	fs,
	sc,
	wj,
	bs,
	am,
	el,
	ij,
	av
};
csl_enum vy {
	lh,
	ll
};
csl_enum ly {
	xe,
	ng,
	vd,
	qe,
	xl,
	gw,
	vj,
	qx,
	vu,
	mh
};
csl_isa_instruction_format bu{
    bu( ){
     set_width( 3);
     generate_decoder( ju);
  }
}
;
csl_isa be{
    be( ){
     set_decoder_name( "vw");
     set_decoder_out_name_prefix( "cv");
     set_decoder_out_name_suffix( "xp");
     print( isa.txt);
  }
}
;
csl_fifo wn{
   wn( ){
     set_dimension( 2, 8);
     add_logic( width_extend, 8);
     add_logic( wr_hold, 8);
     add_logic( parallel_output, all);
     add_logic( rd_words, 3);
     add_logic( flow);
  }
}
;
csl_memory_map_page tn{
    tn( ){
     get_address_increment( );
     get_next_address( );
     set_access_rights( access_write, access_write);
     add_reserved_address_range( 8, 9);
     get_lower_bound( );
     set_data_word_width( 5);
     set_aligment( 8);
     get_aligment( );
     get_endianess( );
  }
}
;
csl_memory_map_page xj{
    xj( ){
     set_address_increment( 4);
     get_next_address( );
     add_reserved_address_range( 2, 0);
     add( wn, "yo", 7);
     get_lower_bound( );
     get_upper_bound( );
     set_data_word_width( 8);
     get_data_word_wodth( );
     get_aligment( );
     set_endianess( big_endian);
     get_endianess( );
  }
}
;
csl_memory_map_page hv{
    hv( ){
     add_address_range( 0, 1);
     set_address_increment( 8);
     set_next_address( 5);
     get_next_address( );
     add( tnxj);
     get_upper_bound( );
     get_data_word_wodth( );
     get_aligment( );
     get_endianess( );
     set_symbol_max_lenght( );
     get_symbol_lenght( );
  }
}
;
csl_memory_map om{
  tn jf;
  xj qf;
  hv ee;
  tn ej;
  hv uh;
    om( ){
     set_data_word_width( 7);
     get_data_word_width( );
     set_prefix( dl);
     set_suffix( ns);
  }
}
;
csl_register fl{
    fl( ){
     set_type( STATUS);
     set_width( 4);
     constant( 4);
     add_logic( neg_output);
     reset_value( 9);
     clear_value( 4);
     set_count_direction( 0);
     set_end_value( 8);
     stop_at_end_value( );
     add_logic( cnt_dir_signal);
     add_logic( inc_signal);
  }
}
;
csl_register xk{
    xk( ){
     set_width( 3);
     get_width( );
     set_depth( 2);
     create_rtl_module( );
  }
}
;
