csl_enum ga {
	nw = 92,
	jl = 12,
	bn = 49,
	ux = 94,
	nj = 8,
	hb = 37,
	eg = 62,
	uh = 99,
	hu = 82,
	ws = 82,
	yy = 8,
	tp = 66
};
csl_enum yq {
	hd = 61,
	xp = 97,
	fn = 8,
	mo = 7,
	yp = 28,
	dw = 27,
	os = 88,
	gv = 23,
	vm = 93,
	er = 72,
	tn = 40,
	oq = 3,
	jn = 63,
	pd = 89
};
csl_enum dr {
	vn,
	uv,
	da,
	ls,
	pl,
	iu,
	ky,
	pq
};
csl_isa_instruction_format td{
    td( ){
     generate_decoder( hywsoh);
  }
}
;
csl_isa ja{
    ja( ){
     set_decoder_name( "av");
     set_decoder_out_name_prefix( "qu");
     set_decoder_out_name_suffix( "ap");
     generate_decoder( hyoh);
     print( isa.txt);
  }
}
;
csl_fifo mv{
   mv( ){
  }
}
;
csl_memory_map_page pg{
    pg( ){
     get_next_address( );
     add_reserved_address_range( 5, 6);
     get_lower_bound( );
     get_upper_bound( );
     get_data_word_wodth( );
     set_aligment( 8);
     get_aligment( );
     set_symbol_max_lenght( );
  }
}
;
csl_memory_map_page rm{
    rm( ){
     set_access_rights( access_write, none);
     set_data_word_width( 0);
     set_aligment( 1);
     set_endianess( big_endian);
  }
}
;
csl_memory_map_page rd{
  rm ux;
    rd( ){
     get_next_address( );
     add_reserved_address_range( 4, 4);
     get_endianess( );
  }
}
;
csl_memory_map vk{
    vk( ){
     auto_gen_memory_map( );
     set_prefix( ud);
  }
}
;
csl_register ow{
    ow( ){
     set_type( INT);
     add_logic( serial_input);
     add_logic( rd_en);
     init_value( 3);
     clear_value( 8);
     add_logic( gray_output);
     set_end_value( 7);
     stop_at_end_value( );
     add_logic( inc_signal);
  }
}
;
csl_register gq{
    gq( ){
     add_logic( read_valid);
     add_logic( bypass);
  }
}
;
