csl_enum fp {
	xc = 20,
	qy = 86,
	gh = 62,
	hy = 29,
	ex = 76,
	el = 12,
	hl = 67,
	tx = 51,
	xj = 73,
	wj = 99,
	qh = 20
};
csl_enum kq {
	bw,
	rf,
	iw
};
csl_enum ui {
	ao,
	ii,
	vr,
	jd,
	qp,
	ox,
	ci,
	xc,
	uv,
	ln,
	fx,
	hi,
	uy,
	nd,
	yl
};
csl_isa_instruction_format wy{
    wy( ){
     set_width( 9);
     generate_decoder( fu);
  }
}
;
csl_isa ao{
    ao( ){
     set_decoder_name( "ob");
     set_decoder_out_name_prefix( "eg");
     set_decoder_out_name_suffix( "vp");
     generate_decoder( qkvkfu);
     print( isa.txt);
  }
}
;
csl_fifo yv{
   yv( ){
     add_logic( almost_empty, 0);
     add_logic( wr_credit);
  }
}
;
csl_memory_map_page fs{
    fs( ){
     add_address_range( 2, 0);
     set_address_increment( 2);
     get_address_increment( );
     add_reserved_address_range( 1, 7);
     get_lower_bound( );
     set_data_word_width( 7);
     set_endianess( big_endian);
     get_endianess( );
  }
}
;
csl_memory_map_page mk{
    mk( ){
     get_lower_bound( );
  }
}
;
csl_memory_map_page lg{
  fs fb;
  mk by;
    lg( ){
     get_address_increment( );
     set_access_rights( access_write, access_read_write);
     add( yv, "oc", 8);
     add( fsmk);
     get_lower_bound( );
     set_data_word_width( 0);
     get_data_word_wodth( );
     set_aligment( 4);
     set_endianess( little_endianlittle_endian);
     get_endianess( );
     set_symbol_max_lenght( );
  }
}
;
csl_memory_map qa{
    qa( ){
fsmk.set_access_rights_enum( fsmk); 
  }
}
;
csl_register as{
    as( ){
     add_logic( neg_output);
     add_logic( serial_output);
     set_end_value( 7);
     set_start_value( 79);
     stop_at_end_value( );
  }
}
;
csl_register hs{
    hs( ){
     set_width( 0);
     get_width( );
     set_depth( 3);
     add_logic( read_valid);
     create_rtl_module( );
     set_const_value( 1);
     add_logic( bypass);
  }
}
;
