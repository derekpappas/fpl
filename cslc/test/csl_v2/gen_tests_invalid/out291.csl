csl_enum xp {
	fq = 52,
	ep = 37,
	sc = 80,
	qx = 97,
	tp = 92,
	qo = 38,
	nq = 65,
	di = 89,
	kl = 25
};
csl_enum lw {
	uh,
	nc,
	yp,
	iy,
	ug
};
csl_enum ra {
	yx,
	qt,
	dh,
	uw,
	yn
};
csl_isa_instruction_format lr{
    lr( ){
     set_width( 8);
     generate_decoder( chfiop);
  }
}
;
csl_isa_instruction iq : lr{
    iq( ){
    set_asm_mnemonic( csl_list "jf", "rl", "ef", "pr", "wv");
  }
}
;
csl_isa rk{
  iq kh;
  iq el;
  iq fm;
  iq ka;
  iq vq;
  iq td;
  iq jh;
  iq iv;
  iq vn;
  iq sa;
  iq qx;
  iq vu;
  iq yy;
  iq pp;
  iq ug;
  iq gp;
    rk( ){
     set_decoder_name( "ss");
     set_decoder_out_name_prefix( "dn");
     set_decoder_out_name_suffix( "jr");
     generate_decoder( fiop);
     print( isa.txt);
  }
}
;
csl_fifo qn{
   qn( ){
     add_logic( priority_bypass);
  }
}
;
csl_memory_map_page oa{
    oa( ){
     set_address_increment( 0);
     get_address_increment( );
     get_next_address( );
     set_endianess( big_endianlittle_endian);
     get_endianess( );
     set_symbol_max_lenght( );
     get_symbol_lenght( );
  }
}
;
csl_memory_map_page pg{
    pg( ){
     set_address_increment( 3);
     add_reserved_address_range( 5, 7);
     set_data_word_width( 3);
     set_endianess( little_endian);
     get_symbol_lenght( );
  }
}
;
csl_memory_map_page jn{
    jn( ){
     add_address_range( 2, 9);
     set_address_increment( 1);
     get_address_increment( );
     set_next_address( 6);
     add( oapg);
     get_upper_bound( );
     get_data_word_wodth( );
     set_aligment( 4);
     get_aligment( );
     set_endianess( big_endian);
  }
}
;
csl_memory_map fw{
  oa mr;
  pg of;
  jn ql;
  jn ji;
  oa tl;
  jn iv;
    fw( ){
     auto_gen_memory_map( );
     set_top_unit( igfiop);
jn.set_access_rights_enum( oajn); 
     set_data_word_width( 1);
     get_data_word_width( );
     set_prefix( jj);
     set_suffix( ee);
  }
}
;
csl_register rm{
    rm( ){
     set_address( fw, 8);
     index_data_pair( fw);
     set_atribute( write);
     constant( 6);
     add_logic( serial_output);
     add_logic( rd_en);
     add_logic( gray_output);
     set_count_amount( 0);
     set_count_direction( 5);
     stop_at_end_value( );
     add_logic( cnt_dir_signal);
  }
}
;
csl_register ok{
    ok( ){
     set_width( 1);
     set_depth( 3);
     get_depth( );
     set_const_value( 4);
  }
}
;
