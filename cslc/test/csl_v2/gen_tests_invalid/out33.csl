csl_enum ny {
	dp,
	jy,
	oc,
	sr,
	jd,
	xg
};
csl_enum nb {
	dy,
	bv,
	yk,
	lu,
	gx,
	mw,
	er,
	as,
	te,
	kf
};
csl_enum dy {
	hv = 51,
	sr = 7,
	br = 15
};
csl_isa_instruction_format nw{
    nw( ){
     set_width( 4);
     generate_decoder( km);
  }
}
;
csl_isa_instruction vr : nw{
    vr( ){
    set_asm_mnemonic( );
  }
}
;
csl_isa_instruction hw : nw{
    hw( ){
    set_asm_mnemonic( csl_list "et", "iv", "kp", "iq", "yl", "tr", "jn");
  }
}
;
csl_isa la{
  vr cy;
  vr ny;
  hw wc;
  vr oc;
  vr yx;
  vr lv;
  vr ja;
  vr qb;
  vr mh;
  hw rr;
  vr wx;
  hw vy;
  vr lk;
  hw hx;
  vr nf;
  vr iy;
  hw eo;
  hw yd;
  hw bn;
  vr rc;
    la( ){
     set_decoder_name( "pw");
     set_decoder_out_name_prefix( "qe");
     set_decoder_out_name_suffix( "pp");
     print( isa.txt);
  }
}
;
csl_fifo gu{
   gu( ){
     set_dimension( 5, 7);
     add_logic( sync_fifo);
     add_logic( wr_hold, 7);
     add_logic( rd_words, 4);
  }
}
;
csl_memory_map_page wd{
    wd( ){
     add_address_range( 8, 2);
     set_address_increment( 1);
     get_address_increment( );
     set_next_address( 7);
     get_next_address( );
     set_access_rights( access_write, access_read_write);
     add_reserved_address_range( 0, 0);
     get_lower_bound( );
     get_data_word_wodth( );
     set_aligment( 5);
     get_aligment( );
     get_endianess( );
     set_symbol_max_lenght( );
  }
}
;
csl_memory_map_page wa{
    wa( ){
     add_address_range( 4, 5);
     set_address_increment( 2);
     get_address_increment( );
     set_next_address( 8);
     get_next_address( );
     add_reserved_address_range( 0, 8);
     get_lower_bound( );
     set_aligment( 5);
     get_aligment( );
     set_symbol_max_lenght( );
  }
}
;
csl_memory_map_page hr{
  wd gu;
  wd xe;
    hr( ){
     add_address_range( 6, 1);
     set_address_increment( 1);
     get_address_increment( );
     set_access_rights( access_read_write, none);
     get_lower_bound( );
     get_upper_bound( );
     set_aligment( 6);
     get_symbol_lenght( );
  }
}
;
csl_memory_map vf{
    vf( ){
     auto_gen_memory_map( );
     set_top_unit( grkmdv);
wahr.add_to_memory_map( 9,access_read); 
     set_type( hierach);
wahr.set_access_rights_enum( wa); 
     set_data_word_width( 2);
     get_data_word_width( );
     set_prefix( qm);
     set_suffix( kx);
  }
}
;
csl_register un{
    un( ){
     index_data_pair( vf, 0);
     add_logic( serial_output);
     add_logic( rd_en);
     add_logic( wr_en);
     init_value( 7);
     reset_value( 4);
     set_lock_enable_bit( 1);
     get_lock_enable_bit( );
     set_count_amount( 4);
     stop_at_end_value( );
     add_logic( cnt_dir_signal);
  }
}
;
csl_register ia{
    ia( ){
     set_width( 2);
     get_width( );
  }
}
;
