csl_enum iy {
	ym,
	pn,
	br,
	os,
	mu,
	hw,
	wi,
	dd
};
csl_enum cq {
	mj = 99,
	fj = 12,
	sy = 35,
	hb = 57,
	fb = 48,
	dp = 9
};
csl_enum cf {
	ct = 62,
	sd = 88,
	mj = 73,
	xb = 6,
	ei = 48,
	xd = 52,
	qb = 88,
	hs = 30,
	uv = 50,
	ec = 21,
	gw = 63
};
csl_isa_instruction_format jt{
    jt( ){
     set_width( 0);
     generate_decoder( aitybe);
  }
}
;
csl_isa_instruction pw : jt{
    pw( ){
    set_asm_mnemonic( csl_list "po", "gy", "rt", "kg", "xq", "qv", "hb");
  }
}
;
csl_isa gn{
    gn( ){
     set_decoder_name( "pj");
     set_decoder_out_name_prefix( "pt");
     set_decoder_out_name_suffix( "er");
     print( isa.txt);
  }
}
;
csl_fifo yo{
   yo( ){
     set_physical_implementation( SRAM);
     add_logic( wr_hold, 5);
     add_logic( parallel_output, all);
     add_logic( pushback);
     add_logic( string_through, 4);
  }
}
;
csl_memory_map_page sm{
    sm( ){
     set_address_increment( 1);
     get_next_address( );
     set_aligment( 2);
     get_aligment( );
     set_endianess( little_endian);
     get_endianess( );
     get_symbol_lenght( );
  }
}
;
csl_memory_map_page is{
    is( ){
     get_address_increment( );
     add_reserved_address_range( 9, 3);
     add( sm);
     get_upper_bound( );
     set_data_word_width( 6);
     get_data_word_wodth( );
     set_aligment( 4);
     get_endianess( );
     set_symbol_max_lenght( );
  }
}
;
csl_memory_map_page ym{
  sm oy;
  is yx;
  is er;
  sm ye;
  is pg;
    ym( ){
     set_access_rights( access_read_write, none);
     get_lower_bound( );
     get_data_word_wodth( );
     get_endianess( );
  }
}
;
csl_memory_map fo{
    fo( ){
     auto_gen_memory_map( );
     set_type( flat);
     set_data_word_width( 1);
     get_data_word_width( );
     set_prefix( lr);
  }
}
;
csl_register qg{
    qg( ){
     set_range( [2:5]);
     add_logic( neg_output);
     add_logic( rd_en);
     init_value( 7);
     set_end_value( 0);
     stop_at_end_value( );
     add_logic( inc_signal);
     add_logic( dec_signal);
  }
}
;
csl_register br{
    br( ){
     add_logic( read_valid);
     add_logic( bypass);
  }
}
;
