csl_enum vx {
	og = 11,
	ul = 90,
	eu = 35,
	my = 14,
	fj = 22,
	id = 86
};
csl_enum lr {
	dw = 43,
	rj = 10,
	nd = 76
};
csl_enum gx {
	qt,
	dl,
	kg,
	wg,
	gn,
	pb,
	yv,
	xo,
	ud,
	xd,
	hj
};
csl_isa_instruction_format fq{
    fq( ){
     set_width( 8);
     generate_decoder( sriiko);
  }
}
;
csl_isa sx{
    sx( ){
     set_decoder_name( "pa");
     set_decoder_out_name_suffix( "hy");
     generate_decoder( srko);
     print( isa.txt);
  }
}
;
csl_fifo yx{
   yx( ){
     add_logic( depth_extend, 1);
     add_logic( rd_words, 8);
     add_logic( stall);
     add_logic( wr_credit);
  }
}
;
csl_memory_map_page dv{
    dv( ){
     get_address_increment( );
     set_next_address( 6);
     get_next_address( );
     set_access_rights( access_write, access_read);
     add( yx, "av", 8);
     get_upper_bound( );
     get_aligment( );
     get_endianess( );
     set_symbol_max_lenght( );
     get_symbol_lenght( );
  }
}
;
csl_memory_map_page ah{
  dv ed;
  dv qy;
  dv vs;
    ah( ){
     add_address_range( 3, 7);
     get_address_increment( );
     set_next_address( 6);
     get_next_address( );
     add_reserved_address_range( 2, 2);
     add( yx, "qk", 5);
     add( dv);
     get_data_word_wodth( );
     get_aligment( );
     set_symbol_max_lenght( );
  }
}
;
csl_memory_map_page vb{
  dv ta;
    vb( ){
     add_address_range( 3, 2);
     set_address_increment( 0);
     set_access_rights( access_read, access_read_write);
     add_reserved_address_range( 9, 2);
     get_lower_bound( );
     get_upper_bound( );
     set_data_word_width( 6);
     get_data_word_wodth( );
     set_aligment( 3);
     get_aligment( );
     set_symbol_max_lenght( );
  }
}
;
csl_memory_map tf{
    tf( ){
     auto_gen_memory_map( );
     set_type( hierach);
dvvb.set_access_rights_enum( dvah); 
     set_data_word_width( 0);
     set_prefix( hj);
     get_prefix( );
     set_suffix( xb);
  }
}
;
csl_register yb{
    yb( ){
     add_logic( serial_input);
     set_count_direction( 9);
     set_start_value( 8);
     get_cnt_dir_signal( );
  }
}
;
csl_register es{
    es( ){
     set_depth( 0);
     add_logic( read_valid);
     create_rtl_module( );
     add_logic( bypass);
  }
}
;
