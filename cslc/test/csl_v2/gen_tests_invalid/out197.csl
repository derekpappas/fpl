csl_enum bx {
	xg = 13,
	dr = 88,
	mr = 20,
	dd = 36
};
csl_enum ob {
	bd = 93,
	gc = 32,
	cw = 13,
	qu = 80,
	ml = 44,
	fo = 85,
	rp = 85,
	ic = 21,
	mr = 95,
	tn = 30
};
csl_enum rt {
	ww,
	nj,
	qr,
	og,
	sp,
	lb
};
csl_isa_instruction_format yt{
    yt( ){
     generate_decoder( ohesuc);
  }
}
;
csl_isa vd{
    vd( ){
     set_decoder_name( "iu");
     set_decoder_out_name_prefix( "hg");
     set_decoder_out_name_suffix( "rh");
     generate_decoder( ohesuc);
  }
}
;
csl_fifo ut{
   ut( ){
     add_logic( priority_bypass);
     add_logic( sync_fifo);
     add_logic( rd_words, 6);
     add_logic( output_wr_addr);
  }
}
;
csl_memory_map_page ts{
    ts( ){
     set_address_increment( 8);
     set_next_address( 8);
     set_access_rights( access_read, access_read);
     set_data_word_width( 1);
     get_data_word_wodth( );
     set_endianess( big_endian);
  }
}
;
csl_memory_map_page ao{
    ao( ){
     add_address_range( 2, 9);
     set_address_increment( 6);
     get_address_increment( );
     set_data_word_width( 7);
     set_endianess( little_endian);
     get_endianess( );
  }
}
;
csl_memory_map_page tx{
    tx( ){
     set_next_address( 4);
     set_access_rights( none, none);
     get_lower_bound( );
     set_aligment( 9);
     get_endianess( );
  }
}
;
csl_memory_map dg{
  ts mx;
  tx ju;
  ts rx;
  tx rq;
    dg( ){
     auto_gen_memory_map( );
     set_top_unit( ohesgtuc);
     set_type( page);
tstx.set_access_rights_enum( aotx); 
     set_data_word_width( 8);
     set_suffix( rp);
  }
}
;
csl_register xi{
    xi( ){
     set_type( ATOM);
     set_width( 9);
     set_atribute( shadow);
     add_logic( neg_output);
     add_logic( serial_input);
     set_value( 6);
     add_logic( gray_output);
  }
}
;
csl_register br{
    br( ){
     set_depth( 5);
     get_depth( );
     add_logic( read_valid);
     set_const_value( 0);
     add_logic( bypass);
  }
}
;
