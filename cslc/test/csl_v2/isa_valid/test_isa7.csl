//Daniel
csl_unit u{
  u(){
  }
};
csl_enum ers{
  RDY
};

csl_enum eei{
  ZERO,
  ONE
};
csl_isa_field i{
  i(){
    set_type(constant);
    set_width(1);
    set_enum(eei);
  }
};
csl_isa_field op{
  op(){
    set_type(opcode);
    set_width(2);
  }
};

csl_isa_field op3{
  op3(){
    set_type(subopcode);
    set_width(3);
  }
};

csl_isa_field rs{
  rs(){
  rs.set_type(selector);
  set_width(3);
  set_enum(ers);
  }
};

csl_isa_field rd{
  rd(){
  rd.set_type(selector);
  set_width(1);
  set_enum(rs.get_enum());
}
};
csl_isa_element isa_root{
  isa_root(){
    set_type(root_format);
    set_width (32);
  }
};
csl_isa_element fb: isa_root{
  op op;
  op3 op3;
  rd rd;
  rs rs;
  fb(){
    set_type(instr_format);
    set_position(op,30);
    set_next(op,rd);
    set_next(rd,rs);
    set_next(rs,op3);  
  }
};
csl_isa_element fsb:fb{
  i i;
  fsb(){
    set_type(instr_format);
    set_next(op3,i);
    
  }
};
csl_isa_field rcond{
  rcond(){
    set_type(address);
    set_width(8);
   }
};

csl_isa_element fmt_rc:fsb{
  rcond rcond;
  fmt_rc(){
    set_type(instr_format);
    set_next(i,rcond);
  }
};
csl_isa_field ff(7);

csl_isa_element fmt:fsb{
  ff ff;
  fmt(){
    set_type(instr_format);
    set_position(ff,4);
    ff.set_offset(2);
  }
};
