# This is the input test file for rogue VeriNum Functions
# <> means obligatory
# [] means optional
# {} means group
# *x means this should repeat x times
# you may put as many method tests as you wish, here are the methods and their syntaxes
# examples:
# add a b carry retSum retCarry

01 ( END )
02 ( isDefined X 0 END )
03 ( isDefined 1 1 END )
04 ( | 0 1 1 END )
05 ( ^ 0 0 0 END )
06 ( & 0 1 0 END )
07 ( combine 0 1 x END )
08 ( add 0 1 1 0 1 END )
09 ( neg z x END )
10 ( equal ( 4 1 y 10 END ) ( 4 0 y 10 END ) 0 END )
11 ( notEqual ( 4 1 y 10 END ) ( 4 0 y 10 END ) 1 END )
12 ( caseEqual ( 4 1 y 10 END ) ( 4 0 y 10 END ) 0 END )
13 ( caseNotEqual ( 4 1 y 10 END ) ( 4 0 y 10 END ) 1 END )
14 ( lessOrEqual ( 4 1 y 10 END ) ( 4 0 y 10 END ) 0 END )
15 ( lessThan ( 4 1 y 10 END ) ( 4 0 y 10 END ) 0 END )
16 ( greaterOrEqual ( 4 1 y 10 END ) ( 4 0 y 10 END ) 1 END )
17 ( greaterThan ( 4 1 y 10 END ) ( 4 0 y 10 END ) 1 END )
18 ( shiftLeft ( 4 1 y 10 END ) 1 ( 4 1 y 10 set 0 0 END ) END )
19 ( shiftRight ( 4 1 y 10 END ) 1 ( 4 1 y 10 set 9 0 END ) END )
20 ( shiftRightArith ( 4 1 y 10 END ) 1 ( 4 1 y 10 set 9 0 END ) END )
21 ( bitwiseAnd ( 4 1 y 10 END ) ( 4 0 y 10 END ) ( 4 0 y 10 END ) END )
22 ( reductionAnd ( 4 1 y 10 END ) _1 END )
23 ( reductionAnd ( 4 1 y 10 set 9 x END ) _X END )
24 ( divide ( 4 0 y 10 END ) ( 4 1 y 10 END ) ( 4 0 y 10 END ) ( 4 0 y 10 END ) END )
25 ( signed_divide ( 4 0 y 10 END ) ( 4 1 y 10 END ) ( 4 0 y 10 END ) ( 4 0 y 10 END ) END )
